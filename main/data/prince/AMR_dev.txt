(c / chapter  :mod 1)
(s / see-01      :ARG0 (i / i)      :ARG1 (p / picture            :mod (m / magnificent)            :location (b2 / book :wiki -                  :name (n / name :op1 "True" :op2 "Stories" :op3 "from" :op4 "Nature")                  :topic (f / forest                        :mod (p2 / primeval))))      :mod (o / once)      :time (a / age-01            :ARG1 i            :ARG2 (t / temporal-quantity :quant 6                  :unit (y / year))))
(p / picture  :domain (i / it)  :topic (b2 / boa           :mod (c2 / constrictor)           :ARG0-of (s / swallow-01                      :ARG1 (a / animal))))
(b / be-located-at-91      :ARG1 (t2 / thing            :ARG2-of (c / copy-01                  :ARG1 (p / picture                        :ARG1-of (d / draw-01))))      :ARG2 (h / here))
(s2 / say-01      :ARG0 (b2 / book)      :ARG1 (s / swallow-01            :ARG0 (b / boa                  :mod (c / constrictor))            :ARG1 (p / prey                  :mod (w / whole)                  :poss b)            :manner (c2 / chew-01 :polarity -                  :ARG0 b                  :ARG1 p)))
(a / and      :op1 (p / possible-01 :polarity -            :ARG1 (m / move-01                  :ARG0 (t / they)                  :time (a2 / after                        :op1 (t3 / that))))      :op2 (s / sleep-01            :ARG0 t            :duration (t2 / temporal-quantity :quant 6                  :unit (m2 / month)                  :ARG1-of (n / need-01                        :ARG0 t                        :purpose (d / digest-01                              :ARG0 t)))))
(p / ponder-01      :ARG0 (i / i)      :ARG1 (a / adventure            :location (j / jungle))      :ARG1-of (d / deep-02)      :time (t / then))
(a2 / and      :op2 (s / succeed-01            :ARG0 (i / i)            :ARG1 (m / make-01                  :ARG0 i                  :ARG1 (p2 / picture                        :ARG1-of (d / draw-01                              :ARG0 i                              :ord (o / ordinal-entity :value 1))))            :time (a / after                  :op1 (w / work-01                        :ARG0 i                        :instrument (p / pencil                              :mod (c / color))                        :mod (s2 / some)))))
(p / picture :wiki -      :name (n2 / name :op1 "Drawing" :op2 "Number" :op3 "One")      :poss (i / i))
(a / and      :op1 (l / look-02            :ARG0 (i / it)            :ARG1 (t / this))      :op2 (s / show-01            :ARG0 (i2 / i)            :ARG1 (m / masterpiece                  :poss i2)            :ARG2 (g / grown-up))      :op3 (a2 / ask-01            :ARG0 i2            :ARG1 (f / frighten-01 :mode interrogative                  :ARG0 (p / picture                        :ARG1-of (d / draw-01))                  :ARG1 g)            :ARG2 g))
(c / contrast-01  :ARG2 (a / answer-01          :ARG0 (t / they)          :ARG2 (f / frighten-01                  :mode interrogative)))
(f / frighten-01  :ARG0 (h / hat)  :ARG1 (o / one          :mod (a / any))  :ARG1-of (c / cause-01             :ARG0 (a2 / amr-unknown)))
(p / picture-01 :polarity -      :ARG0 (p2 / picture            :ARG1-of (d / draw-01                  :ARG0 (i / i)))      :ARG1 (h / hat))
(p / picture-01  :ARG0 (i / it)  :ARG1 (b2 / boa          :mod (c / constrictor)          :ARG0-of (d / digest-01                     :ARG1 (e / elephant))))
(c / contrast-01      :ARG2 (a2 / and            :op1 (d3 / draw-01                  :ARG0 (i / i)                  :ARG1 (p2 / picture                        :mod (a / another))                  :ARG1-of (c3 / cause-01                        :ARG0 (p3 / possible-01 :polarity -                              :ARG1 (u / understand-01                                    :ARG0 (g / grown-up)                                    :ARG1 (i2 / it)))))            :op2 (d / draw-01                  :ARG0 i                  :ARG1 (i3 / inside                        :part-of (b2 / boa                              :mod (c4 / constrictor)))                  :purpose (p / possible-01                        :ARG1 (s / see-01                              :ARG0 g                              :ARG1 (i4 / it)                              :ARG1-of (c2 / clear-06))))))
(n / need-01      :ARG0 (t / they)      :ARG1 (e / explain-01)      :time (a / always))
(a6 / and      :op1 (l / look-02            :ARG0 (p / picture :wiki - :name (n / name :op1 "Drawing" :op2 "Number" :op3 "Two")                  :poss i)            :ARG1 (t2 / this))      :op2 (r / respond-01            :ARG0 (g / grown-up)            :ARG1 (i / i)            :ARG2 (a / advise-01                  :ARG0 g                  :ARG1 i                  :ARG2 (a3 / and                        :op1 (l2 / lay-01                              :ARG0 i                              :ARG1 (p2 / picture                                    :ARG1-of (d2 / draw-01                                          :ARG0 i)                                    :topic (b2 / boa                                          :mod (c2 / constrictor)                                          :mod (o / or                                                :op1 (i2 / inside)                                                :op2 (o2 / outside))))                              :ARG2 (a2 / aside))                        :op2 (d3 / devote-01                              :ARG0 i                              :ARG1 i                              :ARG2 (a4 / and                                    :op1 (g2 / geography)                                    :op2 (h / history)                                    :op3 (a5 / arithmetic)                                    :op4 (g3 / grammar))                              :ARG1-of (i4 / instead-of-91                                    :ARG2 d2))))            :time (t4 / time                  :mod (t5 / this))))
(c2 / cause-01      :ARG0 (t2 / that)      :ARG1 (g / give-up-07            :ARG0 (i / i)            :ARG1 (c / career                  :mod (m / magnificent)                  :topic (p / person                        :ARG0-of (p2 / paint-02)))            :time (a / age-01                  :ARG1 i                  :ARG2 (t / temporal-quantity :quant 6                        :unit (y / year)))))
(d / dishearten-01      :ARG0 (f / fail-01            :ARG1 (a / and                  :op1 (p / picture :wiki -                        :name (n / name :op1 "Drawing" :op2 "Number" :op3 "One"))                  :op2 (p2 / picture :wiki -                        :name (n2 / name :op1 "Drawing" :op2 "Number" :op3 "Two"))                  :poss i))      :ARG1 (i / i))
(a / and      :op1 (u / understand-01 :polarity -            :ARG0 (g / grown-up)            :ARG1 (a3 / anything)            :time (e2 / ever)            :mod (b / by-oneself))      :op2 (t / tiresome            :domain (e / explain-01                  :ARG0 (c / child)                  :ARG1 (t2 / thing)                  :ARG2 g                  :time (a4 / always)                  :mod (f / forever))))
(c2 / cause-01  :ARG1 (a / and          :op1 (c / choose-01                 :ARG0 (i / i)                 :ARG1 (p / profession                         :mod (a2 / another)))          :op2 (l / learn-01                 :ARG0 i                 :ARG1 (p2 / pilot-01                         :ARG0 i                         :ARG1 (a3 / airplane)))))
(a / and      :op1 (f / fly-01            :ARG0 i            :location (o / over                  :op1 (p2 / part                        :part-of (w / world))))      :op2 (u / useful-05            :ARG0 (i / i)            :ARG1 (g / geography)            :degree (v / very)))
(p / possible-01      :ARG1 (d / distinguish-01            :ARG0 (i / i)            :ARG1 (c / country :wiki "China"                  :name (n / name :op1 "China"))            :ARG2 (s / state :wiki "Arizona"                  :name (n2 / name :op1 "Arizona"))            :manner (g / glance-01                  :ARG0 i)))
(v / value-02      :ARG1 (k / knowledge            :mod (s / such))      :condition (g / get-03            :ARG1 (o / one)            :ARG2 (l / lost                  :time (d / date-entity :dayperiod (n / night)))))
(e / encounter-01  :ARG0 (i / i)  :ARG1 (p / person          :quant (m2 / many                   :mod (g2 / great))          :ARG1-of (c / concern-01                     :ARG0 (m3 / matter                             :mod (c2 / consequence))))  :quant (m / many           :mod (g / great))  :time (c3 / course          :poss (l / life                  :mod (t / this))))
(l / live-01      :ARG0 (i / i)      :mod (d / deal            :mod (g2 / great))      :location (a / among            :op1 (g / grown-up)))
(s / see-01      :ARG0 (i / i)      :ARG1 (t / they)      :ARG1-of (c / close-10            :ARG2 (a / at-hand))      :ARG2-of (i2 / intimate-02            :ARG1 i))
(a / and      :op2 (i / improve-01 :polarity -            :ARG0 (t / that)            :ARG1 (t3 / thing                  :ARG1-of (o2 / opine-01                        :ARG0 (i2 / i)                        :topic (t2 / they)))            :degree (m2 / much)))
(t / try-01      :ARG0 (i / i)      :ARG1 (e / experiment-01            :ARG1 (s / show-01                  :ARG1 (p2 / picture :wiki - :name (n / name :op1 "Drawing" :op2 "Number" :op3 "One"))                  :ARG2 p                  :ARG1-of (k / keep-01                        :ARG0 i                        :time (a / always))))      :time (m / meet-02            :ARG0 i            :ARG1 (p / person                  :ARG1-of (i2 / include-91                        :ARG2 (t3 / they))                  :ARG0-of (s3 / see-01                        :ARG1-of (c / clear-08)                        :ARG1-of (s4 / seem-01                              :ARG2 i)))            :mod (a2 / any)))
(t / try-01      :ARG0 (i / i)      :ARG1 (f / find-out-03            :ARG0 i            :ARG1 (u2 / understand-01 :mode interrogative                  :ARG0 (p / person                        :mod (t2 / this))                  :ARG1-of (t3 / true-01))))
(c / contrast-01  :ARG2 (s / say-01          :ARG0 (o / or                  :op1 (h / he)                  :op2 (s2 / she))          :ARG1 (h2 / hat                  :domain (t / that))          :time (a / always)))
(t / talk-01  :ARG0 (i / i)  :ARG1 (o / or          :op1 (b / boa                 :mod (c2 / constrictor))          :op2 (f / forest                 :mod (p2 / primeval))          :op3 (s / star))  :ARG2 (p / person          :mod (t2 / that))  :time (e / ever)  :polarity -)
(b / bring-01      :ARG0 (i / i)      :ARG1 i      :ARG2 (l / level            :poss (h / he))      :ARG3 (d / down))
(t / talk-01  :ARG0 (i / i)  :ARG1 (a / and          :op1 (b / bridge)          :op2 (g / golf)          :op3 (p / politics)          :op4 (n2 / necktie))  :ARG2 (h / he))
(a / and      :op2 (p / please-01            :ARG0 (m / meet-02                  :ARG0 g                  :ARG1 (m2 / man                        :ARG2-of (s / sense-02                              :degree (s2 / such))))            :ARG1 (g / grown-up)            :degree (g2 / great)))
(c / chapter  :mod 2)
(c / cause-01      :ARG1 (l / live-01            :ARG0 (i / i                  :ARG0-of (t3 / talk-01 :polarity -                        :ARG2 (a5 / anyone)                        :ARG1-of (r / real-04)))            :ARG1 (l2 / life                  :poss i)            :manner (a / alone)            :duration (u / until                  :op1 (h / have-06                        :ARG0 i                        :ARG1 (a3 / accident                              :mod (p / plane))                        :location (d / desert :wiki "Sahara" :name (n / name :op1 "Desert" :op2 "of" :op3 "Sahara"))                        :time (b / before                              :op1 (n2 / now)                              :quant (t2 / temporal-quantity :quant 6                                    :unit (y / year)))))))
(b / break-01      :ARG1 (s / something            :location (e / engine                  :poss (i / i))))
(a / and  :op2 (c / cause-01         :ARG0 (h / have-03                 :ARG0 i                 :ARG1 (o / or                         :op1 (m / mechanic)                         :op2 (p / passenger))                 :accompanier (i / i)                 :polarity -)         :ARG1 (a2 / attempt-01                 :ARG0 i                 :ARG1 (r / repair-01                         :mod (d / difficult))                 :mod (a3 / alone                        :degree (a4 / all)))))
(q / question-01      :ARG0 i      :ARG1 (o / or            :op1 (l / live-01)            :op2 (d / die-01))      :ARG1-of (c / cause-01            :ARG0 (h / have-03                  :ARG0 (i / i)                  :ARG1 (w / water                        :purpose (d2 / drink-01                              :ARG0 i)                        :quant (e / enough                              :mod (s / scarce))                        :ARG1-of (l2 / last-03                              :ARG2 (t / temporal-quantity :quant 1                                    :unit (w2 / week))                              :ARG3 i)))))
(s / sleep-01      :ARG0 (i / i)      :location (s2 / sand)      :time (d2 / date-entity            :dayperiod (n / night)            :ord (o / ordinal-entity :value 1))      :location (r / relative-position            :op1 (p / place                  :ARG1-of (i2 / inhabit-01                        :ARG0 (h / human))                  :mod (a2 / any))            :quant (d / distance-quantity :quant 1000                  :unit (m / mile))            :direction (a3 / away)))
(i / isolate-01      :ARG1 (i2 / i)      :degree (m / more)      :compared-to (p / person            :ARG0-of (s / sail-01)            :ARG1-of (s2 / shipwreck-01)            :location (r / raft                  :location (o / ocean                        :part (m2 / middle)))))
(c / cause-01      :ARG1 (p / possible-01            :ARG1 (i2 / imagine-01                  :ARG0 (y / you)                  :ARG1 (a / amaze-01                        :ARG1 (i / i)                        :time (s / sunrise                              :time-of (w / wake-01                                    :ARG0 (v / voice                                          :mod (o / odd)                                          :mod (l / little))                                    :ARG1 i))))))
(s / say-01      :ARG0 (i / it)      :ARG1 (d / draw-01 :mode imperative :polite +            :ARG0 (y2 / you)            :ARG1 (s2 / sheep)            :ARG2 (i2 / i)))
(s / string-entity :value "what")
(d / draw-01  :ARG0 (y / you)  :ARG1 (s / sheep)  :ARG2 (i / i)  :mode imperative)
(j / jump-03      :ARG0 (i / i            :mod (t / thunderstruck                  :ARG1-of (c / complete-02)))      :destination (f / foot            :part-of i))
(b / blink-01      :ARG0 (i / i)      :ARG1 (e / eye            :part-of i)      :ARG1-of (h / hard-04))
(l / look-01      :ARG0 (i / i)      :direction (a / around            :op1 i            :mod (a2 / all))      :manner (c / careful))
(a / and      :op2 (s / see-01            :ARG0 (i / i)            :ARG1 (p / person                  :mod (s2 / small)                  :mod (e / extraordinary                        :degree (m / most))                  :ARG1-of (s3 / stand-01                        :ARG2 (t / there))                  :ARG0-of (e2 / examine-01                        :ARG1 i                        :ARG2-of (s4 / serious-01                              :degree (g / great))))))
(p / possible-01      :ARG1 (s / see-01            :ARG0 (y / you)            :ARG1 (p2 / portrait                  :ARG1-of (g / good-02                        :degree (m / most))                  :ARG1-of (m2 / make-01                        :ARG0 (i / i)                        :ARG1-of (p3 / possible-01)                        :time (l / late                              :degree (m3 / more)))                  :topic (h / he))            :location (h2 / here)))
(c3 / contrast-01      :ARG2 (c / charm-01            :ARG0 (p / picture                  :ARG1-of (d / draw-01                        :ARG0 (i / i)))            :quant (l / less                  :degree (m / much                        :degree (v / very)))            :mod (c2 / certain)            :compared-to (m2 / model                  :poss p)))
(c / contrast-01  :ARG2 (f / fault-01          :ARG1 (i / i)          :ARG2 (t / that)          :polarity -))
(d / discourage-01      :ARG0 (g / grown-up)      :ARG1 (i / i)      :ARG2 (c / career            :topic (p / person                  :ARG0-of (p2 / paint-02))            :poss i)      :ARG0-of (c2 / cause-01            :ARG1 (l / learn-01 :polarity -                  :ARG0 i                  :ARG1 (d2 / draw-01                        :ARG0 i                        :ARG1 (a2 / anything))                  :time (e / ever)                  :ARG2-of (e2 / except-01                        :ARG1 (a3 / and                              :op1 (b / boa                                    :direction (f / from                                          :op1 (o / outside)))                              :op2 (b2 / boa                                    :direction (f2 / from                                          :op1 (i2 / inside)))))))      :time (a / age-01            :ARG1 i            :ARG2 (t2 / temporal-quantity :quant 6                  :unit (y / year))))
(s / stare-01      :ARG0 (i / i)      :ARG1 (t / thing            :ARG1-of (a / appear-01                  :manner (s2 / sudden))            :mod (t2 / this))      :time (n / now)      :manner (s3 / start-03            :ARG0 (e / eye                  :part-of i)            :ARG1-of (c / cause-01                  :ARG0 (a2 / astonish-01                        :ARG1 i))            :degree (f / fair)            :manner (o / out-06                  :ARG1 e                  :ARG2 (h / head                        :part-of i))))
(r / remember-01  :ARG0 (y / you)  :ARG1 (c / crash-01          :ARG1 (i / i)          :location (d / desert)          :location (r3 / relative-position                      :op1 (r2 / region                             :ARG1-of (i2 / inhabit-01)                             :mod (a2 / any))                      :quant (d2 / distance-quantity                               :unit (m / mile)                               :quant 1000)                      :direction (a / away)))  :mode imperative)
(c3 / contrast-01  :ARG2 (s / seem-01          :ARG1 (a / and                  :op1 (s2 / stray-01                         :ARG0 (m / man                                 :mod (l / little)                                 :poss (i / i))                         :ARG1 (a3 / among                                 :op1 (s3 / sand))                         :manner (c / certain                                   :polarity -)                         :polarity -)                  :op2 (f / faint-01                         :ARG0 m                         :ARG1-of (c2 / cause-01                                    :ARG0 (o / or                                            :op1 (f2 / fatigue-01)                                            :op2 (h / hunger-01)                                            :op3 (t / thirst-01)                                            :op4 (f3 / fear-01)))                         :polarity -))))
(s / suggest-01  :ARG0 (n / nothing          :topic (h / he))  :ARG1 (c / child          :ARG1-of (l / lose-02                     :location (d / desert                                 :part (m / middle))                     :location (r / relative-position                                 :op1 (t / thing                                        :ARG1-of (i / inhabit-01                                                   :ARG0 (h2 / human))                                        :mod (a3 / any))                                 :quant (d2 / distance-quantity                                          :unit (m2 / mile)                                          :quant 1000)                                 :direction (a2 / away)))))
(s / say-01      :ARG0 (i / i)      :ARG1 (c / contrast-01            :ARG2 (b2 / be-located-at-91 :mode interrogative                  :ARG1 (y2 / you)                  :ARG2 (h2 / here)                  :ARG1-of (c2 / cause-01                        :ARG0 (a / amr-unknown))))      :ARG2 (h / he)      :time (p / possible-01            :ARG1 (s2 / speak-01                  :ARG0 i                  :time (a2 / at-last))))
(a / and      :op2 (r / repeat-01            :ARG0 (h / he)            :ARG1 (d / draw-01 :mode imperative :polite +                  :ARG0 (y2 / you)                  :ARG1 (s3 / sheep)                  :ARG2 (i / i))            :purpose (a2 / answer-01                  :ARG0 h)            :ARG1-of (s / slow-05                  :degree (v / very))            :conj-as-if (s2 / speak-01                  :ARG0 h                  :ARG1 (m / matter                        :mod (c / consequence                              :mod (g / great))))))
(d / dare-01  :ARG0 (o / one)  :ARG2 (d2 / disobey-01          :ARG0 o)  :polarity -  :time (o2 / overpower-01          :ARG0 (m / mystery)          :degree (t2 / too)))
(t / take-01      :ARG0 (i / i            :location (r / relative-position                  :op1 (p5 / place                        :mod (a3 / any)                        :ARG1-of (i2 / inhabit-01                              :ARG0 (h / human)))                  :quant (d / distance-quantity :quant 1000                        :unit (m / mile))                  :direction (a2 / away))            :ARG1-of (e / endanger-01                  :ARG0 (d2 / die-01                        :ARG1 i)))      :ARG1 (a / and            :op1 (p / paper                  :quant (s / sheet :quant 1))            :op2 (p2 / pen                  :mod (f / fountain)                  :poss i))      :ARG2 (p3 / pocket            :poss i)      :concession (p4 / possible-01            :ARG1 (s2 / seem-01                  :ARG1 (a4 / absurd)                  :ARG2 i)))
(c4 / contrast-01      :ARG2 (a / and            :op1 (r / remember-01                  :ARG0 (i / i)                  :ARG1 (c / concentrate-01                        :ARG1 (a2 / and                              :op1 (g / geography)                              :op2 (h / history)                              :op3 (a3 / arithmetic)                              :op4 (g2 / grammar))                        :ARG2 (s / study-01                              :ARG0 i))                  :time (t / then))            :op2 (t2 / tell-01                  :ARG0 i                  :ARG1 (k / know-03 :polarity -                        :ARG0 i                        :ARG1 (d / draw-01                              :ARG0 i))                  :ARG2 (c2 / chap                        :mod (l / little))                  :manner (c3 / cross                        :mod (l2 / little)                        :mod (a4 / also)))))
(a / answer-01  :ARG0 (h / he)  :ARG1 (i / i)  :ARG2 (m2 / matter-01          :ARG1 (t / that)          :polarity -))
(d / draw-01  :ARG0 (y / you)  :ARG1 (s / sheep)  :ARG2 (i / i)  :mode imperative)
(c / contrast-01  :ARG2 (d / draw-01          :ARG0 (i / i)          :ARG1 (s / sheep)          :time (e / ever)          :polarity -))
(c / cause-01  :ARG1 (d / draw-01          :ARG0 (i / i)          :ARG1 (p / picture                  :quant 1                  :ARG1-of (i2 / include-91                             :ARG2 (p2 / picture                                     :quant 2                                     :ARG1-of (d2 / draw-01                                                :ARG0 i                                                :time (o / often                                                        :degree (s / so))))))          :ARG2 (h / he)))
(b / boa      :mod (c2 / constrictor)      :direction (f / from            :op1 (o / outside)))
(a / and  :op2 (a2 / astound-01         :ARG0 (h / hear-01                 :ARG0 i                 :ARG1 (g / greet-01                         :ARG0 f                         :ARG1 (i2 / it)                         :ARG3 (a3 / and                                 :op1 (n / no)                                 :op2 (n2 / no)                                 :op3 (n3 / no)))                 :ARG2 (f / fellow                         :mod (l / little)))         :ARG1 (i / i)))
(w / want-01  :ARG0 (i / i)  :ARG1 (e / elephant          :location (i2 / inside                      :op1 (b2 / boa                             :mod (c2 / constrictor))))  :polarity -)
(a / and  :op1 (c2 / creature         :mod (d2 / dangerous)         :domain (b / boa                   :mod (c / constrictor)))  :op2 (c3 / cumbersome         :degree (v2 / very)         :domain (e / elephant)))
(s / small  :degree (v / very)  :domain (e / everything)  :location (l2 / live-01              :ARG0 (i / i)))
(n / need-01  :ARG0 (i / i)  :ARG1 (s / sheep))
(d / draw-01  :ARG0 (y / you)  :ARG1 (s / sheep)  :ARG2 (i / i)  :mode imperative)
(c / cause-01  :ARG1 (d / draw-01          :ARG0 (i / i)          :time (t2 / then)))
(a / and  :op1 (l / look-01         :ARG0 (h / he)         :ARG1 (i / it)         :manner (c / careful))  :op2 (s / say-01         :ARG0 h         :ARG1 (n / no)         :time (t / then)))
(s2 / sick-05      :ARG1 (s / sheep            :mod (t / this))      :degree (v / very)      :time (a / already))
(m / make-01  :ARG0 (y / you)  :ARG1 (a / another)  :ARG3 (i / i)  :mode imperative)
(c / cause-01      :ARG1 (m / make-01            :ARG0 (i / i)            :ARG1 (p / picture                  :ARG1-of (d / draw-01                        :ARG0 i)                  :mod (a / another))))
(s / smile-01      :ARG0 (p / person            :ARG0-of (h / have-rel-role-91                  :ARG1 (i / i)                  :ARG2 (f / friend)))      :manner (g / gentle)      :manner (i2 / indulgent))
(s / say-01  :ARG0 (h / he)  :ARG1 (s2 / see-01          :ARG0 (y / you)          :ARG1 (s4 / sheep                  :domain (t2 / this)                  :polarity -)))
(r2 / ram  :domain (t2 / this))
(h / have-03      :ARG0 (i / it)      :ARG1 (h2 / horn))
(c / cause-01      :ARG1 (d / do-02            :ARG0 (i / i)            :ARG1 (p / picture                  :ARG1-of (d2 / draw-01                        :ARG0 i))            :mod (o / over)            :mod (a / again :frequency 1)            :time (t2 / then)))
(c / contrast-01      :ARG1 (r / reject-01            :ARG1 (i / it)            :ARG1-of (r2 / resemble-01                  :ARG2 (o / other))            :mod (t / too)))
(o2 / old  :degree (t2 / too)  :domain (o / one            :mod (t / this)))
(w / want-01      :ARG0 (i / i)      :ARG1 (s / sheep            :ARG0-of (l / live-01                  :ARG1-of (l2 / long-03))))
(e / exhaust-01      :ARG1 (p / patient-01            :ARG1 (i / i))      :ARG1-of (c / cause-01            :ARG0 (h / hurry-01                  :ARG1 i                  :ARG2 (s / start-01                        :ARG0 i                        :ARG1 (d / disassemble-01                              :ARG0 i                              :ARG1 (e2 / engine                                    :poss i)))))      :time (b / by            :op1 (t / time                  :mod (t2 / this))))
(c / cause-01      :ARG1 (t / toss-out-02            :ARG0 (i / i)            :ARG1 (p / picture                  :ARG1-of (d / draw-01                        :ARG0 i)                  :mod (t3 / this))            :direction (o / off)))
(a / and  :op2 (e / explain-01         :ARG0 (i / i)         :ARG1 (i3 / it)))
(b / box  :poss (h / he)  :domain (t / this)  :mod (o / only))
(b / be-located-at-91      :ARG1 (s2 / sheep            :ARG1-of (a / ask-01                  :ARG0 (y / you)))      :ARG2 (i2 / inside))
(a / and      :op1 (s / surprise-01            :ARG0 (s2 / see-01                  :ARG0 i                  :ARG1 (b / break-13                        :ARG1 (l / light)                        :location (o / over                              :op1 (f / face                                    :part-of (p / person                                          :ARG0-of (j / judge-01)                                          :poss i                                          :mod (y / young))))))            :ARG1 (i / i)            :degree (v / very))      :op2 (s3 / say-01            :ARG1 (w / way                  :mod (e / exact)                  :domain (w2 / want-01                        :ARG0 p                        :ARG1 (i2 / it)))))
(t / think-01  :ARG0 (y / you)  :ARG1 (o / obligate-01          :ARG2 (h / have-03                  :ARG0 (s / sheep                          :mod (t2 / this))                  :ARG1 (g / grass                          :quant (d / deal                                   :mod (g2 / great)))))  :mode interrogative)
(c / cause-01      :ARG0 (a / amr-unknown))
(c / cause-01  :ARG0 (s / small          :degree (v / very)          :domain (e / everything                    :location (l / live-01                                :ARG0 (i / i)))))
(b / benefit-01      :ARG0 (g3 / grass            :mod (e3 / enough                  :ARG1-of (s / sure-02)))      :ARG1 (h2 / he))
(s / say-01      :ARG0 (i / i))
(g / give-01      :ARG0 (i / i)      :ARG1 (s / sheep            :mod (s2 / small                  :degree (v / very)))      :ARG2 (y / you))
(a / and      :op2 (b / bend-01            :ARG1 (h2 / head                  :location (o / over                        :op1 (p / picture                              :ARG1-of (d / draw-01)))                  :part-of h3))      :op2 (s / say-01            :ARG0 (h3 / he)            :ARG1 (l / look-01 :mode imperative                  :ARG0 (y / you)                  :ARG1 (s2 / small :polarity -                        :degree (s3 / so)                        :domain (t2 / that)))))
(s / sleep-01      :ARG0 (h / he))
(a / and  :op2 (a2 / acquaint-01         :ARG1 (i / i)         :ARG2 (p / prince                 :mod (l / little))         :manner (t / that)))
(c2 / chapter  :mod 3)
(t2 / take-10      :ARG1 (t / temporal-quantity            :ARG2-of (l / long-03                  :ARG1 (l2 / learn-01                        :ARG0 (i / i)                        :ARG1 (p / place                              :ARG3-of (c / come-01                                    :ARG1 (h / he)))))))
(s / seem-01      :ARG1 (h / hear-01 :polarity -            :ARG0 (p / prince                  :mod (l / little)                  :ARG0-of (q / question-01                        :ARG2 (i / i)                        :quant (m / many                              :degree (s2 / so))))            :ARG1 (o / one                  :ARG1-of (a2 / ask-01                        :ARG0 i                        :ARG2 p))            :time (e2 / ever)))
(r / reveal-01      :ARG0 (w / word            :ARG1-of (d / drop-06                  :ARG1-of (c / chance-02)))      :ARG1 (e / everything)      :ARG2 (i / i)      :manner (l / little-by-little))
(a / ask-01      :ARG0 (h / he)      :ARG1 (o / object            :mod (t / that)            :domain (a2 / amr-unknown))      :ARG2 (i / i)      :time (s / see-01            :ARG0 h            :ARG1 (a3 / airplane                  :poss i                  :ARG1-of (d / draw-01 :polarity -                        :ARG0 i                        :ARG1-of (c / cause-01                              :ARG0 (c2 / complicate-01                                    :ARG2 i                                    :degree (t3 / too                                          :degree (m / much))))))            :ord (o2 / ordinal-entity :value 1)))
(o / object  :domain (t / that)  :polarity -)
(f / fly-01      :ARG1 (i / it))
(a / airplane  :domain (i / it))
(a2 / airplane  :poss (i2 / i)  :domain (i / it))
(a / and  :op2 (p / pride-01         :ARG0 (i / i)         :ARG2 (l / learn-01                 :ARG0 (h2 / he)                 :ARG1 (p2 / possible-01                         :ARG1 (f / fly-01                                   :ARG1 i)))))
(c / cry-out-03      :ARG0 (h / he)      :ARG1 (s / string-entity :value "what")      :time (t / then))
(d / drop-01      :ARG1 (y / you)      :ARG3 (s / sky)      :direction (d2 / down)      :mode interrogative)
(y2 / yes)
(a / answer-01      :ARG0 (i / i)      :manner (m / modest))
(o / oh :mode expressive)
(f2 / funny  :domain (t2 / that))
(a / and      :op2 (b / break-in-17            :ARG0 (p / prince                  :mod (l / little))            :ARG1 (l2 / laugh-01                  :quant (p2 / peal                        :mod (l3 / lovely)))            :ARG0-of (i / irritate-01                  :ARG1 (i2 / i)                  :degree (m / much                        :degree (v / very)))))
(l / like-02      :ARG0 (i / i)      :ARG1 (t / take-04            :ARG1 (m / misfortune                  :poss i)            :manner (s / serious-01)))
(a / add-01  :ARG0 (h / he)  :ARG1 (c2 / cause-01          :ARG1 (c / come-01                  :ARG1 (y / you)                  :ARG3 (s2 / sky)                  :mod (t2 / too)))  :time (t / then))
(p / planet      :poss (y / you)      :domain (a / amr-unknown))
(a / and      :op1 (c / catch-03            :ARG0 (i / i)            :ARG1 (g / gleam                  :consist-of (l / light)                  :location (m / mystery                        :domain (p / present-02                              :ARG1 (h / he))                        :ARG1-of (p3 / penetrate-01                              :ARG1-of (p2 / possible-01 :polarity -))))            :time (m2 / moment                  :mod (t / that)))      :op2 (d / demand-01            :ARG0 i            :ARG1 (c2 / come-01 :mode interrogative                  :ARG1 (y / you)                  :ARG3 (p4 / planet                        :mod (a3 / another)))            :manner (a2 / abrupt)))
(c / contrast-01  :ARG2 (r / reply-01          :ARG0 (h / he)          :polarity -))
(a / and      :op1 (t / toss-01            :ARG0 (h / he)            :ARG1 (h2 / head                  :part-of h)            :manner (g / gentle)            :manner (t2 / take-away-05 :polarity -                  :ARG0 h                  :ARG1 (e / eye                        :part-of h)                  :direction (p2 / plane                        :poss (i / i))))      :op2 (s / say-01            :ARG0 h            :ARG1 (p / possible-01 :polarity -                  :ARG1 (c / come-01                        :ARG1 (y / you)                        :ARG3 (a2 / away                              :extent (f / far                                    :degree (v / very)))                        :manner p2))))
(a / and      :op2 (s / sink-01            :ARG0 (h / he)            :ARG4 (r / reverie                  :ARG1-of (l / long-03))))
(b / bury-01  :ARG0 (h / he)  :ARG1 h  :ARG2 (c / contemplate-01          :ARG0 h          :ARG1 (t / treasure                  :poss h))  :time (t2 / take-out-11          :ARG0 h          :ARG1 (s / sheep                  :source (p / pocket                            :poss h)                  :poss (i / i)))  :time (t3 / then))
(p / possible-01      :ARG1 (i2 / imagine-01            :ARG0 (y / you)            :ARG1 (a / arouse-01                  :ARG0 (c4 / confidence                        :degree (h2 / half)                        :topic (p3 / planet                              :mod (o2 / other))                        :poss (h / he))                  :ARG1 (c / curious-01                        :ARG1 (i / i)))))
(c / cause-01      :ARG1 (e / effort-01            :ARG0 (i / i)            :ARG1 (f / find-out-03                  :ARG0 i                  :ARG1 (i2 / information                        :quant (m2 / more)                        :topic (s / subject                              :mod (t2 / this))))            :mod (g / great)))
(s / say-01      :ARG1 (c / come-01            :ARG1 (y / you)            :ARG3 (a / amr-unknown))      :ARG2 (m / man            :mod (l / little)            :poss (i / i)))
(l / live-01      :ARG0 (y / you)      :location (p / place            :ARG1-of (s / speak-01                  :ARG0 y)            :domain (a / amr-unknown)))
(w / want-01      :ARG0 (y / you)      :ARG1 (t / take-01            :ARG0 y            :ARG1 (s / sheep                  :poss y)            :ARG3 (a / amr-unknown)))
(a / answer-01      :ARG0 (h / he)      :ARG1 (t / thing            :ARG1-of (g / good-02                  :degree (s2 / so))            :topic (b / box                  :ARG1-of (g2 / give-01                        :ARG0 (y / you)                        :ARG2 h))            :domain (p / possible-01                  :ARG1 (u / use-01                        :ARG0 (h2 / he)                        :ARG1 b                        :ARG2 (h3 / house                              :poss h2)                        :time (d / date-entity :dayperiod (n / night)))))      :time (a2 / after            :op1 (s / silent                  :mod (r / reflect-02))))
(s / so  :domain (t / that))
(a / and      :op2 (g / give-01            :ARG0 (i / i)            :ARG1 (a2 / and                  :op1 (s / string                        :ARG3-of (t / tie-01                              :ARG0 y                              :ARG1 (h / he)                              :time (d / date-entity                                    :dayperiod (d2 / day))))                  :op2 (p2 / post                        :purpose (t3 / tie-01                              :ARG0 y                              :ARG1 h)))            :ARG2 (y / you)            :condition (g2 / good-02                  :ARG1 y)))
(c / contrast-01      :ARG2 (s / seem-01            :ARG1 (s2 / shock-01                  :ARG0 (o / offer                        :mod (t / this))                  :ARG1 (p / prince                        :mod (l / little)                        :ARG0-of (s3 / say-01                              :ARG1 (t2 / tie-01 :mode imperative                                    :ARG0 p                                    :ARG1 (h / he)))))))
(q / queer      :domain (i / idea))
(c / contrast-01      :ARG2 (t / tie-01 :polarity -            :ARG0 (y / you)            :ARG1 (h / he)            :condition-of (t2 / thing)))
(s / say-01  :ARG0 (i / i)  :ARG1 (a / and          :op1 (w / wander-01                 :ARG0 (h / he)                 :ARG1 (s2 / somewhere))          :op2 (g / get-03                 :ARG1 h                 :ARG2 (l / lost))))
(b / break-in-17      :ARG0 (p2 / person            :ARG0-of (h2 / have-rel-role-91                  :ARG1 (i / i)                  :ARG2 (f / friend))            :ARG0-of (s / say-01                  :ARG1 (c / contrast-01                        :ARG2 (t / think-01                              :ARG0 (y / you)                              :ARG1 (g / go-02                                    :ARG0 (h / he)                                    :ARG4 (a2 / amr-unknown))))))      :ARG1 (l / laugh-01            :quant (p / peal                  :mod (a / another))))
(a / anywhere)
(a / ahead      :ARG1-of (s / straight-04)      :compared-to (h / he))
(s / say-01      :ARG0 (p / prince            :mod (l / little))      :ARG1 (m / matter-01 :polarity -            :ARG1 (t2 / that))      :manner (e / earnest-01)      :time (t / then))
(s / small      :degree (s2 / so)      :domain (e / everything            :location (l / live-01                  :ARG0 (i / i))))
(a / and      :op2 (a2 / add-01            :ARG0 (h / he)            :ARG1 (g / go-02                  :ARG0 (s2 / somebody :polarity -)                  :ARG4 (f / far                        :degree (v / very))                  :direction (a3 / ahead                        :ARG1-of (s3 / straight-04)                        :compared-to s2))            :manner (s / sad-02                  :quant (h2 / hint)                  :ARG1-of (p / possible-01))))
