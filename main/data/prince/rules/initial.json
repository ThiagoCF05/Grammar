[
    {
        "graph": "(XXX \n\t :mod/NP~7 -)",
        "graph_rules": {
            "chapter": [
                ":mod~7"
            ]
        },
        "head": "chapter",
        "name": ":root/ROOT~chapter",
        "noun_info": {},
        "tree": "XXX-NN :mod/NP .",
        "tree_rules": [
            ":mod~7"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/S~eat-01 - \n\t :manner/ADVP~abrupt - \n\t :conj-as-if/PP~bear-02 - \n\t :arg2-of/S~lead-up-05 -)",
        "graph_rules": {
            "demand-01": [
                ":arg0~he",
                ":arg1~eat-01",
                ":manner~abrupt",
                ":conj-as-if~bear-02",
                ":arg2-of~lead-up-05"
            ]
        },
        "head": "demand-01",
        "name": ":root/ROOT~demand-01",
        "noun_info": {},
        "tree": ":manner/ADVP , :conj-as-if/PP , :arg0/NP XXX-VBD : '' :polarity/S ? ''",
        "tree_rules": [
            ":arg2-of~lead-up-05",
            ":manner~abrupt",
            ":manner~abrupt",
            ":conj-as-if~bear-02",
            ":arg0~he",
            ":arg1~eat-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "sheep",
        "name": ":root/ROOT~sheep",
        "noun_info": {},
        "tree": "'' a XXX-NN , ''",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/LS~i - \n\t :arg1/VP~eat-01 -)",
        "graph_rules": {
            "answer-01": [
                ":arg0~i",
                ":arg1~eat-01"
            ]
        },
        "head": "answer-01",
        "name": ":root/ROOT~answer-01",
        "noun_info": {},
        "tree": ":arg0/LS XXX-VBN , '' :arg1/VP :arg1/NP . ''",
        "tree_rules": [
            ":arg0~i",
            ":arg1~eat-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/ADVP~even - \n\t :arg0-of/VP~have-03 -)",
        "graph_rules": {
            "flower": [
                ":mod~even",
                ":arg0-of~have-03"
            ]
        },
        "head": "flower",
        "name": ":root/ROOT~flower",
        "noun_info": {},
        "tree": "'' :mod/ADVP XXX-NNS that :arg0-of/VP ? ''",
        "tree_rules": [
            ":mod~even",
            ":arg0-of~have-03"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/ADVP~even - \n\t :arg0-of/VP~have-03 -)",
        "graph_rules": {
            "flower": [
                ":mod~even",
                ":arg0-of~have-03"
            ]
        },
        "head": "flower",
        "name": ":root/ROOT~flower",
        "noun_info": {},
        "tree": "'' yes , :mod/ADVP XXX-NNS that :arg0-of/VP . ''",
        "tree_rules": [
            ":mod~even",
            ":arg0-of~have-03"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~thorn - \n\t :arg2/X~amr-unknown - \n\t :arg1-of/NP~have-condition-91 -)",
        "graph_rules": {
            "have-purpose-91": [
                ":arg1~thorn",
                ":arg2~amr-unknown",
                ":arg1-of~have-condition-91"
            ]
        },
        "head": "have-purpose-91",
        "name": ":root/ROOT~have-purpose-91",
        "noun_info": {},
        "tree": "'' XXX-RB the :arg1/NP are they ? ''",
        "tree_rules": [
            ":arg2~amr-unknown",
            ":arg1-of~have-condition-91",
            ":arg1~thorn"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :polarity/RB~- -)",
        "graph_rules": {
            "know-01": [
                ":arg0~i",
                ":polarity~-"
            ]
        },
        "head": "know-01",
        "name": ":root/ROOT~know-01",
        "noun_info": {},
        "tree": ":arg0/NP :polarity/VBD :polarity/RB XXX-VB .",
        "tree_rules": [
            ":polarity~-",
            ":polarity~-",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/S~unscrew-01 - \n\t :time/PP~moment -)",
        "graph_rules": {
            "try-01": [
                ":arg0~i",
                ":arg1~unscrew-01",
                ":time~moment"
            ]
        },
        "head": "try-01",
        "name": ":root/ROOT~try-01",
        "noun_info": {},
        "tree": ":time/PP :arg0/NP was :arg1-of/ADJP XXX-VBG :arg1/S .",
        "tree_rules": [
            ":arg1~unscrew-01",
            ":time~moment",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/ADJP~clear-06 - \n\t :arg1/ADJP~worry-01 -)",
        "graph_rules": {
            "cause-01": [
                ":arg0~clear-06",
                ":arg1~worry-01"
            ]
        },
        "head": "cause-01",
        "name": ":root/ROOT~cause-01",
        "noun_info": {},
        "tree": ":arg2/NP was :quant/ADVP :arg1/ADJP , for it was becoming :arg0/ADJP XXX-IN :arg1/S .",
        "tree_rules": [
            ":arg0~clear-06",
            ":arg1~worry-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VP~have-03 -)",
        "graph_rules": {
            "and": [
                ":op1~have-03"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :op1/VP - :arg1-of/S .",
        "tree_rules": [
            ":op1~have-03"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NNS~thorn - \n\t :arg2/WHNP~amr-unknown -)",
        "graph_rules": {
            "use-01": [
                ":arg1~thorn",
                ":arg2~amr-unknown"
            ]
        },
        "head": "use-01",
        "name": ":root/ROOT~use-01",
        "noun_info": {},
        "tree": "'' the :arg1/NNS - - :arg2/WHNP XXX-NN are they ? ''",
        "tree_rules": [
            ":arg2~amr-unknown",
            ":arg1~thorn"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/ADVP~- - \n\t :arg0/NP~prince - \n\t :arg1/VP~go-01 - \n\t :time/RB~once -)",
        "graph_rules": {
            "let-01": [
                ":polarity~-",
                ":arg0~prince",
                ":arg1~go-01",
                ":time~once"
            ]
        },
        "head": "let-01",
        "name": ":root/ROOT~let-01",
        "noun_info": {},
        "tree": ":arg0/NP :polarity/ADVP XXX-VBD :arg1/VP .",
        "tree_rules": [
            ":time~once",
            ":arg1~go-01",
            ":arg0~prince",
            ":polarity~-"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/PP~bolt - \n\t :arg1/NP~i -)",
        "graph_rules": {
            "upset-01": [
                ":arg0~bolt",
                ":arg1~i"
            ]
        },
        "head": "upset-01",
        "name": ":root/ROOT~upset-01",
        "noun_info": {},
        "tree": "as for me , :arg1/NP was XXX-VBN :arg0/PP .",
        "tree_rules": [
            ":arg0~bolt",
            ":arg1~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/S~answer-01 -)",
        "graph_rules": {
            "and": [
                ":op1~answer-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :op1/S : '' :domain/S .",
        "tree_rules": [
            ":op1~answer-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~flower - \n\t :arg1/NP~thorn - \n\t :purpose/PP~spite - \n\t :mod/ADVP~just -)",
        "graph_rules": {
            "have-03": [
                ":arg0~flower",
                ":arg1~thorn",
                ":purpose~spite",
                ":mod~just"
            ]
        },
        "head": "have-03",
        "name": ":root/ROOT~have-03",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBP :arg1/NP :mod/ADVP :purpose/PP ! ''",
        "tree_rules": [
            ":arg1~thorn",
            ":mod~just",
            ":purpose~spite",
            ":arg0~flower"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "oh",
        "name": ":root/ROOT~oh",
        "noun_info": {},
        "tree": "'' XXX-UH ! ''",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1-of/E~compose-01 -)",
        "graph_rules": {
            "moment": [
                ":arg1-of~compose-01"
            ]
        },
        "head": "moment",
        "name": ":root/ROOT~moment",
        "noun_info": {},
        "tree": "there was a XXX-NN :arg2/PP .",
        "tree_rules": [
            ":arg1-of~compose-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/S~believe-01 - \n\t :arg2/NP~i - \n\t :time/ADVP~then - \n\t :manner/IN~resent-01 - \n\t :direction/PP~back -)",
        "graph_rules": {
            "flash-01": [
                ":arg0~prince",
                ":arg1~believe-01",
                ":arg2~i",
                ":time~then",
                ":manner~resent-01",
                ":direction~back"
            ]
        },
        "head": "flash-01",
        "name": ":root/ROOT~flash-01",
        "noun_info": {},
        "tree": ":time/ADVP :arg0/NP XXX-VBD :direction/ADVP :direction/PP , :manner/IN :mod/NP : '' :arg1/S !",
        "tree_rules": [
            ":manner~resent-01",
            ":manner~resent-01",
            ":direction~back",
            ":direction~back",
            ":time~then",
            ":arg0~prince",
            ":arg2~i",
            ":arg1~believe-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1-of/JJ~weak-02 - \n\t :domain/NP~flower -)",
        "graph_rules": {
            "creature": [
                ":arg1-of~weak-02",
                ":domain~flower"
            ]
        },
        "head": "creature",
        "name": ":root/ROOT~creature",
        "noun_info": {},
        "tree": ":domain/NP are :arg1-of/JJ XXX-NNS .",
        "tree_rules": [
            ":arg1-of~weak-02",
            ":domain~flower"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :domain/NP~they -)",
        "graph_rules": {
            "naive": [
                ":domain~they"
            ]
        },
        "head": "naive",
        "name": ":root/ROOT~naive",
        "noun_info": {},
        "tree": ":domain/NP are XXX-JJ .",
        "tree_rules": [
            ":domain~they"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~they - \n\t :arg1/SBAR~weapon -)",
        "graph_rules": {
            "believe-01": [
                ":arg0~they",
                ":arg1~weapon"
            ]
        },
        "head": "believe-01",
        "name": ":root/ROOT~believe-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBP that :domain/NP ''",
        "tree_rules": [
            ":arg1~weapon",
            ":arg0~they"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :polarity/RB~- -)",
        "graph_rules": {
            "answer-01": [
                ":arg0~i",
                ":polarity~-"
            ]
        },
        "head": "answer-01",
        "name": ":root/ROOT~answer-01",
        "noun_info": {},
        "tree": ":arg0/NP :polarity/VBD :polarity/RB XXX-VB .",
        "tree_rules": [
            ":polarity~-",
            ":polarity~-",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/FW~i - \n\t :arg1/S~knock-out-03 - \n\t :arg2/E~coref - \n\t :time/ADVP~instant -)",
        "graph_rules": {
            "say-01": [
                ":arg0~i",
                ":arg1~knock-out-03",
                ":arg2~coref",
                ":time~instant"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": ":time/ADVP :mod/DT :time/JJ :arg0/FW was XXX-VBG to myself : '' :arg1/S . ''",
        "tree_rules": [
            ":time~instant",
            ":arg0~i",
            ":time~instant",
            ":arg1~knock-out-03",
            ":arg2~coref"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/NP~think-01 - \n\t :mod/ADVP~again -)",
        "graph_rules": {
            "disturb-01": [
                ":arg0~prince",
                ":arg1~think-01",
                ":mod~again"
            ]
        },
        "head": "disturb-01",
        "name": ":root/ROOT~disturb-01",
        "noun_info": {},
        "tree": ":mod/ADVP :arg0/NP XXX-VBD :arg1/NP .",
        "tree_rules": [
            ":arg1~think-01",
            ":mod~again",
            ":arg0~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/SBAR~believe-01 -)",
        "graph_rules": {
            "and": [
                ":op1~believe-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "'' XXX-CC :arg0/NP ''",
        "tree_rules": [
            ":op1~believe-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/INTJ~oh -)",
        "graph_rules": {
            "no": [
                ":mod~oh"
            ]
        },
        "head": "no",
        "name": ":root/ROOT~no",
        "noun_info": {},
        "tree": ":mod/INTJ , XXX-DT ! ''",
        "tree_rules": [
            ":mod~oh"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i -)",
        "graph_rules": {
            "cry-01": [
                ":arg0~i"
            ]
        },
        "head": "cry-01",
        "name": ":root/ROOT~cry-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD .",
        "tree_rules": [
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :quant/.~3 -)",
        "graph_rules": {
            "no": [
                ":quant~3"
            ]
        },
        "head": "no",
        "name": ":root/ROOT~no",
        "noun_info": {},
        "tree": "'' no , XXX-DT no :quant/.",
        "tree_rules": [
            ":quant~3"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/RB~- - \n\t :arg0/NP~i - \n\t :arg1/NP~anything -)",
        "graph_rules": {
            "believe-01": [
                ":polarity~-",
                ":arg0~i",
                ":arg1~anything"
            ]
        },
        "head": "believe-01",
        "name": ":root/ROOT~believe-01",
        "noun_info": {},
        "tree": ":arg0/NP :polarity/VBP :polarity/RB XXX-VB :arg1/NP .",
        "tree_rules": [
            ":arg1~anything",
            ":polarity~-",
            ":polarity~-",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/NP~you - \n\t :arg2/NP~thing -)",
        "graph_rules": {
            "answer-01": [
                ":arg0~i",
                ":arg1~you",
                ":arg2~thing"
            ]
        },
        "head": "answer-01",
        "name": ":root/ROOT~answer-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBN :arg1/NP :ord/IN :arg2/NP .",
        "tree_rules": [
            ":arg2~thing",
            ":arg1~you",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/RB~- - \n\t :arg0/NP~you - \n\t :arg1/S~busy-01 -)",
        "graph_rules": {
            "see-01": [
                ":polarity~-",
                ":arg0~you",
                ":arg1~busy-01"
            ]
        },
        "head": "see-01",
        "name": ":root/ROOT~see-01",
        "noun_info": {},
        "tree": ":polarity/VBP :polarity/RB :arg0/NP XXX-VBP - - :arg1/S :arg0-of/. ''",
        "tree_rules": [
            ":arg0~you",
            ":polarity~-",
            ":polarity~-",
            ":arg1~busy-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/NP~i -)",
        "graph_rules": {
            "stare-01": [
                ":arg0~he",
                ":arg1~i"
            ]
        },
        "head": "stare-01",
        "name": ":root/ROOT~stare-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD :mod/PP .",
        "tree_rules": [
            ":arg1~i",
            ":arg0~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0-of/.~have-03 -)",
        "graph_rules": {
            "matter": [
                ":arg0-of~have-03"
            ]
        },
        "head": "matter",
        "name": ":root/ROOT~matter",
        "noun_info": {},
        "tree": "'' XXX-NNS :arg0-of/IN :arg1/NP :arg0-of/. ''",
        "tree_rules": [
            ":arg0-of~have-03",
            ":arg0-of~have-03"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/PP~i - \n\t :location/NP~there -)",
        "graph_rules": {
            "look-01": [
                ":arg0~he",
                ":arg1~i",
                ":location~there"
            ]
        },
        "head": "look-01",
        "name": ":root/ROOT~look-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD :arg1/PP :location/NP , :arg0/PP , :arg0-of/S ...",
        "tree_rules": [
            ":arg1~i",
            ":location~there",
            ":arg0~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~you - \n\t :arg1-of/IN~resemble-01 -)",
        "graph_rules": {
            "talk-01": [
                ":arg0~you",
                ":arg1-of~resemble-01"
            ]
        },
        "head": "talk-01",
        "name": ":root/ROOT~talk-01",
        "noun_info": {},
        "tree": "'' :arg0/NP XXX-VBP :mod/ADVP :arg1-of/IN :arg2/NP ! ''",
        "tree_rules": [
            ":arg1-of~resemble-01",
            ":arg0~you"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~that - \n\t :arg1/NP~i - \n\t :degree/NP~little -)",
        "graph_rules": {
            "shame-01": [
                ":arg0~that",
                ":arg1~i",
                ":degree~little"
            ]
        },
        "head": "shame-01",
        "name": ":root/ROOT~shame-01",
        "noun_info": {},
        "tree": ":arg0/NP made :arg1/NP :degree/NP XXX-JJ .",
        "tree_rules": [
            ":degree~little",
            ":arg1~i",
            ":arg0~that"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP~go-on-25 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~go-on-25"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :arg2/VP ...",
        "tree_rules": [
            ":arg2~go-on-25"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~you - \n\t :arg2/NP~everything -)",
        "graph_rules": {
            "confuse-01": [
                ":arg0~you",
                ":arg2~everything"
            ]
        },
        "head": "confuse-01",
        "name": ":root/ROOT~confuse-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBP :arg2/NP ... ''",
        "tree_rules": [
            ":arg2~everything",
            ":arg0~you"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :domain/NP~he - \n\t :degree/RB~very - \n\t :arg1-of/ADVP~real-04 -)",
        "graph_rules": {
            "angry": [
                ":domain~he",
                ":degree~very",
                ":arg1-of~real-04"
            ]
        },
        "head": "angry",
        "name": ":root/ROOT~angry",
        "noun_info": {},
        "tree": ":domain/NP was :arg1-of/ADVP :degree/RB XXX-JJ .",
        "tree_rules": [
            ":degree~very",
            ":arg1-of~real-04",
            ":domain~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/NP~curl - \n\t :location/PP~breeze -)",
        "graph_rules": {
            "toss-01": [
                ":arg0~he",
                ":arg1~curl",
                ":location~breeze"
            ]
        },
        "head": "toss-01",
        "name": ":root/ROOT~toss-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD :arg1/NP :location/PP .",
        "tree_rules": [
            ":arg1~curl",
            ":location~breeze",
            ":arg0~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/NP~planet -)",
        "graph_rules": {
            "know-02": [
                ":arg0~i",
                ":arg1~planet"
            ]
        },
        "head": "know-02",
        "name": ":root/ROOT~know-02",
        "noun_info": {},
        "tree": "'' :arg0/NP XXX-VBP :arg1/NP .",
        "tree_rules": [
            ":arg1~planet",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/ADVP~- - \n\t :arg0/NP~he - \n\t :arg1/NP~flower - \n\t :time/E~ever -)",
        "graph_rules": {
            "smell-01": [
                ":polarity~-",
                ":arg0~he",
                ":arg1~flower",
                ":time~ever"
            ]
        },
        "head": "smell-01",
        "name": ":root/ROOT~smell-01",
        "noun_info": {},
        "tree": ":arg0/NP has :polarity/ADVP XXX-VBN :arg1/NP .",
        "tree_rules": [
            ":arg1~flower",
            ":polarity~-",
            ":arg0~he",
            ":time~ever"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/ADVP~- - \n\t :arg0/NP~he - \n\t :arg1/PP~star - \n\t :time/E~ever -)",
        "graph_rules": {
            "look-01": [
                ":polarity~-",
                ":arg0~he",
                ":arg1~star",
                ":time~ever"
            ]
        },
        "head": "look-01",
        "name": ":root/ROOT~look-01",
        "noun_info": {},
        "tree": ":arg0/NP has :polarity/ADVP XXX-VBN :arg1/PP .",
        "tree_rules": [
            ":arg1~star",
            ":polarity~-",
            ":arg0~he",
            ":time~ever"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/ADVP~- - \n\t :arg0/NP~he - \n\t :arg1/NP~anyone - \n\t :time/E~ever -)",
        "graph_rules": {
            "love-01": [
                ":polarity~-",
                ":arg0~he",
                ":arg1~anyone",
                ":time~ever"
            ]
        },
        "head": "love-01",
        "name": ":root/ROOT~love-01",
        "noun_info": {},
        "tree": ":arg0/NP has :polarity/ADVP XXX-VBN :arg1/NP .",
        "tree_rules": [
            ":arg1~anyone",
            ":polarity~-",
            ":arg0~he",
            ":time~ever"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/.~and -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~and"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "XXX-CC he is :polarity/RB :op1/NP - - :domain/NP :op2/VP :arg2/. ''",
        "tree_rules": [
            ":arg2~and"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "amr-unknown",
        "name": ":root/ROOT~amr-unknown",
        "noun_info": {},
        "tree": "'' a what XXX-. ''",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "mushroom",
        "name": ":root/ROOT~mushroom",
        "noun_info": {},
        "tree": "'' a XXX-NN ! ''",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~prince - \n\t :time/ADVP~now - \n\t :arg1-of/E~cause-01 -)",
        "graph_rules": {
            "white-03": [
                ":arg1~prince",
                ":time~now",
                ":arg1-of~cause-01"
            ]
        },
        "head": "white-03",
        "name": ":root/ROOT~white-03",
        "noun_info": {},
        "tree": ":arg1/NP was :time/ADVP XXX-JJ :arg0/PP .",
        "tree_rules": [
            ":time~now",
            ":arg1~prince",
            ":arg1-of~cause-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~flower - \n\t :arg1/NP~thorn - \n\t :duration/PP~multiple -)",
        "graph_rules": {
            "grow-03": [
                ":arg0~flower",
                ":arg1~thorn",
                ":duration~multiple"
            ]
        },
        "head": "grow-03",
        "name": ":root/ROOT~grow-03",
        "noun_info": {},
        "tree": "'' :arg0/NP have been XXX-VBG :arg1/NP :duration/PP .",
        "tree_rules": [
            ":arg1~thorn",
            ":duration~multiple",
            ":arg0~flower"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~sheep - \n\t :arg1/NP~they - \n\t :duration/PP~multiple - \n\t :arg1-of/VBP~have-concession-91 -)",
        "graph_rules": {
            "eat-01": [
                ":arg0~sheep",
                ":arg1~they",
                ":duration~multiple",
                ":arg1-of~have-concession-91"
            ]
        },
        "head": "eat-01",
        "name": ":root/ROOT~eat-01",
        "noun_info": {},
        "tree": ":duration/PP :arg0/NP :arg1-of/VBP been XXX-VBG :arg1-of/NP .",
        "tree_rules": [
            ":arg1~they",
            ":arg1-of~have-concession-91",
            ":arg1-of~have-concession-91",
            ":duration~multiple",
            ":arg0~sheep"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/DT~have-03 -)",
        "graph_rules": {
            "and": [
                ":op1~have-03"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC is it :polarity/RB :op1/DT matter :arg1/PP :arg0/S ?",
        "tree_rules": [
            ":op1~have-03"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/RB~- - \n\t :domain/NP~war-01 -)",
        "graph_rules": {
            "important": [
                ":polarity~-",
                ":domain~war-01"
            ]
        },
        "head": "important",
        "name": ":root/ROOT~important",
        "noun_info": {},
        "tree": "is :domain/NP :polarity/RB XXX-JJ ?",
        "tree_rules": [
            ":domain~war-01",
            ":polarity~-",
            ":domain~war-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/RB~- - \n\t :arg0/NP~this - \n\t :arg1/NP~consequence -)",
        "graph_rules": {
            "have-03": [
                ":polarity~-",
                ":arg0~this",
                ":arg1~consequence"
            ]
        },
        "head": "have-03",
        "name": ":root/ROOT~have-03",
        "noun_info": {},
        "tree": "is :arg0/NP :polarity/RB of :arg1/NP :compared-to/IN XXX-DT :arg1-of/JJ :arg1-of/NN - :part/VBN :compared-to/NP ?",
        "tree_rules": [
            ":arg1~consequence",
            ":polarity~-",
            ":arg0~this"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/FRAG~oh -)",
        "graph_rules": {
            "and": [
                ":op1~oh"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :condition/SBAR !",
        "tree_rules": [
            ":op1~oh"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~you - \n\t :arg1/SBAR~that -)",
        "graph_rules": {
            "think-01": [
                ":arg0~you",
                ":arg1~that"
            ]
        },
        "head": "think-01",
        "name": ":root/ROOT~think-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBP :arg1/SBAR ! ''",
        "tree_rules": [
            ":arg1~that",
            ":arg0~you"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~face - \n\t :arg2/PP~red-02 - \n\t :arg3/PP~white-03 - \n\t :time/SBAR~continue-02 -)",
        "graph_rules": {
            "turn-02": [
                ":arg1~face",
                ":arg2~red-02",
                ":arg3~white-03",
                ":time~continue-02"
            ]
        },
        "head": "turn-02",
        "name": ":root/ROOT~turn-02",
        "noun_info": {},
        "tree": ":arg1/NP XXX-VBD :arg3/PP :time/SBAR : '' :condition/S .",
        "tree_rules": [
            ":arg2~red-02",
            ":arg3~white-03",
            ":time~continue-02",
            ":arg1~face"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/VP~say-01 -)",
        "graph_rules": {
            "possible-01": [
                ":arg1~say-01"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT~possible-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-MD :arg1/VP ...",
        "tree_rules": [
            ":arg1~say-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VP~think-01 -)",
        "graph_rules": {
            "and": [
                ":op1~think-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :op1/VP ! ''",
        "tree_rules": [
            ":op1~think-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/RB~- - \n\t :arg1/VP~say-01 -)",
        "graph_rules": {
            "possible-01": [
                ":polarity~-",
                ":arg1~say-01"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT~possible-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-MD :polarity/RB :arg1/VP .",
        "tree_rules": [
            ":polarity~-",
            ":arg1~say-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/S~sob-01 - \n\t :arg1/NP~word -)",
        "graph_rules": {
            "choke-up-04": [
                ":arg0~sob-01",
                ":arg1~word"
            ]
        },
        "head": "choke-up-04",
        "name": ":root/ROOT~choke-up-04",
        "noun_info": {},
        "tree": ":arg1/NP were XXX-VBN :poss/IN :arg0/S .",
        "tree_rules": [
            ":arg0~sob-01",
            ":arg1~word"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~night -)",
        "graph_rules": {
            "fall-04": [
                ":arg1~night"
            ]
        },
        "head": "fall-04",
        "name": ":root/ROOT~fall-04",
        "noun_info": {},
        "tree": ":arg1/NP had XXX-VBN .",
        "tree_rules": [
            ":arg1~night"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/VP~drop-01 -)",
        "graph_rules": {
            "let-01": [
                ":arg0~i",
                ":arg1~drop-01"
            ]
        },
        "head": "let-01",
        "name": ":root/ROOT~let-01",
        "noun_info": {},
        "tree": ":arg0/NP had XXX-VB :arg1/NP :arg1/VP .",
        "tree_rules": [
            ":arg1~drop-01",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/NP~hammer - \n\t :op2/NP~bolt - \n\t :op3/NP~thirst-01 - \n\t :op4/NP~die-01 - \n\t :time/NP~moment -)",
        "graph_rules": {
            "or": [
                ":op1~hammer",
                ":op2~bolt",
                ":op3~thirst-01",
                ":op4~die-01",
                ":time~moment"
            ]
        },
        "head": "or",
        "name": ":root/ROOT~or",
        "noun_info": {},
        "tree": ":mod/WHPP :time/NP now was :op1/NP , :op2/NP , XXX-CC :op3/NP , or :op4/NP ?",
        "tree_rules": [
            ":op1~hammer",
            ":op2~bolt",
            ":op3~thirst-01",
            ":op4~die-01",
            ":time~moment"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/VP~prince - \n\t :arg2/E~and -)",
        "graph_rules": {
            "be-located-at-91": [
                ":arg1~prince",
                ":arg2~and"
            ]
        },
        "head": "be-located-at-91",
        "name": ":root/ROOT~be-located-at-91",
        "noun_info": {},
        "tree": "XXX-IN :op1/NP , :op2/NP , :poss/NP , the earth , there :arg1/VP .",
        "tree_rules": [
            ":arg1~prince",
            ":arg2~and"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VP~take-01 - \n\t :op2/VP~rock-01 -)",
        "graph_rules": {
            "and": [
                ":op1~take-01",
                ":op2~rock-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": ":arg0/NP :op1/VP , XXX-CC :op2/VP .",
        "tree_rules": [
            ":op1~take-01",
            ":op2~rock-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/PP~endanger-01 - \n\t :arg2/PP~he -)",
        "graph_rules": {
            "say-01": [
                ":arg0~i",
                ":arg1~endanger-01",
                ":arg2~he"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD :arg2/PP : '' :arg1/S .",
        "tree_rules": [
            ":arg2~he",
            ":arg0~i",
            ":arg1~endanger-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/E~thing - \n\t :arg2/PRP$~you -)",
        "graph_rules": {
            "draw-01": [
                ":arg0~i",
                ":arg1~thing",
                ":arg2~you"
            ]
        },
        "head": "draw-01",
        "name": ":root/ROOT~draw-01",
        "noun_info": {},
        "tree": ":arg0/NP will XXX-VB :arg2-of/S .",
        "tree_rules": [
            ":arg2~you",
            ":arg0~i",
            ":arg1~thing"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/NP~railing - \n\t :arg2/NP~you -)",
        "graph_rules": {
            "draw-01": [
                ":arg0~i",
                ":arg1~railing",
                ":arg2~you"
            ]
        },
        "head": "draw-01",
        "name": ":root/ROOT~draw-01",
        "noun_info": {},
        "tree": ":arg0/NP will XXX-VB :arg2/NP :arg1/NP .",
        "tree_rules": [
            ":arg2~you",
            ":arg1~railing",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i -)",
        "graph_rules": {
            "do-02": [
                ":arg0~i"
            ]
        },
        "head": "do-02",
        "name": ":root/ROOT~do-02",
        "noun_info": {},
        "tree": ":arg0/NP XXX-MD - - ''",
        "tree_rules": [
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/RB~- - \n\t :arg0/NP~i - \n\t :arg1/WHNP~thing -)",
        "graph_rules": {
            "know-01": [
                ":polarity~-",
                ":arg0~i",
                ":arg1~thing"
            ]
        },
        "head": "know-01",
        "name": ":root/ROOT~know-01",
        "noun_info": {},
        "tree": ":arg0/NP :polarity/VBD :polarity/RB XXX-VB :arg1/WHNP :arg1-of/S .",
        "tree_rules": [
            ":arg1~thing",
            ":polarity~-",
            ":polarity~-",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/CC~and -)",
        "graph_rules": {
            "feel-01": [
                ":arg0~i",
                ":arg1~and"
            ]
        },
        "head": "feel-01",
        "name": ":root/ROOT~feel-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD :op2/NP .",
        "tree_rules": [
            ":arg1~and",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/RB~- - \n\t :arg0/NP~i - \n\t :arg1/CC~and -)",
        "graph_rules": {
            "know-01": [
                ":polarity~-",
                ":arg0~i",
                ":arg1~and"
            ]
        },
        "head": "know-01",
        "name": ":root/ROOT~know-01",
        "noun_info": {},
        "tree": ":arg0/NP :polarity/VBD :polarity/RB XXX-VB :op1/WHADVP :manner-of/S .",
        "tree_rules": [
            ":arg1~and",
            ":polarity~-",
            ":polarity~-",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/JJ~secret - \n\t :domain/NP~land -)",
        "graph_rules": {
            "place": [
                ":mod~secret",
                ":domain~land"
            ]
        },
        "head": "place",
        "name": ":root/ROOT~place",
        "noun_info": {},
        "tree": ":domain/NP is :degree/JJ a :mod/JJ XXX-NN , :domain/NP .",
        "tree_rules": [
            ":mod~secret",
            ":domain~land",
            ":domain~land"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/NP~8 -)",
        "graph_rules": {
            "chapter": [
                ":mod~8"
            ]
        },
        "head": "chapter",
        "name": ":root/ROOT~chapter",
        "noun_info": {},
        "tree": "XXX-NN :mod/NP .",
        "tree_rules": [
            ":mod~8"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/S~know-02 - \n\t :time/ADVP~soon -)",
        "graph_rules": {
            "learn-01": [
                ":arg0~i",
                ":arg1~know-02",
                ":time~soon"
            ]
        },
        "head": "learn-01",
        "name": ":root/ROOT~learn-01",
        "noun_info": {},
        "tree": ":arg0/NP :time/ADVP XXX-VBN :arg1/S .",
        "tree_rules": [
            ":arg1~know-02",
            ":arg0~i",
            ":time~soon"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~flower - \n\t :degree/RB~very - \n\t :time/ADVP~always - \n\t :location/PP~planet -)",
        "graph_rules": {
            "simple-02": [
                ":arg1~flower",
                ":degree~very",
                ":time~always",
                ":location~planet"
            ]
        },
        "head": "simple-02",
        "name": ":root/ROOT~simple-02",
        "noun_info": {},
        "tree": ":location/PP :arg1/NP had :time/ADVP been :degree/RB XXX-JJ .",
        "tree_rules": [
            ":degree~very",
            ":time~always",
            ":location~planet",
            ":arg1~flower"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :snt1/VBD~have-03 - \n\t :snt2/S~take-up-13 - \n\t :snt3/S~trouble-01 -)",
        "graph_rules": {
            "multi-sentence": [
                ":snt1~have-03",
                ":snt2~take-up-13",
                ":snt3~trouble-01"
            ]
        },
        "head": "multi-sentence",
        "name": ":root/ROOT~multi-sentence",
        "noun_info": {},
        "tree": ":arg0/NP :snt1/VBD XXX-RB :quant/CD :arg1/NN :consist-of/PP ; :snt2/S ; :snt3/S .",
        "tree_rules": [
            ":snt1~have-03",
            ":snt2~take-up-13",
            ":snt3~trouble-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/S~appear-01 - \n\t :op2/S~fade-01 -)",
        "graph_rules": {
            "and": [
                ":op1~appear-01",
                ":op2~fade-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": ":op1/S , XXX-CC :op2/S .",
        "tree_rules": [
            ":op1~appear-01",
            ":op2~fade-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/CC~contrast-01 - \n\t :op2/S~watch-over-03 -)",
        "graph_rules": {
            "and": [
                ":op1~contrast-01",
                ":op2~watch-over-03"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": ":op1/CC :time/NP , :source/IN :source/NP :arg1-of/VBN :source/IN :mod/NP :source/VBD where , :arg2/S ; XXX-CC :op2/S :arg1/VP .",
        "tree_rules": [
            ":op2~watch-over-03",
            ":op1~contrast-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/PP~baobab -)",
        "graph_rules": {
            "possible-01": [
                ":arg1~baobab"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT~possible-01",
        "noun_info": {},
        "tree": ":domain/NP XXX-MD , you :mod/VP .",
        "tree_rules": [
            ":arg1~baobab"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VP~stop-01 - \n\t :op2/VP~begin-01 -)",
        "graph_rules": {
            "and": [
                ":op1~stop-01",
                ":op2~begin-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": ":arg0/NP :time/ADVP :op1/VP , XXX-CC :op2/VP .",
        "tree_rules": [
            ":op1~stop-01",
            ":op2~begin-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/MD~obligate-01 - \n\t :time/IN~at-once -)",
        "graph_rules": {
            "feel-01": [
                ":arg0~prince",
                ":arg1~obligate-01",
                ":time~at-once"
            ]
        },
        "head": "feel-01",
        "name": ":root/ROOT~feel-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD :arg0/ADVP :arg1-of/IN :arg2/S .",
        "tree_rules": [
            ":time~at-once",
            ":arg1~obligate-01",
            ":arg0~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/VBN~satisfy-01 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg1~satisfy-01"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "XXX-CC :arg1/NP :polarity/VP .",
        "tree_rules": [
            ":arg1~satisfy-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~she - \n\t :arg1/NP~color - \n\t :manner/PP~care-04 -)",
        "graph_rules": {
            "choose-01": [
                ":arg0~she",
                ":arg1~color",
                ":manner~care-04"
            ]
        },
        "head": "choose-01",
        "name": ":root/ROOT~choose-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD :arg1/NP :manner/PP .",
        "tree_rules": [
            ":arg1~color",
            ":manner~care-04",
            ":arg0~she"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~she - \n\t :arg1/NP~petal - \n\t :manner/PP~one-by-one -)",
        "graph_rules": {
            "adjust-01": [
                ":arg0~she",
                ":arg1~petal",
                ":manner~one-by-one"
            ]
        },
        "head": "adjust-01",
        "name": ":root/ROOT~adjust-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD :arg1/NP :manner/PP .",
        "tree_rules": [
            ":arg1~petal",
            ":manner~one-by-one",
            ":arg0~she"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/RB~- - \n\t :arg0/NP~she - \n\t :arg1/S~go-out-17 -)",
        "graph_rules": {
            "wish-01": [
                ":polarity~-",
                ":arg0~she",
                ":arg1~go-out-17"
            ]
        },
        "head": "wish-01",
        "name": ":root/ROOT~wish-01",
        "noun_info": {},
        "tree": ":arg0/NP :polarity/VBD :polarity/RB XXX-VB :arg1/S :mod/DT :arg1-of/JJ , :arg1-of/IN :arg2/NP .",
        "tree_rules": [
            ":arg1~go-out-17",
            ":polarity~-",
            ":polarity~-",
            ":arg0~she"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~she - \n\t :arg1/S~appear-01 -)",
        "graph_rules": {
            "wish-01": [
                ":arg0~she",
                ":arg1~appear-01"
            ]
        },
        "head": "wish-01",
        "name": ":root/ROOT~wish-01",
        "noun_info": {},
        "tree": ":degree/NP was :mod/ADVP :manner/PP that :arg0/NP XXX-VBD :arg1/S .",
        "tree_rules": [
            ":arg1~appear-01",
            ":arg0~she"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "yes",
        "name": ":root/ROOT~yes",
        "noun_info": {},
        "tree": "oh , XXX-UH !",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~she - \n\t :arg2/NN~creature -)",
        "graph_rules": {
            "resemble-01": [
                ":arg1~she",
                ":arg2~creature"
            ]
        },
        "head": "resemble-01",
        "name": ":root/ROOT~resemble-01",
        "noun_info": {},
        "tree": ":arg1/NP was XXX-DT :mod/JJ :arg2/NN !",
        "tree_rules": [
            ":arg2~creature",
            ":arg1~she"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VP~last-01 -)",
        "graph_rules": {
            "and": [
                ":op1~last-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :arg2-of/NP :op1/VP .",
        "tree_rules": [
            ":op1~last-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VP~yawn-01 - \n\t :op2/VP~say-01 - \n\t :time/IN~after -)",
        "graph_rules": {
            "and": [
                ":op1~yawn-01",
                ":op2~say-01",
                ":time~after"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC , :time/IN :op1/S , :arg0/NP :op1/VP !",
        "tree_rules": [
            ":time~after",
            ":op2~say-01",
            ":op1~yawn-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~i - \n\t :degree/ADVP~scarce -)",
        "graph_rules": {
            "awake-03": [
                ":arg1~i",
                ":degree~scarce"
            ]
        },
        "head": "awake-03",
        "name": ":root/ROOT~awake-03",
        "noun_info": {},
        "tree": ":arg1/NP am :degree/ADVP XXX-RB .",
        "tree_rules": [
            ":degree~scarce",
            ":arg1~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/NP~you - \n\t :arg2/SBAR~excuse-01 -)",
        "graph_rules": {
            "beg-01": [
                ":arg0~i",
                ":arg1~you",
                ":arg2~excuse-01"
            ]
        },
        "head": "beg-01",
        "name": ":root/ROOT~beg-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBP :arg2/SBAR .",
        "tree_rules": [
            ":arg1~you",
            ":arg2~excuse-01",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/E~- - \n\t :arg1/NP~petal - \n\t :mod/ADVP~still -)",
        "graph_rules": {
            "arrange-01": [
                ":polarity~-",
                ":arg1~petal",
                ":mod~still"
            ]
        },
        "head": "arrange-01",
        "name": ":root/ROOT~arrange-01",
        "noun_info": {},
        "tree": ":arg1/NP are :mod/ADVP :mod/ADVP XXX-VBN ... ''",
        "tree_rules": [
            ":mod~still",
            ":arg1~petal",
            ":polarity~-"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/MD~possible-01 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~possible-01"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :arg1/VP !",
        "tree_rules": [
            ":arg2~possible-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~you - \n\t :degree/WRB~so -)",
        "graph_rules": {
            "beautiful-02": [
                ":arg1~you",
                ":degree~so"
            ]
        },
        "head": "beautiful-02",
        "name": ":root/ROOT~beautiful-02",
        "noun_info": {},
        "tree": ":degree/WRB XXX-JJ :arg1/NP are ! ''",
        "tree_rules": [
            ":degree~so",
            ":arg1~you"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~flower - \n\t :arg1/ADJP~beautiful-02 - \n\t :manner/ADVP~sweet-03 -)",
        "graph_rules": {
            "respond-01": [
                ":arg0~flower",
                ":arg1~beautiful-02",
                ":manner~sweet-03"
            ]
        },
        "head": "respond-01",
        "name": ":root/MULTI-SENTENCE~respond-01",
        "noun_info": {},
        "tree": "'' am :polarity/NP :arg1/ADJP ? '' :arg0/NP XXX-VBD , :manner/ADVP .",
        "tree_rules": [
            ":arg1~beautiful-02",
            ":manner~sweet-03",
            ":arg0~flower"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~bear-02 -)",
        "graph_rules": {
            "and": [
                ":op2~bear-02"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "'' XXX-CC :arg1/NP :op2/VP ''",
        "tree_rules": [
            ":op2~bear-02"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/VP~guess-01 -)",
        "graph_rules": {
            "possible-01": [
                ":arg1~guess-01"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT~possible-01",
        "noun_info": {},
        "tree": "the :mod/JJ :arg0/NN XXX-MD :arg1/VP - :arg2/CC :op2/ADJP - - she was :degree/.",
        "tree_rules": [
            ":arg1~guess-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~she - \n\t :arg1/S~think-01 - \n\t :time/ADVP~late -)",
        "graph_rules": {
            "add-01": [
                ":arg0~she",
                ":arg1~think-01",
                ":time~late"
            ]
        },
        "head": "add-01",
        "name": ":root/ROOT~add-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' :arg0/NP XXX-VBD :quant/NP :time/ADVP .",
        "tree_rules": [
            ":time~late",
            ":arg1~think-01",
            ":arg0~she"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/S~go-05 -)",
        "graph_rules": {
            "and": [
                ":op1~go-05"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :op1/S - :arg1/VP .",
        "tree_rules": [
            ":op1~go-05"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/NP~flower - \n\t :arg1-of/ADVP~cause-01 -)",
        "graph_rules": {
            "tend-01": [
                ":arg0~he",
                ":arg1~flower",
                ":arg1-of~cause-01"
            ]
        },
        "head": "tend-01",
        "name": ":root/ROOT~tend-01",
        "noun_info": {},
        "tree": ":arg1-of/ADVP , :arg0/NP XXX-VBD :arg1/NP .",
        "tree_rules": [
            ":arg1~flower",
            ":arg1-of~cause-01",
            ":arg0~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~she - \n\t :arg1/S~torment-01 - \n\t :mod/ADVP~too - \n\t :arg1-of/RB~quick-02 -)",
        "graph_rules": {
            "begin-01": [
                ":arg0~she",
                ":arg1~torment-01",
                ":mod~too",
                ":arg1-of~quick-02"
            ]
        },
        "head": "begin-01",
        "name": ":root/ROOT~begin-01",
        "noun_info": {},
        "tree": "so , :mod/ADVP , :arg0/NP XXX-VBD :degree/RB :arg1-of/RB :arg1/S .",
        "tree_rules": [
            ":arg1-of~quick-02",
            ":arg1~torment-01",
            ":mod~too",
            ":arg0~she"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/S~tiger -)",
        "graph_rules": {
            "object-01": [
                ":arg0~prince",
                ":arg1~tiger"
            ]
        },
        "head": "object-01",
        "name": ":root/ROOT~object-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' :arg0/NP XXX-VBD .",
        "tree_rules": [
            ":arg1~tiger",
            ":arg0~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~eat-01 -)",
        "graph_rules": {
            "and": [
                ":op2~eat-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "'' XXX-CC , :mod/ADVP , :arg0/NP :op2/VP . ''",
        "tree_rules": [
            ":op2~eat-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~flower - \n\t :arg2/NP~weed - \n\t :manner/ADVP~sweet-03 -)",
        "graph_rules": {
            "reply-01": [
                ":arg0~flower",
                ":arg2~weed",
                ":manner~sweet-03"
            ]
        },
        "head": "reply-01",
        "name": ":root/ROOT~reply-01",
        "noun_info": {},
        "tree": "'' i am :polarity/RB :arg2/NP , '' :arg0/NP XXX-VBD , :manner/ADVP .",
        "tree_rules": [
            ":arg2~weed",
            ":manner~sweet-03",
            ":arg0~flower"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polite/VB~+ - \n\t :arg0/NP~you - \n\t :arg1/E~i -)",
        "graph_rules": {
            "excuse-01": [
                ":polite~+",
                ":arg0~you",
                ":arg1~i"
            ]
        },
        "head": "excuse-01",
        "name": ":root/ROOT~excuse-01",
        "noun_info": {},
        "tree": "'' :polite/VB XXX-NN :arg0/NP ... ''",
        "tree_rules": [
            ":arg0~you",
            ":polite~+",
            ":arg1~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~she - \n\t :arg1/CC~contrast-01 -)",
        "graph_rules": {
            "go-on-25": [
                ":arg0~she",
                ":arg1~contrast-01"
            ]
        },
        "head": "go-on-25",
        "name": ":root/ROOT~go-on-25",
        "noun_info": {},
        "tree": "'' i am :polarity/RB :degree/ADVP :arg1/ADJP , '' :arg0/NP XXX-VBD on , '' :arg1/CC :arg2/S .",
        "tree_rules": [
            ":arg1~contrast-01",
            ":arg0~she"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/LS~i - \n\t :arg1/SBAR~have-03 -)",
        "graph_rules": {
            "suppose-01": [
                ":arg0~i",
                ":arg1~have-03"
            ]
        },
        "head": "suppose-01",
        "name": ":root/ROOT~suppose-01",
        "noun_info": {},
        "tree": ":arg0/LS XXX-VB :arg1/SBAR ? ''",
        "tree_rules": [
            ":arg1~have-03",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VP~remark-01 - \n\t :op2/VP~add-01 -)",
        "graph_rules": {
            "and": [
                ":op1~remark-01",
                ":op2~add-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "'' :domain/NP :op1/VP , XXX-CC :op2/VP , '' :domain/NP :mod/VP ''",
        "tree_rules": [
            ":op1~remark-01",
            ":op2~add-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/FW~i - \n\t :arg1/S~put-01 -)",
        "graph_rules": {
            "want-01": [
                ":arg0~i",
                ":arg1~put-01"
            ]
        },
        "head": "want-01",
        "name": ":root/ROOT~want-01",
        "noun_info": {},
        "tree": "'' :time/PP :arg0/FW XXX-VBP :arg1/S .",
        "tree_rules": [
            ":arg1~put-01",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :degree/NP~very - \n\t :location/SBAR~live-01 -)",
        "graph_rules": {
            "cold-01": [
                ":degree~very",
                ":location~live-01"
            ]
        },
        "head": "cold-01",
        "name": ":root/ROOT~cold-01",
        "noun_info": {},
        "tree": ":degree/NP is :degree/RB XXX-JJ :location/SBAR .",
        "tree_rules": [
            ":degree~very",
            ":location~live-01",
            ":degree~very"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg3-of/VP~come-01 -)",
        "graph_rules": {
            "location": [
                ":arg3-of~come-01"
            ]
        },
        "head": "location",
        "name": ":root/ROOT~location",
        "noun_info": {},
        "tree": "in the XXX-NN :arg1/NP :arg3-of/VP - - ''",
        "tree_rules": [
            ":arg3-of~come-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP~interrupt-01 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~interrupt-01"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :arg2/VP .",
        "tree_rules": [
            ":arg2~interrupt-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~she - \n\t :time-of/PP~seed -)",
        "graph_rules": {
            "come-01": [
                ":arg1~she",
                ":time-of~seed"
            ]
        },
        "head": "come-01",
        "name": ":root/ROOT~come-01",
        "noun_info": {},
        "tree": ":arg1/NP had XXX-VBN :time-of/PP .",
        "tree_rules": [
            ":time-of~seed",
            ":arg1~she"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/RB~- - \n\t :arg1/VP~know-01 -)",
        "graph_rules": {
            "possible-01": [
                ":polarity~-",
                ":arg1~know-01"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT~possible-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-MD :polarity/RB :arg1/VP .",
        "tree_rules": [
            ":polarity~-",
            ":arg1~know-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~she - \n\t :purpose/SBAR~put-03 - \n\t :frequency/CC~or -)",
        "graph_rules": {
            "cough-01": [
                ":arg0~she",
                ":purpose~put-03",
                ":frequency~or"
            ]
        },
        "head": "cough-01",
        "name": ":root/ROOT~cough-01",
        "noun_info": {},
        "tree": ":arg1-of/S , :arg0/NP XXX-VBD :op1/CD :frequency/CC :op2/CD times , :purpose/SBAR .",
        "tree_rules": [
            ":frequency~or",
            ":frequency~or",
            ":purpose~put-03",
            ":arg0~she"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "screen",
        "name": ":root/ROOT~screen",
        "noun_info": {},
        "tree": "'' the XXX-NN ? ''",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/PP~it - \n\t :time/SBAR~speak-01 -)",
        "graph_rules": {
            "look-01": [
                ":arg0~i",
                ":arg1~it",
                ":time~speak-01"
            ]
        },
        "head": "look-01",
        "name": ":root/ROOT~look-01",
        "noun_info": {},
        "tree": "'' :arg0/NP was just going to XXX-VB :arg1/PP :time/SBAR ... ''",
        "tree_rules": [
            ":arg1~it",
            ":time~speak-01",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~she - \n\t :arg1/NP~cough-01 - \n\t :time/ADVP~then - \n\t :degree/MD~more - \n\t :purpose/ADVP~suffer-01 -)",
        "graph_rules": {
            "force-02": [
                ":arg0~she",
                ":arg1~cough-01",
                ":time~then",
                ":degree~more",
                ":purpose~suffer-01"
            ]
        },
        "head": "force-02",
        "name": ":root/ROOT~force-02",
        "noun_info": {},
        "tree": ":time/ADVP :arg0/NP XXX-VBD :arg1/NP :purpose/ADVP .",
        "tree_rules": [
            ":degree~more",
            ":degree~more",
            ":arg1~cough-01",
            ":purpose~suffer-01",
            ":time~then",
            ":arg0~she"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~prince - \n\t :arg2/S~doubt-01 - \n\t :time/ADVP~soon - \n\t :arg1-of/WHNP~cause-01 - \n\t :concession/NP~will -)",
        "graph_rules": {
            "come-04": [
                ":arg1~prince",
                ":arg2~doubt-01",
                ":time~soon",
                ":arg1-of~cause-01",
                ":concession~will"
            ]
        },
        "head": "come-04",
        "name": ":root/ROOT~come-04",
        "noun_info": {},
        "tree": "so :arg1/NP :arg1-of/VBD :time/ADVP XXX-VBN :arg2/S .",
        "tree_rules": [
            ":arg1-of~cause-01",
            ":concession~will",
            ":time~soon",
            ":concession~will",
            ":arg2~doubt-01",
            ":time~soon",
            ":arg1~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~he - \n\t :arg2/NP~word-01 - \n\t :arg0-of/S~make-02 -)",
        "graph_rules": {
            "serious-01": [
                ":arg1~he",
                ":arg2~word-01",
                ":arg0-of~make-02"
            ]
        },
        "head": "serious-01",
        "name": ":root/ROOT~serious-01",
        "noun_info": {},
        "tree": ":arg1/NP had taken XXX-RB :arg2/NP , and :arg0-of/S .",
        "tree_rules": [
            ":arg0-of~make-02",
            ":arg2~word-01",
            ":arg1~he",
            ":arg0-of~make-02"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/MD~recommend-01 - \n\t :arg2/PP~i - \n\t :time/NP-TMP~day -)",
        "graph_rules": {
            "confide-01": [
                ":arg0~he",
                ":arg1~recommend-01",
                ":arg2~i",
                ":time~day"
            ]
        },
        "head": "confide-01",
        "name": ":root/ROOT~confide-01",
        "noun_info": {},
        "tree": "'' i :arg1/MD :arg1/S , '' :arg0/NP XXX-VBD :arg2/PP :time/NP-TMP . ''",
        "tree_rules": [
            ":arg1~recommend-01",
            ":arg2~i",
            ":time~day",
            ":arg0~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/S~listen-01 -)",
        "graph_rules": {
            "recommend-01": [
                ":arg1~listen-01"
            ]
        },
        "head": "recommend-01",
        "name": ":root/ROOT~recommend-01",
        "noun_info": {},
        "tree": ":arg0/NP :time/ADVP XXX-MD :arg1/S .",
        "tree_rules": [
            ":arg1~listen-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/CC~and -)",
        "graph_rules": {
            "recommend-01": [
                ":arg1~and"
            ]
        },
        "head": "recommend-01",
        "name": ":root/ROOT~recommend-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-MD :manner/ADVP :op2/VP .",
        "tree_rules": [
            ":arg1~and"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~thing - \n\t :arg1/NP~planet -)",
        "graph_rules": {
            "perfume-01": [
                ":arg0~thing",
                ":arg1~planet"
            ]
        },
        "head": "perfume-01",
        "name": ":root/ROOT~perfume-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-JJ :mod/NP :arg1/NP .",
        "tree_rules": [
            ":arg1~planet",
            ":arg0~thing"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP~know-01 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~know-01"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :arg2/VP .",
        "tree_rules": [
            ":arg2~know-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/VP~fill-01 -)",
        "graph_rules": {
            "recommend-01": [
                ":arg1~fill-01"
            ]
        },
        "head": "recommend-01",
        "name": ":root/ROOT~recommend-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-MD :mod/ADVP :arg1/VP . ''",
        "tree_rules": [
            ":arg1~fill-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VP~continue-02 -)",
        "graph_rules": {
            "and": [
                ":op1~continue-02"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :op1/VP : '' :arg1/S !",
        "tree_rules": [
            ":op1~continue-02"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/CC~and -)",
        "graph_rules": {
            "recommend-01": [
                ":arg1~and"
            ]
        },
        "head": "recommend-01",
        "name": ":root/ROOT~recommend-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-MD :op1/S .",
        "tree_rules": [
            ":arg1~and"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~she - \n\t :arg1/CC~and - \n\t :arg2/NP~i -)",
        "graph_rules": {
            "cast-01": [
                ":arg0~she",
                ":arg1~and",
                ":arg2~i"
            ]
        },
        "head": "cast-01",
        "name": ":root/ROOT~cast-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD :arg1-of/NP :op2/IN :arg2/NP .",
        "tree_rules": [
            ":arg1~and",
            ":arg2~i",
            ":arg0~she"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/S~run-02 -)",
        "graph_rules": {
            "recommend-01": [
                ":arg1~run-02"
            ]
        },
        "head": "recommend-01",
        "name": ":root/ROOT~recommend-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-MD :arg1/S ...",
        "tree_rules": [
            ":arg1~run-02"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/S~guess-01 -)",
        "graph_rules": {
            "recommend-01": [
                ":arg1~guess-01"
            ]
        },
        "head": "recommend-01",
        "name": ":root/ROOT~recommend-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-MD :arg1/S .",
        "tree_rules": [
            ":arg1~guess-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/.~- - \n\t :arg1/NP~flower - \n\t :degree/RB~so -)",
        "graph_rules": {
            "consistent-01": [
                ":polarity~-",
                ":arg1~flower",
                ":degree~so"
            ]
        },
        "head": "consistent-01",
        "name": ":root/ROOT~consistent-01",
        "noun_info": {},
        "tree": ":arg1/NP are :degree/RB XXX-JJ :polarity/.",
        "tree_rules": [
            ":degree~so",
            ":arg1~flower",
            ":polarity~-"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP~young -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~young"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "XXX-CC :domain/NP :arg2/VP ''",
        "tree_rules": [
            ":arg2~young"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/NP~9 -)",
        "graph_rules": {
            "chapter": [
                ":mod~9"
            ]
        },
        "head": "chapter",
        "name": ":root/ROOT~chapter",
        "noun_info": {},
        "tree": "XXX-NN :mod/NP .",
        "tree_rules": [
            ":mod~9"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/SBAR~take-01 -)",
        "graph_rules": {
            "believe-01": [
                ":arg0~i",
                ":arg1~take-01"
            ]
        },
        "head": "believe-01",
        "name": ":root/ROOT~believe-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBP :arg1/SBAR .",
        "tree_rules": [
            ":arg1~take-01",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/NP~planet - \n\t :arg1-of/JJ~perfect-02 - \n\t :time/PP~date-entity -)",
        "graph_rules": {
            "order-03": [
                ":arg0~he",
                ":arg1~planet",
                ":arg1-of~perfect-02",
                ":time~date-entity"
            ]
        },
        "head": "order-03",
        "name": ":root/ROOT~order-03",
        "noun_info": {},
        "tree": ":time/PP :arg0/NP put :arg1/NP :time/IN :arg1-of/JJ XXX-NN .",
        "tree_rules": [
            ":arg1-of~perfect-02",
            ":time~date-entity",
            ":arg1~planet",
            ":time~date-entity",
            ":arg0~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/NP~volcano - \n\t :manner/ADVP~careful -)",
        "graph_rules": {
            "clean-out-03": [
                ":arg0~he",
                ":arg1~volcano",
                ":manner~careful"
            ]
        },
        "head": "clean-out-03",
        "name": ":root/ROOT~clean-out-03",
        "noun_info": {},
        "tree": ":arg0/NP :manner/ADVP XXX-VBD out :arg1/NP .",
        "tree_rules": [
            ":arg1~volcano",
            ":arg0~he",
            ":manner~careful"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/S~possess-01 - \n\t :op2/S~convenient -)",
        "graph_rules": {
            "and": [
                ":op1~possess-01",
                ":op2~convenient"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": ":op1/S ; XXX-CC :op2/S .",
        "tree_rules": [
            ":op1~possess-01",
            ":op2~convenient"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/NP~volcano - \n\t :mod/ADVP~also -)",
        "graph_rules": {
            "have-03": [
                ":arg0~he",
                ":arg1~volcano",
                ":mod~also"
            ]
        },
        "head": "have-03",
        "name": ":root/ROOT~have-03",
        "noun_info": {},
        "tree": ":arg0/NP :mod/ADVP XXX-VBD :arg1/NP .",
        "tree_rules": [
            ":arg1~volcano",
            ":arg0~he",
            ":mod~also"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/SBAR~say-01 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~say-01"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "XXX-CC , :arg2/SBAR , '' :arg0/NP :polarity/ADVP :arg1/VP ! ''",
        "tree_rules": [
            ":arg2~say-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/NP~volcano - \n\t :mod/ADVP~too -)",
        "graph_rules": {
            "clean-out-03": [
                ":arg0~he",
                ":arg1~volcano",
                ":mod~too"
            ]
        },
        "head": "clean-out-03",
        "name": ":root/ROOT~clean-out-03",
        "noun_info": {},
        "tree": "so :arg0/NP XXX-VBD out :arg1/NP , :mod/ADVP .",
        "tree_rules": [
            ":arg1~volcano",
            ":mod~too",
            ":arg0~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~volcano - \n\t :condition/SBAR~clean-out-03 - \n\t :manner/ADVP~steady - \n\t :arg1-of/ADVP~slow-05 -)",
        "graph_rules": {
            "burn-01": [
                ":arg1~volcano",
                ":condition~clean-out-03",
                ":manner~steady",
                ":arg1-of~slow-05"
            ]
        },
        "head": "burn-01",
        "name": ":root/ROOT~burn-01",
        "noun_info": {},
        "tree": ":condition/SBAR , :arg1/NP XXX-VBP :arg1-of/ADVP and :manner/ADVP , :manner/IN :arg1-of/NP .",
        "tree_rules": [
            ":arg1-of~slow-05",
            ":arg1~volcano",
            ":manner~steady",
            ":condition~clean-out-03",
            ":manner~steady"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/JJ~volcano - \n\t :arg1-of/IN~resemble-01 -)",
        "graph_rules": {
            "erupt-01": [
                ":arg1~volcano",
                ":arg1-of~resemble-01"
            ]
        },
        "head": "erupt-01",
        "name": ":root/ROOT~erupt-01",
        "noun_info": {},
        "tree": ":arg1/JJ XXX-NNS are :arg1-of/IN :arg2/NP .",
        "tree_rules": [
            ":arg1~volcano",
            ":arg1-of~resemble-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :degree/RB~too - \n\t :compared-to/S~clean-out-03 - \n\t :domain/NP~we - \n\t :location/PP~earth - \n\t :arg1-of/ADVP~obvious-01 -)",
        "graph_rules": {
            "small": [
                ":degree~too",
                ":compared-to~clean-out-03",
                ":domain~we",
                ":location~earth",
                ":arg1-of~obvious-01"
            ]
        },
        "head": "small",
        "name": ":root/ROOT~small",
        "noun_info": {},
        "tree": ":location/PP :domain/NP are :arg1-of/ADVP :degree/RB :degree/RB XXX-JJ :compared-to/S .",
        "tree_rules": [
            ":degree~too",
            ":compared-to~clean-out-03",
            ":arg1-of~obvious-01",
            ":location~earth",
            ":domain~we"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~that - \n\t :arg1/PP~trouble-01 -)",
        "graph_rules": {
            "cause-01": [
                ":arg0~that",
                ":arg1~trouble-01"
            ]
        },
        "head": "cause-01",
        "name": ":root/ROOT~cause-01",
        "noun_info": {},
        "tree": ":arg0/NP is XXX-WRB :arg0/S .",
        "tree_rules": [
            ":arg1~trouble-01",
            ":arg0~that"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/PP~shoot - \n\t :mod/ADVP~also - \n\t :direction/PRT~up -)",
        "graph_rules": {
            "pull-01": [
                ":arg0~prince",
                ":arg1~shoot",
                ":mod~also",
                ":direction~up"
            ]
        },
        "head": "pull-01",
        "name": ":root/ROOT~pull-01",
        "noun_info": {},
        "tree": ":arg0/NP :mod/ADVP XXX-VBD :direction/PRT , :ord/IN :arg0-of/NP .",
        "tree_rules": [
            ":arg1~shoot",
            ":direction~up",
            ":arg0~prince",
            ":mod~also"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/SBAR~want-01 -)",
        "graph_rules": {
            "believe-01": [
                ":arg0~he",
                ":arg1~want-01"
            ]
        },
        "head": "believe-01",
        "name": ":root/ROOT~believe-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD :arg1/SBAR .",
        "tree_rules": [
            ":arg1~want-01",
            ":arg0~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP~seem-01 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~seem-01"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "XXX-CC :time/PP :domain/NP :arg2/VP .",
        "tree_rules": [
            ":arg2~seem-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/SBAR~close-10 - \n\t :time/CC~and -)",
        "graph_rules": {
            "realize-01": [
                ":arg0~he",
                ":arg1~close-10",
                ":time~and"
            ]
        },
        "head": "realize-01",
        "name": ":root/ROOT~realize-01",
        "noun_info": {},
        "tree": ":time/CC :ord/WHADVP :op2/S , :arg0/NP XXX-VBD :arg1/SBAR .",
        "tree_rules": [
            ":arg1~close-10",
            ":time~and",
            ":arg0~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/ADVP~goodbye - \n\t :arg2/PP~flower -)",
        "graph_rules": {
            "say-01": [
                ":arg0~he",
                ":arg1~goodbye",
                ":arg2~flower"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/ADVP , '' :arg0/NP XXX-VBD :arg2/PP .",
        "tree_rules": [
            ":arg2~flower",
            ":arg1~goodbye",
            ":arg0~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/NP~answer-01 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~answer-01"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :polarity/VP .",
        "tree_rules": [
            ":arg2~answer-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/ADVP~goodbye - \n\t :mod/ADVP~again -)",
        "graph_rules": {
            "say-01": [
                ":arg0~he",
                ":arg1~goodbye",
                ":mod~again"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/ADVP , '' :arg0/NP XXX-VBD :mod/ADVP .",
        "tree_rules": [
            ":mod~again",
            ":arg1~goodbye",
            ":arg0~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~flower -)",
        "graph_rules": {
            "cough-01": [
                ":arg0~flower"
            ]
        },
        "head": "cough-01",
        "name": ":root/ROOT~cough-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD .",
        "tree_rules": [
            ":arg0~flower"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/IN~cause-01 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~cause-01"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "XXX-CC :arg1/NP was :polarity/RB :arg2/IN :arg0/S .",
        "tree_rules": [
            ":arg2~cause-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~she - \n\t :arg1/S~silly - \n\t :arg2/PP~he - \n\t :time/PP~at-last -)",
        "graph_rules": {
            "say-01": [
                ":arg0~she",
                ":arg1~silly",
                ":arg2~he",
                ":time~at-last"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' :arg0/NP XXX-VBD :arg2/PP , :time/PP .",
        "tree_rules": [
            ":arg2~he",
            ":time~at-last",
            ":arg1~silly",
            ":arg0~she"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/NP~forgive-01 - \n\t :arg2/PRP$~you -)",
        "graph_rules": {
            "ask-02": [
                ":arg0~i",
                ":arg1~forgive-01",
                ":arg2~you"
            ]
        },
        "head": "ask-02",
        "name": ":root/ROOT~ask-02",
        "noun_info": {},
        "tree": "'' :arg0/NP XXX-VB :arg1/NP .",
        "tree_rules": [
            ":arg2~you",
            ":arg1~forgive-01",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/E~you - \n\t :arg1/S~happy-01 -)",
        "graph_rules": {
            "try-01": [
                ":arg0~you",
                ":arg1~happy-01"
            ]
        },
        "head": "try-01",
        "name": ":root/ROOT~try-01",
        "noun_info": {},
        "tree": "XXX-VB :arg1/S",
        "tree_rules": [
            ":arg1~happy-01",
            ":arg0~you"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/PP~absent-01 - \n\t :arg1/NP~he -)",
        "graph_rules": {
            "surprise-01": [
                ":arg0~absent-01",
                ":arg1~he"
            ]
        },
        "head": "surprise-01",
        "name": ":root/ROOT~surprise-01",
        "noun_info": {},
        "tree": ":arg1/NP was XXX-VBN :arg0/PP .",
        "tree_rules": [
            ":arg0~absent-01",
            ":arg1~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~he - \n\t :arg2/NP~there -)",
        "graph_rules": {
            "stand-01": [
                ":arg1~he",
                ":arg2~there"
            ]
        },
        "head": "stand-01",
        "name": ":root/ROOT~stand-01",
        "noun_info": {},
        "tree": ":arg1/NP XXX-VBD :arg2/NP :arg1-of/ADJP , :arg1/NP :arg1-of/VP .",
        "tree_rules": [
            ":arg2~there",
            ":arg1~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/RB~- - \n\t :arg0/NP~he - \n\t :arg1/NP~sweet-05 -)",
        "graph_rules": {
            "understand-01": [
                ":polarity~-",
                ":arg0~he",
                ":arg1~sweet-05"
            ]
        },
        "head": "understand-01",
        "name": ":root/ROOT~understand-01",
        "noun_info": {},
        "tree": ":arg0/NP :polarity/VBD :polarity/RB XXX-VB :arg1/NP .",
        "tree_rules": [
            ":arg1~sweet-05",
            ":polarity~-",
            ":polarity~-",
            ":arg0~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~flower-01 - \n\t :arg1/S~love-01 - \n\t :arg2/PP~he -)",
        "graph_rules": {
            "say-01": [
                ":arg0~flower-01",
                ":arg1~love-01",
                ":arg2~he"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' :arg0/NP XXX-VBD :arg2/PP .",
        "tree_rules": [
            ":arg2~he",
            ":arg1~love-01",
            ":arg0~flower-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/PRP$~i - \n\t :arg2/SBAR~know-01 -)",
        "graph_rules": {
            "fault-01": [
                ":arg1~i",
                ":arg2~know-01"
            ]
        },
        "head": "fault-01",
        "name": ":root/ROOT~fault-01",
        "noun_info": {},
        "tree": "'' it is :arg1/PRP$ XXX-NN :arg2/SBAR .",
        "tree_rules": [
            ":arg1~i",
            ":arg2~know-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/DT~- - \n\t :domain/NP~that -)",
        "graph_rules": {
            "important": [
                ":polarity~-",
                ":domain~that"
            ]
        },
        "head": "important",
        "name": ":root/ROOT~important",
        "noun_info": {},
        "tree": ":domain/NP is of :polarity/DT XXX-NN .",
        "tree_rules": [
            ":polarity~-",
            ":domain~that"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/ADJP~foolish -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~foolish"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "XXX-CC :compared-to/NP",
        "tree_rules": [
            ":arg2~foolish"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VB~try-01 - \n\t :op2/E~leave-14 -)",
        "graph_rules": {
            "and": [
                ":op1~try-01",
                ":op2~leave-14"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": ":op1/VB XXX-TO be :arg1/ADJP ... :domain/S .",
        "tree_rules": [
            ":op1~try-01",
            ":op2~leave-14"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/NP~it - \n\t :polarity/RB~- - \n\t :time/ADVP~anymore -)",
        "graph_rules": {
            "want-01": [
                ":arg0~i",
                ":arg1~it",
                ":polarity~-",
                ":time~anymore"
            ]
        },
        "head": "want-01",
        "name": ":root/ROOT~want-01",
        "noun_info": {},
        "tree": ":arg0/NP :polarity/VBP :polarity/RB XXX-VB :arg1/NP :time/ADVP . ''",
        "tree_rules": [
            ":arg1~it",
            ":time~anymore",
            ":polarity~-",
            ":polarity~-",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/NP~wind -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~wind"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "'' XXX-CC :arg2/NP ''",
        "tree_rules": [
            ":arg2~wind"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/ADJP~bad-05 - \n\t :op2/S~good-04 -)",
        "graph_rules": {
            "and": [
                ":op1~bad-05",
                ":op2~good-04"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "'' :arg1/S ... :op2/S .",
        "tree_rules": [
            ":op1~bad-05",
            ":op2~good-04"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :domain/NP~i -)",
        "graph_rules": {
            "flower": [
                ":domain~i"
            ]
        },
        "head": "flower",
        "name": ":root/ROOT~flower",
        "noun_info": {},
        "tree": ":domain/NP am :domain/DT XXX-NN . ''",
        "tree_rules": [
            ":domain~i",
            ":domain~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/NP~animal -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~animal"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "'' XXX-CC :arg2/NP ''",
        "tree_rules": [
            ":arg2~animal"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/MD~obligate-01 -)",
        "graph_rules": {
            "have-concession-91": [
                ":arg2~obligate-01"
            ]
        },
        "head": "have-concession-91",
        "name": ":root/ROOT~have-concession-91",
        "noun_info": {},
        "tree": "'' XXX-RB , :arg1/NP :arg2/VP .",
        "tree_rules": [
            ":arg2~obligate-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/SBAR~beautiful-02 -)",
        "graph_rules": {
            "seem-01": [
                ":arg1~beautiful-02"
            ]
        },
        "head": "seem-01",
        "name": ":root/ROOT~seem-01",
        "noun_info": {},
        "tree": "it XXX-VBZ :arg1/SBAR .",
        "tree_rules": [
            ":arg1~beautiful-02"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/.~amr-unknown - \n\t :arg1/NP~i - \n\t :condition/IN~call-on-05 -)",
        "graph_rules": {
            "call-on-05": [
                ":arg0~amr-unknown",
                ":arg1~i",
                ":condition~call-on-05"
            ]
        },
        "head": "call-on-05",
        "name": ":root/ROOT~call-on-05",
        "noun_info": {},
        "tree": "and :condition/IN :op2/NP - who will :condition/VB XXX-IN :arg1/NP :arg0/.",
        "tree_rules": [
            ":arg1~i",
            ":condition~call-on-05",
            ":condition~call-on-05",
            ":arg0~amr-unknown"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/RB~away - \n\t :op2/ADJP~fear-01 -)",
        "graph_rules": {
            "and": [
                ":op1~away",
                ":op2~fear-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": ":location-of/S - :arg0/S .",
        "tree_rules": [
            ":op1~away",
            ":op2~fear-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/LS~i - \n\t :arg1/NP~claw -)",
        "graph_rules": {
            "have-03": [
                ":arg0~i",
                ":arg1~claw"
            ]
        },
        "head": "have-03",
        "name": ":root/ROOT~have-03",
        "noun_info": {},
        "tree": ":arg0/LS XXX-VB :arg1/NP . ''",
        "tree_rules": [
            ":arg1~claw",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~she - \n\t :arg1/NP~thorn - \n\t :manner/ADVP~naive -)",
        "graph_rules": {
            "show-01": [
                ":arg0~she",
                ":arg1~thorn",
                ":manner~naive"
            ]
        },
        "head": "show-01",
        "name": ":root/ROOT~show-01",
        "noun_info": {},
        "tree": "and , :manner/ADVP , :arg0/NP XXX-VBD :arg1/NP .",
        "tree_rules": [
            ":arg1~thorn",
            ":manner~naive",
            ":arg0~she"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~she - \n\t :arg1/PRN~linger-01 - \n\t :time/ADVP~then -)",
        "graph_rules": {
            "add-01": [
                ":arg0~she",
                ":arg1~linger-01",
                ":time~then"
            ]
        },
        "head": "add-01",
        "name": ":root/ROOT~add-01",
        "noun_info": {},
        "tree": ":time/ADVP :arg0/NP XXX-VBD : '' :arg1/PRN .",
        "tree_rules": [
            ":time~then",
            ":arg0~she",
            ":arg1~linger-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~you - \n\t :arg1/S~go-02 -)",
        "graph_rules": {
            "decide-01": [
                ":arg0~you",
                ":arg1~go-02"
            ]
        },
        "head": "decide-01",
        "name": ":root/ROOT~decide-01",
        "noun_info": {},
        "tree": ":arg0/NP have XXX-VBN :arg1/S .",
        "tree_rules": [
            ":arg1~go-02",
            ":arg0~you"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/S~you - \n\t :time/NP~now -)",
        "graph_rules": {
            "go-02": [
                ":arg0~you",
                ":time~now"
            ]
        },
        "head": "go-02",
        "name": ":root/ROOT~go-02",
        "noun_info": {},
        "tree": ":time/NP :arg0/S ! ''",
        "tree_rules": [
            ":time~now",
            ":arg0~you"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/RB~- - \n\t :arg0/NP~she - \n\t :arg1/S~see-01 -)",
        "graph_rules": {
            "want-01": [
                ":polarity~-",
                ":arg0~she",
                ":arg1~see-01"
            ]
        },
        "head": "want-01",
        "name": ":root/ROOT~want-01",
        "noun_info": {},
        "tree": "for :arg0/NP :polarity/VBD :polarity/RB XXX-VB :arg1/S .",
        "tree_rules": [
            ":arg1~see-01",
            ":polarity~-",
            ":polarity~-",
            ":arg0~she"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NN~flower - \n\t :degree/JJ~such -)",
        "graph_rules": {
            "pride-01": [
                ":arg0~flower",
                ":degree~such"
            ]
        },
        "head": "pride-01",
        "name": ":root/ROOT~pride-01",
        "noun_info": {},
        "tree": ":domain/NP was :degree/JJ a XXX-JJ :arg0/NN ...",
        "tree_rules": [
            ":arg0~flower",
            ":degree~such"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/NP~10 -)",
        "graph_rules": {
            "chapter": [
                ":mod~10"
            ]
        },
        "head": "chapter",
        "name": ":root/ROOT~chapter",
        "noun_info": {},
        "tree": "XXX-NN :mod/NP .",
        "tree_rules": [
            ":mod~10"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/S~be-located-at-91 -)",
        "graph_rules": {
            "find-out-03": [
                ":arg0~he",
                ":arg1~be-located-at-91"
            ]
        },
        "head": "find-out-03",
        "name": ":root/ROOT~find-out-03",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD :arg1/S .",
        "tree_rules": [
            ":arg1~be-located-at-91",
            ":arg0~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg2/PP~visit-01 - \n\t :mod/ADVP~therefore - \n\t :purpose/SBAR~add-02 -)",
        "graph_rules": {
            "begin-01": [
                ":arg0~he",
                ":arg2~visit-01",
                ":mod~therefore",
                ":purpose~add-02"
            ]
        },
        "head": "begin-01",
        "name": ":root/ROOT~begin-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD , :mod/ADVP , :arg2/PP , :purpose/SBAR .",
        "tree_rules": [
            ":mod~therefore",
            ":arg2~visit-01",
            ":purpose~add-02",
            ":arg0~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/PP~king - \n\t :arg1/E~thing -)",
        "graph_rules": {
            "inhabit-01": [
                ":arg0~king",
                ":arg1~thing"
            ]
        },
        "head": "inhabit-01",
        "name": ":root/ROOT~inhabit-01",
        "noun_info": {},
        "tree": ":ord/NP was XXX-VBN :arg0/PP .",
        "tree_rules": [
            ":arg0~king",
            ":arg1~thing"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~he - \n\t :arg2/PP~throne -)",
        "graph_rules": {
            "seat-01": [
                ":arg1~he",
                ":arg2~throne"
            ]
        },
        "head": "seat-01",
        "name": ":root/ROOT~seat-01",
        "noun_info": {},
        "tree": ":arg1-of/S , :arg1/NP was XXX-VBN :arg2/PP .",
        "tree_rules": [
            ":arg2~throne",
            ":arg1~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "ah",
        "name": ":root/ROOT~ah",
        "noun_info": {},
        "tree": "'' XXX-RB !",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~king - \n\t :arg1/NP~here - \n\t :time/SBAR~see-01 -)",
        "graph_rules": {
            "exclaim-01": [
                ":arg0~king",
                ":arg1~here",
                ":time~see-01"
            ]
        },
        "head": "exclaim-01",
        "name": ":root/ROOT~exclaim-01",
        "noun_info": {},
        "tree": ":location-of/S , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~here",
            ":time~see-01",
            ":arg0~king"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/MD~possible-01 - \n\t :arg2/E~coref -)",
        "graph_rules": {
            "ask-01": [
                ":arg0~prince",
                ":arg1~possible-01",
                ":arg2~coref"
            ]
        },
        "head": "ask-01",
        "name": ":root/ROOT~ask-01",
        "noun_info": {},
        "tree": "and :arg0/NP XXX-VBD himself : '' :manner/ADVP :arg1/MD :arg0/NP :arg1/S :condition/NP :manner/. ''",
        "tree_rules": [
            ":arg0~prince",
            ":arg1~possible-01",
            ":arg2~coref"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/SBAR~simplify-01 - \n\t :polarity/RB~- -)",
        "graph_rules": {
            "know-01": [
                ":arg0~he",
                ":arg1~simplify-01",
                ":polarity~-"
            ]
        },
        "head": "know-01",
        "name": ":root/ROOT~know-01",
        "noun_info": {},
        "tree": ":arg0/NP :polarity/VBD :polarity/RB XXX-VB :arg1/SBAR .",
        "tree_rules": [
            ":arg1~simplify-01",
            ":polarity~-",
            ":polarity~-",
            ":arg0~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~they - \n\t :arg1/VP~subject -)",
        "graph_rules": {
            "opine-01": [
                ":arg0~they",
                ":arg1~subject"
            ]
        },
        "head": "opine-01",
        "name": ":root/ROOT~opine-01",
        "noun_info": {},
        "tree": "XXX-TO :arg0/NP , :domain/NP :arg1/VP .",
        "tree_rules": [
            ":arg0~they",
            ":arg1~subject"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~king - \n\t :arg1/NP~approach-01 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~king",
                ":arg1~approach-01"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :purpose/S , '' XXX-VBD :arg0/NP a king :arg2/IN :arg1/NP .",
        "tree_rules": [
            ":arg1~approach-01",
            ":arg0~king"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VBN~cram-01 - \n\t :op2/VBN~obstruct-01 - \n\t :concession/CC~look-01 -)",
        "graph_rules": {
            "and": [
                ":op1~cram-01",
                ":op2~obstruct-01",
                ":concession~look-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": ":concession/S ; :concession/CC :arg2/NP was :op1/VBN XXX-CC :op2/VBN :extent/IN :arg1/NP .",
        "tree_rules": [
            ":op1~cram-01",
            ":op2~obstruct-01",
            ":concession~look-01",
            ":concession~look-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/S~remain-01 - \n\t :op2/S~yawn-01 -)",
        "graph_rules": {
            "and": [
                ":op1~remain-01",
                ":op2~yawn-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": ":op1/S , XXX-CC :op2/S .",
        "tree_rules": [
            ":op1~remain-01",
            ":op2~yawn-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~monarch - \n\t :arg1/ADJP~contrary-01 - \n\t :arg2/PP~he -)",
        "graph_rules": {
            "say-01": [
                ":arg0~monarch",
                ":arg1~contrary-01",
                ":arg2~he"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' it is :arg1/ADJP :arg1/S , '' :arg0/NP XXX-VBD :arg2/PP .",
        "tree_rules": [
            ":arg1~contrary-01",
            ":arg2~he",
            ":arg0~monarch"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/S~do-02 - \n\t :arg2/NP~you -)",
        "graph_rules": {
            "forbid-01": [
                ":arg0~i",
                ":arg1~do-02",
                ":arg2~you"
            ]
        },
        "head": "forbid-01",
        "name": ":root/ROOT~forbid-01",
        "noun_info": {},
        "tree": "'' :arg0/NP XXX-FW :arg1/S . ''",
        "tree_rules": [
            ":arg2~you",
            ":arg1~do-02",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/RB~- - \n\t :arg1/VP~help-02 -)",
        "graph_rules": {
            "possible-01": [
                ":polarity~-",
                ":arg1~help-02"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT~possible-01",
        "noun_info": {},
        "tree": "'' :arg0/NP XXX-MD :polarity/RB :arg1/VP .",
        "tree_rules": [
            ":polarity~-",
            ":arg1~help-02"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg2/MD~possible-01 - \n\t :manner/ADJP~embarrass-01 -)",
        "graph_rules": {
            "reply-01": [
                ":arg0~prince",
                ":arg2~possible-01",
                ":manner~embarrass-01"
            ]
        },
        "head": "reply-01",
        "name": ":root/ROOT~reply-01",
        "noun_info": {},
        "tree": ":arg1/S , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg2~possible-01",
            ":manner~embarrass-01",
            ":arg0~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/S~come-01 - \n\t :op2/S~sleep-01 -)",
        "graph_rules": {
            "and": [
                ":op1~come-01",
                ":op2~sleep-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": ":op1/S , XXX-CC :op2/S ... ''",
        "tree_rules": [
            ":op1~come-01",
            ":op2~sleep-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~king - \n\t :arg1/ADVP~ah -)",
        "graph_rules": {
            "say-01": [
                ":arg0~king",
                ":arg1~ah"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/ADVP , :mod/ADVP , '' :arg0/NP XXX-VBD .",
        "tree_rules": [
            ":arg1~ah",
            ":arg0~king"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/NP~you - \n\t :arg2/PP~yawn-01 -)",
        "graph_rules": {
            "order-01": [
                ":arg0~i",
                ":arg1~you",
                ":arg2~yawn-01"
            ]
        },
        "head": "order-01",
        "name": ":root/ROOT~order-01",
        "noun_info": {},
        "tree": "'' :arg0/NP XXX-NN :arg1/NP :arg2/PP .",
        "tree_rules": [
            ":arg1~you",
            ":arg2~yawn-01",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/VP~year - \n\t :time/IN~since -)",
        "graph_rules": {
            "pass-03": [
                ":arg1~year",
                ":time~since"
            ]
        },
        "head": "pass-03",
        "name": ":root/ROOT~pass-03",
        "noun_info": {},
        "tree": "XXX-PRP :arg1/VP .",
        "tree_rules": [
            ":time~since",
            ":arg1~year"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~yawn-01 - \n\t :arg1/PP~i -)",
        "graph_rules": {
            "curious-01": [
                ":arg0~yawn-01",
                ":arg1~i"
            ]
        },
        "head": "curious-01",
        "name": ":root/ROOT~curious-01",
        "noun_info": {},
        "tree": ":arg0/NP are objects of XXX-NN .",
        "tree_rules": [
            ":arg1~i",
            ":arg0~yawn-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/E~you - \n\t :time/NP~now -)",
        "graph_rules": {
            "come-01": [
                ":arg1~you",
                ":time~now"
            ]
        },
        "head": "come-01",
        "name": ":root/ROOT~come-01",
        "noun_info": {},
        "tree": "XXX-VBN , :time/NP !",
        "tree_rules": [
            ":time~now",
            ":arg1~you"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/E~you - \n\t :mod/ADVP~again -)",
        "graph_rules": {
            "yawn-01": [
                ":arg0~you",
                ":mod~again"
            ]
        },
        "head": "yawn-01",
        "name": ":root/ROOT~yawn-01",
        "noun_info": {},
        "tree": "XXX-NN :mod/ADVP !",
        "tree_rules": [
            ":mod~again",
            ":arg0~you"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/NP~it -)",
        "graph_rules": {
            "order-01": [
                ":arg2~it"
            ]
        },
        "head": "order-01",
        "name": ":root/ROOT~order-01",
        "noun_info": {},
        "tree": ":arg2/NP is an XXX-NN . ''",
        "tree_rules": [
            ":arg2~it"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/ADVP~that - \n\t :arg1/NP~i -)",
        "graph_rules": {
            "frighten-01": [
                ":arg0~that",
                ":arg1~i"
            ]
        },
        "head": "frighten-01",
        "name": ":root/ROOT~frighten-01",
        "noun_info": {},
        "tree": ":arg0/ADVP XXX-VBZ :arg1/NP ...",
        "tree_rules": [
            ":arg0~that",
            ":arg1~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/MD~possible-01 -)",
        "graph_rules": {
            "murmur-01": [
                ":arg0~prince",
                ":arg1~possible-01"
            ]
        },
        "head": "murmur-01",
        "name": ":root/ROOT~murmur-01",
        "noun_info": {},
        "tree": ":time/S ... '' XXX-VBD :arg0/NP , :time/NP :arg1-of/ADJP .",
        "tree_rules": [
            ":arg1~possible-01",
            ":arg0~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "hum",
        "name": ":root/ROOT~hum",
        "noun_info": {},
        "tree": "'' XXX-NN !",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/VP~you - \n\t :arg2/CC~and - \n\t :mod/NP~then -)",
        "graph_rules": {
            "order-01": [
                ":arg0~i",
                ":arg1~you",
                ":arg2~and",
                ":mod~then"
            ]
        },
        "head": "order-01",
        "name": ":root/ROOT~order-01",
        "noun_info": {},
        "tree": "'' :mod/NP :op2/LS - - :arg0/NP XXX-NN :frequency/VP - - ''",
        "tree_rules": [
            ":arg1~you",
            ":arg2~and",
            ":arg0~i",
            ":mod~then"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VP~sputter-01 - \n\t :op2/VBD~seem-01 -)",
        "graph_rules": {
            "and": [
                ":op1~sputter-01",
                ":op2~seem-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": ":arg0/NP :op1/VP , XXX-CC :arg1/VP .",
        "tree_rules": [
            ":op2~seem-01",
            ":op1~sputter-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~king - \n\t :arg1/SBAR~respect-01 - \n\t :mod/ADVP~fundamental -)",
        "graph_rules": {
            "insist-01": [
                ":arg0~king",
                ":arg1~respect-01",
                ":mod~fundamental"
            ]
        },
        "head": "insist-01",
        "name": ":root/ROOT~insist-01",
        "noun_info": {},
        "tree": "for what :arg0/NP :mod/ADVP XXX-VBD upon was :arg1/SBAR .",
        "tree_rules": [
            ":arg0~king",
            ":mod~fundamental",
            ":arg1~respect-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/NP~disobey-01 - \n\t :polarity/DT~- -)",
        "graph_rules": {
            "tolerate-01": [
                ":arg0~he",
                ":arg1~disobey-01",
                ":polarity~-"
            ]
        },
        "head": "tolerate-01",
        "name": ":root/ROOT~tolerate-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD :arg1/NP .",
        "tree_rules": [
            ":polarity~-",
            ":arg1~disobey-01",
            ":arg0~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/JJ~absolute - \n\t :domain/NP~he -)",
        "graph_rules": {
            "monarch": [
                ":mod~absolute",
                ":domain~he"
            ]
        },
        "head": "monarch",
        "name": ":root/ROOT~monarch",
        "noun_info": {},
        "tree": ":domain/NP was an :mod/JJ XXX-NN .",
        "tree_rules": [
            ":mod~absolute",
            ":domain~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/VP~make-02 -)",
        "graph_rules": {
            "have-concession-91": [
                ":arg1~make-02"
            ]
        },
        "head": "have-concession-91",
        "name": ":root/ROOT~have-concession-91",
        "noun_info": {},
        "tree": "XXX-CC , :arg1-of/IN :arg0/S , :arg0/NP :arg1/VP .",
        "tree_rules": [
            ":arg1~make-02"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/SBAR~order-01 - \n\t :arg0-of/PP~exemplify-01 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~he",
                ":arg1~order-01",
                ":arg0-of~exemplify-01"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' if i ordered a general , '' :arg0/NP would XXX-VB , :condition-of/PP , '' :arg1/SBAR , and :condition-of/S .",
        "tree_rules": [
            ":arg0-of~exemplify-01",
            ":arg1~order-01",
            ":arg0~he",
            ":arg0-of~exemplify-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/PRP$~i -)",
        "graph_rules": {
            "fault-01": [
                ":arg1~i"
            ]
        },
        "head": "fault-01",
        "name": ":root/ROOT~fault-01",
        "noun_info": {},
        "tree": "it would be :arg1/PRP$ XXX-NN . ''",
        "tree_rules": [
            ":arg1~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VP~answer-01 - \n\t :op2/VP~gather-01 -)",
        "graph_rules": {
            "and": [
                ":op1~answer-01",
                ":op2~gather-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "'' :arg2/S , '' :arg0/NP :op1/VP , XXX-CC :manner/ADVP :op2/VP .",
        "tree_rules": [
            ":op1~answer-01",
            ":op2~gather-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince -)",
        "graph_rules": {
            "wonder-01": [
                ":arg0~prince"
            ]
        },
        "head": "wonder-01",
        "name": ":root/ROOT~wonder-01",
        "noun_info": {},
        "tree": "but :arg0/NP was XXX-VBG ...",
        "tree_rules": [
            ":arg0~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :domain/NP~planet -)",
        "graph_rules": {
            "tiny": [
                ":domain~planet"
            ]
        },
        "head": "tiny",
        "name": ":root/ROOT~tiny",
        "noun_info": {},
        "tree": ":domain/NP was XXX-JJ .",
        "tree_rules": [
            ":domain~planet"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/VP~rule-03 -)",
        "graph_rules": {
            "possible-01": [
                ":arg1~rule-03"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT~possible-01",
        "noun_info": {},
        "tree": "over what XXX-MD :arg0/NP :arg1/VP :arg1/.",
        "tree_rules": [
            ":arg1~rule-03"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/VP~beg-01 - \n\t :arg2/S~person -)",
        "graph_rules": {
            "say-01": [
                ":arg0~he",
                ":arg1~beg-01",
                ":arg2~person"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg2/NP , '' :arg0/NP XXX-VBD to him , '' i :arg1/VP ''",
        "tree_rules": [
            ":arg0~he",
            ":arg2~person",
            ":arg1~beg-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~king - \n\t :arg1/S~assure-01 -)",
        "graph_rules": {
            "hasten-01": [
                ":arg0~king",
                ":arg1~assure-01"
            ]
        },
        "head": "hasten-01",
        "name": ":root/ROOT~hasten-01",
        "noun_info": {},
        "tree": "'' :arg2/S , '' :arg0/NP XXX-VBD :arg1/S .",
        "tree_rules": [
            ":arg1~assure-01",
            ":arg0~king"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/VP~rule-03 - \n\t :arg2/WHPP~person -)",
        "graph_rules": {
            "say-01": [
                ":arg1~rule-03",
                ":arg2~person"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg2/NP - - :arg2/WHPP XXX-VBP you :arg1/VP :arg1/. ''",
        "tree_rules": [
            ":arg1~rule-03",
            ":arg2~person"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~king - \n\t :arg1/PP~everything - \n\t :arg1-of/PP~simple-02 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~king",
                ":arg1~everything",
                ":arg1-of~simple-02"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/PP , '' XXX-VBD :arg0/NP , :arg1-of/PP .",
        "tree_rules": [
            ":arg0~king",
            ":arg1-of~simple-02",
            ":arg1~everything"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/NP~everything -)",
        "graph_rules": {
            "over": [
                ":op1~everything"
            ]
        },
        "head": "over",
        "name": ":root/ROOT~over",
        "noun_info": {},
        "tree": "'' XXX-IN :op1/NP ? ''",
        "tree_rules": [
            ":op1~everything"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~king - \n\t :arg0-of/SBAR~take-in-23 -)",
        "graph_rules": {
            "gesture-01": [
                ":arg0~king",
                ":arg0-of~take-in-23"
            ]
        },
        "head": "gesture-01",
        "name": ":root/ROOT~gesture-01",
        "noun_info": {},
        "tree": ":arg0/NP made a XXX-NN , :arg0-of/SBAR .",
        "tree_rules": [
            ":arg0-of~take-in-23",
            ":arg0~king"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~king - \n\t :arg2/IN~over -)",
        "graph_rules": {
            "answer-01": [
                ":arg0~king",
                ":arg2~over"
            ]
        },
        "head": "answer-01",
        "name": ":root/ROOT~answer-01",
        "noun_info": {},
        "tree": "'' :arg2/IN :mod/NP , '' :arg0/NP XXX-VBN .",
        "tree_rules": [
            ":arg2~over",
            ":arg0~king"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/SBAR~absolute - \n\t :op2/ADJP~universal -)",
        "graph_rules": {
            "and": [
                ":op1~absolute",
                ":op2~universal"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": ":op1/SBAR : :domain/NP was XXX-RB :op2/ADJP .",
        "tree_rules": [
            ":op2~universal",
            ":op1~absolute"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~star - \n\t :arg1/NP~you -)",
        "graph_rules": {
            "obey-01": [
                ":arg0~star",
                ":arg1~you"
            ]
        },
        "head": "obey-01",
        "name": ":root/ROOT~obey-01",
        "noun_info": {},
        "tree": "'' and :arg0/NP XXX-VB :arg1/NP ? ''",
        "tree_rules": [
            ":arg1~you",
            ":arg0~star"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~king - \n\t :arg1/S~do-02 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~king",
                ":arg1~do-02"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' :arg0/NP XXX-VBD .",
        "tree_rules": [
            ":arg1~do-02",
            ":arg0~king"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~they - \n\t :manner/ADVP~instant -)",
        "graph_rules": {
            "obey-01": [
                ":arg0~they",
                ":manner~instant"
            ]
        },
        "head": "obey-01",
        "name": ":root/ROOT~obey-01",
        "noun_info": {},
        "tree": "'' :arg0/NP XXX-VBP :manner/ADVP .",
        "tree_rules": [
            ":manner~instant",
            ":arg0~they"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/RB~- - \n\t :arg0/NP~i - \n\t :arg1/NP~insubordinate-00 -)",
        "graph_rules": {
            "permit-01": [
                ":polarity~-",
                ":arg0~i",
                ":arg1~insubordinate-00"
            ]
        },
        "head": "permit-01",
        "name": ":root/ROOT~permit-01",
        "noun_info": {},
        "tree": ":arg0/NP :polarity/VBP :polarity/RB XXX-VB :arg1/NP . ''",
        "tree_rules": [
            ":arg1~insubordinate-00",
            ":polarity~-",
            ":polarity~-",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NN~prince - \n\t :arg1/NP~power -)",
        "graph_rules": {
            "marvel-01": [
                ":arg0~prince",
                ":arg1~power"
            ]
        },
        "head": "marvel-01",
        "name": ":root/ROOT~marvel-01",
        "noun_info": {},
        "tree": ":arg1/NP was a thing for the :mod/JJ :arg0/NN to XXX-VB at .",
        "tree_rules": [
            ":arg0~prince",
            ":arg1~power"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/S~watch-01 - \n\t :condition/SBAR~master -)",
        "graph_rules": {
            "possible-01": [
                ":arg1~watch-01",
                ":condition~master"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT~possible-01",
        "noun_info": {},
        "tree": ":condition/SBAR , :arg0/NP would :arg1-of/VB been XXX-JJ :arg1/S .",
        "tree_rules": [
            ":arg1~watch-01",
            ":condition~master"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/NP~courage - \n\t :mod/RP~up - \n\t :arg1-of/E~cause-01 - \n\t :arg0-of/E~cause-01 -)",
        "graph_rules": {
            "pluck-01": [
                ":arg0~he",
                ":arg1~courage",
                ":mod~up",
                ":arg1-of~cause-01",
                ":arg0-of~cause-01"
            ]
        },
        "head": "pluck-01",
        "name": ":root/ROOT~pluck-01",
        "noun_info": {},
        "tree": ":arg1/CC :arg1-of/IN :arg0/S , :arg0/NP XXX-VBD :mod/RP :arg1/NP :arg0/NP :op1/VP ... :op2/S",
        "tree_rules": [
            ":mod~up",
            ":arg1~courage",
            ":arg0~he",
            ":arg1-of~cause-01",
            ":arg0-of~cause-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/E~you - \n\t :arg1/NP~sun - \n\t :arg2/SBAR~set-11 -)",
        "graph_rules": {
            "order-01": [
                ":arg0~you",
                ":arg1~sun",
                ":arg2~set-11"
            ]
        },
        "head": "order-01",
        "name": ":root/ROOT~order-01",
        "noun_info": {},
        "tree": "XXX-NN :arg2/SBAR ... ''",
        "tree_rules": [
            ":arg1~sun",
            ":arg2~set-11",
            ":arg0~you"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/E~person/have-org-role-91 - \n\t :op2/NP~i -)",
        "graph_rules": {
            "or": [
                ":op1~person/have-org-role-91",
                ":op2~i"
            ]
        },
        "head": "or",
        "name": ":root/ROOT~or",
        "noun_info": {},
        "tree": "'' :arg2/NP , XXX-CC :op2/NP ? ''",
        "tree_rules": [
            ":op2~i",
            ":op1~person/have-org-role-91"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/ADVP~you - \n\t :arg1-of/ADVP~firm-03 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~prince",
                ":arg1~you",
                ":arg1-of~firm-03"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/ADVP , '' XXX-VBD :arg0/NP :arg1-of/ADVP .",
        "tree_rules": [
            ":arg0~prince",
            ":arg1-of~firm-03",
            ":arg1~you"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "exact",
        "name": ":root/ROOT~exact",
        "noun_info": {},
        "tree": "'' XXX-RB .",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~king - \n\t :arg1/JJ~obligate-01 -)",
        "graph_rules": {
            "go-on-25": [
                ":arg0~king",
                ":arg1~obligate-01"
            ]
        },
        "head": "go-on-25",
        "name": ":root/ROOT~go-on-25",
        "noun_info": {},
        "tree": ":arg2/S , '' :arg0/NP XXX-VBD on .",
        "tree_rules": [
            ":arg1~obligate-01",
            ":arg0~king"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~authority - \n\t :arg2/PP~reason-01 - \n\t :mod/ADVP~first-of-all -)",
        "graph_rules": {
            "rest-02": [
                ":arg1~authority",
                ":arg2~reason-01",
                ":mod~first-of-all"
            ]
        },
        "head": "rest-02",
        "name": ":root/ROOT~rest-02",
        "noun_info": {},
        "tree": "'' :arg1-of/VBN :arg1/NP XXX-VBZ :mod/ADVP :arg2/PP .",
        "tree_rules": [
            ":arg1~authority",
            ":mod~first-of-all",
            ":arg2~reason-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~person - \n\t :arg1/E~coref - \n\t :condition/SBAR~order-01 -)",
        "graph_rules": {
            "rise-up-03": [
                ":arg0~person",
                ":arg1~coref",
                ":condition~order-01"
            ]
        },
        "head": "rise-up-03",
        "name": ":root/ROOT~rise-up-03",
        "noun_info": {},
        "tree": ":condition/SBAR , they would XXX-VB up :arg0-of/PP .",
        "tree_rules": [
            ":arg0~person",
            ":condition~order-01",
            ":arg1~coref"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~you - \n\t :arg1/NP~sunset -)",
        "graph_rules": {
            "have-03": [
                ":arg0~you",
                ":arg1~sunset"
            ]
        },
        "head": "have-03",
        "name": ":root/ROOT~have-03",
        "noun_info": {},
        "tree": "'' :arg0/NP shall XXX-VB :arg1/NP .",
        "tree_rules": [
            ":arg1~sunset",
            ":arg0~you"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg2/NP~it -)",
        "graph_rules": {
            "command-02": [
                ":arg0~i",
                ":arg2~it"
            ]
        },
        "head": "command-02",
        "name": ":root/ROOT~command-02",
        "noun_info": {},
        "tree": ":arg0/NP shall XXX-VB :arg2/NP .",
        "tree_rules": [
            ":arg2~it",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP~wait-01 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~wait-01"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "XXX-CC , :arg0/PP , :arg1/NP :arg2/VP . ''",
        "tree_rules": [
            ":arg2~wait-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/SBAR~be-temporally-at-91 -)",
        "graph_rules": {
            "inquire-01": [
                ":arg0~prince",
                ":arg1~be-temporally-at-91"
            ]
        },
        "head": "inquire-01",
        "name": ":root/MULTI-SENTENCE~inquire-01",
        "noun_info": {},
        "tree": ":arg1/SBAR :arg1/WHNP be :arg2/. '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~be-temporally-at-91",
            ":arg0~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "hum",
        "name": ":root/ROOT~hum",
        "noun_info": {},
        "tree": "'' XXX-NN !",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "hum",
        "name": ":root/ROOT~hum",
        "noun_info": {},
        "tree": "'' XXX-NN !",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "hum",
        "name": ":root/ROOT~hum",
        "noun_info": {},
        "tree": "XXX-NN !",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~that - \n\t :arg2/PP~about -)",
        "graph_rules": {
            "be-temporally-at-91": [
                ":arg1~that",
                ":arg2~about"
            ]
        },
        "head": "be-temporally-at-91",
        "name": ":root/ROOT~be-temporally-at-91",
        "noun_info": {},
        "tree": ":arg1/NP XXX-MD be :arg2/PP - - about - - :op1/SBAR .",
        "tree_rules": [
            ":arg2~about",
            ":arg1~that"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~you - \n\t :arg1/S~obey-01 -)",
        "graph_rules": {
            "see-01": [
                ":arg0~you",
                ":arg1~obey-01"
            ]
        },
        "head": "see-01",
        "name": ":root/ROOT~see-01",
        "noun_info": {},
        "tree": "and :arg0/NP will XXX-VB :degree/WHADVP :arg1/S . ''",
        "tree_rules": [
            ":arg1~obey-01",
            ":arg0~you"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince -)",
        "graph_rules": {
            "yawn-01": [
                ":arg0~prince"
            ]
        },
        "head": "yawn-01",
        "name": ":root/ROOT~yawn-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD .",
        "tree_rules": [
            ":arg0~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/VBN~lose-02 -)",
        "graph_rules": {
            "regret-01": [
                ":arg0~he",
                ":arg1~lose-02"
            ]
        },
        "head": "regret-01",
        "name": ":root/ROOT~regret-01",
        "noun_info": {},
        "tree": ":arg0/NP was XXX-VBG :arg1/NP .",
        "tree_rules": [
            ":arg1~lose-02",
            ":arg0~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~begin-01 -)",
        "graph_rules": {
            "and": [
                ":op2~begin-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC then , too , :arg1/NP :op2/VP .",
        "tree_rules": [
            ":op2~begin-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/ADJP~remain-01 - \n\t :arg2/NP~king -)",
        "graph_rules": {
            "say-01": [
                ":arg0~he",
                ":arg1~remain-01",
                ":arg2~king"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' i have :polarity/NP :arg1/ADJP , '' :arg0/NP XXX-VBD :arg1/TO :arg2/NP .",
        "tree_rules": [
            ":arg1~remain-01",
            ":arg2~king",
            ":arg0~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/VP~set-out-07 -)",
        "graph_rules": {
            "cause-01": [
                ":arg1~set-out-07"
            ]
        },
        "head": "cause-01",
        "name": ":root/ROOT~cause-01",
        "noun_info": {},
        "tree": "'' XXX-IN :arg0/FW :arg1/VP . ''",
        "tree_rules": [
            ":arg1~set-out-07"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~king - \n\t :arg1/SBAR~go-02 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~king",
                ":arg1~go-02"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :polarity/S XXX-VBD :arg0/NP , who :arg0-of/VP .",
        "tree_rules": [
            ":arg1~go-02",
            ":arg0~king"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/RB~- - \n\t :arg0/E~you -)",
        "graph_rules": {
            "go-02": [
                ":polarity~-",
                ":arg0~you"
            ]
        },
        "head": "go-02",
        "name": ":root/ROOT~go-02",
        "noun_info": {},
        "tree": "'' do :polarity/RB XXX-VB .",
        "tree_rules": [
            ":polarity~-",
            ":arg0~you"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/DT~have-org-role-91 -)",
        "graph_rules": {
            "make-02": [
                ":arg0~i",
                ":arg1~have-org-role-91"
            ]
        },
        "head": "make-02",
        "name": ":root/ROOT~make-02",
        "noun_info": {},
        "tree": ":arg0/NP will XXX-VB :arg0/NP :arg2/NP ! ''",
        "tree_rules": [
            ":arg1~have-org-role-91",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :topic/.~amr-unknown -)",
        "graph_rules": {
            "minister": [
                ":topic~amr-unknown"
            ]
        },
        "head": "minister",
        "name": ":root/ROOT~minister",
        "noun_info": {},
        "tree": "'' XXX-NN :topic/PP :topic/. ''",
        "tree_rules": [
            ":topic~amr-unknown",
            ":topic~amr-unknown"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :topic/VP~justice -)",
        "graph_rules": {
            "minister": [
                ":topic~justice"
            ]
        },
        "head": "minister",
        "name": ":root/ROOT~minister",
        "noun_info": {},
        "tree": "'' XXX-NN :topic/VP ! ''",
        "tree_rules": [
            ":topic~justice"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :location/NP~here - \n\t :arg1-of/S~judge-01 -)",
        "graph_rules": {
            "nobody": [
                ":location~here",
                ":arg1-of~judge-01"
            ]
        },
        "head": "nobody",
        "name": ":root/ROOT~nobody",
        "noun_info": {},
        "tree": "'' but :location/NP is XXX-NN :location/ADVP :arg1-of/S ! ''",
        "tree_rules": [
            ":location~here",
            ":arg1-of~judge-01",
            ":location~here"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~king - \n\t :arg1/S~know-01 - \n\t :arg2/PP~he -)",
        "graph_rules": {
            "say-01": [
                ":arg0~king",
                ":arg1~know-01",
                ":arg2~he"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' :arg0/NP XXX-VBD :arg2/PP .",
        "tree_rules": [
            ":arg2~he",
            ":arg1~know-01",
            ":arg0~king"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/RB~- - \n\t :arg0/NP~i - \n\t :arg1/PP~kingdom - \n\t :arg1-of/JJ~complete-02 -)",
        "graph_rules": {
            "tour-01": [
                ":polarity~-",
                ":arg0~i",
                ":arg1~kingdom",
                ":arg1-of~complete-02"
            ]
        },
        "head": "tour-01",
        "name": ":root/ROOT~tour-01",
        "noun_info": {},
        "tree": "'' :arg0/NP have :polarity/RB yet :polarity/VBN a :arg1-of/JJ XXX-NN :arg1/PP .",
        "tree_rules": [
            ":arg1-of~complete-02",
            ":arg1~kingdom",
            ":polarity~-",
            ":polarity~-",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :domain/NP~i - \n\t :degree/RB~very -)",
        "graph_rules": {
            "old": [
                ":domain~i",
                ":degree~very"
            ]
        },
        "head": "old",
        "name": ":root/ROOT~old",
        "noun_info": {},
        "tree": ":domain/NP am :degree/RB XXX-JJ .",
        "tree_rules": [
            ":degree~very",
            ":domain~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/DT~- - \n\t :purpose/NP~carriage - \n\t :location/NP~here -)",
        "graph_rules": {
            "room": [
                ":polarity~-",
                ":purpose~carriage",
                ":location~here"
            ]
        },
        "head": "room",
        "name": ":root/ROOT~room",
        "noun_info": {},
        "tree": ":location/NP is :polarity/DT XXX-NN :location/ADVP :purpose/IN :purpose/NP .",
        "tree_rules": [
            ":polarity~-",
            ":location~here",
            ":purpose~carriage",
            ":purpose~carriage",
            ":location~here"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/S~walk-01 - \n\t :arg1/E~coref -)",
        "graph_rules": {
            "tire-01": [
                ":arg0~walk-01",
                ":arg1~coref"
            ]
        },
        "head": "tire-01",
        "name": ":root/ROOT~tire-01",
        "noun_info": {},
        "tree": "and it XXX-VBZ :arg0/S . ''",
        "tree_rules": [
            ":arg0~walk-01",
            ":arg1~coref"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :location/PP~side - \n\t :mod/PP~at-all -)",
        "graph_rules": {
            "nobody": [
                ":location~side",
                ":mod~at-all"
            ]
        },
        "head": "nobody",
        "name": ":root/ROOT~nobody",
        "noun_info": {},
        "tree": ":location/PP , :arg2/PP , there was XXX-NN :mod/PP ...",
        "tree_rules": [
            ":mod~at-all",
            ":location~side"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~king - \n\t :arg2/NP~have-condition-91 -)",
        "graph_rules": {
            "answer-01": [
                ":arg0~king",
                ":arg2~have-condition-91"
            ]
        },
        "head": "answer-01",
        "name": ":root/ROOT~answer-01",
        "noun_info": {},
        "tree": "'' :arg0/NP shall :arg1/VB :arg2/NP , '' :arg0/NP XXX-VBN .",
        "tree_rules": [
            ":arg0~king",
            ":arg2~have-condition-91"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :domain/NP~that - \n\t :mod/ADJP~difficult -)",
        "graph_rules": {
            "thing": [
                ":domain~that",
                ":mod~difficult"
            ]
        },
        "head": "thing",
        "name": ":root/ROOT~thing",
        "noun_info": {},
        "tree": "'' :domain/NP is the :mod/ADJP XXX-NN :compared-to/PP .",
        "tree_rules": [
            ":mod~difficult",
            ":domain~that"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :degree/RBR~more - \n\t :domain/NP~judge-01 - \n\t :compared-to/SBAR~judge-01 -)",
        "graph_rules": {
            "difficult": [
                ":degree~more",
                ":domain~judge-01",
                ":compared-to~judge-01"
            ]
        },
        "head": "difficult",
        "name": ":root/ROOT~difficult",
        "noun_info": {},
        "tree": ":domain/NP is :degree/RB :degree/RBR XXX-JJ :domain/S .",
        "tree_rules": [
            ":compared-to~judge-01",
            ":degree~more",
            ":domain~judge-01",
            ":domain~judge-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :domain/NP~you - \n\t :condition/SBAR~succeed-01 - \n\t :arg1-of/NP~true-01 -)",
        "graph_rules": {
            "wise": [
                ":domain~you",
                ":condition~succeed-01",
                ":arg1-of~true-01"
            ]
        },
        "head": "wise",
        "name": ":root/ROOT~wise",
        "noun_info": {},
        "tree": ":condition/SBAR , then you are XXX-RB :arg1-of/NP . ''",
        "tree_rules": [
            ":domain~you",
            ":arg1-of~true-01",
            ":condition~succeed-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/INTJ~yes -)",
        "graph_rules": {
            "say-01": [
                ":arg0~prince",
                ":arg1~yes"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/INTJ , '' XXX-VBD :arg0/NP , '' :concession/CC :arg1/S .",
        "tree_rules": [
            ":arg0~prince",
            ":arg1~yes"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/S~live-01 - \n\t :polarity/RB~- -)",
        "graph_rules": {
            "need-01": [
                ":arg0~i",
                ":arg1~live-01",
                ":polarity~-"
            ]
        },
        "head": "need-01",
        "name": ":root/ROOT~need-01",
        "noun_info": {},
        "tree": ":arg0/NP :polarity/VBP :polarity/RB XXX-VB :arg1/S .",
        "tree_rules": [
            ":arg1~live-01",
            ":polarity~-",
            ":polarity~-",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "hum",
        "name": ":root/ROOT~hum",
        "noun_info": {},
        "tree": "'' XXX-NN !",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/NP~reason -)",
        "graph_rules": {
            "have-03": [
                ":arg0~i",
                ":arg1~reason"
            ]
        },
        "head": "have-03",
        "name": ":root/ROOT~have-03",
        "noun_info": {},
        "tree": "'' :arg0/NP XXX-VBP :arg1/NP .",
        "tree_rules": [
            ":arg1~reason",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/LS~i - \n\t :arg1/NP~he - \n\t :time/PP~date-entity -)",
        "graph_rules": {
            "hear-01": [
                ":arg0~i",
                ":arg1~he",
                ":time~date-entity"
            ]
        },
        "head": "hear-01",
        "name": ":root/ROOT~hear-01",
        "noun_info": {},
        "tree": ":arg0/LS XXX-VB :arg1/NP :time/PP .",
        "tree_rules": [
            ":arg1~he",
            ":time~date-entity",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/VP~judge-01 -)",
        "graph_rules": {
            "possible-01": [
                ":arg1~judge-01"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT~possible-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-MD :arg1/VP .",
        "tree_rules": [
            ":arg1~judge-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~you - \n\t :arg1/NP~he - \n\t :arg3/PP~die-01 - \n\t :frequency/PP~time-to-time -)",
        "graph_rules": {
            "condemn-01": [
                ":arg0~you",
                ":arg1~he",
                ":arg3~die-01",
                ":frequency~time-to-time"
            ]
        },
        "head": "condemn-01",
        "name": ":root/ROOT~condemn-01",
        "noun_info": {},
        "tree": ":frequency/PP :arg0/NP will XXX-VB :arg1/NP :arg3/PP .",
        "tree_rules": [
            ":arg1~he",
            ":arg3~die-01",
            ":frequency~time-to-time",
            ":arg0~you"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~live-01 - \n\t :arg1/NP~justice -)",
        "graph_rules": {
            "depend-01": [
                ":arg0~live-01",
                ":arg1~justice"
            ]
        },
        "head": "depend-01",
        "name": ":root/ROOT~depend-01",
        "noun_info": {},
        "tree": "XXX-RB :arg0/NP will depend :poss/IN :arg1/NP .",
        "tree_rules": [
            ":arg1~justice",
            ":arg0~live-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~you - \n\t :arg1/NP~he - \n\t :frequency/PP~occasion-02 - \n\t :arg1-of/IN~cause-01 -)",
        "graph_rules": {
            "pardon-01": [
                ":arg0~you",
                ":arg1~he",
                ":frequency~occasion-02",
                ":arg1-of~cause-01"
            ]
        },
        "head": "pardon-01",
        "name": ":root/ROOT~pardon-01",
        "noun_info": {},
        "tree": "but :arg0/NP will XXX-NN :arg1/NP .",
        "tree_rules": [
            ":frequency~occasion-02",
            ":arg1-of~cause-01",
            ":frequency~occasion-02",
            ":arg1~he",
            ":arg0~you"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/RB~only - \n\t :domain/NP~he - \n\t :arg1-of/SBAR~have-03 -)",
        "graph_rules": {
            "one": [
                ":mod~only",
                ":domain~he",
                ":arg1-of~have-03"
            ]
        },
        "head": "one",
        "name": ":root/ROOT~one",
        "noun_info": {},
        "tree": ":domain/NP is the :mod/RB XXX-CD :arg1-of/SBAR . ''",
        "tree_rules": [
            ":mod~only",
            ":arg1-of~have-03",
            ":domain~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/SBAR~like-01 -)",
        "graph_rules": {
            "reply-01": [
                ":arg0~prince",
                ":arg1~like-01"
            ]
        },
        "head": "reply-01",
        "name": ":root/ROOT~reply-01",
        "noun_info": {},
        "tree": "'' i , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~like-01",
            ":arg0~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/SBAR~go-02 - \n\t :time/ADVP~now -)",
        "graph_rules": {
            "think-01": [
                ":arg0~i",
                ":arg1~go-02",
                ":time~now"
            ]
        },
        "head": "think-01",
        "name": ":root/ROOT~think-01",
        "noun_info": {},
        "tree": "and :time/ADVP :arg0/NP XXX-VBP :arg1/SBAR . ''",
        "tree_rules": [
            ":arg1~go-02",
            ":time~now",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~king - \n\t :arg1/ADVP~no -)",
        "graph_rules": {
            "say-01": [
                ":arg0~king",
                ":arg1~no"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/ADVP , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~no",
            ":arg0~king"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/DT~- - \n\t :arg0/NP~prince - \n\t :arg1/S~grieve-01 -)",
        "graph_rules": {
            "wish-01": [
                ":polarity~-",
                ":arg0~prince",
                ":arg1~grieve-01"
            ]
        },
        "head": "wish-01",
        "name": ":root/ROOT~wish-01",
        "noun_info": {},
        "tree": "but :arg0/NP , :arg0-of/S , had :polarity/DT XXX-NN :arg1/S .",
        "tree_rules": [
            ":polarity~-",
            ":polarity~-",
            ":arg1~grieve-01",
            ":arg0~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/VP~possible-01 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~he",
                ":arg1~possible-01"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :condition/IN :arg1/S , '' :arg0/NP XXX-VBD , '' he :arg1/VP .",
        "tree_rules": [
            ":arg0~he",
            ":arg1~possible-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/JJ~possible-01 -)",
        "graph_rules": {
            "exemplify-01": [
                ":arg0~possible-01"
            ]
        },
        "head": "exemplify-01",
        "name": ":root/ROOT~exemplify-01",
        "noun_info": {},
        "tree": ":arg0/NP should be :arg0/JJ , for XXX-NN , :arg1/S .",
        "tree_rules": [
            ":arg0~possible-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/SBAR~favorable - \n\t :arg2/PP~i -)",
        "graph_rules": {
            "seem-01": [
                ":arg1~favorable",
                ":arg2~i"
            ]
        },
        "head": "seem-01",
        "name": ":root/ROOT~seem-01",
        "noun_info": {},
        "tree": "it XXX-VBZ :arg2/PP",
        "tree_rules": [
            ":arg1~favorable",
            ":arg2~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :duration/NP~moment - \n\t :arg1-of/E~cause-01 -)",
        "graph_rules": {
            "hesitate-01": [
                ":arg0~prince",
                ":duration~moment",
                ":arg1-of~cause-01"
            ]
        },
        "head": "hesitate-01",
        "name": ":root/ROOT~hesitate-01",
        "noun_info": {},
        "tree": ":polarity/SBAR , :arg0/NP XXX-VBD :duration/NP .",
        "tree_rules": [
            ":duration~moment",
            ":arg0~prince",
            ":arg1-of~cause-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/NP~leave-11 - \n\t :time/ADVP~then -)",
        "graph_rules": {
            "take-01": [
                ":arg0~he",
                ":arg1~leave-11",
                ":time~then"
            ]
        },
        "head": "take-01",
        "name": ":root/ROOT~take-01",
        "noun_info": {},
        "tree": ":time/ADVP , :arg0-of/PP , :arg0/NP XXX-VBD :arg1/NP .",
        "tree_rules": [
            ":arg1~leave-11",
            ":time~then",
            ":arg0~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~king - \n\t :arg1/S~make-02 - \n\t :manner/ADVP~hasty -)",
        "graph_rules": {
            "call-07": [
                ":arg0~king",
                ":arg1~make-02",
                ":manner~hasty"
            ]
        },
        "head": "call-07",
        "name": ":root/ROOT~call-07",
        "noun_info": {},
        "tree": "'' :arg1/S , '' :arg0/NP XXX-VBN :manner/PRT , :manner/ADVP .",
        "tree_rules": [
            ":manner~hasty",
            ":manner~hasty",
            ":arg1~make-02",
            ":arg0~king"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/NP~air -)",
        "graph_rules": {
            "have-03": [
                ":arg0~he",
                ":arg1~air"
            ]
        },
        "head": "have-03",
        "name": ":root/ROOT~have-03",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD :arg1/NP .",
        "tree_rules": [
            ":arg1~air",
            ":arg0~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/S~strange - \n\t :arg2/E~coref - \n\t :time/SBAR~continue-01 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~prince",
                ":arg1~strange",
                ":arg2~coref",
                ":time~continue-01"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' :arg0/NP XXX-VBD :domain/PP , :time/SBAR .",
        "tree_rules": [
            ":time~continue-01",
            ":arg1~strange",
            ":arg0~prince",
            ":arg2~coref"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/NP~11 -)",
        "graph_rules": {
            "chapter": [
                ":mod~11"
            ]
        },
        "head": "chapter",
        "name": ":root/ROOT~chapter",
        "noun_info": {},
        "tree": "XXX-NN :mod/NP .",
        "tree_rules": [
            ":mod~11"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~man - \n\t :arg1/NP~planet -)",
        "graph_rules": {
            "inhabit-01": [
                ":arg0~man",
                ":arg1~planet"
            ]
        },
        "head": "inhabit-01",
        "name": ":root/ROOT~inhabit-01",
        "noun_info": {},
        "tree": ":arg1/NP was XXX-VBN :ord/IN :arg0/NP .",
        "tree_rules": [
            ":arg0~man",
            ":arg1~planet"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "ah",
        "name": ":root/ROOT~ah",
        "noun_info": {},
        "tree": "'' XXX-RB !",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "ah",
        "name": ":root/ROOT~ah",
        "noun_info": {},
        "tree": "XXX-RB !",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~man - \n\t :arg1/VP~person -)",
        "graph_rules": {
            "opine-01": [
                ":arg0~man",
                ":arg1~person"
            ]
        },
        "head": "opine-01",
        "name": ":root/ROOT~opine-01",
        "noun_info": {},
        "tree": "XXX-IN , :mod/S , :domain/NP :arg1/VP .",
        "tree_rules": [
            ":arg0~man",
            ":arg1~person"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/NN~morning -)",
        "graph_rules": {
            "say-01": [
                ":arg0~prince",
                ":arg1~morning"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1-of/ADVP , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~morning",
            ":arg0~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/NN~queer - \n\t :domain/NP~that - \n\t :arg1-of/SBAR~wear-01 -)",
        "graph_rules": {
            "hat": [
                ":mod~queer",
                ":domain~that",
                ":arg1-of~wear-01"
            ]
        },
        "head": "hat",
        "name": ":root/ROOT~hat",
        "noun_info": {},
        "tree": "'' :domain/NP is :domain/DT :mod/NN XXX-NN :arg1-of/SBAR . ''",
        "tree_rules": [
            ":domain~that",
            ":mod~queer",
            ":arg1-of~wear-01",
            ":domain~that"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~man - \n\t :arg1/S~hat -)",
        "graph_rules": {
            "reply-01": [
                ":arg0~man",
                ":arg1~hat"
            ]
        },
        "head": "reply-01",
        "name": ":root/ROOT~reply-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' :arg0/NP XXX-VBD .",
        "tree_rules": [
            ":arg1~hat",
            ":arg0~man"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~nobody - \n\t :path/NP~way - \n\t :arg2-of/ADVP~fortunate-01 - \n\t :time/ADVP~ever -)",
        "graph_rules": {
            "pass-03": [
                ":arg1~nobody",
                ":path~way",
                ":arg2-of~fortunate-01",
                ":time~ever"
            ]
        },
        "head": "pass-03",
        "name": ":root/ROOT~pass-03",
        "noun_info": {},
        "tree": ":arg2-of/ADVP , :arg1/NP :time/ADVP XXX-VBZ :path/NP . ''",
        "tree_rules": [
            ":time~ever",
            ":path~way",
            ":arg2-of~fortunate-01",
            ":arg1~nobody",
            ":time~ever"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~man - \n\t :arg1/NP~he - \n\t :arg2/E~clap-01 - \n\t :time/ADVP~now -)",
        "graph_rules": {
            "direct-01": [
                ":arg0~man",
                ":arg1~he",
                ":arg2~clap-01",
                ":time~now"
            ]
        },
        "head": "direct-01",
        "name": ":root/ROOT~direct-01",
        "noun_info": {},
        "tree": "'' :manner/NP :part-of/PP , '' :arg0/NP :time/ADVP XXX-VBD :arg1/NP .",
        "tree_rules": [
            ":time~now",
            ":arg1~he",
            ":arg0~man",
            ":arg2~clap-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/NP~hand -)",
        "graph_rules": {
            "clap-01": [
                ":arg0~prince",
                ":arg1~hand"
            ]
        },
        "head": "clap-01",
        "name": ":root/ROOT~clap-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD :arg1/NP .",
        "tree_rules": [
            ":arg1~hand",
            ":arg0~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~man - \n\t :arg1/NP~hat - \n\t :subevent-of/PP~salute-01 -)",
        "graph_rules": {
            "raise-01": [
                ":arg0~man",
                ":arg1~hat",
                ":subevent-of~salute-01"
            ]
        },
        "head": "raise-01",
        "name": ":root/ROOT~raise-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD :arg1/NP :subevent-of/PP .",
        "tree_rules": [
            ":arg1~hat",
            ":subevent-of~salute-01",
            ":arg0~man"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/ADJP~entertain-01 - \n\t :arg2/E~coref -)",
        "graph_rules": {
            "say-01": [
                ":arg0~prince",
                ":arg1~entertain-01",
                ":arg2~coref"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg0/S , '' :arg0/NP XXX-VBD to himself .",
        "tree_rules": [
            ":arg1~entertain-01",
            ":arg0~prince",
            ":arg2~coref"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/S~clap-01 - \n\t :mod/IN~again -)",
        "graph_rules": {
            "begin-01": [
                ":arg0~he",
                ":arg1~clap-01",
                ":mod~again"
            ]
        },
        "head": "begin-01",
        "name": ":root/ROOT~begin-01",
        "noun_info": {},
        "tree": "and :arg0/NP XXX-VBD again :arg1/S .",
        "tree_rules": [
            ":mod~again",
            ":arg1~clap-01",
            ":arg0~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~man - \n\t :arg1/NP~hat - \n\t :mod/PP~again - \n\t :subevent-of/NP~salute-01 -)",
        "graph_rules": {
            "raise-01": [
                ":arg0~man",
                ":arg1~hat",
                ":mod~again",
                ":subevent-of~salute-01"
            ]
        },
        "head": "raise-01",
        "name": ":root/ROOT~raise-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBN :arg1/NP :instrument/IN :subevent-of/NP .",
        "tree_rules": [
            ":mod~again",
            ":subevent-of~salute-01",
            ":arg1~hat",
            ":arg0~man"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/PP~monotony - \n\t :time/IN~after -)",
        "graph_rules": {
            "tire-01": [
                ":arg0~prince",
                ":arg1~monotony",
                ":time~after"
            ]
        },
        "head": "tire-01",
        "name": ":root/ROOT~tire-01",
        "noun_info": {},
        "tree": ":time/IN :duration/NP :arg0/NP :duration/VBD XXX-JJ :arg1/PP .",
        "tree_rules": [
            ":time~after",
            ":arg1~monotony",
            ":arg0~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/SQ~do-02 -)",
        "graph_rules": {
            "ask-01": [
                ":arg0~he",
                ":arg1~do-02"
            ]
        },
        "head": "ask-01",
        "name": ":root/MULTI-SENTENCE~ask-01",
        "noun_info": {},
        "tree": "'' and what :arg1/SQ :arg1/. '' :arg0/NP XXX-VBD .",
        "tree_rules": [
            ":arg1~do-02",
            ":arg0~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~man - \n\t :arg2/NP~he - \n\t :polarity/RB~- -)",
        "graph_rules": {
            "hear-01": [
                ":arg0~man",
                ":arg2~he",
                ":polarity~-"
            ]
        },
        "head": "hear-01",
        "name": ":root/ROOT~hear-01",
        "noun_info": {},
        "tree": "but :arg0/NP :polarity/VBD :polarity/RB XXX-VB :arg2/NP .",
        "tree_rules": [
            ":arg2~he",
            ":polarity~-",
            ":polarity~-",
            ":arg0~man"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/E~- - \n\t :arg0/NP~person - \n\t :arg1/NP~anything - \n\t :time/ADVP~ever -)",
        "graph_rules": {
            "hear-01": [
                ":polarity~-",
                ":arg0~person",
                ":arg1~anything",
                ":time~ever"
            ]
        },
        "head": "hear-01",
        "name": ":root/ROOT~hear-01",
        "noun_info": {},
        "tree": ":arg0/NP :time/ADVP XXX-VBP :arg1/NP .",
        "tree_rules": [
            ":arg1~anything",
            ":arg0~person",
            ":time~ever",
            ":polarity~-"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/VP~admire-01 - \n\t :arg2/.~amr-unknown -)",
        "graph_rules": {
            "mean-01": [
                ":arg1~admire-01",
                ":arg2~amr-unknown"
            ]
        },
        "head": "mean-01",
        "name": ":root/ROOT~mean-01",
        "noun_info": {},
        "tree": "'' what does that XXX-NN - - ' :arg1/VP :arg2/. ''",
        "tree_rules": [
            ":arg1~admire-01",
            ":arg2~amr-unknown"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/VB~admire-01 - \n\t :arg2/SBAR~regard-01 -)",
        "graph_rules": {
            "mean-01": [
                ":arg1~admire-01",
                ":arg2~regard-01"
            ]
        },
        "head": "mean-01",
        "name": ":root/ROOT~mean-01",
        "noun_info": {},
        "tree": "'' to :arg1/VB XXX-VB :arg2/SBAR . ''",
        "tree_rules": [
            ":arg2~regard-01",
            ":arg1~admire-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP~man -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~man"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "'' XXX-CC :domain/ADVP :arg2/VP ! ''",
        "tree_rules": [
            ":arg2~man"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/E~you - \n\t :arg1/DT~this - \n\t :arg2/NP~i -)",
        "graph_rules": {
            "kind-01": [
                ":arg0~you",
                ":arg1~this",
                ":arg2~i"
            ]
        },
        "head": "kind-01",
        "name": ":root/ROOT~kind-01",
        "noun_info": {},
        "tree": "'' do :arg2/NP :arg1/DT XXX-NN .",
        "tree_rules": [
            ":arg1~this",
            ":arg2~i",
            ":arg0~you"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~you - \n\t :arg1/E~i - \n\t :manner/JJ~same-01 -)",
        "graph_rules": {
            "admire-01": [
                ":arg0~you",
                ":arg1~i",
                ":manner~same-01"
            ]
        },
        "head": "admire-01",
        "name": ":root/ROOT~admire-01",
        "noun_info": {},
        "tree": "XXX-VB :arg0/NP . ''",
        "tree_rules": [
            ":manner~same-01",
            ":arg0~you",
            ":arg1~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/CC~contrast-01 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~prince",
                ":arg1~contrast-01"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg0/NP :arg1/FW you , '' XXX-VBD :arg0/NP , :arg0-of/S , '' :arg1/CC :arg1/S :arg0/. ''",
        "tree_rules": [
            ":arg0~prince",
            ":arg1~contrast-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~go-02 -)",
        "graph_rules": {
            "and": [
                ":op2~go-02"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :op2/VP .",
        "tree_rules": [
            ":op2~go-02"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/ADJP~odd - \n\t :arg2/E~coref - \n\t :time/SBAR~continue-01 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~he",
                ":arg1~odd",
                ":arg2~coref",
                ":time~continue-01"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :domain/S , '' :arg0/NP XXX-VBD :domain/PP , :time/SBAR .",
        "tree_rules": [
            ":arg1~odd",
            ":time~continue-01",
            ":arg0~he",
            ":arg2~coref"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/NP~12 -)",
        "graph_rules": {
            "chapter": [
                ":mod~12"
            ]
        },
        "head": "chapter",
        "name": ":root/ROOT~chapter",
        "noun_info": {},
        "tree": "XXX-NN :mod/NP .",
        "tree_rules": [
            ":mod~12"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/IN~person - \n\t :arg1/NP~planet -)",
        "graph_rules": {
            "inhabit-01": [
                ":arg0~person",
                ":arg1~planet"
            ]
        },
        "head": "inhabit-01",
        "name": ":root/ROOT~inhabit-01",
        "noun_info": {},
        "tree": ":arg1/NP was XXX-VBN :arg0/IN :arg0-of/NP .",
        "tree_rules": [
            ":arg0~person",
            ":arg1~planet"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/PP~deject-01 - \n\t :arg2/S~visit-01 -)",
        "graph_rules": {
            "have-concession-91": [
                ":arg1~deject-01",
                ":arg2~visit-01"
            ]
        },
        "head": "have-concession-91",
        "name": ":root/ROOT~have-concession-91",
        "noun_info": {},
        "tree": ":arg2/S , XXX-CC :degree/S .",
        "tree_rules": [
            ":arg1~deject-01",
            ":arg2~visit-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~person - \n\t :arg2/S~drink-01 - \n\t :manner/IN~lugubrious -)",
        "graph_rules": {
            "reply-01": [
                ":arg0~person",
                ":arg2~drink-01",
                ":manner~lugubrious"
            ]
        },
        "head": "reply-01",
        "name": ":root/ROOT~reply-01",
        "noun_info": {},
        "tree": "'' :arg2/S , '' XXX-VBD :arg0-of/NP , :manner/IN :arg0/NP .",
        "tree_rules": [
            ":manner~lugubrious",
            ":manner~lugubrious",
            ":arg0~person",
            ":arg2~drink-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/WHADVP~cause-01 -)",
        "graph_rules": {
            "demand-01": [
                ":arg0~prince",
                ":arg1~cause-01"
            ]
        },
        "head": "demand-01",
        "name": ":root/MULTI-SENTENCE~demand-01",
        "noun_info": {},
        "tree": "'' :arg1/WHADVP :arg1/SQ :arg0/. '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~cause-01",
            ":arg0~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~person - \n\t :arg2/ADVP~cause-01 -)",
        "graph_rules": {
            "reply-01": [
                ":arg0~person",
                ":arg2~cause-01"
            ]
        },
        "head": "reply-01",
        "name": ":root/ROOT~reply-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' XXX-VBD :arg0-of/NP .",
        "tree_rules": [
            ":arg2~cause-01",
            ":arg0~person"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~person - \n\t :arg1/S~forget-01 -)",
        "graph_rules": {
            "confess-01": [
                ":arg0~person",
                ":arg1~forget-01"
            ]
        },
        "head": "confess-01",
        "name": ":root/ROOT~confess-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' :arg0-of/NP XXX-VBD , :arg0-of/S .",
        "tree_rules": [
            ":arg1~forget-01",
            ":arg0~person"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/PP~drink-01 -)",
        "graph_rules": {
            "shame-01": [
                ":arg0~drink-01"
            ]
        },
        "head": "shame-01",
        "name": ":root/ROOT~shame-01",
        "noun_info": {},
        "tree": "'' XXX-JJ :arg0/PP ! ''",
        "tree_rules": [
            ":arg0~drink-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/PP~end-01 - \n\t :op2/VP~shut-up-06 -)",
        "graph_rules": {
            "and": [
                ":op1~end-01",
                ":op2~shut-up-06"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": ":arg0-of/NP :arg0/VP , XXX-CC :op2/VP .",
        "tree_rules": [
            ":op1~end-01",
            ":op2~shut-up-06"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~go-02 -)",
        "graph_rules": {
            "and": [
                ":op2~go-02"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :op2/VP .",
        "tree_rules": [
            ":op2~go-02"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/ADJP~odd - \n\t :arg2/E~coref - \n\t :time/SBAR~continue-01 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~he",
                ":arg1~odd",
                ":arg2~coref",
                ":time~continue-01"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :domain/S , '' :arg0/NP XXX-VBD :domain/PP , :time/SBAR .",
        "tree_rules": [
            ":arg1~odd",
            ":time~continue-01",
            ":arg0~he",
            ":arg2~coref"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/NP~13 -)",
        "graph_rules": {
            "chapter": [
                ":mod~13"
            ]
        },
        "head": "chapter",
        "name": ":root/ROOT~chapter",
        "noun_info": {},
        "tree": "XXX-NN :mod/NP .",
        "tree_rules": [
            ":mod~13"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~planet - \n\t :arg1/NP~businessman -)",
        "graph_rules": {
            "belong-01": [
                ":arg0~planet",
                ":arg1~businessman"
            ]
        },
        "head": "belong-01",
        "name": ":root/ROOT~belong-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD :ord/TO :arg1/NP .",
        "tree_rules": [
            ":arg1~businessman",
            ":arg0~planet"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~man - \n\t :degree/ADVP~much - \n\t :arg0-of/IN~cause-01 -)",
        "graph_rules": {
            "occupy-01": [
                ":arg1~man",
                ":degree~much",
                ":arg0-of~cause-01"
            ]
        },
        "head": "occupy-01",
        "name": ":root/ROOT~occupy-01",
        "noun_info": {},
        "tree": ":arg1/NP was :degree/ADVP XXX-VBN :arg0-of/IN :arg1/S .",
        "tree_rules": [
            ":arg0-of~cause-01",
            ":degree~much",
            ":arg1~man"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/NN~morning - \n\t :arg2/PP~he -)",
        "graph_rules": {
            "say-01": [
                ":arg0~prince",
                ":arg1~morning",
                ":arg2~he"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1-of/ADVP , '' :arg0/NP XXX-VBD :arg2/PP .",
        "tree_rules": [
            ":arg1~morning",
            ":arg2~he",
            ":arg0~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~cigarette -)",
        "graph_rules": {
            "go-out-18": [
                ":arg1~cigarette"
            ]
        },
        "head": "go-out-18",
        "name": ":root/ROOT~go-out-18",
        "noun_info": {},
        "tree": "'' :arg1/NP has XXX-VBN out . ''",
        "tree_rules": [
            ":arg1~cigarette"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/CC~sum-of - \n\t :arg2/NP~5 -)",
        "graph_rules": {
            "equal-01": [
                ":arg1~sum-of",
                ":arg2~5"
            ]
        },
        "head": "equal-01",
        "name": ":root/ROOT~equal-01",
        "noun_info": {},
        "tree": "'' :op1/CD :arg1/CC :op2/CD XXX-VBP :arg2/NP .",
        "tree_rules": [
            ":arg1~sum-of",
            ":arg2~5"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/CC~sum-of - \n\t :arg2/NP~12 -)",
        "graph_rules": {
            "equal-01": [
                ":arg1~sum-of",
                ":arg2~12"
            ]
        },
        "head": "equal-01",
        "name": ":root/ROOT~equal-01",
        "noun_info": {},
        "tree": ":op1/CD :arg1/CC :op2/CD XXX-VBP :arg2/NP .",
        "tree_rules": [
            ":arg1~sum-of",
            ":arg2~12"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/CC~sum-of - \n\t :arg2/NP~15 -)",
        "graph_rules": {
            "equal-01": [
                ":arg1~sum-of",
                ":arg2~15"
            ]
        },
        "head": "equal-01",
        "name": ":root/ROOT~equal-01",
        "noun_info": {},
        "tree": ":op1/CD :arg1/CC :op2/CD XXX-VBP :arg2/NP .",
        "tree_rules": [
            ":arg1~sum-of",
            ":arg2~15"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1-of/JJ~good-02 -)",
        "graph_rules": {
            "morning": [
                ":arg1-of~good-02"
            ]
        },
        "head": "morning",
        "name": ":root/ROOT~morning",
        "noun_info": {},
        "tree": ":arg1-of/JJ XXX-NN .",
        "tree_rules": [
            ":arg1-of~good-02"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/CC~sum-of - \n\t :arg2/NP~22 -)",
        "graph_rules": {
            "equal-01": [
                ":arg1~sum-of",
                ":arg2~22"
            ]
        },
        "head": "equal-01",
        "name": ":root/ROOT~equal-01",
        "noun_info": {},
        "tree": ":op2/NP XXX-VBP :arg2/NP - two .",
        "tree_rules": [
            ":arg1~sum-of",
            ":arg2~22"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/CC~sum-of - \n\t :arg2/S~28 -)",
        "graph_rules": {
            "equal-01": [
                ":arg1~sum-of",
                ":arg2~28"
            ]
        },
        "head": "equal-01",
        "name": ":root/ROOT~equal-01",
        "noun_info": {},
        "tree": "XXX-CD - :arg2/S .",
        "tree_rules": [
            ":arg1~sum-of",
            ":arg2~28"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/NP~time - \n\t :polarity/RB~- -)",
        "graph_rules": {
            "have-03": [
                ":arg0~i",
                ":arg1~time",
                ":polarity~-"
            ]
        },
        "head": "have-03",
        "name": ":root/ROOT~have-03",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBP :polarity/RB :arg1/NP .",
        "tree_rules": [
            ":polarity~-",
            ":arg1~time",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/CC~sum-of - \n\t :arg2/S~31 -)",
        "graph_rules": {
            "equal-01": [
                ":arg1~sum-of",
                ":arg2~31"
            ]
        },
        "head": "equal-01",
        "name": ":root/ROOT~equal-01",
        "noun_info": {},
        "tree": "XXX-CD - :arg2/S .",
        "tree_rules": [
            ":arg1~sum-of",
            ":arg2~31"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "phew",
        "name": ":root/ROOT~phew",
        "noun_info": {},
        "tree": "XXX-NN !",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/S~501622731 - \n\t :arg2/ADJP~that -)",
        "graph_rules": {
            "equal-01": [
                ":arg1~501622731",
                ":arg2~that"
            ]
        },
        "head": "equal-01",
        "name": ":root/ROOT~equal-01",
        "noun_info": {},
        "tree": "then :arg2/ADJP XXX-VBZ :arg1/S two - thousand , seven - hundred - thirty - one . ''",
        "tree_rules": [
            ":arg1~501622731",
            ":arg2~that"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "eh",
        "name": ":root/ROOT~eh",
        "noun_info": {},
        "tree": "'' XXX-UH ?",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~you - \n\t :arg2/NP~there - \n\t :mod/ADVP~still -)",
        "graph_rules": {
            "be-located-at-91": [
                ":arg1~you",
                ":arg2~there",
                ":mod~still"
            ]
        },
        "head": "be-located-at-91",
        "name": ":root/ROOT~be-located-at-91",
        "noun_info": {},
        "tree": "are :arg1/NP :mod/ADVP :arg2/NP ?",
        "tree_rules": [
            ":arg1~you",
            ":mod~still",
            ":arg2~there"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/PRN~501000000 - \n\t :op2/MD~possible-01 -)",
        "graph_rules": {
            "and": [
                ":op1~501000000",
                ":op2~possible-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "five - hundred - XXX-CC :op1/PRN - :arg1/S ...",
        "tree_rules": [
            ":op1~501000000",
            ":op2~possible-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~i - \n\t :arg2/S~do-02 -)",
        "graph_rules": {
            "obligate-01": [
                ":arg1~i",
                ":arg2~do-02"
            ]
        },
        "head": "obligate-01",
        "name": ":root/ROOT~obligate-01",
        "noun_info": {},
        "tree": ":arg1/NP XXX-VBP :arg1/ADVP :arg2/S !",
        "tree_rules": [
            ":arg2~do-02",
            ":arg1~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/PP~matter - \n\t :arg1/NP~i -)",
        "graph_rules": {
            "concern-01": [
                ":arg0~matter",
                ":arg1~i"
            ]
        },
        "head": "concern-01",
        "name": ":root/ROOT~concern-01",
        "noun_info": {},
        "tree": ":arg1/NP am XXX-VBN :arg0/PP .",
        "tree_rules": [
            ":arg0~matter",
            ":arg1~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/E~coref - \n\t :arg2/PP~balderdash - \n\t :polarity/RB~- -)",
        "graph_rules": {
            "amuse-01": [
                ":arg0~i",
                ":arg1~coref",
                ":arg2~balderdash",
                ":polarity~-"
            ]
        },
        "head": "amuse-01",
        "name": ":root/ROOT~amuse-01",
        "noun_info": {},
        "tree": ":arg0/NP :polarity/VBP :polarity/RB XXX-VB myself :arg2/PP .",
        "tree_rules": [
            ":arg2~balderdash",
            ":polarity~-",
            ":polarity~-",
            ":arg0~i",
            ":arg1~coref"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~7 - \n\t :arg2/CC~sum-of -)",
        "graph_rules": {
            "equal-01": [
                ":arg1~7",
                ":arg2~sum-of"
            ]
        },
        "head": "equal-01",
        "name": ":root/ROOT~equal-01",
        "noun_info": {},
        "tree": ":op1/CD :arg2/CC :op2/CD XXX-VBP :arg1/NP ... ''",
        "tree_rules": [
            ":arg2~sum-of",
            ":arg1~7"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~businessman - \n\t :arg1/NP~head -)",
        "graph_rules": {
            "raise-01": [
                ":arg0~businessman",
                ":arg1~head"
            ]
        },
        "head": "raise-01",
        "name": ":root/ROOT~raise-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD :arg1/NP .",
        "tree_rules": [
            ":arg1~head",
            ":arg0~businessman"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~i - \n\t :arg1-of/VBP~have-frequency-91 - \n\t :time/SBAR~inhabit-01 -)",
        "graph_rules": {
            "disturb-01": [
                ":arg1~i",
                ":arg1-of~have-frequency-91",
                ":time~inhabit-01"
            ]
        },
        "head": "disturb-01",
        "name": ":root/ROOT~disturb-01",
        "noun_info": {},
        "tree": "'' :duration/PP :arg1-of/VBP been XXX-VBN :arg1-of/NP-TMP .",
        "tree_rules": [
            ":arg1~i",
            ":time~inhabit-01",
            ":arg1-of~have-frequency-91",
            ":arg1-of~have-frequency-91"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/IN~disturb-01 - \n\t :arg2/RB~before -)",
        "graph_rules": {
            "be-temporally-at-91": [
                ":arg1~disturb-01",
                ":arg2~before"
            ]
        },
        "head": "be-temporally-at-91",
        "name": ":root/ROOT~be-temporally-at-91",
        "noun_info": {},
        "tree": ":ord/NP was :quant/NP , XXX-WRB :time-of/S :arg3/VP .",
        "tree_rules": [
            ":arg2~before",
            ":arg1~disturb-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~attack-01 - \n\t :arg1/NP~i - \n\t :time/RB~before - \n\t :domain/E~disturb-01 -)",
        "graph_rules": {
            "disturb-01": [
                ":arg0~attack-01",
                ":arg1~i",
                ":time~before",
                ":domain~disturb-01"
            ]
        },
        "head": "disturb-01",
        "name": ":root/ROOT~disturb-01",
        "noun_info": {},
        "tree": ":ord/NP , :quant/NP :time/RB , :arg1/NP was XXX-VBN :ord/IN :arg0/NP .",
        "tree_rules": [
            ":time~before",
            ":arg0~attack-01",
            ":arg1~i",
            ":domain~disturb-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :degree/VB~enough -)",
        "graph_rules": {
            "exercise-02": [
                ":arg0~i",
                ":degree~enough"
            ]
        },
        "head": "exercise-02",
        "name": ":root/ROOT~exercise-02",
        "noun_info": {},
        "tree": ":arg0/NP :polarity/VBP :polarity/RB :degree/VB :degree/RB XXX-NN .",
        "tree_rules": [
            ":degree~enough",
            ":degree~enough",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/NP~time - \n\t :polarity/DT~- -)",
        "graph_rules": {
            "have-03": [
                ":arg0~i",
                ":arg1~time",
                ":polarity~-"
            ]
        },
        "head": "have-03",
        "name": ":root/ROOT~have-03",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBP :arg1/NP .",
        "tree_rules": [
            ":polarity~-",
            ":arg1~time",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ord/.~ordinal-entity - \n\t :domain/VP~this -)",
        "graph_rules": {
            "disturb-01": [
                ":ord~ordinal-entity",
                ":domain~this"
            ]
        },
        "head": "disturb-01",
        "name": ":root/ROOT~disturb-01",
        "noun_info": {},
        "tree": ":ord/NP - - XXX-RB , :domain/NP :domain/VP :ord/.",
        "tree_rules": [
            ":domain~this",
            ":domain~this",
            ":ord~ordinal-entity",
            ":ord~ordinal-entity"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/S~501000000 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~i",
                ":arg1~501000000"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": ":arg0/NP was XXX-VBG , then , :arg1/S - ''",
        "tree_rules": [
            ":arg0~i",
            ":arg1~501000000"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :quant/NP~multiple -)",
        "graph_rules": {
            "amr-unknown": [
                ":quant~multiple"
            ]
        },
        "head": "amr-unknown",
        "name": ":root/ROOT~amr-unknown",
        "noun_info": {},
        "tree": ":quant/NP XXX-. ''",
        "tree_rules": [
            ":quant~multiple"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~businessman - \n\t :arg1/SBAR~hopeful-03 - \n\t :manner/ADVP~sudden -)",
        "graph_rules": {
            "realize-01": [
                ":arg0~businessman",
                ":arg1~hopeful-03",
                ":manner~sudden"
            ]
        },
        "head": "realize-01",
        "name": ":root/ROOT~realize-01",
        "noun_info": {},
        "tree": ":arg0/NP :manner/ADVP XXX-VBD :arg1/SBAR .",
        "tree_rules": [
            ":arg1~hopeful-03",
            ":arg0~businessman",
            ":manner~sudden"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/NP~object -)",
        "graph_rules": {
            "say-01": [
                ":arg0~he",
                ":arg1~object"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :quant/NP :op1/IN :arg1/NP , '' :arg0/NP XXX-VBD , '' :arg1-of/SBAR . ''",
        "tree_rules": [
            ":arg1~object",
            ":arg0~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "fly",
        "name": ":root/ROOT~fly",
        "noun_info": {},
        "tree": "'' XXX-NNS ? ''",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/INTJ~oh -)",
        "graph_rules": {
            "no": [
                ":mod~oh"
            ]
        },
        "head": "no",
        "name": ":root/ROOT~no",
        "noun_info": {},
        "tree": ":mod/INTJ , XXX-DT .",
        "tree_rules": [
            ":mod~oh"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/NP~little - \n\t :arg0-of/ADJP~glitter-01 -)",
        "graph_rules": {
            "object": [
                ":mod~little",
                ":arg0-of~glitter-01"
            ]
        },
        "head": "object",
        "name": ":root/ROOT~object",
        "noun_info": {},
        "tree": ":mod/NP :arg0-of/ADJP XXX-NNS . ''",
        "tree_rules": [
            ":arg0-of~glitter-01",
            ":mod~little"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "bee",
        "name": ":root/ROOT~bee",
        "noun_info": {},
        "tree": "'' XXX-NNS ? ''",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/INTJ~oh -)",
        "graph_rules": {
            "no": [
                ":mod~oh"
            ]
        },
        "head": "no",
        "name": ":root/ROOT~no",
        "noun_info": {},
        "tree": ":mod/INTJ , XXX-DT .",
        "tree_rules": [
            ":mod~oh"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~object - \n\t :arg1/VP~dream-01 -)",
        "graph_rules": {
            "cause-01": [
                ":arg0~object",
                ":arg1~dream-01"
            ]
        },
        "head": "cause-01",
        "name": ":root/ROOT~cause-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-WDT :consist-of/S :manner/PP .",
        "tree_rules": [
            ":arg0~object",
            ":arg1~dream-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/PP~matter - \n\t :arg1/PP~i -)",
        "graph_rules": {
            "concern-01": [
                ":arg0~matter",
                ":arg1~i"
            ]
        },
        "head": "concern-01",
        "name": ":root/ROOT~concern-01",
        "noun_info": {},
        "tree": ":arg1/PP , i am XXX-VBN :arg0/PP .",
        "tree_rules": [
            ":arg0~matter",
            ":arg1~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/DT~- - \n\t :purpose/VP~dream-01 - \n\t :duration/IN~live-01 -)",
        "graph_rules": {
            "time": [
                ":polarity~-",
                ":purpose~dream-01",
                ":duration~live-01"
            ]
        },
        "head": "time",
        "name": ":root/ROOT~time",
        "noun_info": {},
        "tree": "there is :polarity/DT XXX-NN :duration/IN :manner/NP . ''",
        "tree_rules": [
            ":polarity~-",
            ":duration~live-01",
            ":purpose~dream-01",
            ":duration~live-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "ah",
        "name": ":root/ROOT~ah",
        "noun_info": {},
        "tree": "'' XXX-RB !",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~you - \n\t :arg2/NP~star -)",
        "graph_rules": {
            "mean-01": [
                ":arg0~you",
                ":arg2~star"
            ]
        },
        "head": "mean-01",
        "name": ":root/ROOT~mean-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBP :arg2/NP ? ''",
        "tree_rules": [
            ":arg2~star",
            ":arg0~you"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "that-is-it-00",
        "name": ":root/ROOT~that-is-it-00",
        "noun_info": {},
        "tree": "'' yes , XXX-DT 's it .",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "star",
        "name": ":root/ROOT~star",
        "noun_info": {},
        "tree": "the XXX-NNS . ''",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VBP~do-02 -)",
        "graph_rules": {
            "and": [
                ":op2~do-02"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "'' XXX-CC :arg1/WHNP :arg3/SQ ? ''",
        "tree_rules": [
            ":op2~do-02"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/NP~501622731 -)",
        "graph_rules": {
            "have-quant-91": [
                ":arg2~501622731"
            ]
        },
        "head": "have-quant-91",
        "name": ":root/ROOT~have-quant-91",
        "noun_info": {},
        "tree": "'' five - hundred - and - one million , six - hundred - twenty - :arg2/NP - XXX-CD - one .",
        "tree_rules": [
            ":arg2~501622731"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/E~concern-01 - \n\t :op2/S~accurate -)",
        "graph_rules": {
            "and": [
                ":op1~concern-01",
                ":op2~accurate"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "i am XXX-VBN :arg0/PP : :op2/S . ''",
        "tree_rules": [
            ":op2~accurate",
            ":op1~concern-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VBP~do-02 -)",
        "graph_rules": {
            "and": [
                ":op2~do-02"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "'' XXX-CC :arg1/WHNP :arg3/SQ ? ''",
        "tree_rules": [
            ":op2~do-02"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/.~amr-unknown - \n\t :arg3/PP~they -)",
        "graph_rules": {
            "do-02": [
                ":arg0~i",
                ":arg1~amr-unknown",
                ":arg3~they"
            ]
        },
        "head": "do-02",
        "name": ":root/ROOT~do-02",
        "noun_info": {},
        "tree": "'' what do :arg0/NP XXX-VBP :arg3/PP :arg1/. ''",
        "tree_rules": [
            ":arg3~they",
            ":arg0~i",
            ":arg1~amr-unknown"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "yes",
        "name": ":root/ROOT~yes",
        "noun_info": {},
        "tree": "'' XXX-UH . ''",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "nothing",
        "name": ":root/ROOT~nothing",
        "noun_info": {},
        "tree": "'' XXX-NN .",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/LS~i - \n\t :arg1/NP~they -)",
        "graph_rules": {
            "own-01": [
                ":arg0~i",
                ":arg1~they"
            ]
        },
        "head": "own-01",
        "name": ":root/ROOT~own-01",
        "noun_info": {},
        "tree": ":arg0/LS XXX-VB :arg1/NP . ''",
        "tree_rules": [
            ":arg1~they",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~you - \n\t :arg1/NP~star -)",
        "graph_rules": {
            "own-01": [
                ":arg0~you",
                ":arg1~star"
            ]
        },
        "head": "own-01",
        "name": ":root/ROOT~own-01",
        "noun_info": {},
        "tree": "'' :arg0/NP XXX-VBP :arg1/NP ? ''",
        "tree_rules": [
            ":arg1~star",
            ":arg0~you"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "yes",
        "name": ":root/ROOT~yes",
        "noun_info": {},
        "tree": "'' XXX-UH . ''",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP~see-01 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~see-01"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "'' XXX-CC :arg0/NP :arg2/VP - - ''",
        "tree_rules": [
            ":arg2~see-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/JJ~own-01 - \n\t :arg2/VBP~reign-01 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg1~own-01",
                ":arg2~reign-01"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "'' :polarity/S , they :arg2/VBP XXX-RP .",
        "tree_rules": [
            ":arg1~own-01",
            ":arg2~reign-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1-of/ADJP~differ-02 - \n\t :domain/NP~it -)",
        "graph_rules": {
            "matter": [
                ":arg1-of~differ-02",
                ":domain~it"
            ]
        },
        "head": "matter",
        "name": ":root/ROOT~matter",
        "noun_info": {},
        "tree": ":domain/NP is :domain/DT :arg1-of/ADJP XXX-NN . ''",
        "tree_rules": [
            ":domain~it",
            ":arg1-of~differ-02",
            ":domain~it"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VBZ~cause-01 -)",
        "graph_rules": {
            "and": [
                ":op2~cause-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "'' XXX-CC :arg1/WHNP :arg0/SQ :arg1/. ''",
        "tree_rules": [
            ":op2~cause-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~it - \n\t :arg1/S~good-04 -)",
        "graph_rules": {
            "cause-01": [
                ":arg0~it",
                ":arg1~good-04"
            ]
        },
        "head": "cause-01",
        "name": ":root/ROOT~cause-01",
        "noun_info": {},
        "tree": "'' :arg0/NP XXX-VBZ :arg1/S . ''",
        "tree_rules": [
            ":arg1~good-04",
            ":arg0~it"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VBZ~cause-01 -)",
        "graph_rules": {
            "and": [
                ":op2~cause-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "'' XXX-CC :arg1/WHNP :arg0/SQ :arg1/. ''",
        "tree_rules": [
            ":op2~cause-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/SBAR~buy-01 - \n\t :condition/SBAR~discover-01 -)",
        "graph_rules": {
            "possible-01": [
                ":arg1~buy-01",
                ":condition~discover-01"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT~possible-01",
        "noun_info": {},
        "tree": "'' it makes it XXX-JJ :arg1/SBAR , :condition/SBAR . ''",
        "tree_rules": [
            ":arg1~buy-01",
            ":condition~discover-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/E~reason-01 - \n\t :arg2/E~coref -)",
        "graph_rules": {
            "say-01": [
                ":arg0~prince",
                ":arg1~reason-01",
                ":arg2~coref"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :mod/DT :arg0/NN , '' :arg0/NP XXX-VBD :arg2/SBAR ''",
        "tree_rules": [
            ":arg0~prince",
            ":arg1~reason-01",
            ":arg2~coref"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/VP~have-03 -)",
        "graph_rules": {
            "have-concession-91": [
                ":arg1~have-03"
            ]
        },
        "head": "have-concession-91",
        "name": ":root/ROOT~have-concession-91",
        "noun_info": {},
        "tree": "XXX-RB , :arg0/NP :mod/ADVP :arg1/VP .",
        "tree_rules": [
            ":arg1~have-03"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/SBAR~own-01 - \n\t :manner/.~amr-unknown -)",
        "graph_rules": {
            "possible-01": [
                ":arg1~own-01",
                ":manner~amr-unknown"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT~possible-01",
        "noun_info": {},
        "tree": "'' :manner/WHADVP is it XXX-JJ :arg0/PP :manner/. ''",
        "tree_rules": [
            ":arg1~own-01",
            ":manner~amr-unknown",
            ":manner~amr-unknown"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~businessman - \n\t :arg2/SQ~belong-01 - \n\t :manner/ADVP~peevish -)",
        "graph_rules": {
            "retort-01": [
                ":arg0~businessman",
                ":arg2~belong-01",
                ":manner~peevish"
            ]
        },
        "head": "retort-01",
        "name": ":root/MULTI-SENTENCE~retort-01",
        "noun_info": {},
        "tree": "'' to whom :arg2/SQ :arg1/. '' :arg0/NP XXX-VBD , :manner/ADVP .",
        "tree_rules": [
            ":arg2~belong-01",
            ":manner~peevish",
            ":arg0~businessman"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :polarity/RB~- -)",
        "graph_rules": {
            "know-01": [
                ":arg0~i",
                ":polarity~-"
            ]
        },
        "head": "know-01",
        "name": ":root/ROOT~know-01",
        "noun_info": {},
        "tree": "'' :arg0/NP :polarity/VBP :polarity/RB XXX-VB .",
        "tree_rules": [
            ":polarity~-",
            ":polarity~-",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~nobody -)",
        "graph_rules": {
            "belong-01": [
                ":arg1~nobody"
            ]
        },
        "head": "belong-01",
        "name": ":root/ROOT~belong-01",
        "noun_info": {},
        "tree": "XXX-IN :arg1/NP . ''",
        "tree_rules": [
            ":arg1~nobody"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~they - \n\t :arg1/PP~i - \n\t :arg1-of/IN~cause-01 -)",
        "graph_rules": {
            "belong-01": [
                ":arg0~they",
                ":arg1~i",
                ":arg1-of~cause-01"
            ]
        },
        "head": "belong-01",
        "name": ":root/ROOT~belong-01",
        "noun_info": {},
        "tree": "'' :arg0/NP XXX-VBP :arg1/PP , :arg1-of/IN :arg0/S . ''",
        "tree_rules": [
            ":arg1-of~cause-01",
            ":arg1~i",
            ":arg0~they"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :domain/IN~that - \n\t :arg1-of/VP~need-01 -)",
        "graph_rules": {
            "all": [
                ":domain~that",
                ":arg1-of~need-01"
            ]
        },
        "head": "all",
        "name": ":root/ROOT~all",
        "noun_info": {},
        "tree": "'' is :domain/IN XXX-DT that :arg1-of/VP ? ''",
        "tree_rules": [
            ":arg1-of~need-01",
            ":domain~that"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "certain",
        "name": ":root/ROOT~certain",
        "noun_info": {},
        "tree": "'' XXX-RB .",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/NP~patent-01 - \n\t :op2/E~belong-01 - \n\t :condition/SBAR~get-01 -)",
        "graph_rules": {
            "and": [
                ":op1~patent-01",
                ":op2~belong-01",
                ":condition~get-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": ":condition/SBAR , :arg1/NP take XXX-RP :op1/NP : it is yours .",
        "tree_rules": [
            ":op1~patent-01",
            ":condition~get-01",
            ":op2~belong-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/S~think-01 - \n\t :arg1/E~own-01 - \n\t :arg1-of/PP~resemble-01 -)",
        "graph_rules": {
            "cause-01": [
                ":arg0~think-01",
                ":arg1~own-01",
                ":arg1-of~resemble-01"
            ]
        },
        "head": "cause-01",
        "name": ":root/ROOT~cause-01",
        "noun_info": {},
        "tree": "XXX-RB :arg1-of/PP : i :arg1/VP . ''",
        "tree_rules": [
            ":arg1-of~resemble-01",
            ":arg0~think-01",
            ":arg1~own-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/S~true-01 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~prince",
                ":arg1~true-01"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~true-01",
            ":arg0~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/SQ~do-02 -)",
        "graph_rules": {
            "and": [
                ":op2~do-02"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "'' XXX-CC what :op2/SQ :arg1/. ''",
        "tree_rules": [
            ":op2~do-02"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~businessman - \n\t :arg2/S~administer-01 -)",
        "graph_rules": {
            "reply-01": [
                ":arg0~businessman",
                ":arg2~administer-01"
            ]
        },
        "head": "reply-01",
        "name": ":root/ROOT~reply-01",
        "noun_info": {},
        "tree": "'' :arg2/S , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg2~administer-01",
            ":arg0~businessman"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VP~count-01 - \n\t :op2/VP~recount-01 -)",
        "graph_rules": {
            "and": [
                ":op1~count-01",
                ":op2~recount-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "'' :arg0/NP :op1/VP XXX-CC :op2/VP .",
        "tree_rules": [
            ":op1~count-01",
            ":op2~recount-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :domain/NP~it -)",
        "graph_rules": {
            "difficult": [
                ":domain~it"
            ]
        },
        "head": "difficult",
        "name": ":root/ROOT~difficult",
        "noun_info": {},
        "tree": ":domain/NP is XXX-JJ .",
        "tree_rules": [
            ":domain~it"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP~man -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~man"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "XXX-CC :domain/NP :arg2/VP . ''",
        "tree_rules": [
            ":arg2~man"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~prince - \n\t :mod/ADVP~still - \n\t :polarity/RB~- -)",
        "graph_rules": {
            "satisfy-01": [
                ":arg1~prince",
                ":mod~still",
                ":polarity~-"
            ]
        },
        "head": "satisfy-01",
        "name": ":root/ROOT~satisfy-01",
        "noun_info": {},
        "tree": ":arg1/NP was :mod/ADVP :polarity/RB XXX-JJ .",
        "tree_rules": [
            ":polarity~-",
            ":mod~still",
            ":arg1~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/MD~possible-01 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~he",
                ":arg1~possible-01"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :condition/SBAR , '' :arg0/NP XXX-VBD , '' i :op2/VP .",
        "tree_rules": [
            ":arg0~he",
            ":arg1~possible-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/CC~and - \n\t :condition/SBAR~own-01 -)",
        "graph_rules": {
            "possible-01": [
                ":arg1~and",
                ":condition~own-01"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT~possible-01",
        "noun_info": {},
        "tree": ":condition/SBAR , i XXX-MD :op2/VP .",
        "tree_rules": [
            ":arg1~and",
            ":condition~own-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/MD~possible-01 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~possible-01"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :arg1/VP ''",
        "tree_rules": [
            ":arg2~possible-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "no",
        "name": ":root/ROOT~no",
        "noun_info": {},
        "tree": "'' XXX-DT .",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/MD~possible-01 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~possible-01"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :arg1/VP . ''",
        "tree_rules": [
            ":arg2~possible-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/IN~that - \n\t :arg2/.~amr-unknown -)",
        "graph_rules": {
            "mean-01": [
                ":arg1~that",
                ":arg2~amr-unknown"
            ]
        },
        "head": "mean-01",
        "name": ":root/ROOT~mean-01",
        "noun_info": {},
        "tree": "'' whatever does :arg1/IN XXX-VB :arg2/. ''",
        "tree_rules": [
            ":arg1~that",
            ":arg2~amr-unknown"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/IN~that - \n\t :arg2/S~write-01 -)",
        "graph_rules": {
            "mean-01": [
                ":arg1~that",
                ":arg2~write-01"
            ]
        },
        "head": "mean-01",
        "name": ":root/ROOT~mean-01",
        "noun_info": {},
        "tree": "'' that XXX-VBZ :arg1/IN :arg2/S .",
        "tree_rules": [
            ":arg1~that",
            ":arg2~write-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/CC~and - \n\t :time/ADVP~then -)",
        "graph_rules": {
            "and": [
                ":op2~and",
                ":time~then"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :time/ADVP :op2/SBAR",
        "tree_rules": [
            ":op2~and",
            ":time~then"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~all -)",
        "graph_rules": {
            "and": [
                ":op2~all"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "'' XXX-CC :domain/ADVP :op2/VP ? ''",
        "tree_rules": [
            ":op2~all"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~businessman - \n\t :arg1/S~enough -)",
        "graph_rules": {
            "say-01": [
                ":arg0~businessman",
                ":arg1~enough"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~enough",
            ":arg0~businessman"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/S~entertain-01 -)",
        "graph_rules": {
            "think-01": [
                ":arg0~prince",
                ":arg1~entertain-01"
            ]
        },
        "head": "think-01",
        "name": ":root/ROOT~think-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~entertain-01",
            ":arg0~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :domain/NP~it - \n\t :degree/RB~rather -)",
        "graph_rules": {
            "poetry": [
                ":domain~it",
                ":degree~rather"
            ]
        },
        "head": "poetry",
        "name": ":root/ROOT~poetry",
        "noun_info": {},
        "tree": "'' :domain/NP is :degree/RB XXX-JJ .",
        "tree_rules": [
            ":degree~rather",
            ":domain~it"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP~consequence -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~consequence"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "XXX-CC :domain/NP :arg2/VP . ''",
        "tree_rules": [
            ":arg2~consequence"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/NP~idea -)",
        "graph_rules": {
            "have-03": [
                ":arg0~prince",
                ":arg1~idea"
            ]
        },
        "head": "have-03",
        "name": ":root/ROOT~have-03",
        "noun_info": {},
        "tree": ":poss/IN :topic/NP , :arg0/NP XXX-VBD :arg1/NP .",
        "tree_rules": [
            ":arg1~idea",
            ":arg0~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/S~own-01 - \n\t :arg2/NP~businessman - \n\t :arg3/NP~converse-01 -)",
        "graph_rules": {
            "continue-02": [
                ":arg0~he",
                ":arg1~own-01",
                ":arg2~businessman",
                ":arg3~converse-01"
            ]
        },
        "head": "continue-02",
        "name": ":root/ROOT~continue-02",
        "noun_info": {},
        "tree": "'' :arg1/S , '' :arg0/NP XXX-VBD :arg3/NP :arg3/NP-TMP .",
        "tree_rules": [
            ":arg3~converse-01",
            ":arg2~businessman",
            ":arg3~converse-01",
            ":arg1~own-01",
            ":arg0~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/E~volcano -)",
        "graph_rules": {
            "own-01": [
                ":arg0~i",
                ":arg1~volcano"
            ]
        },
        "head": "own-01",
        "name": ":root/ROOT~own-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-JJ :quant/CD :arg1/NNS , :arg0/SBAR :frequency/IN :arg3/NP -lrb- :arg3/SBAR ; :arg0/NP :polarity/ADVP :arg0/VP -rrb- .",
        "tree_rules": [
            ":arg0~i",
            ":arg1~volcano"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/S~own-01 - \n\t :arg1/NP~use-01 -)",
        "graph_rules": {
            "cause-01": [
                ":arg0~own-01",
                ":arg1~use-01"
            ]
        },
        "head": "cause-01",
        "name": ":root/ROOT~cause-01",
        "noun_info": {},
        "tree": ":op1/S , :arg1/CC it is of :arg1/NP to :op2/NP , XXX-WDT :arg0/S .",
        "tree_rules": [
            ":arg0~own-01",
            ":arg1~use-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/PP~use-01 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~use-01"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "XXX-CC :arg1/NP are :arg2/PP :arg0/PP ''",
        "tree_rules": [
            ":arg2~use-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/S~open-01 - \n\t :arg2/S~find-01 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg1~open-01",
                ":arg2~find-01"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": ":arg1/S , XXX-CC :arg2/S .",
        "tree_rules": [
            ":arg1~open-01",
            ":arg2~find-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~go-02 -)",
        "graph_rules": {
            "and": [
                ":op2~go-02"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :op2/VP .",
        "tree_rules": [
            ":op2~go-02"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/ADJP~extraordinary - \n\t :arg1-of/ADVP~simple-02 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~he",
                ":arg1~extraordinary",
                ":arg1-of~simple-02"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :domain/S , '' :arg0/NP XXX-VBD :arg1-of/ADVP , :arg0-of/S .",
        "tree_rules": [
            ":arg1~extraordinary",
            ":arg1-of~simple-02",
            ":arg0~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/NP~14 -)",
        "graph_rules": {
            "chapter": [
                ":mod~14"
            ]
        },
        "head": "chapter",
        "name": ":root/ROOT~chapter",
        "noun_info": {},
        "tree": "XXX-NN :mod/NP .",
        "tree_rules": [
            ":mod~14"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :degree/RB~very - \n\t :domain/NP~planet -)",
        "graph_rules": {
            "strange": [
                ":degree~very",
                ":domain~planet"
            ]
        },
        "head": "strange",
        "name": ":root/ROOT~strange",
        "noun_info": {},
        "tree": ":domain/NP was :degree/RB XXX-JJ .",
        "tree_rules": [
            ":degree~very",
            ":domain~planet"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :compared-to/PP~all - \n\t :degree/E~most - \n\t :domain/NP~it -)",
        "graph_rules": {
            "small": [
                ":compared-to~all",
                ":degree~most",
                ":domain~it"
            ]
        },
        "head": "small",
        "name": ":root/ROOT~small",
        "noun_info": {},
        "tree": ":domain/NP was the XXX-JJS :compared-to/PP .",
        "tree_rules": [
            ":compared-to~all",
            ":domain~it",
            ":degree~most"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~it - \n\t :arg1/CC~and - \n\t :extent/NP~enough -)",
        "graph_rules": {
            "accommodate-01": [
                ":arg0~it",
                ":arg1~and",
                ":extent~enough"
            ]
        },
        "head": "accommodate-01",
        "name": ":root/ROOT~accommodate-01",
        "noun_info": {},
        "tree": ":op2/NP was :extent/NP XXX-IN :arg0/NP :arg1/PP .",
        "tree_rules": [
            ":arg0~it",
            ":extent~enough",
            ":arg1~and"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/RB~- - \n\t :arg1/NP~explain-01 -)",
        "graph_rules": {
            "possible-01": [
                ":polarity~-",
                ":arg1~explain-01"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT~possible-01",
        "noun_info": {},
        "tree": ":arg0/NP was :polarity/RB XXX-JJ :op2/S .",
        "tree_rules": [
            ":arg1~explain-01",
            ":polarity~-"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/S~say-01 -)",
        "graph_rules": {
            "have-concession-91": [
                ":arg1~say-01"
            ]
        },
        "head": "have-concession-91",
        "name": ":root/ROOT~have-concession-91",
        "noun_info": {},
        "tree": "XXX-CC :arg1/S : '' :arg1/S .",
        "tree_rules": [
            ":arg1~say-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/ADJP~absurd -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~absurd"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "XXX-CC :domain/NP is :polarity/RB :arg2/ADJP .",
        "tree_rules": [
            ":arg2~absurd"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/VP~mean-01 -)",
        "graph_rules": {
            "cause-01": [
                ":arg0~mean-01"
            ]
        },
        "head": "cause-01",
        "name": ":root/ROOT~cause-01",
        "noun_info": {},
        "tree": "XXX-IN :mod/ADVP :arg1/NP :arg0/VP .",
        "tree_rules": [
            ":arg0~mean-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/CC~or - \n\t :arg2/S~sleep-01 - \n\t :time/SBAR~put-out-09 -)",
        "graph_rules": {
            "send-02": [
                ":arg0~he",
                ":arg1~or",
                ":arg2~sleep-01",
                ":time~put-out-09"
            ]
        },
        "head": "send-02",
        "name": ":root/ROOT~send-02",
        "noun_info": {},
        "tree": ":time/SBAR , :arg0/NP XXX-VBZ :op2/NP :arg2/S .",
        "tree_rules": [
            ":arg1~or",
            ":arg2~sleep-01",
            ":time~put-out-09",
            ":arg0~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1-of/JJ~beautiful-02 - \n\t :domain/NP~that -)",
        "graph_rules": {
            "occupation": [
                ":arg1-of~beautiful-02",
                ":domain~that"
            ]
        },
        "head": "occupation",
        "name": ":root/ROOT~occupation",
        "noun_info": {},
        "tree": ":domain/NP is :domain/DT :arg1-of/JJ XXX-NN .",
        "tree_rules": [
            ":domain~that",
            ":arg1-of~beautiful-02",
            ":domain~that"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/IN~cause-01 -)",
        "graph_rules": {
            "and": [
                ":op2~cause-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :op2/IN :arg0/S , it :arg1/VP . ''",
        "tree_rules": [
            ":op2~cause-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/E~person - \n\t :manner/ADVP~respect-01 - \n\t :time/SBAR~arrive-01 -)",
        "graph_rules": {
            "salute-01": [
                ":arg0~he",
                ":arg1~person",
                ":manner~respect-01",
                ":time~arrive-01"
            ]
        },
        "head": "salute-01",
        "name": ":root/ROOT~salute-01",
        "noun_info": {},
        "tree": ":time/SBAR :arg0/NP :manner/ADVP XXX-VBD :arg1/NP .",
        "tree_rules": [
            ":time~arrive-01",
            ":arg0~he",
            ":manner~respect-01",
            ":arg1~person"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1-of/JJ~good-02 -)",
        "graph_rules": {
            "morning": [
                ":arg1-of~good-02"
            ]
        },
        "head": "morning",
        "name": ":root/ROOT~morning",
        "noun_info": {},
        "tree": "'' :arg1-of/JJ XXX-NN .",
        "tree_rules": [
            ":arg1-of~good-02"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/.~amr-unknown - \n\t :arg1/VP~put-out-09 -)",
        "graph_rules": {
            "cause-01": [
                ":arg0~amr-unknown",
                ":arg1~put-out-09"
            ]
        },
        "head": "cause-01",
        "name": ":root/ROOT~cause-01",
        "noun_info": {},
        "tree": "XXX-WRB have :arg0/NP :mod/ADVP :arg1/VP :arg0/. ''",
        "tree_rules": [
            ":arg1~put-out-09",
            ":arg0~amr-unknown"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/E~person - \n\t :arg2/S~order-01 -)",
        "graph_rules": {
            "reply-01": [
                ":arg0~person",
                ":arg2~order-01"
            ]
        },
        "head": "reply-01",
        "name": ":root/ROOT~reply-01",
        "noun_info": {},
        "tree": "'' :arg2/S , '' XXX-VBD :arg1/NP .",
        "tree_rules": [
            ":arg2~order-01",
            ":arg0~person"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1-of/NP~good-02 -)",
        "graph_rules": {
            "morning": [
                ":arg1-of~good-02"
            ]
        },
        "head": "morning",
        "name": ":root/ROOT~morning",
        "noun_info": {},
        "tree": "'' :arg1-of/NP XXX-NN . ''",
        "tree_rules": [
            ":arg1-of~good-02"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/.~amr-unknown -)",
        "graph_rules": {
            "order-01": [
                ":arg2~amr-unknown"
            ]
        },
        "head": "order-01",
        "name": ":root/ROOT~order-01",
        "noun_info": {},
        "tree": "'' what are the XXX-NNS :arg2/. ''",
        "tree_rules": [
            ":arg2~amr-unknown"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP~put-out-09 -)",
        "graph_rules": {
            "order-01": [
                ":arg2~put-out-09"
            ]
        },
        "head": "order-01",
        "name": ":root/ROOT~order-01",
        "noun_info": {},
        "tree": "'' the XXX-NNS :arg2/VP .",
        "tree_rules": [
            ":arg2~put-out-09"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1-of/JJ~good-02 -)",
        "graph_rules": {
            "evening": [
                ":arg1-of~good-02"
            ]
        },
        "head": "evening",
        "name": ":root/ROOT~evening",
        "noun_info": {},
        "tree": ":arg1-of/JJ XXX-NN . ''",
        "tree_rules": [
            ":arg1-of~good-02"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~light-04 -)",
        "graph_rules": {
            "and": [
                ":op2~light-04"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :op2/VP .",
        "tree_rules": [
            ":op2~light-04"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/WHADVP~cause-01 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~cause-01"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "'' XXX-CC :arg1/S :arg0/. ''",
        "tree_rules": [
            ":arg2~cause-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/E~person - \n\t :arg2/S~order-01 -)",
        "graph_rules": {
            "reply-01": [
                ":arg0~person",
                ":arg2~order-01"
            ]
        },
        "head": "reply-01",
        "name": ":root/ROOT~reply-01",
        "noun_info": {},
        "tree": "'' :arg2/S , '' XXX-VBD :arg1/NP .",
        "tree_rules": [
            ":arg2~order-01",
            ":arg0~person"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/S~understand-01 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~prince",
                ":arg1~understand-01"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~understand-01",
            ":arg0~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~person - \n\t :arg1/S~nothing -)",
        "graph_rules": {
            "say-01": [
                ":arg0~person",
                ":arg1~nothing"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' XXX-VBD :arg1/NP .",
        "tree_rules": [
            ":arg0~person",
            ":arg1~nothing"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :domain/VP~order -)",
        "graph_rules": {
            "order": [
                ":domain~order"
            ]
        },
        "head": "order",
        "name": ":root/ROOT~order",
        "noun_info": {},
        "tree": "'' XXX-NNS :domain/VP .",
        "tree_rules": [
            ":domain~order"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1-of/JJ~good-02 -)",
        "graph_rules": {
            "morning": [
                ":arg1-of~good-02"
            ]
        },
        "head": "morning",
        "name": ":root/ROOT~morning",
        "noun_info": {},
        "tree": ":arg1-of/JJ XXX-NN . ''",
        "tree_rules": [
            ":arg1-of~good-02"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~put-out-09 -)",
        "graph_rules": {
            "and": [
                ":op2~put-out-09"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :op2/VP .",
        "tree_rules": [
            ":op2~put-out-09"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/NP~forehead - \n\t :arg2/PP~handkerchief - \n\t :time/ADVP~then -)",
        "graph_rules": {
            "mop-01": [
                ":arg0~he",
                ":arg1~forehead",
                ":arg2~handkerchief",
                ":time~then"
            ]
        },
        "head": "mop-01",
        "name": ":root/ROOT~mop-01",
        "noun_info": {},
        "tree": ":time/ADVP :arg0/NP XXX-VBD :arg1/NP :arg2/PP .",
        "tree_rules": [
            ":arg1~forehead",
            ":arg2~handkerchief",
            ":time~then",
            ":arg0~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/NP~profession -)",
        "graph_rules": {
            "follow-02": [
                ":arg0~i",
                ":arg1~profession"
            ]
        },
        "head": "follow-02",
        "name": ":root/ROOT~follow-02",
        "noun_info": {},
        "tree": "'' :arg0/NP XXX-VB :arg1/NP .",
        "tree_rules": [
            ":arg1~profession",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~it - \n\t :time/PP~day -)",
        "graph_rules": {
            "reasonable-02": [
                ":arg1~it",
                ":time~day"
            ]
        },
        "head": "reasonable-02",
        "name": ":root/ROOT~reasonable-02",
        "noun_info": {},
        "tree": ":time/PP :arg1/NP was XXX-JJ .",
        "tree_rules": [
            ":time~day",
            ":arg1~it"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/S~put-out-09 - \n\t :op2/S~light-04 -)",
        "graph_rules": {
            "and": [
                ":op1~put-out-09",
                ":op2~light-04"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": ":op1/S , XXX-CC :op2/S .",
        "tree_rules": [
            ":op1~put-out-09",
            ":op2~light-04"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/CC~and -)",
        "graph_rules": {
            "have-03": [
                ":arg0~i",
                ":arg1~and"
            ]
        },
        "head": "have-03",
        "name": ":root/ROOT~have-03",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD :op1/NP . ''",
        "tree_rules": [
            ":arg1~and",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~change-01 -)",
        "graph_rules": {
            "and": [
                ":op2~change-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "'' XXX-CC :op2/VP ? ''",
        "tree_rules": [
            ":op2~change-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/E~person - \n\t :arg1/S~change-01 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~person",
                ":arg1~change-01"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' XXX-VBD :arg1/NP .",
        "tree_rules": [
            ":arg1~change-01",
            ":arg0~person"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :domain/NP~that -)",
        "graph_rules": {
            "tragedy": [
                ":domain~that"
            ]
        },
        "head": "tragedy",
        "name": ":root/ROOT~tragedy",
        "noun_info": {},
        "tree": "'' :domain/NP is the XXX-NN !",
        "tree_rules": [
            ":domain~that"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/S~turn-01 - \n\t :op2/S~change-01 -)",
        "graph_rules": {
            "and": [
                ":op1~turn-01",
                ":op2~change-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": ":op1/S XXX-CC :op2/S ! ''",
        "tree_rules": [
            ":op1~turn-01",
            ":op2~change-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/NP~turn-01 - \n\t :op2/S~have-03 - \n\t :time/FRAG~then -)",
        "graph_rules": {
            "and": [
                ":op1~turn-01",
                ":op2~have-03",
                ":time~then"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "'' :time/FRAG :arg1/NP :time/ADVP makes :arg3/NP , XXX-CC :op2/S .",
        "tree_rules": [
            ":op1~turn-01",
            ":time~then",
            ":op2~have-03"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~i - \n\t :arg2/CC~and - \n\t :frequency/DT~rate-entity-91 -)",
        "graph_rules": {
            "obligate-01": [
                ":arg1~i",
                ":arg2~and",
                ":frequency~rate-entity-91"
            ]
        },
        "head": "obligate-01",
        "name": ":root/ROOT~obligate-01",
        "noun_info": {},
        "tree": ":arg2/NP-TMP :arg1/NP XXX-VBP :op1/S :arg2/CC :op2/VP ! ''",
        "tree_rules": [
            ":frequency~rate-entity-91",
            ":frequency~rate-entity-91",
            ":arg2~and",
            ":arg1~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :degree/RB~very - \n\t :domain/.~that -)",
        "graph_rules": {
            "funny": [
                ":degree~very",
                ":domain~that"
            ]
        },
        "head": "funny",
        "name": ":root/ROOT~funny",
        "noun_info": {},
        "tree": "'' :domain/NP is :degree/RB XXX-JJ :domain/.",
        "tree_rules": [
            ":degree~very",
            ":domain~that",
            ":domain~that"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~temporal-quantity - \n\t :arg2/NP~temporal-quantity - \n\t :mod/RB~only - \n\t :location/SBAR~live-01 -)",
        "graph_rules": {
            "last-01": [
                ":arg1~temporal-quantity",
                ":arg2~temporal-quantity",
                ":mod~only",
                ":location~live-01"
            ]
        },
        "head": "last-01",
        "name": ":root/ROOT~last-01",
        "noun_info": {},
        "tree": ":arg1/NP XXX-VBZ :arg2/NP , here :location/SBAR ! ''",
        "tree_rules": [
            ":mod~only",
            ":arg2~temporal-quantity",
            ":location~live-01",
            ":arg1~temporal-quantity"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/E~person - \n\t :arg1/ADJP~funny -)",
        "graph_rules": {
            "say-01": [
                ":arg0~person",
                ":arg1~funny"
            ]
        },
        "head": "say-01",
        "name": ":root/MULTI-SENTENCE~say-01",
        "noun_info": {},
        "tree": "'' :domain/NP is :polarity/RB :arg1/ADJP :degree/ADVP :arg0-of/. '' XXX-VBD :arg1/NP .",
        "tree_rules": [
            ":arg1~funny",
            ":arg0~person"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP-TMP~temporal-quantity - \n\t :duration-of/VP~talk-01 -)",
        "graph_rules": {
            "pass-03": [
                ":arg1~temporal-quantity",
                ":duration-of~talk-01"
            ]
        },
        "head": "pass-03",
        "name": ":root/ROOT~pass-03",
        "noun_info": {},
        "tree": "'' XXX-IN :duration-of/S :duration-of/VP . ''",
        "tree_rules": [
            ":arg1~temporal-quantity",
            ":duration-of~talk-01",
            ":duration-of~talk-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :quant c \n\t :unit (m / month))",
        "graph_rules": {},
        "head": "temporal-quantity",
        "name": ":root/ROOT~temporal-quantity",
        "noun_info": {},
        "tree": "'' XXX-DT XXX-NN ? ''",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :unit (m / month) \n\t :quant c)",
        "graph_rules": {},
        "head": "temporal-quantity",
        "name": ":root/ROOT~temporal-quantity",
        "noun_info": {},
        "tree": "'' yes , XXX-DT XXX-NN .",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :unit (m / minute) \n\t :quant c)",
        "graph_rules": {},
        "head": "temporal-quantity",
        "name": ":root/ROOT~temporal-quantity",
        "noun_info": {},
        "tree": "XXX-CD XXX-NNS .",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :unit (d / day) \n\t :quant c)",
        "graph_rules": {},
        "head": "temporal-quantity",
        "name": ":root/ROOT~temporal-quantity",
        "noun_info": {},
        "tree": "XXX-CD XXX-NNS .",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1-of/JJ~good-02 -)",
        "graph_rules": {
            "evening": [
                ":arg1-of~good-02"
            ]
        },
        "head": "evening",
        "name": ":root/ROOT~evening",
        "noun_info": {},
        "tree": ":arg1-of/JJ XXX-NN . ''",
        "tree_rules": [
            ":arg1-of~good-02"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~light-04 -)",
        "graph_rules": {
            "and": [
                ":op2~light-04"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :op2/VP .",
        "tree_rules": [
            ":op2~light-04"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/S~love-01 - \n\t :time/SBAR~watch-01 -)",
        "graph_rules": {
            "feel-01": [
                ":arg0~prince",
                ":arg1~love-01",
                ":time~watch-01"
            ]
        },
        "head": "feel-01",
        "name": ":root/ROOT~feel-01",
        "noun_info": {},
        "tree": ":time/SBAR , he XXX-VBD :arg1-of/IN :arg1/S .",
        "tree_rules": [
            ":arg0~prince",
            ":arg1~love-01",
            ":time~watch-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/S~remember-01 - \n\t :op2/S~want-01 -)",
        "graph_rules": {
            "and": [
                ":op1~remember-01",
                ":op2~want-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": ":op1/S ; XXX-CC :op2/S .",
        "tree_rules": [
            ":op1~remember-01",
            ":op2~want-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/MD~possible-01 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~he",
                ":arg1~possible-01"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :mod/S , '' :arg0/NP XXX-VBD , '' i :arg1/VP ''",
        "tree_rules": [
            ":arg0~he",
            ":arg1~possible-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~person - \n\t :arg1/S~want-01 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~person",
                ":arg1~want-01"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' XXX-VBD :arg1/NP .",
        "tree_rules": [
            ":arg0~person",
            ":arg1~want-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/VP~possible-01 -)",
        "graph_rules": {
            "cause-01": [
                ":arg0~possible-01"
            ]
        },
        "head": "cause-01",
        "name": ":root/ROOT~cause-01",
        "noun_info": {},
        "tree": "XXX-IN it :arg0/VP .",
        "tree_rules": [
            ":arg0~possible-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/PP~explain-01 -)",
        "graph_rules": {
            "go-on-25": [
                ":arg0~prince",
                ":arg1~explain-01"
            ]
        },
        "head": "go-on-25",
        "name": ":root/ROOT~go-on-25",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD :arg1/PP : '' :arg0/S .",
        "tree_rules": [
            ":arg1~explain-01",
            ":arg0~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~you - \n\t :arg1/VP~walk-01 - \n\t :purpose/TO~be-located-at-91 -)",
        "graph_rules": {
            "need-01": [
                ":arg0~you",
                ":arg1~walk-01",
                ":purpose~be-located-at-91"
            ]
        },
        "head": "need-01",
        "name": ":root/ROOT~need-01",
        "noun_info": {},
        "tree": ":time/S , :arg0/NP XXX-VBP :mod/RB :arg1/VP .",
        "tree_rules": [
            ":purpose~be-located-at-91",
            ":arg1~walk-01",
            ":arg0~you"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~you - \n\t :time/SBAR~want-01 - \n\t :arg0-of/RB~cause-01 -)",
        "graph_rules": {
            "walk-01": [
                ":arg0~you",
                ":time~want-01",
                ":arg0-of~cause-01"
            ]
        },
        "head": "walk-01",
        "name": ":root/ROOT~walk-01",
        "noun_info": {},
        "tree": ":time/SBAR , :arg0/NP will XXX-VB - - and :arg1/S . ''",
        "tree_rules": [
            ":time~want-01",
            ":arg0~you",
            ":arg0-of~cause-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/E~person - \n\t :arg1/S~do-02 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~person",
                ":arg1~do-02"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' XXX-VBD :arg1/NP .",
        "tree_rules": [
            ":arg1~do-02",
            ":arg0~person"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/VP~sleep-01 - \n\t :time/PP~live-01 -)",
        "graph_rules": {
            "love-01": [
                ":arg0~i",
                ":arg1~sleep-01",
                ":time~live-01"
            ]
        },
        "head": "love-01",
        "name": ":root/ROOT~love-01",
        "noun_info": {},
        "tree": "'' :quant/NP :mod/ADVP :arg0/NP XXX-NN :time/PP :arg1/VP . ''",
        "tree_rules": [
            ":time~live-01",
            ":arg0~i",
            ":arg1~sleep-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/S~lucky -)",
        "graph_rules": {
            "say-01": [
                ":arg0~prince",
                ":arg1~lucky"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~lucky",
            ":arg0~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/E~person - \n\t :arg1/S~lucky -)",
        "graph_rules": {
            "say-01": [
                ":arg0~person",
                ":arg1~lucky"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' XXX-VBD :arg1/NP .",
        "tree_rules": [
            ":arg1~lucky",
            ":arg0~person"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1-of/NP~good-02 -)",
        "graph_rules": {
            "morning": [
                ":arg1-of~good-02"
            ]
        },
        "head": "morning",
        "name": ":root/ROOT~morning",
        "noun_info": {},
        "tree": "'' :arg1-of/NP XXX-NN . ''",
        "tree_rules": [
            ":arg1-of~good-02"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~put-out-09 -)",
        "graph_rules": {
            "and": [
                ":op2~put-out-09"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :op2/VP .",
        "tree_rules": [
            ":op2~put-out-09"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/PRN~scorn-01 - \n\t :arg2/E~coref - \n\t :time/SBAR~continue-01 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~prince",
                ":arg1~scorn-01",
                ":arg2~coref",
                ":time~continue-01"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :mod/IN :arg1/NP , '' XXX-VBD :arg0/NP :domain/PP , :time/SBAR .",
        "tree_rules": [
            ":arg1~scorn-01",
            ":arg0~prince",
            ":time~continue-01",
            ":arg2~coref"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/VP~seem-01 -)",
        "graph_rules": {
            "have-concession-91": [
                ":arg1~seem-01"
            ]
        },
        "head": "have-concession-91",
        "name": ":root/ROOT~have-concession-91",
        "noun_info": {},
        "tree": "XXX-RB :domain/NP :arg1/VP .",
        "tree_rules": [
            ":arg1~seem-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/IN~cause-01 -)",
        "graph_rules": {
            "possible-01": [
                ":arg1~cause-01"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT~possible-01",
        "noun_info": {},
        "tree": "XXX-RB that is :arg1/IN :arg0/S . ''",
        "tree_rules": [
            ":arg1~cause-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VP~breathe-02 - \n\t :op2/VP~say-01 -)",
        "graph_rules": {
            "and": [
                ":op1~breathe-02",
                ":op2~say-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": ":arg0/NP :op1/VP , XXX-CC :op2/VP : '' :mod/IN :arg2/S .",
        "tree_rules": [
            ":op1~breathe-02",
            ":op2~say-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/ADJP~small -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~small"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "XXX-CC :domain/NP is :mod/ADVP :arg2/ADJP .",
        "tree_rules": [
            ":arg2~small"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :poss/PP~it - \n\t :beneficiary/PP~person - \n\t :polarity/DT~- -)",
        "graph_rules": {
            "room": [
                ":poss~it",
                ":beneficiary~person",
                ":polarity~-"
            ]
        },
        "head": "room",
        "name": ":root/ROOT~room",
        "noun_info": {},
        "tree": "there is :polarity/DT XXX-NN :poss/PP :beneficiary/PP ''",
        "tree_rules": [
            ":polarity~-",
            ":poss~it",
            ":beneficiary~person"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/RB~- - \n\t :arg0/NP~prince - \n\t :arg2/NP~confess-01 -)",
        "graph_rules": {
            "dare-01": [
                ":polarity~-",
                ":arg0~prince",
                ":arg2~confess-01"
            ]
        },
        "head": "dare-01",
        "name": ":root/ROOT~dare-01",
        "noun_info": {},
        "tree": "what :arg0/NP :polarity/VBD :polarity/RB XXX-VB :arg2/NP was :frequency/SBAR :arg3/NP !",
        "tree_rules": [
            ":arg2~confess-01",
            ":polarity~-",
            ":polarity~-",
            ":arg0~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/NP~15 -)",
        "graph_rules": {
            "chapter": [
                ":mod~15"
            ]
        },
        "head": "chapter",
        "name": ":root/ROOT~chapter",
        "noun_info": {},
        "tree": "XXX-NN :mod/NP .",
        "tree_rules": [
            ":mod~15"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :domain/E~planet - \n\t :quant/JJ~product-of -)",
        "graph_rules": {
            "large": [
                ":domain~planet",
                ":quant~product-of"
            ]
        },
        "head": "large",
        "name": ":root/ROOT~large",
        "noun_info": {},
        "tree": ":op2/NP was :ord/NP XXX-JJR :ord/PP .",
        "tree_rules": [
            ":quant~product-of",
            ":domain~planet"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/PP~gentleman - \n\t :arg1/NP~it -)",
        "graph_rules": {
            "inhabit-01": [
                ":arg0~gentleman",
                ":arg1~it"
            ]
        },
        "head": "inhabit-01",
        "name": ":root/ROOT~inhabit-01",
        "noun_info": {},
        "tree": ":arg1/NP was XXX-VBN :arg0/PP .",
        "tree_rules": [
            ":arg0~gentleman",
            ":arg1~it"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/INTJ~oh - \n\t :op2/VP~look-01 -)",
        "graph_rules": {
            "and": [
                ":op1~oh",
                ":op2~look-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": ":op1/INTJ , :op2/VP XXX-.",
        "tree_rules": [
            ":op1~oh",
            ":op2~look-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VP~sit-down-02 - \n\t :op2/VP~pant-01 -)",
        "graph_rules": {
            "and": [
                ":op1~sit-down-02",
                ":op2~pant-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": ":arg1/NP :op1/VP XXX-CC :op2/VP .",
        "tree_rules": [
            ":op1~sit-down-02",
            ":op2~pant-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/E~travel-01 - \n\t :op2/VBN~travel-01 - \n\t :time/ADVP~already -)",
        "graph_rules": {
            "and": [
                ":op1~travel-01",
                ":op2~travel-01",
                ":time~already"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": ":arg0/NP had :time/ADVP :op2/VBN :quant/ADVP XXX-CC :mod/RB :arg1/RB !",
        "tree_rules": [
            ":op2~travel-01",
            ":time~already",
            ":op1~travel-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~gentleman - \n\t :arg1/SQ~come-01 - \n\t :arg2/PP~he -)",
        "graph_rules": {
            "say-01": [
                ":arg0~gentleman",
                ":arg1~come-01",
                ":arg2~he"
            ]
        },
        "head": "say-01",
        "name": ":root/MULTI-SENTENCE~say-01",
        "noun_info": {},
        "tree": "'' where :arg1/SQ :arg3/. '' :arg0/NP XXX-VBD :arg2/PP .",
        "tree_rules": [
            ":arg1~come-01",
            ":arg2~he",
            ":arg0~gentleman"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~you - \n\t :arg1/.~amr-unknown -)",
        "graph_rules": {
            "do-02": [
                ":arg0~you",
                ":arg1~amr-unknown"
            ]
        },
        "head": "do-02",
        "name": ":root/ROOT~do-02",
        "noun_info": {},
        "tree": "'' what are :arg0/NP XXX-VBG :arg1/. ''",
        "tree_rules": [
            ":arg0~you",
            ":arg1~amr-unknown"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~gentleman - \n\t :arg1/S~geographer - \n\t :arg2/PP~he -)",
        "graph_rules": {
            "say-01": [
                ":arg0~gentleman",
                ":arg1~geographer",
                ":arg2~he"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' :arg0/NP XXX-VBD :arg2/PP .",
        "tree_rules": [
            ":arg2~he",
            ":arg1~geographer",
            ":arg0~gentleman"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :domain/NP~geographer - \n\t :arg0-of/SBAR~know-01 -)",
        "graph_rules": {
            "scholar": [
                ":domain~geographer",
                ":arg0-of~know-01"
            ]
        },
        "head": "scholar",
        "name": ":root/ROOT~scholar",
        "noun_info": {},
        "tree": "'' :domain/NP is a XXX-NN :arg0-of/SBAR . ''",
        "tree_rules": [
            ":arg0-of~know-01",
            ":domain~geographer"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/S~interest-01 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~prince",
                ":arg1~interest-01"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~interest-01",
            ":arg0~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0-of/NP~have-03 - \n\t :time/ADVP~at-last -)",
        "graph_rules": {
            "man": [
                ":arg0-of~have-03",
                ":time~at-last"
            ]
        },
        "head": "man",
        "name": ":root/ROOT~man",
        "noun_info": {},
        "tree": "'' :arg0-of/NP :time/ADVP is a XXX-NN :arg0-of/SBAR ! ''",
        "tree_rules": [
            ":arg0-of~have-03",
            ":arg0-of~have-03",
            ":time~at-last"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/NP~look-01 -)",
        "graph_rules": {
            "and": [
                ":op2~look-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :poss/VP .",
        "tree_rules": [
            ":op2~look-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/S~beautiful-02 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~he",
                ":arg1~beautiful-02"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' :arg0/NP XXX-VBD .",
        "tree_rules": [
            ":arg1~beautiful-02",
            ":arg0~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~it - \n\t :arg1/NP~ocean -)",
        "graph_rules": {
            "have-03": [
                ":arg0~it",
                ":arg1~ocean"
            ]
        },
        "head": "have-03",
        "name": ":root/ROOT~have-03",
        "noun_info": {},
        "tree": "'' XXX-VBZ :arg0/NP :arg1/NP ? ''",
        "tree_rules": [
            ":arg0~it",
            ":arg1~ocean"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~geographer - \n\t :arg1/MD~possible-01 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~geographer",
                ":arg1~possible-01"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~possible-01",
            ":arg0~geographer"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "ah",
        "name": ":root/ROOT~ah",
        "noun_info": {},
        "tree": "'' XXX-RB ! ''",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~prince -)",
        "graph_rules": {
            "disappoint-01": [
                ":arg1~prince"
            ]
        },
        "head": "disappoint-01",
        "name": ":root/ROOT~disappoint-01",
        "noun_info": {},
        "tree": ":arg1/NP was XXX-VBN .",
        "tree_rules": [
            ":arg1~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~it - \n\t :arg1/NP~mountain -)",
        "graph_rules": {
            "have-03": [
                ":arg0~it",
                ":arg1~mountain"
            ]
        },
        "head": "have-03",
        "name": ":root/ROOT~have-03",
        "noun_info": {},
        "tree": "'' XXX-VBZ :arg0/NP :arg1/NP ? ''",
        "tree_rules": [
            ":arg0~it",
            ":arg1~mountain"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~geographer - \n\t :arg1/MD~possible-01 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~geographer",
                ":arg1~possible-01"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~possible-01",
            ":arg0~geographer"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/CC~and -)",
        "graph_rules": {
            "and": [
                ":op2~and"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "'' XXX-CC :op3/NP ? ''",
        "tree_rules": [
            ":op2~and"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/RB~- - \n\t :arg1/VP~tell-01 - \n\t :mod/ADVP~either -)",
        "graph_rules": {
            "possible-01": [
                ":polarity~-",
                ":arg1~tell-01",
                ":mod~either"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT~possible-01",
        "noun_info": {},
        "tree": "'' :arg0/NP XXX-MD :polarity/RB :arg1/VP . ''",
        "tree_rules": [
            ":mod~either",
            ":polarity~-",
            ":arg1~tell-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP~geographer -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~geographer"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "'' XXX-CC :domain/ADVP :arg2/VP ! ''",
        "tree_rules": [
            ":arg2~geographer"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~geographer - \n\t :arg1/ADVP~exact -)",
        "graph_rules": {
            "say-01": [
                ":arg0~geographer",
                ":arg1~exact"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/ADVP , '' :arg0/NP XXX-VBD .",
        "tree_rules": [
            ":arg1~exact",
            ":arg0~geographer"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/E~person -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~person"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "'' XXX-CC :domain/NP .",
        "tree_rules": [
            ":arg2~person"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/RB~- - \n\t :arg0/NP~i - \n\t :arg1/JJ~person -)",
        "graph_rules": {
            "have-03": [
                ":polarity~-",
                ":arg0~i",
                ":arg1~person"
            ]
        },
        "head": "have-03",
        "name": ":root/ROOT~have-03",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBP :polarity/RB :arg0-of/NP .",
        "tree_rules": [
            ":arg1~person",
            ":polarity~-",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :domain/NP~geographer - \n\t :arg0-of/VBZ~go-02 -)",
        "graph_rules": {
            "person": [
                ":domain~geographer",
                ":arg0-of~go-02"
            ]
        },
        "head": "person",
        "name": ":root/ROOT~person",
        "noun_info": {},
        "tree": ":domain/NP is :polarity/RB :domain/NP who :arg0-of/VBZ XXX-RP :purpose/S .",
        "tree_rules": [
            ":arg0-of~go-02",
            ":domain~geographer",
            ":domain~geographer"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :domain/NP~geographer - \n\t :degree/RB~too -)",
        "graph_rules": {
            "important": [
                ":domain~geographer",
                ":degree~too"
            ]
        },
        "head": "important",
        "name": ":root/ROOT~important",
        "noun_info": {},
        "tree": ":domain/NP is :degree/RB :degree/RB XXX-JJ :arg1-of/S .",
        "tree_rules": [
            ":degree~too",
            ":domain~geographer"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/RB~- - \n\t :arg0/NP~he - \n\t :arg1/NP~desk -)",
        "graph_rules": {
            "leave-11": [
                ":polarity~-",
                ":arg0~he",
                ":arg1~desk"
            ]
        },
        "head": "leave-11",
        "name": ":root/ROOT~leave-11",
        "noun_info": {},
        "tree": ":arg0/NP :polarity/VBZ :polarity/RB XXX-VB :arg1/NP .",
        "tree_rules": [
            ":arg1~desk",
            ":polarity~-",
            ":polarity~-",
            ":arg0~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP~receive-01 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~receive-01"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :arg2/VP .",
        "tree_rules": [
            ":arg2~receive-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/S~question-01 - \n\t :op2/S~note-02 -)",
        "graph_rules": {
            "and": [
                ":op1~question-01",
                ":op2~note-02"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": ":op1/S , XXX-CC :op2/S .",
        "tree_rules": [
            ":op1~question-01",
            ":op2~note-02"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/NP~order-02 -)",
        "graph_rules": {
            "and": [
                ":op2~order-02"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :condition/IN :arg1-of/NP :condition/VP . ''",
        "tree_rules": [
            ":op2~order-02"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1-of/WHADVP~cause-01 -)",
        "graph_rules": {
            "that": [
                ":arg1-of~cause-01"
            ]
        },
        "head": "that",
        "name": ":root/ROOT~that",
        "noun_info": {},
        "tree": "'' :arg1-of/WHADVP is XXX-IN :arg0/. ''",
        "tree_rules": [
            ":arg1-of~cause-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/SBAR~lie-08 -)",
        "graph_rules": {
            "cause-01": [
                ":arg1~lie-08"
            ]
        },
        "head": "cause-01",
        "name": ":root/ROOT~cause-01",
        "noun_info": {},
        "tree": "'' XXX-IN :arg0/NP :condition-of/VP .",
        "tree_rules": [
            ":arg1~lie-08"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/SQ~that -)",
        "graph_rules": {
            "ask-01": [
                ":arg0~prince",
                ":arg1~that"
            ]
        },
        "head": "ask-01",
        "name": ":root/MULTI-SENTENCE~ask-01",
        "noun_info": {},
        "tree": "'' :arg1-of/WHADVP :arg1/SQ :arg0/. '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~that",
            ":arg0~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~man - \n\t :arg2/RB~double - \n\t :arg0-of/IN~cause-01 -)",
        "graph_rules": {
            "see-01": [
                ":arg0~man",
                ":arg2~double",
                ":arg0-of~cause-01"
            ]
        },
        "head": "see-01",
        "name": ":root/ROOT~see-01",
        "noun_info": {},
        "tree": "'' :arg0-of/IN :arg0/NP XXX-VBP :arg2/RB .",
        "tree_rules": [
            ":arg0-of~cause-01",
            ":arg0~man",
            ":arg2~double"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/S~know-02 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~prince",
                ":arg1~know-02"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' XXX-VBD :arg0/NP . ''",
        "tree_rules": [
            ":arg0~prince",
            ":arg1~know-02"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~that -)",
        "graph_rules": {
            "possible-01": [
                ":arg1~that"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT~possible-01",
        "noun_info": {},
        "tree": "'' :arg1/NP is XXX-JJ .",
        "tree_rules": [
            ":arg1~that"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~one - \n\t :purpose/S~see-01 -)",
        "graph_rules": {
            "go-02": [
                ":arg0~one",
                ":purpose~see-01"
            ]
        },
        "head": "go-02",
        "name": ":root/ROOT~go-02",
        "noun_info": {},
        "tree": "'' :arg0/NP XXX-VBZ :purpose/S ? ''",
        "tree_rules": [
            ":purpose~see-01",
            ":arg0~one"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "no",
        "name": ":root/ROOT~no",
        "noun_info": {},
        "tree": "'' XXX-DT .",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~that - \n\t :degree/RB~too -)",
        "graph_rules": {
            "complicate-01": [
                ":arg1~that",
                ":degree~too"
            ]
        },
        "head": "complicate-01",
        "name": ":root/ROOT~complicate-01",
        "noun_info": {},
        "tree": ":arg1/NP would be :degree/RB XXX-VBN .",
        "tree_rules": [
            ":degree~too",
            ":arg1~that"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP~require-01 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~require-01"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :arg2/VP .",
        "tree_rules": [
            ":arg2~require-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/VP~require-01 -)",
        "graph_rules": {
            "exemplify-01": [
                ":arg0~require-01"
            ]
        },
        "head": "exemplify-01",
        "name": ":root/ROOT~exemplify-01",
        "noun_info": {},
        "tree": "for XXX-NN , :condition/IN :arg1/S , :arg0/NP :arg0/VP . ''",
        "tree_rules": [
            ":arg0~require-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~geographer - \n\t :arg3/PP~excite-01 - \n\t :manner/ADVP~sudden -)",
        "graph_rules": {
            "stir-02": [
                ":arg1~geographer",
                ":arg3~excite-01",
                ":manner~sudden"
            ]
        },
        "head": "stir-02",
        "name": ":root/ROOT~stir-02",
        "noun_info": {},
        "tree": ":arg1/NP was :manner/ADVP XXX-VBN :arg3/PP .",
        "tree_rules": [
            ":arg3~excite-01",
            ":manner~sudden",
            ":arg1~geographer"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP~come-01 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~come-01"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "'' XXX-CC :arg1/ADVP - - you :arg2/VP :extent/.",
        "tree_rules": [
            ":arg2~come-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0-of/VP~explore-01 - \n\t :domain/NP~you -)",
        "graph_rules": {
            "person": [
                ":arg0-of~explore-01",
                ":domain~you"
            ]
        },
        "head": "person",
        "name": ":root/ROOT~person",
        "noun_info": {},
        "tree": ":domain/NP :arg0-of/VP XXX-.",
        "tree_rules": [
            ":domain~you",
            ":arg0-of~explore-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~you - \n\t :arg1/NP~planet - \n\t :beneficiary/PP~i -)",
        "graph_rules": {
            "describe-01": [
                ":arg0~you",
                ":arg1~planet",
                ":beneficiary~i"
            ]
        },
        "head": "describe-01",
        "name": ":root/ROOT~describe-01",
        "noun_info": {},
        "tree": ":arg0/NP :source-of/MD XXX-VB :arg1/NP :beneficiary/PP ! ''",
        "tree_rules": [
            ":arg1~planet",
            ":beneficiary~i",
            ":arg0~you"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~sharpen-01 -)",
        "graph_rules": {
            "and": [
                ":op2~sharpen-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC , :op1/S , :arg0/NP :op2/VP .",
        "tree_rules": [
            ":op2~sharpen-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/E~thing - \n\t :direction/PRT~down - \n\t :time/ADVP~first - \n\t :instrument/PP~pencil -)",
        "graph_rules": {
            "put-01": [
                ":arg1~thing",
                ":direction~down",
                ":time~first",
                ":instrument~pencil"
            ]
        },
        "head": "put-01",
        "name": ":root/ROOT~put-01",
        "noun_info": {},
        "tree": ":arg1-of/NP are XXX-VBN :direction/PRT :time/ADVP :instrument/PP .",
        "tree_rules": [
            ":direction~down",
            ":time~first",
            ":instrument~pencil",
            ":arg1~thing"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/E~and -)",
        "graph_rules": {
            "say-01": [
                ":arg0~prince",
                ":arg1~and"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :op1/NP XXX-VBD :arg0/NP , '' :degree/NP is :polarity/RB :op2/ADJP .",
        "tree_rules": [
            ":arg0~prince",
            ":arg1~and"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :domain/NP~it - \n\t :degree/RB~so -)",
        "graph_rules": {
            "small": [
                ":domain~it",
                ":degree~so"
            ]
        },
        "head": "small",
        "name": ":root/ROOT~small",
        "noun_info": {},
        "tree": ":domain/NP is :mod/DT :degree/RB XXX-JJ .",
        "tree_rules": [
            ":degree~so",
            ":domain~it"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/NP~volcano -)",
        "graph_rules": {
            "have-03": [
                ":arg0~i",
                ":arg1~volcano"
            ]
        },
        "head": "have-03",
        "name": ":root/ROOT~have-03",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBP :arg1/NP .",
        "tree_rules": [
            ":arg1~volcano",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/S~activity-06 - \n\t :op2/S~extinct -)",
        "graph_rules": {
            "and": [
                ":op1~activity-06",
                ":op2~extinct"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": ":op1/S XXX-CC :op2/S .",
        "tree_rules": [
            ":op1~activity-06",
            ":op2~extinct"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP~know-01 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~know-01"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :time/ADVP :arg2/VP . ''",
        "tree_rules": [
            ":arg2~know-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~geographer - \n\t :arg1/S~know-01 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~geographer",
                ":arg1~know-01"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~know-01",
            ":arg0~geographer"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/NP~thing - \n\t :mod/RB~also -)",
        "graph_rules": {
            "have-03": [
                ":arg0~i",
                ":arg1~thing",
                ":mod~also"
            ]
        },
        "head": "have-03",
        "name": ":root/ROOT~have-03",
        "noun_info": {},
        "tree": "'' :arg0/NP XXX-VBP :arg1/NP . ''",
        "tree_rules": [
            ":mod~also",
            ":arg1~thing",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~geographer - \n\t :arg1/JJ~record-01 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~geographer",
                ":arg1~record-01"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :polarity/S , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~record-01",
            ":arg0~geographer"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1-of/WHADVP~cause-01 -)",
        "graph_rules": {
            "that": [
                ":arg1-of~cause-01"
            ]
        },
        "head": "that",
        "name": ":root/ROOT~that",
        "noun_info": {},
        "tree": "'' :arg1-of/WHADVP is XXX-IN :arg0/.",
        "tree_rules": [
            ":arg1-of~cause-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~geographer - \n\t :arg1/S~record-01 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~geographer",
                ":arg1~record-01"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' XXX-VBD :arg0/NP . ''",
        "tree_rules": [
            ":arg0~geographer",
            ":arg1~record-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/VP~ephemeral - \n\t :arg2/.~amr-unknown -)",
        "graph_rules": {
            "mean-01": [
                ":arg1~ephemeral",
                ":arg2~amr-unknown"
            ]
        },
        "head": "mean-01",
        "name": ":root/ROOT~mean-01",
        "noun_info": {},
        "tree": "'' what does that XXX-NN - :arg1/VP :arg2/. ''",
        "tree_rules": [
            ":arg1~ephemeral",
            ":arg2~amr-unknown"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~geographer - \n\t :arg1/NP~book -)",
        "graph_rules": {
            "say-01": [
                ":arg0~geographer",
                ":arg1~book"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg0/NP , '' XXX-VBD :domain/NP , '' are :arg1/NP , :arg1-of/IN :arg2/NP , are :degree/RBS :arg0-of/VBN :arg0-of/IN :arg1/NP .",
        "tree_rules": [
            ":arg1~book",
            ":arg0~geographer"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~they - \n\t :arg2/ADJP~fashion - \n\t :time/ADVP~ever - \n\t :polarity/E~- -)",
        "graph_rules": {
            "become-01": [
                ":arg1~they",
                ":arg2~fashion",
                ":time~ever",
                ":polarity~-"
            ]
        },
        "head": "become-01",
        "name": ":root/ROOT~become-01",
        "noun_info": {},
        "tree": ":arg1/NP :time/ADVP XXX-VBP :mod/ADJP - :arg2/ADJP .",
        "tree_rules": [
            ":arg2~fashion",
            ":arg1~they",
            ":time~ever",
            ":polarity~-"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~mountain - \n\t :arg1/PRP$~location - \n\t :arg1-of/IN~rare-02 -)",
        "graph_rules": {
            "change-01": [
                ":arg0~mountain",
                ":arg1~location",
                ":arg1-of~rare-02"
            ]
        },
        "head": "change-01",
        "name": ":root/ROOT~change-01",
        "noun_info": {},
        "tree": ":degree/NP is :degree/RB :arg1-of/RB :arg1-of/IN :arg0/NP XXX-VBZ :arg2-of/NP .",
        "tree_rules": [
            ":arg1-of~rare-02",
            ":arg1~location",
            ":arg0~mountain",
            ":arg1-of~rare-02"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~ocean - \n\t :arg1/E~coref - \n\t :arg2/PP~water - \n\t :arg1-of/IN~rare-02 -)",
        "graph_rules": {
            "empty-01": [
                ":arg0~ocean",
                ":arg1~coref",
                ":arg2~water",
                ":arg1-of~rare-02"
            ]
        },
        "head": "empty-01",
        "name": ":root/ROOT~empty-01",
        "noun_info": {},
        "tree": ":degree/NP is :degree/RB :arg1-of/RB :arg1-of/IN :arg0/NP XXX-VBZ :poss/NP .",
        "tree_rules": [
            ":arg1-of~rare-02",
            ":arg2~water",
            ":arg0~ocean",
            ":arg1-of~rare-02",
            ":arg1~coref"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~we - \n\t :arg1/PP~thing -)",
        "graph_rules": {
            "write-01": [
                ":arg0~we",
                ":arg1~thing"
            ]
        },
        "head": "write-01",
        "name": ":root/ROOT~write-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBP :arg1/PP . ''",
        "tree_rules": [
            ":arg1~thing",
            ":arg0~we"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg2/CC~contrast-01 -)",
        "graph_rules": {
            "interrupt-01": [
                ":arg0~prince",
                ":arg2~contrast-01"
            ]
        },
        "head": "interrupt-01",
        "name": ":root/ROOT~interrupt-01",
        "noun_info": {},
        "tree": "'' :arg2/CC :arg1/NP :arg0/NP XXX-JJ .",
        "tree_rules": [
            ":arg0~prince",
            ":arg2~contrast-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/VP~ephemeral - \n\t :arg2/.~amr-unknown -)",
        "graph_rules": {
            "mean-01": [
                ":arg1~ephemeral",
                ":arg2~amr-unknown"
            ]
        },
        "head": "mean-01",
        "name": ":root/ROOT~mean-01",
        "noun_info": {},
        "tree": "'' what does that XXX-NN - :arg1/VP :arg2/. ''",
        "tree_rules": [
            ":arg1~ephemeral",
            ":arg2~amr-unknown"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~geographer - \n\t :arg1/S~same-01 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~geographer",
                ":arg1~same-01"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~same-01",
            ":arg0~geographer"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :domain/PP~thing -)",
        "graph_rules": {
            "mountain": [
                ":domain~thing"
            ]
        },
        "head": "mountain",
        "name": ":root/ROOT~mountain",
        "noun_info": {},
        "tree": "'' :domain/PP is the XXX-NN .",
        "tree_rules": [
            ":domain~thing"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~it - \n\t :polarity/RB~- -)",
        "graph_rules": {
            "change-01": [
                ":arg1~it",
                ":polarity~-"
            ]
        },
        "head": "change-01",
        "name": ":root/ROOT~change-01",
        "noun_info": {},
        "tree": ":arg1/NP :polarity/VBZ :polarity/RB XXX-VB . ''",
        "tree_rules": [
            ":polarity~-",
            ":polarity~-",
            ":arg1~it"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/CC~contrast-01 -)",
        "graph_rules": {
            "repeat-01": [
                ":arg0~prince",
                ":arg1~contrast-01"
            ]
        },
        "head": "repeat-01",
        "name": ":root/MULTI-SENTENCE~repeat-01",
        "noun_info": {},
        "tree": "'' :arg1/CC :arg2/WHNP :arg1/SQ ? '' XXX-VBN :arg0/NP , :time/ADVP he :op1/VP .",
        "tree_rules": [
            ":arg1~contrast-01",
            ":arg0~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~it - \n\t :arg2/E~thing -)",
        "graph_rules": {
            "mean-01": [
                ":arg1~it",
                ":arg2~thing"
            ]
        },
        "head": "mean-01",
        "name": ":root/ROOT~mean-01",
        "noun_info": {},
        "tree": "'' :arg1/NP XXX-VBZ , ' which :arg1-of/VP . ' ''",
        "tree_rules": [
            ":arg1~it",
            ":arg2~thing"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~flower - \n\t :arg1-of/IN~cause-01 -)",
        "graph_rules": {
            "endanger-01": [
                ":arg1~flower",
                ":arg1-of~cause-01"
            ]
        },
        "head": "endanger-01",
        "name": ":root/ROOT~endanger-01",
        "noun_info": {},
        "tree": "'' is :arg1/NP in XXX-NN :arg1-of/IN :arg0/NP ? ''",
        "tree_rules": [
            ":arg1-of~cause-01",
            ":arg1~flower"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :domain/PRP~it -)",
        "graph_rules": {
            "certain": [
                ":domain~it"
            ]
        },
        "head": "certain",
        "name": ":root/ROOT~certain",
        "noun_info": {},
        "tree": "'' XXX-RB :domain/PRP is . ''",
        "tree_rules": [
            ":domain~it"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/CC~and - \n\t :arg2/E~coref -)",
        "graph_rules": {
            "say-01": [
                ":arg0~prince",
                ":arg1~and",
                ":arg2~coref"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :op1/S , '' :arg0/NP XXX-VBD :arg2-of/PP , '' :arg1/CC :op2/S .",
        "tree_rules": [
            ":arg0~prince",
            ":arg1~and",
            ":arg2~coref"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~leave-12 -)",
        "graph_rules": {
            "and": [
                ":op2~leave-12"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :op2/VP :domain/. ''",
        "tree_rules": [
            ":op2~leave-12"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :domain/NP~that - \n\t :mod/PP~regret-01 - \n\t :ord/JJ~ordinal-entity - \n\t :poss/PRP$~he -)",
        "graph_rules": {
            "moment": [
                ":domain~that",
                ":mod~regret-01",
                ":ord~ordinal-entity",
                ":poss~he"
            ]
        },
        "head": "moment",
        "name": ":root/ROOT~moment",
        "noun_info": {},
        "tree": ":domain/NP was :poss/PRP$ :ord/JJ XXX-NN :mod/PP .",
        "tree_rules": [
            ":poss~he",
            ":ord~ordinal-entity",
            ":mod~regret-01",
            ":domain~that"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP~take-01 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~take-01"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :arg2/VP .",
        "tree_rules": [
            ":arg2~take-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/S~advise-01 -)",
        "graph_rules": {
            "ask-01": [
                ":arg0~he",
                ":arg1~advise-01"
            ]
        },
        "head": "ask-01",
        "name": ":root/MULTI-SENTENCE~ask-01",
        "noun_info": {},
        "tree": "'' :domain/NP :arg1/ADVP would :arg0/NP :arg1/S ? '' :arg0/NP XXX-VBD .",
        "tree_rules": [
            ":arg1~advise-01",
            ":arg0~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~geographer - \n\t :arg2/E~planet/name -)",
        "graph_rules": {
            "reply-01": [
                ":arg0~geographer",
                ":arg2~planet/name"
            ]
        },
        "head": "reply-01",
        "name": ":root/ROOT~reply-01",
        "noun_info": {},
        "tree": "'' the planet earth , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg0~geographer",
            ":arg2~planet/name"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~it - \n\t :arg1/NP~reputation -)",
        "graph_rules": {
            "have-03": [
                ":arg0~it",
                ":arg1~reputation"
            ]
        },
        "head": "have-03",
        "name": ":root/ROOT~have-03",
        "noun_info": {},
        "tree": "'' :arg0/NP XXX-VBZ :arg1/NP . ''",
        "tree_rules": [
            ":arg1~reputation",
            ":arg0~it"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/E~and -)",
        "graph_rules": {
            "and": [
                ":op2~and"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :op1/VP .",
        "tree_rules": [
            ":op2~and"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/NP~16 -)",
        "graph_rules": {
            "chapter": [
                ":mod~16"
            ]
        },
        "head": "chapter",
        "name": ":root/ROOT~chapter",
        "noun_info": {},
        "tree": "XXX-NN :mod/NP .",
        "tree_rules": [
            ":mod~16"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ord/JJ~ordinal-entity - \n\t :domain/E~planet/name - \n\t :arg1-of/RB~cause-01 -)",
        "graph_rules": {
            "planet": [
                ":ord~ordinal-entity",
                ":domain~planet/name",
                ":arg1-of~cause-01"
            ]
        },
        "head": "planet",
        "name": ":root/ROOT~planet",
        "noun_info": {},
        "tree": ":arg1-of/RB then the :ord/JJ XXX-NN was the earth .",
        "tree_rules": [
            ":ord~ordinal-entity",
            ":arg1-of~cause-01",
            ":domain~planet/name"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/JJ~ordinary - \n\t :domain/NP~planet/name -)",
        "graph_rules": {
            "planet": [
                ":mod~ordinary",
                ":domain~planet/name"
            ]
        },
        "head": "planet",
        "name": ":root/ROOT~planet",
        "noun_info": {},
        "tree": ":domain/NP is :polarity/RB :mod/ADVP an :mod/JJ XXX-NN !",
        "tree_rules": [
            ":mod~ordinary",
            ":domain~planet/name"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/CD~and -)",
        "graph_rules": {
            "possible-01": [
                ":arg1~and"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT~possible-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-MD :op1/VP .",
        "tree_rules": [
            ":arg1~and"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~that - \n\t :arg1/NP~spectacle - \n\t :condition/S~see-01 -)",
        "graph_rules": {
            "make-01": [
                ":arg0~that",
                ":arg1~spectacle",
                ":condition~see-01"
            ]
        },
        "head": "make-01",
        "name": ":root/ROOT~make-01",
        "noun_info": {},
        "tree": ":condition/S , :arg0/NP would XXX-VB :arg1/NP .",
        "tree_rules": [
            ":condition~see-01",
            ":arg1~spectacle",
            ":condition~see-01",
            ":arg0~that"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~move-01 -)",
        "graph_rules": {
            "regulate-01": [
                ":arg1~move-01"
            ]
        },
        "head": "regulate-01",
        "name": ":root/ROOT~regulate-01",
        "noun_info": {},
        "tree": ":arg1/NP would be XXX-VBN :arg1-of/IN :arg2/NP .",
        "tree_rules": [
            ":arg1~move-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~turn-01 - \n\t :time/ADVP~first -)",
        "graph_rules": {
            "come-03": [
                ":arg1~turn-01",
                ":time~first"
            ]
        },
        "head": "come-03",
        "name": ":root/ROOT~come-03",
        "noun_info": {},
        "tree": ":time/ADVP would XXX-VB :arg1/NP .",
        "tree_rules": [
            ":time~first",
            ":arg1~turn-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/PRT~they - \n\t :purpose/S~sleep-01 - \n\t :time/ADVP~after -)",
        "graph_rules": {
            "go-02": [
                ":arg0~they",
                ":purpose~sleep-01",
                ":time~after"
            ]
        },
        "head": "go-02",
        "name": ":root/ROOT~go-02",
        "noun_info": {},
        "tree": ":op1/S , these would XXX-VB :arg0/PRT :purpose/S .",
        "tree_rules": [
            ":time~after",
            ":arg0~they",
            ":purpose~sleep-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VP~enter-01 - \n\t :op2/S~wave-02 -)",
        "graph_rules": {
            "and": [
                ":op1~enter-01",
                ":op2~wave-02"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": ":time/ADVP , :arg1/NP of china XXX-CC siberia :op1/VP , :source/CC :time/RB :op2/S .",
        "tree_rules": [
            ":op1~enter-01",
            ":op2~wave-02"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~turn -)",
        "graph_rules": {
            "come-03": [
                ":arg1~turn"
            ]
        },
        "head": "come-03",
        "name": ":root/ROOT~come-03",
        "noun_info": {},
        "tree": ":time/NP that would XXX-VB :arg1/NP ; then :poss/NP ; :arg0-of/NP ; :location/NP .",
        "tree_rules": [
            ":arg1~turn"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/NP~mistake-02 -)",
        "graph_rules": {
            "and": [
                ":op2~mistake-02"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :time/ADVP would :arg0/NP :polarity/VP .",
        "tree_rules": [
            ":op2~mistake-02"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :domain/NP~it -)",
        "graph_rules": {
            "magnificent": [
                ":domain~it"
            ]
        },
        "head": "magnificent",
        "name": ":root/ROOT~magnificent",
        "noun_info": {},
        "tree": ":domain/NP would be XXX-JJ .",
        "tree_rules": [
            ":domain~it"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/CC~and - \n\t :arg3-of/ADJP~free-04 - \n\t :arg1-of/IN~cause-01 -)",
        "graph_rules": {
            "live-01": [
                ":arg0~and",
                ":arg3-of~free-04",
                ":arg1-of~cause-01"
            ]
        },
        "head": "live-01",
        "name": ":root/ROOT~live-01",
        "noun_info": {},
        "tree": ":op1/NP who was :arg1-of/PP :op2/PP - :mod/RB :mod/DT :quant/CD would XXX-VB :arg3-of/ADJP :op2/VP : :frequency/S .",
        "tree_rules": [
            ":arg1-of~cause-01",
            ":arg0~and",
            ":arg3-of~free-04"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/NP~17 -)",
        "graph_rules": {
            "chapter": [
                ":mod~17"
            ]
        },
        "head": "chapter",
        "name": ":root/ROOT~chapter",
        "noun_info": {},
        "tree": "XXX-NN :mod/NP .",
        "tree_rules": [
            ":mod~17"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/WHNP~thing - \n\t :degree/RB~altogether -)",
        "graph_rules": {
            "honest-01": [
                ":arg0~i",
                ":arg1~thing",
                ":degree~altogether"
            ]
        },
        "head": "honest-01",
        "name": ":root/ROOT~honest-01",
        "noun_info": {},
        "tree": ":arg0/NP have :polarity/RB been :degree/RB XXX-JJ in :arg1/WHNP :arg1-of/S .",
        "tree_rules": [
            ":arg1~thing",
            ":degree~altogether",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~realize-01 -)",
        "graph_rules": {
            "and": [
                ":op2~realize-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :op2/VP .",
        "tree_rules": [
            ":op2~realize-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~man - \n\t :arg1/NP~place -)",
        "graph_rules": {
            "occupy-01": [
                ":arg0~man",
                ":arg1~place"
            ]
        },
        "head": "occupy-01",
        "name": ":root/ROOT~occupy-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBP :arg1/NP .",
        "tree_rules": [
            ":arg1~place",
            ":arg0~man"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/VP~put-01 - \n\t :condition/IN~stand-01 -)",
        "graph_rules": {
            "possible-01": [
                ":arg1~put-01",
                ":condition~stand-01"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT~possible-01",
        "noun_info": {},
        "tree": ":condition/IN :manner/S , :arg1-of/IN :arg2/S , they XXX-MD :arg1-of/ADVP :arg1/VP .",
        "tree_rules": [
            ":condition~stand-01",
            ":condition~stand-01",
            ":arg1~put-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/VP~pile-01 -)",
        "graph_rules": {
            "possible-01": [
                ":arg1~pile-01"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT~possible-01",
        "noun_info": {},
        "tree": ":arg1/NP XXX-MD :arg1/VP .",
        "tree_rules": [
            ":arg1~pile-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/RB~- - \n\t :arg0/NP~grown-up - \n\t :arg1/NP~you - \n\t :time/SBAR~tell-01 - \n\t :arg1-of/S~sure-02 -)",
        "graph_rules": {
            "believe-01": [
                ":polarity~-",
                ":arg0~grown-up",
                ":arg1~you",
                ":time~tell-01",
                ":arg1-of~sure-02"
            ]
        },
        "head": "believe-01",
        "name": ":root/ROOT~believe-01",
        "noun_info": {},
        "tree": ":arg0/NP , :arg1-of/S , will :polarity/RB XXX-VB :arg1/NP :time/SBAR .",
        "tree_rules": [
            ":arg1~you",
            ":time~tell-01",
            ":polarity~-",
            ":arg0~grown-up",
            ":arg1-of~sure-02"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~they - \n\t :arg1/SBAR~fill-01 -)",
        "graph_rules": {
            "imagine-01": [
                ":arg0~they",
                ":arg1~fill-01"
            ]
        },
        "head": "imagine-01",
        "name": ":root/ROOT~imagine-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBP :arg1/SBAR .",
        "tree_rules": [
            ":arg1~fill-01",
            ":arg0~they"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~they - \n\t :arg1/ADJP~important -)",
        "graph_rules": {
            "fancy-01": [
                ":arg0~they",
                ":arg1~important"
            ]
        },
        "head": "fancy-01",
        "name": ":root/ROOT~fancy-01",
        "noun_info": {},
        "tree": "they XXX-JJ :arg0/NP :compared-to/PP .",
        "tree_rules": [
            ":arg1~important",
            ":arg0~they"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/VP~advise-01 - \n\t :arg2/E~coref -)",
        "graph_rules": {
            "recommend-01": [
                ":arg1~advise-01",
                ":arg2~coref"
            ]
        },
        "head": "recommend-01",
        "name": ":root/ROOT~recommend-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-MD :arg1/VP .",
        "tree_rules": [
            ":arg1~advise-01",
            ":arg2~coref"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/S~adore-01 - \n\t :op2/S~please-01 -)",
        "graph_rules": {
            "and": [
                ":op1~adore-01",
                ":op2~please-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": ":op1/S , XXX-CC :op2/S .",
        "tree_rules": [
            ":op1~adore-01",
            ":op2~please-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP~waste-01 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~waste-01"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "XXX-CC :arg2/VP .",
        "tree_rules": [
            ":arg2~waste-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/S~you - \n\t :arg2/PP~i - \n\t :arg1-of/S~know-01 -)",
        "graph_rules": {
            "trust-01": [
                ":arg0~you",
                ":arg2~i",
                ":arg1-of~know-01"
            ]
        },
        "head": "trust-01",
        "name": ":root/ROOT~trust-01",
        "noun_info": {},
        "tree": ":arg0/S , :arg1-of/S , XXX-NN :arg2/PP .",
        "tree_rules": [
            ":arg2~i",
            ":arg0~you",
            ":arg1-of~know-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/S~see-01 - \n\t :arg1/NP~prince - \n\t :degree/ADVP~much - \n\t :time/SBAR~arrive-01 -)",
        "graph_rules": {
            "surprise-01": [
                ":arg0~see-01",
                ":arg1~prince",
                ":degree~much",
                ":time~arrive-01"
            ]
        },
        "head": "surprise-01",
        "name": ":root/ROOT~surprise-01",
        "noun_info": {},
        "tree": ":time/SBAR , he was :degree/ADVP XXX-JJ :arg0/S .",
        "tree_rules": [
            ":arg1~prince",
            ":arg0~see-01",
            ":degree~much",
            ":time~arrive-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/S~fear-01 - \n\t :time/SBAR~flash-02 -)",
        "graph_rules": {
            "begin-01": [
                ":arg0~he",
                ":arg1~fear-01",
                ":time~flash-02"
            ]
        },
        "head": "begin-01",
        "name": ":root/ROOT~begin-01",
        "noun_info": {},
        "tree": ":arg0/NP was XXX-VBG :arg1/S .",
        "tree_rules": [
            ":time~flash-02",
            ":arg1~fear-01",
            ":arg0~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/NN~evening - \n\t :manner/ADVP~courteous -)",
        "graph_rules": {
            "say-01": [
                ":arg0~prince",
                ":arg1~evening",
                ":manner~courteous"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1-of/ADVP , '' XXX-VBD :arg0/NP :manner/ADVP .",
        "tree_rules": [
            ":arg1~evening",
            ":arg0~prince",
            ":manner~courteous"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~snake - \n\t :arg1/ADVP~date-entity -)",
        "graph_rules": {
            "say-01": [
                ":arg0~snake",
                ":arg1~date-entity"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/ADVP , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~date-entity",
            ":arg0~snake"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~snake - \n\t :arg2/E~and -)",
        "graph_rules": {
            "answer-01": [
                ":arg0~snake",
                ":arg2~and"
            ]
        },
        "head": "answer-01",
        "name": ":root/ROOT~answer-01",
        "noun_info": {},
        "tree": "'' :op1/S ; :domain/NP is :op2/NP , '' :arg0/NP XXX-VBN .",
        "tree_rules": [
            ":arg0~snake",
            ":arg2~and"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "ah",
        "name": ":root/ROOT~ah",
        "noun_info": {},
        "tree": "'' XXX-RB !",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/VP~- - \n\t :location/PP~planet/name -)",
        "graph_rules": {
            "person": [
                ":polarity~-",
                ":location~planet/name"
            ]
        },
        "head": "person",
        "name": ":root/ROOT~person",
        "noun_info": {},
        "tree": "then XXX-EX :polarity/VP ? ''",
        "tree_rules": [
            ":location~planet/name",
            ":polarity~-"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :domain/NP~this -)",
        "graph_rules": {
            "desert": [
                ":domain~this"
            ]
        },
        "head": "desert",
        "name": ":root/ROOT~desert",
        "noun_info": {},
        "tree": "'' :domain/NP is the XXX-NN .",
        "tree_rules": [
            ":domain~this"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/DT~- - \n\t :location/PP~desert -)",
        "graph_rules": {
            "person": [
                ":polarity~-",
                ":location~desert"
            ]
        },
        "head": "person",
        "name": ":root/ROOT~person",
        "noun_info": {},
        "tree": "there are :polarity/DT XXX-NNS :location/PP .",
        "tree_rules": [
            ":polarity~-",
            ":location~desert"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~snake - \n\t :arg1/S~large -)",
        "graph_rules": {
            "say-01": [
                ":arg0~snake",
                ":arg1~large"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": ":arg1/S , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~large",
            ":arg0~snake"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VP~sit-down-02 - \n\t :op2/VP~raise-01 -)",
        "graph_rules": {
            "and": [
                ":op1~sit-down-02",
                ":op2~raise-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": ":arg1/NP :op1/VP , XXX-CC :op2/VP .",
        "tree_rules": [
            ":op1~sit-down-02",
            ":op2~raise-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/ADVP~wonder-01 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~he",
                ":arg1~wonder-01"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' i :arg1/ADVP , '' :arg0/NP XXX-VBD , '' :arg1/SBAR :location/NP :purpose/IN :arg0/PP :purpose/VP ...",
        "tree_rules": [
            ":arg0~he",
            ":arg1~wonder-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/E~you - \n\t :arg1/PP~planet -)",
        "graph_rules": {
            "look-01": [
                ":arg0~you",
                ":arg1~planet"
            ]
        },
        "head": "look-01",
        "name": ":root/ROOT~look-01",
        "noun_info": {},
        "tree": "XXX-VB :arg1/PP .",
        "tree_rules": [
            ":arg1~planet",
            ":arg0~you"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/E~it - \n\t :arg2/RB~there -)",
        "graph_rules": {
            "be-located-at-91": [
                ":arg1~it",
                ":arg2~there"
            ]
        },
        "head": "be-located-at-91",
        "name": ":root/ROOT~be-located-at-91",
        "noun_info": {},
        "tree": "XXX-PRP is :mod/RB :arg2/RB :direction/IN :op1/NP .",
        "tree_rules": [
            ":arg2~there",
            ":arg1~it"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/RB~far -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~far"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "XXX-CC :direction/ADVP :arg2/RB :direction/RB :domain/NP is :degree/. ''",
        "tree_rules": [
            ":arg2~far"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~snake - \n\t :arg1/S~beautiful-02 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~snake",
                ":arg1~beautiful-02"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' :arg0/NP XXX-VBD .",
        "tree_rules": [
            ":arg1~beautiful-02",
            ":arg0~snake"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/.~amr-unknown - \n\t :arg1/NP~you - \n\t :arg2/ADVP~here -)",
        "graph_rules": {
            "bring-01": [
                ":arg0~amr-unknown",
                ":arg1~you",
                ":arg2~here"
            ]
        },
        "head": "bring-01",
        "name": ":root/ROOT~bring-01",
        "noun_info": {},
        "tree": "'' what has XXX-VBN :arg1/NP :arg2/ADVP :arg0/. ''",
        "tree_rules": [
            ":arg1~you",
            ":arg2~here",
            ":arg0~amr-unknown"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/VBP~have-03 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~prince",
                ":arg1~have-03"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~have-03",
            ":arg0~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~silent -)",
        "graph_rules": {
            "and": [
                ":op2~silent"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :domain/NP :op2/VP .",
        "tree_rules": [
            ":op2~silent"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VBD~take-up-31 - \n\t :op2/WHADVP~be-located-at-91 -)",
        "graph_rules": {
            "and": [
                ":op1~take-up-31",
                ":op2~be-located-at-91"
            ]
        },
        "head": "and",
        "name": ":root/MULTI-SENTENCE~and",
        "noun_info": {},
        "tree": "'' :op2/WHADVP :arg1/SQ :arg2/. '' :arg0/NP :op1/VBD XXX-RP :arg1/NP :mod/ADVP .",
        "tree_rules": [
            ":op2~be-located-at-91",
            ":op1~take-up-31"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :domain/NP~be-located-at-91 - \n\t :degree/NP~little -)",
        "graph_rules": {
            "lonely": [
                ":domain~be-located-at-91",
                ":degree~little"
            ]
        },
        "head": "lonely",
        "name": ":root/ROOT~lonely",
        "noun_info": {},
        "tree": "'' :domain/NP is :degree/NP XXX-JJ :domain/IN :arg2/NP ... ''",
        "tree_rules": [
            ":domain~be-located-at-91",
            ":degree~little",
            ":domain~be-located-at-91"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~snake - \n\t :arg1/ADJP~lonely -)",
        "graph_rules": {
            "say-01": [
                ":arg0~snake",
                ":arg1~lonely"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :domain/S , '' :arg0/NP XXX-VBD .",
        "tree_rules": [
            ":arg1~lonely",
            ":arg0~snake"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/PP~he - \n\t :arg1-of/PP~long-03 -)",
        "graph_rules": {
            "gaze-01": [
                ":arg0~prince",
                ":arg1~he",
                ":arg1-of~long-03"
            ]
        },
        "head": "gaze-01",
        "name": ":root/ROOT~gaze-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD :arg1/PP :arg1-of/PP .",
        "tree_rules": [
            ":arg1~he",
            ":arg1-of~long-03",
            ":arg0~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/S~animal - \n\t :time/PP~at-last -)",
        "graph_rules": {
            "say-01": [
                ":arg0~he",
                ":arg1~animal",
                ":time~at-last"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' :arg0/NP XXX-VBD :time/PP .",
        "tree_rules": [
            ":time~at-last",
            ":arg1~animal",
            ":arg0~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(t / thick-03 \n\t :arg1/NP~you - \n\t :degree (m / more \n\t\t :polarity/DT~- -) \n\t :compared-to/PP~finger -)",
        "graph_rules": {
            "more": [
                ":polarity~-"
            ],
            "thick-03": [
                ":arg1~you",
                ":compared-to~finger"
            ]
        },
        "head": "thick-03/more",
        "name": ":root/ROOT~thick-03/more",
        "noun_info": {},
        "tree": "'' :arg1/NP are :polarity/DT XXX-JJR :compared-to/PP ... ''",
        "tree_rules": [
            ":polarity~-",
            ":compared-to~finger",
            ":arg1~you"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~snake - \n\t :arg1/CC~contrast-01 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~snake",
                ":arg1~contrast-01"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg2/S , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~contrast-01",
            ":arg0~snake"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince -)",
        "graph_rules": {
            "smile-01": [
                ":arg0~prince"
            ]
        },
        "head": "smile-01",
        "name": ":root/ROOT~smile-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD .",
        "tree_rules": [
            ":arg0~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~you - \n\t :degree/RB~very -)",
        "graph_rules": {
            "powerful-02": [
                ":arg1~you",
                ":degree~very"
            ]
        },
        "head": "powerful-02",
        "name": ":root/ROOT~powerful-02",
        "noun_info": {},
        "tree": "'' :arg1/NP are :polarity/RB :degree/RB XXX-JJ .",
        "tree_rules": [
            ":degree~very",
            ":arg1~you"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/RB~- - \n\t :arg0/NP~you - \n\t :arg1/NP~foot - \n\t :mod/ADVP~even -)",
        "graph_rules": {
            "have-03": [
                ":polarity~-",
                ":arg0~you",
                ":arg1~foot",
                ":mod~even"
            ]
        },
        "head": "have-03",
        "name": ":root/ROOT~have-03",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBP :polarity/RB :mod/ADVP :arg1/NP .",
        "tree_rules": [
            ":polarity~-",
            ":mod~even",
            ":arg1~foot",
            ":arg0~you"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/RB~- - \n\t :arg1/FRAG~travel-01 - \n\t :mod/VP~even -)",
        "graph_rules": {
            "possible-01": [
                ":polarity~-",
                ":arg1~travel-01",
                ":mod~even"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT~possible-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-MD :polarity/RB :mod/VP ''",
        "tree_rules": [
            ":arg1~travel-01",
            ":polarity~-",
            ":mod~even"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~snake - \n\t :arg1/MD~possible-01 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~snake",
                ":arg1~possible-01"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~possible-01",
            ":arg0~snake"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/E~coref - \n\t :arg2/NP~ankle - \n\t :manner/IN~resemble-01 -)",
        "graph_rules": {
            "twine-01": [
                ":arg0~he",
                ":arg1~coref",
                ":arg2~ankle",
                ":manner~resemble-01"
            ]
        },
        "head": "twine-01",
        "name": ":root/ROOT~twine-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD himself :consist-of/IN :arg2/NP , :manner/IN :arg2/NP .",
        "tree_rules": [
            ":arg2~ankle",
            ":manner~resemble-01",
            ":arg0~he",
            ":arg1~coref"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~snake - \n\t :arg1/S~send-01 - \n\t :mod/ADVP~again -)",
        "graph_rules": {
            "speak-01": [
                ":arg0~snake",
                ":arg1~send-01",
                ":mod~again"
            ]
        },
        "head": "speak-01",
        "name": ":root/ROOT~speak-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' :arg0/NP XXX-VBD :mod/ADVP .",
        "tree_rules": [
            ":mod~again",
            ":arg1~send-01",
            ":arg0~snake"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/NP~and -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~and"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "'' XXX-CC :arg1/NP :op2/VP , :arg2/NP :op2/VP ''",
        "tree_rules": [
            ":arg2~and"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :polarity/VBD~- -)",
        "graph_rules": {
            "reply-01": [
                ":arg0~prince",
                ":polarity~-"
            ]
        },
        "head": "reply-01",
        "name": ":root/ROOT~reply-01",
        "noun_info": {},
        "tree": ":arg0/NP :polarity/VBD :polarity/DT XXX-NN .",
        "tree_rules": [
            ":polarity~-",
            ":polarity~-",
            ":arg0~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~snake - \n\t :arg1/S~pity-01 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~snake",
                ":arg1~pity-01"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/S - - :arg0/S , '' :arg0/NP XXX-VBD .",
        "tree_rules": [
            ":arg0~snake",
            ":arg1~pity-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/VP~help-01 - \n\t :condition/SBAR~grow-02 -)",
        "graph_rules": {
            "possible-01": [
                ":arg1~help-01",
                ":condition~grow-02"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT~possible-01",
        "noun_info": {},
        "tree": "'' :arg0/NP XXX-MD :arg1/VP .",
        "tree_rules": [
            ":condition~grow-02",
            ":arg1~help-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/E~do-02 -)",
        "graph_rules": {
            "possible-01": [
                ":arg1~do-02"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT~possible-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-MD - - ''",
        "tree_rules": [
            ":arg1~do-02"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "oh",
        "name": ":root/ROOT~oh",
        "noun_info": {},
        "tree": "'' XXX-UH !",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/S~understand-01 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~prince",
                ":arg1~understand-01"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": ":arg1/S , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~understand-01",
            ":arg0~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/SQ~speak-01 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~speak-01"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "'' XXX-CC :purpose/WHADVP :arg2/SQ :purpose/. ''",
        "tree_rules": [
            ":arg2~speak-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~snake - \n\t :arg1/S~solve-01 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~snake",
                ":arg1~solve-01"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~solve-01",
            ":arg0~snake"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~silent -)",
        "graph_rules": {
            "and": [
                ":op2~silent"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :domain/NP :op2/VP .",
        "tree_rules": [
            ":op2~silent"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/NP~18 -)",
        "graph_rules": {
            "chapter": [
                ":mod~18"
            ]
        },
        "head": "chapter",
        "name": ":root/ROOT~chapter",
        "noun_info": {},
        "tree": "XXX-NN :mod/NP .",
        "tree_rules": [
            ":mod~18"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VP~cross-02 - \n\t :op2/VP~meet-03 -)",
        "graph_rules": {
            "and": [
                ":op1~cross-02",
                ":op2~meet-03"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": ":arg0/NP :op1/VP XXX-CC :op2/VP .",
        "tree_rules": [
            ":op1~cross-02",
            ":op2~meet-03"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0-of/DT~have-03 - \n\t :mod/PP~account - \n\t :domain/NP~it -)",
        "graph_rules": {
            "flower": [
                ":arg0-of~have-03",
                ":mod~account",
                ":domain~it"
            ]
        },
        "head": "flower",
        "name": ":root/ROOT~flower",
        "noun_info": {},
        "tree": ":domain/NP was :arg0-of/DT XXX-NN :mod/PP .",
        "tree_rules": [
            ":arg0-of~have-03",
            ":mod~account",
            ":domain~it"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/NN~morning -)",
        "graph_rules": {
            "say-01": [
                ":arg0~prince",
                ":arg1~morning"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1-of/ADVP , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~morning",
            ":arg0~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~flower-01 - \n\t :arg1/NN~morning -)",
        "graph_rules": {
            "say-01": [
                ":arg0~flower-01",
                ":arg1~morning"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1-of/ADVP , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~morning",
            ":arg0~flower-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/WHADVP~be-located-at-91 - \n\t :manner/ADVP~polite-01 -)",
        "graph_rules": {
            "ask-01": [
                ":arg0~prince",
                ":arg1~be-located-at-91",
                ":manner~polite-01"
            ]
        },
        "head": "ask-01",
        "name": ":root/MULTI-SENTENCE~ask-01",
        "noun_info": {},
        "tree": "'' :arg1/WHADVP :arg1/SQ :arg2/. '' :arg0/NP XXX-VBD , :manner/ADVP .",
        "tree_rules": [
            ":arg1~be-located-at-91",
            ":manner~polite-01",
            ":arg0~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :frequency/ADVP~1 - \n\t :arg0/NP~flower - \n\t :arg1/NP~pass-02 -)",
        "graph_rules": {
            "see-01": [
                ":frequency~1",
                ":arg0~flower",
                ":arg1~pass-02"
            ]
        },
        "head": "see-01",
        "name": ":root/ROOT~see-01",
        "noun_info": {},
        "tree": ":arg0/NP had :frequency/ADVP XXX-VBN :arg1/NP .",
        "tree_rules": [
            ":frequency~1",
            ":arg1~pass-02",
            ":frequency~1",
            ":arg0~flower"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/PP~exist-01 -)",
        "graph_rules": {
            "think-01": [
                ":arg0~i",
                ":arg1~exist-01"
            ]
        },
        "head": "think-01",
        "name": ":root/ROOT~think-01",
        "noun_info": {},
        "tree": "'' :arg0/NP XXX-VBP there are :op1/CD :quant/CC :op2/CD :arg1/PP :arg1/PP .",
        "tree_rules": [
            ":arg1~exist-01",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/NP~they - \n\t :time/RB~before -)",
        "graph_rules": {
            "see-01": [
                ":arg0~i",
                ":arg1~they",
                ":time~before"
            ]
        },
        "head": "see-01",
        "name": ":root/ROOT~see-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD :arg1/NP , :op1/NP :time/RB .",
        "tree_rules": [
            ":time~before",
            ":arg1~they",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP~know-01 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~know-01"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "XXX-CC :arg1-of/NP :time/ADVP :arg2/VP .",
        "tree_rules": [
            ":arg2~know-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~wind - \n\t :arg1/NP-TMP~they - \n\t :direction/ADVP~away -)",
        "graph_rules": {
            "blow-01": [
                ":arg0~wind",
                ":arg1~they",
                ":direction~away"
            ]
        },
        "head": "blow-01",
        "name": ":root/ROOT~blow-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-NNS :arg1/NP-TMP .",
        "tree_rules": [
            ":direction~away",
            ":arg1~they",
            ":arg0~wind"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VBP~have-03 - \n\t :op2/SBAR~make-02 -)",
        "graph_rules": {
            "and": [
                ":op1~have-03",
                ":op2~make-02"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": ":arg0/NP :op1/VBP :arg1/NP , XXX-CC :op2/SBAR . ''",
        "tree_rules": [
            ":op2~make-02",
            ":op1~have-03"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/ADVP~goodbye -)",
        "graph_rules": {
            "say-01": [
                ":arg0~prince",
                ":arg1~goodbye"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/ADVP , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~goodbye",
            ":arg0~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~flower - \n\t :arg1/ADVP~goodbye -)",
        "graph_rules": {
            "say-01": [
                ":arg0~flower",
                ":arg1~goodbye"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/ADVP , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~goodbye",
            ":arg0~flower"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/NP~19 -)",
        "graph_rules": {
            "chapter": [
                ":mod~19"
            ]
        },
        "head": "chapter",
        "name": ":root/ROOT~chapter",
        "noun_info": {},
        "tree": "XXX-NN :mod/NP .",
        "tree_rules": [
            ":mod~19"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/NP~mountain - \n\t :time/IN~after -)",
        "graph_rules": {
            "climb-01": [
                ":arg0~prince",
                ":arg1~mountain",
                ":time~after"
            ]
        },
        "head": "climb-01",
        "name": ":root/ROOT~climb-01",
        "noun_info": {},
        "tree": ":time/IN :op1/NP , :arg0/NP XXX-VBD :arg1/NP .",
        "tree_rules": [
            ":time~after",
            ":arg1~mountain",
            ":arg0~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :quant/CD~3 - \n\t :domain/NP~mountain - \n\t :arg1-of/SBAR~come-04 -)",
        "graph_rules": {
            "volcano": [
                ":quant~3",
                ":domain~mountain",
                ":arg1-of~come-04"
            ]
        },
        "head": "volcano",
        "name": ":root/ROOT~volcano",
        "noun_info": {},
        "tree": ":domain/NP were the :quant/CD XXX-NNS , :arg1-of/SBAR .",
        "tree_rules": [
            ":quant~3",
            ":arg1-of~come-04",
            ":domain~mountain"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~use-01 -)",
        "graph_rules": {
            "and": [
                ":op2~use-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :op2/VP .",
        "tree_rules": [
            ":op2~use-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/VP~possible-01 - \n\t :arg2/E~coref -)",
        "graph_rules": {
            "say-01": [
                ":arg0~he",
                ":arg1~possible-01",
                ":arg2~coref"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :source/IN :compared-to/NP :arg1-of/ADVP , '' :arg0/NP XXX-VBD to himself , '' i :arg1/VP ''",
        "tree_rules": [
            ":arg0~he",
            ":arg1~possible-01",
            ":arg2~coref"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP~see-01 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~see-01"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :arg2/VP .",
        "tree_rules": [
            ":arg2~see-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/NN~morning - \n\t :manner/ADVP~courtesy -)",
        "graph_rules": {
            "say-01": [
                ":arg0~he",
                ":arg1~morning",
                ":manner~courtesy"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1-of/ADVP , '' :arg0/NP XXX-VBD :manner/ADVP .",
        "tree_rules": [
            ":arg1~morning",
            ":manner~courtesy",
            ":arg0~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/SBAR~echo-01 - \n\t :arg1/NP-TMP~morning -)",
        "graph_rules": {
            "answer-01": [
                ":arg0~echo-01",
                ":arg1~morning"
            ]
        },
        "head": "answer-01",
        "name": ":root/ROOT~answer-01",
        "noun_info": {},
        "tree": "'' good morning - :arg1-of/ADJP :arg1/NP-TMP , '' XXX-VBD :arg0/SBAR .",
        "tree_rules": [
            ":arg1~morning",
            ":arg0~echo-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/E~you - \n\t :arg1/E~i - \n\t :arg2/NNS~friend -)",
        "graph_rules": {
            "have-rel-role-91": [
                ":arg0~you",
                ":arg1~i",
                ":arg2~friend"
            ]
        },
        "head": "have-rel-role-91",
        "name": ":root/ROOT~have-rel-role-91",
        "noun_info": {},
        "tree": "'' be XXX-PRP$ :arg2/NNS .",
        "tree_rules": [
            ":arg2~friend",
            ":arg1~i",
            ":arg0~you"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/RB~alone -)",
        "graph_rules": {
            "say-01": [
                ":arg0~he",
                ":arg1~alone"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "i am :degree/DT :arg1/RB , '' :arg0/NP XXX-VBD .",
        "tree_rules": [
            ":arg1~alone",
            ":arg0~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/SBAR~echo-01 - \n\t :arg2/ADVP~alone -)",
        "graph_rules": {
            "answer-01": [
                ":arg0~echo-01",
                ":arg2~alone"
            ]
        },
        "head": "answer-01",
        "name": ":root/ROOT~answer-01",
        "noun_info": {},
        "tree": "'' :domain/NP am all :mod/FRAG , '' XXX-VBD :arg0/SBAR .",
        "tree_rules": [
            ":arg2~alone",
            ":arg0~echo-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/ADJP~dry-08 - \n\t :op2/VP~pointed - \n\t :op3/CC~and -)",
        "graph_rules": {
            "and": [
                ":op1~dry-08",
                ":op2~pointed",
                ":op3~and"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "'' :arg1/NP is :op1/ADJP , XXX-CC :op2/VP , and :op1/ADJP :op3/CC :op2/ADJP .",
        "tree_rules": [
            ":op2~pointed",
            ":op3~and",
            ":op1~dry-08"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~have-03 -)",
        "graph_rules": {
            "and": [
                ":op2~have-03"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :op2/VP .",
        "tree_rules": [
            ":op2~have-03"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~they - \n\t :arg1/WHNP~thing -)",
        "graph_rules": {
            "repeat-01": [
                ":arg0~they",
                ":arg1~thing"
            ]
        },
        "head": "repeat-01",
        "name": ":root/ROOT~repeat-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBP :arg1/WHNP :arg1-of/S ...",
        "tree_rules": [
            ":arg1~thing",
            ":arg0~they"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/NP~flower - \n\t :location/PP~planet -)",
        "graph_rules": {
            "have-03": [
                ":arg0~i",
                ":arg1~flower",
                ":location~planet"
            ]
        },
        "head": "have-03",
        "name": ":root/ROOT~have-03",
        "noun_info": {},
        "tree": ":location/PP :arg0/NP XXX-VBD :arg1/NP ; :time/S ... ''",
        "tree_rules": [
            ":arg1~flower",
            ":location~planet",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/NP~20 -)",
        "graph_rules": {
            "chapter": [
                ":mod~20"
            ]
        },
        "head": "chapter",
        "name": ":root/ROOT~chapter",
        "noun_info": {},
        "tree": "XXX-NN :mod/NP .",
        "tree_rules": [
            ":mod~20"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP~come-upon-26 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~come-upon-26"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "XXX-CC it :arg2/VP .",
        "tree_rules": [
            ":arg2~come-upon-26"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~lead-01 -)",
        "graph_rules": {
            "and": [
                ":op2~lead-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :op2/VP .",
        "tree_rules": [
            ":op2~lead-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/NN~morning -)",
        "graph_rules": {
            "say-01": [
                ":arg0~he",
                ":arg1~morning"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1-of/ADVP , '' :arg0/NP XXX-VBD .",
        "tree_rules": [
            ":arg1~morning",
            ":arg0~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~he - \n\t :arg2/IN~before -)",
        "graph_rules": {
            "stand-01": [
                ":arg1~he",
                ":arg2~before"
            ]
        },
        "head": "stand-01",
        "name": ":root/ROOT~stand-01",
        "noun_info": {},
        "tree": ":arg1/NP was XXX-VBG :arg2/IN :location-of/NP .",
        "tree_rules": [
            ":arg2~before",
            ":arg1~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~rose - \n\t :arg1/NN~morning -)",
        "graph_rules": {
            "say-01": [
                ":arg0~rose",
                ":arg1~morning"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1-of/ADVP , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~morning",
            ":arg0~rose"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/PP~they -)",
        "graph_rules": {
            "gaze-01": [
                ":arg0~prince",
                ":arg1~they"
            ]
        },
        "head": "gaze-01",
        "name": ":root/ROOT~gaze-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD :arg1/PP .",
        "tree_rules": [
            ":arg1~they",
            ":arg0~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~they - \n\t :arg1/PP~flower -)",
        "graph_rules": {
            "look-02": [
                ":arg0~they",
                ":arg1~flower"
            ]
        },
        "head": "look-02",
        "name": ":root/ROOT~look-02",
        "noun_info": {},
        "tree": ":arg0/NP :mod/ADVP XXX-VBD :arg1/PP .",
        "tree_rules": [
            ":arg1~flower",
            ":arg0~they"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~rose - \n\t :arg1/S~rose -)",
        "graph_rules": {
            "say-01": [
                ":arg0~rose",
                ":arg1~rose"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' :arg0/NP XXX-VBD .",
        "tree_rules": [
            ":arg1~rose",
            ":arg0~rose"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~overcome-01 -)",
        "graph_rules": {
            "and": [
                ":op2~overcome-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :arg1/NP :op2/VP .",
        "tree_rules": [
            ":op2~overcome-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~flower - \n\t :arg1/SBAR~unique - \n\t :arg2/E~coref -)",
        "graph_rules": {
            "tell-01": [
                ":arg0~flower",
                ":arg1~unique",
                ":arg2~coref"
            ]
        },
        "head": "tell-01",
        "name": ":root/ROOT~tell-01",
        "noun_info": {},
        "tree": ":arg0/NP had XXX-VBN :poss/NP :arg1/SBAR .",
        "tree_rules": [
            ":arg1~unique",
            ":arg0~flower",
            ":arg2~coref"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/PP~they -)",
        "graph_rules": {
            "and": [
                ":op1~they"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :quant/S , :mod/NP :arg1-of/ADJP , :location/PP !",
        "tree_rules": [
            ":op1~they"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/CC~and - \n\t :arg2/E~coref -)",
        "graph_rules": {
            "say-01": [
                ":arg0~he",
                ":arg1~and",
                ":arg2~coref"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :op1/S , '' :arg0/NP XXX-VBD to himself , '' :condition/SBAR .",
        "tree_rules": [
            ":arg1~and",
            ":arg0~he",
            ":arg2~coref"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~oblige-02 - \n\t :arg1-of/IN~cause-01 -)",
        "graph_rules": {
            "and": [
                ":op2~oblige-02",
                ":arg1-of~cause-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC i :op2/VP - - :arg0/S ... ''",
        "tree_rules": [
            ":op2~oblige-02",
            ":arg1-of~cause-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/RB~- - \n\t :arg0/CC~and - \n\t :arg1/NP~prince -)",
        "graph_rules": {
            "make-02": [
                ":polarity~-",
                ":arg0~and",
                ":arg1~prince"
            ]
        },
        "head": "make-02",
        "name": ":root/ROOT~make-02",
        "noun_info": {},
        "tree": ":quant/S ... that :polarity/VBZ :polarity/RB XXX-VB :domain/NP :arg1/NP ... ''",
        "tree_rules": [
            ":arg0~and",
            ":arg1~prince",
            ":polarity~-",
            ":polarity~-"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/CC~and -)",
        "graph_rules": {
            "and": [
                ":op2~and"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :arg1/NP :op2/VP .",
        "tree_rules": [
            ":op2~and"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/NP~21 -)",
        "graph_rules": {
            "chapter": [
                ":mod~21"
            ]
        },
        "head": "chapter",
        "name": ":root/ROOT~chapter",
        "noun_info": {},
        "tree": "XXX-NN :mod/NP .",
        "tree_rules": [
            ":mod~21"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~fox - \n\t :time/ADVP~then -)",
        "graph_rules": {
            "appear-01": [
                ":arg1~fox",
                ":time~then"
            ]
        },
        "head": "appear-01",
        "name": ":root/ROOT~appear-01",
        "noun_info": {},
        "tree": "it was :time/ADVP that :arg1/NP XXX-VBD .",
        "tree_rules": [
            ":arg1~fox",
            ":time~then"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~fox - \n\t :arg1/NN~morning -)",
        "graph_rules": {
            "say-01": [
                ":arg0~fox",
                ":arg1~morning"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1-of/ADVP , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~morning",
            ":arg0~fox"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg2/ADVP~morning - \n\t :manner/ADVP~polite-01 - \n\t :concession/VP~see-01 -)",
        "graph_rules": {
            "respond-01": [
                ":arg0~prince",
                ":arg2~morning",
                ":manner~polite-01",
                ":concession~see-01"
            ]
        },
        "head": "respond-01",
        "name": ":root/ROOT~respond-01",
        "noun_info": {},
        "tree": "'' :arg1-of/NP :arg2/ADVP , '' :arg0/NP XXX-VBD :manner/ADVP , :concession/IN :time/WHADVP :time/S he :concession/VP .",
        "tree_rules": [
            ":concession~see-01",
            ":manner~polite-01",
            ":arg0~prince",
            ":arg2~morning",
            ":concession~see-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~voice - \n\t :arg1/NP~i -)",
        "graph_rules": {
            "say-01": [
                ":arg0~voice",
                ":arg1~i"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/NP :location/RB , '' :arg0/NP XXX-VBD , '' :location/IN :op1/NP . ''",
        "tree_rules": [
            ":arg1~i",
            ":arg0~voice"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~fox - \n\t :arg1/S~fox -)",
        "graph_rules": {
            "say-01": [
                ":arg0~fox",
                ":arg1~fox"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~fox",
            ":arg0~fox"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/CC~and -)",
        "graph_rules": {
            "propose-01": [
                ":arg0~prince",
                ":arg1~and"
            ]
        },
        "head": "propose-01",
        "name": ":root/ROOT~propose-01",
        "noun_info": {},
        "tree": "'' :op1/S :arg1/CC :op2/S , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~and",
            ":arg0~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/E~- - \n\t :arg1/NP~i - \n\t :mod/RB~so -)",
        "graph_rules": {
            "happy-01": [
                ":polarity~-",
                ":arg1~i",
                ":mod~so"
            ]
        },
        "head": "happy-01",
        "name": ":root/ROOT~happy-01",
        "noun_info": {},
        "tree": "'' :arg1/NP am :mod/RB XXX-JJ . ''",
        "tree_rules": [
            ":mod~so",
            ":arg1~i",
            ":polarity~-"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~fox - \n\t :arg1/MD~possible-01 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~fox",
                ":arg1~possible-01"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' :arg0/NP XXX-VBD .",
        "tree_rules": [
            ":arg1~possible-01",
            ":arg0~fox"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~i - \n\t :polarity/RB~- -)",
        "graph_rules": {
            "tame-01": [
                ":arg1~i",
                ":polarity~-"
            ]
        },
        "head": "tame-01",
        "name": ":root/ROOT~tame-01",
        "noun_info": {},
        "tree": "'' :arg1/NP am :polarity/RB XXX-VBN . ''",
        "tree_rules": [
            ":polarity~-",
            ":arg1~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "ah",
        "name": ":root/ROOT~ah",
        "noun_info": {},
        "tree": "'' XXX-RB !",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/NP~excuse-01 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~prince",
                ":arg1~excuse-01"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": ":polite/S , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~excuse-01",
            ":arg0~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/S~add-01 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~add-01"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "XXX-CC , :time/IN :op1/NP , :arg2/S : '' :arg1/S :arg2/. ''",
        "tree_rules": [
            ":arg2~add-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~fox - \n\t :arg1/S~live-01 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~fox",
                ":arg1~live-01"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~live-01",
            ":arg0~fox"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~you - \n\t :arg1/.~amr-unknown -)",
        "graph_rules": {
            "look-01": [
                ":arg0~you",
                ":arg1~amr-unknown"
            ]
        },
        "head": "look-01",
        "name": ":root/ROOT~look-01",
        "noun_info": {},
        "tree": "'' what is it that :arg0/NP are XXX-VBG for :arg1/. ''",
        "tree_rules": [
            ":arg0~you",
            ":arg1~amr-unknown"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/S~look-01 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~prince",
                ":arg1~look-01"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~look-01",
            ":arg0~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/VP~tame-01 - \n\t :arg2/.~amr-unknown -)",
        "graph_rules": {
            "mean-01": [
                ":arg1~tame-01",
                ":arg2~amr-unknown"
            ]
        },
        "head": "mean-01",
        "name": ":root/ROOT~mean-01",
        "noun_info": {},
        "tree": "'' what does that XXX-NN - :arg1/VP :arg2/. ''",
        "tree_rules": [
            ":arg1~tame-01",
            ":arg2~amr-unknown"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~fox - \n\t :arg1/ADVP~man -)",
        "graph_rules": {
            "say-01": [
                ":arg0~fox",
                ":arg1~man"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/ADVP , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~man",
            ":arg0~fox"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VBP~have-03 - \n\t :op2/NP~hunt-01 -)",
        "graph_rules": {
            "and": [
                ":op1~have-03",
                ":op2~hunt-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "'' :arg0/NP :op1/VBP :arg1/NP , XXX-CC :op2/NP .",
        "tree_rules": [
            ":op2~hunt-01",
            ":op1~have-03"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~it - \n\t :degree/RB~very -)",
        "graph_rules": {
            "disturb-01": [
                ":arg0~it",
                ":degree~very"
            ]
        },
        "head": "disturb-01",
        "name": ":root/ROOT~disturb-01",
        "noun_info": {},
        "tree": ":arg0/NP is :degree/RB XXX-JJ .",
        "tree_rules": [
            ":degree~very",
            ":arg0~it"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~they - \n\t :arg1/NP~chicken - \n\t :mod/ADVP~also -)",
        "graph_rules": {
            "raise-03": [
                ":arg0~they",
                ":arg1~chicken",
                ":mod~also"
            ]
        },
        "head": "raise-03",
        "name": ":root/ROOT~raise-03",
        "noun_info": {},
        "tree": ":arg0/NP :mod/ADVP XXX-VBP :arg1/NP .",
        "tree_rules": [
            ":arg1~chicken",
            ":arg0~they",
            ":mod~also"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~this - \n\t :arg1/PRP$~they - \n\t :mod/JJ~only -)",
        "graph_rules": {
            "interest-01": [
                ":arg0~this",
                ":arg1~they",
                ":mod~only"
            ]
        },
        "head": "interest-01",
        "name": ":root/ROOT~interest-01",
        "noun_info": {},
        "tree": ":arg0/NP are :arg1/PRP$ :mod/JJ XXX-NNS .",
        "tree_rules": [
            ":arg1~they",
            ":mod~only",
            ":arg0~this"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~you - \n\t :arg1/PP~chicken -)",
        "graph_rules": {
            "look-01": [
                ":arg0~you",
                ":arg1~chicken"
            ]
        },
        "head": "look-01",
        "name": ":root/ROOT~look-01",
        "noun_info": {},
        "tree": "are :arg0/NP XXX-VBG :arg1/PP ? ''",
        "tree_rules": [
            ":arg1~chicken",
            ":arg0~you"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/ADVP~no -)",
        "graph_rules": {
            "say-01": [
                ":arg0~prince",
                ":arg1~no"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/ADVP , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~no",
            ":arg0~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/IN~person/have-rel-role-91 -)",
        "graph_rules": {
            "look-01": [
                ":arg0~i",
                ":arg1~person/have-rel-role-91"
            ]
        },
        "head": "look-01",
        "name": ":root/ROOT~look-01",
        "noun_info": {},
        "tree": "'' :arg0/NP am XXX-VBG :arg1/IN :arg2/NP .",
        "tree_rules": [
            ":arg1~person/have-rel-role-91",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/VP~tame-01 - \n\t :arg2/.~amr-unknown -)",
        "graph_rules": {
            "mean-01": [
                ":arg1~tame-01",
                ":arg2~amr-unknown"
            ]
        },
        "head": "mean-01",
        "name": ":root/ROOT~mean-01",
        "noun_info": {},
        "tree": "what does that XXX-NN - :arg1/VP :arg2/. ''",
        "tree_rules": [
            ":arg1~tame-01",
            ":arg2~amr-unknown"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~fox - \n\t :arg1/S~neglect-01 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~fox",
                ":arg1~neglect-01"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~neglect-01",
            ":arg0~fox"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~it - \n\t :arg2/S~establish-01 -)",
        "graph_rules": {
            "mean-01": [
                ":arg1~it",
                ":arg2~establish-01"
            ]
        },
        "head": "mean-01",
        "name": ":root/ROOT~mean-01",
        "noun_info": {},
        "tree": ":arg1/NP XXX-VBZ :arg2/S . ''",
        "tree_rules": [
            ":arg2~establish-01",
            ":arg1~it"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~tie-01 -)",
        "graph_rules": {
            "establish-01": [
                ":arg1~tie-01"
            ]
        },
        "head": "establish-01",
        "name": ":root/ROOT~establish-01",
        "noun_info": {},
        "tree": "'' ' to XXX-VB :arg1/NP ? ''",
        "tree_rules": [
            ":arg1~tie-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~fox - \n\t :arg1/NP~that -)",
        "graph_rules": {
            "say-01": [
                ":arg0~fox",
                ":arg1~that"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :mod/RB :arg1/NP , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~that",
            ":arg0~fox"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/NP~boy -)",
        "graph_rules": {
            "opine-01": [
                ":arg0~i",
                ":arg1~boy"
            ]
        },
        "head": "opine-01",
        "name": ":root/ROOT~opine-01",
        "noun_info": {},
        "tree": "'' XXX-TO :arg0/NP , :domain/NP are :mod/ADVP :mod/ADJP .",
        "tree_rules": [
            ":arg0~i",
            ":arg1~boy"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~need-01 -)",
        "graph_rules": {
            "and": [
                ":op2~need-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :op2/VP .",
        "tree_rules": [
            ":op2~need-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~need-01 -)",
        "graph_rules": {
            "and": [
                ":op2~need-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC you , :arg0/PP , :op2/VP .",
        "tree_rules": [
            ":op2~need-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~you - \n\t :arg1/E~fox -)",
        "graph_rules": {
            "opine-01": [
                ":arg0~you",
                ":arg1~fox"
            ]
        },
        "head": "opine-01",
        "name": ":root/ROOT~opine-01",
        "noun_info": {},
        "tree": "XXX-TO :arg0/NP , :domain/NP :mod/VP .",
        "tree_rules": [
            ":arg0~you",
            ":arg1~fox"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP~need-01 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~need-01"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "XXX-CC :condition/IN :arg0/S , then :arg0/NP :arg2/VP .",
        "tree_rules": [
            ":arg2~need-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/VP~unique -)",
        "graph_rules": {
            "opine-01": [
                ":arg0~i",
                ":arg1~unique"
            ]
        },
        "head": "opine-01",
        "name": ":root/ROOT~opine-01",
        "noun_info": {},
        "tree": "XXX-TO :arg0/NP , :domain/NP :arg1/VP .",
        "tree_rules": [
            ":arg0~i",
            ":arg1~unique"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~you - \n\t :arg1/S~unique -)",
        "graph_rules": {
            "opine-01": [
                ":arg0~you",
                ":arg1~unique"
            ]
        },
        "head": "opine-01",
        "name": ":root/ROOT~opine-01",
        "noun_info": {},
        "tree": "XXX-TO :arg0/NP , :arg1/S ... ''",
        "tree_rules": [
            ":arg0~you",
            ":arg1~unique"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/S~begin-01 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~prince",
                ":arg1~begin-01"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~begin-01",
            ":arg0~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "flower",
        "name": ":root/ROOT~flower",
        "noun_info": {},
        "tree": "'' there is a XXX-NN ...",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/LS~i - \n\t :arg1/VP~tame-01 -)",
        "graph_rules": {
            "think-01": [
                ":arg0~i",
                ":arg1~tame-01"
            ]
        },
        "head": "think-01",
        "name": ":root/ROOT~think-01",
        "noun_info": {},
        "tree": ":arg0/LS XXX-VBP :arg0/PP :arg1/VP ... ''",
        "tree_rules": [
            ":arg0~i",
            ":arg1~tame-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~fox - \n\t :arg1/S~possible-01 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~fox",
                ":arg1~possible-01"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~possible-01",
            ":arg0~fox"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/ADVP~one - \n\t :arg1/PP~thing - \n\t :location/NP~planet/name -)",
        "graph_rules": {
            "see-01": [
                ":arg0~one",
                ":arg1~thing",
                ":location~planet/name"
            ]
        },
        "head": "see-01",
        "name": ":root/ROOT~see-01",
        "noun_info": {},
        "tree": "'' :location/NP :arg0/ADVP XXX-VBZ :mod/NP . ''",
        "tree_rules": [
            ":arg1~thing",
            ":arg0~one",
            ":location~planet/name"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/CC~and -)",
        "graph_rules": {
            "seem-01": [
                ":arg1~and"
            ]
        },
        "head": "seem-01",
        "name": ":root/ROOT~seem-01",
        "noun_info": {},
        "tree": ":arg1/NP XXX-VBD :op1/ADJP , :arg1/CC :op2/ADJP .",
        "tree_rules": [
            ":arg1~and"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/NP~planet -)",
        "graph_rules": {
            "be-located-at-91": [
                ":arg2~planet"
            ]
        },
        "head": "be-located-at-91",
        "name": ":root/ROOT~be-located-at-91",
        "noun_info": {},
        "tree": "'' XXX-IN :arg2/NP ? ''",
        "tree_rules": [
            ":arg2~planet"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "yes",
        "name": ":root/ROOT~yes",
        "noun_info": {},
        "tree": "'' XXX-UH . ''",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0-of/NP~hunt-01 - \n\t :location/PP~planet -)",
        "graph_rules": {
            "person": [
                ":arg0-of~hunt-01",
                ":location~planet"
            ]
        },
        "head": "person",
        "name": ":root/ROOT~person",
        "noun_info": {},
        "tree": "'' are XXX-EX :arg0-of/NP :location/PP ? ''",
        "tree_rules": [
            ":arg0-of~hunt-01",
            ":location~planet"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "no",
        "name": ":root/ROOT~no",
        "noun_info": {},
        "tree": "'' XXX-DT . ''",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/VP~interest-01 -)",
        "graph_rules": {
            "ah-01": [
                ":arg1~interest-01"
            ]
        },
        "head": "ah-01",
        "name": ":root/ROOT~ah-01",
        "noun_info": {},
        "tree": "'' XXX-RB , :arg0/NP :arg1/VP !",
        "tree_rules": [
            ":arg1~interest-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "chicken",
        "name": ":root/ROOT~chicken",
        "noun_info": {},
        "tree": "are there XXX-NNS ? ''",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "no",
        "name": ":root/ROOT~no",
        "noun_info": {},
        "tree": "'' XXX-DT . ''",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~fox - \n\t :arg1/S~perfect-02 -)",
        "graph_rules": {
            "sigh-01": [
                ":arg0~fox",
                ":arg1~perfect-02"
            ]
        },
        "head": "sigh-01",
        "name": ":root/ROOT~sigh-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~perfect-02",
            ":arg0~fox"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP~come-01 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~come-01"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "XXX-CC :arg1/NP :arg2/VP .",
        "tree_rules": [
            ":arg2~come-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~fox - \n\t :arg1/S~monotonous -)",
        "graph_rules": {
            "say-01": [
                ":arg0~fox",
                ":arg1~monotonous"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' :arg0/NP XXX-VBD .",
        "tree_rules": [
            ":arg1~monotonous",
            ":arg0~fox"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/ADJP~alike-05 - \n\t :op2/ADJP~alike-05 -)",
        "graph_rules": {
            "and": [
                ":op1~alike-05",
                ":op2~alike-05"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": ":arg1/S , XXX-CC :arg1/S .",
        "tree_rules": [
            ":op1~alike-05",
            ":op2~alike-05"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/PP~cause-01 -)",
        "graph_rules": {
            "and": [
                ":op2~cause-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC , :op2/PP , :arg1/NP :arg1/VP .",
        "tree_rules": [
            ":op2~cause-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP~shine-01 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~shine-01"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "XXX-CC :condition/IN :arg0/S , it :arg2/VP .",
        "tree_rules": [
            ":arg2~shine-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/NP~sound-02 -)",
        "graph_rules": {
            "know-04": [
                ":arg0~i",
                ":arg1~sound-02"
            ]
        },
        "head": "know-04",
        "name": ":root/ROOT~know-04",
        "noun_info": {},
        "tree": ":arg0/NP shall XXX-VB :arg1/NP .",
        "tree_rules": [
            ":arg1~sound-02",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~step-01 - \n\t :arg1/NP~i - \n\t :arg4/IN~underneath - \n\t :arg5/ADVP~back - \n\t :manner/S~hurry-01 -)",
        "graph_rules": {
            "send-03": [
                ":arg0~step-01",
                ":arg1~i",
                ":arg4~underneath",
                ":arg5~back",
                ":manner~hurry-01"
            ]
        },
        "head": "send-03",
        "name": ":root/ROOT~send-03",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBP :manner/S .",
        "tree_rules": [
            ":arg4~underneath",
            ":arg5~back",
            ":arg1~i",
            ":manner~hurry-01",
            ":arg0~step-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/MD~step-01 - \n\t :arg1/IN~out-06 - \n\t :arg2/NP~i - \n\t :arg1-of/IN~resemble-01 -)",
        "graph_rules": {
            "call-03": [
                ":arg0~step-01",
                ":arg1~out-06",
                ":arg2~i",
                ":arg1-of~resemble-01"
            ]
        },
        "head": "call-03",
        "name": ":root/ROOT~call-03",
        "noun_info": {},
        "tree": ":arg1/NP :arg0/MD XXX-VB :arg2/NP , :arg1-of/IN :arg2/NP , :arg1/IN :arg2/PP .",
        "tree_rules": [
            ":arg1-of~resemble-01",
            ":arg1~out-06",
            ":arg2~i",
            ":arg0~step-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/S~look-01 - \n\t :op3/UCP~see-01 -)",
        "graph_rules": {
            "and": [
                ":op2~look-01",
                ":op3~see-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :time/RB :op2/S",
        "tree_rules": [
            ":op3~see-01",
            ":op2~look-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/NP~bread - \n\t :polarity/RB~- -)",
        "graph_rules": {
            "eat-01": [
                ":arg0~i",
                ":arg1~bread",
                ":polarity~-"
            ]
        },
        "head": "eat-01",
        "name": ":root/ROOT~eat-01",
        "noun_info": {},
        "tree": ":arg0/NP :polarity/VBP :polarity/RB XXX-VB :arg1/NP .",
        "tree_rules": [
            ":arg1~bread",
            ":polarity~-",
            ":polarity~-",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/PP~i - \n\t :arg1/NP~wheat - \n\t :polarity/DT~- -)",
        "graph_rules": {
            "use-01": [
                ":arg0~i",
                ":arg1~wheat",
                ":polarity~-"
            ]
        },
        "head": "use-01",
        "name": ":root/ROOT~use-01",
        "noun_info": {},
        "tree": ":arg1/NP is of :polarity/DT XXX-NN :arg0/PP .",
        "tree_rules": [
            ":polarity~-",
            ":arg0~i",
            ":arg1~wheat"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~field - \n\t :arg1/ADVP~nothing - \n\t :arg2/PP~i -)",
        "graph_rules": {
            "say-01": [
                ":arg0~field",
                ":arg1~nothing",
                ":arg2~i"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": ":arg0/NP have :arg1/ADVP to XXX-VB :arg2/PP .",
        "tree_rules": [
            ":arg2~i",
            ":arg1~nothing",
            ":arg0~field"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~sad-02 -)",
        "graph_rules": {
            "and": [
                ":op2~sad-02"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :op2/VP .",
        "tree_rules": [
            ":op2~sad-02"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP~have-03 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~have-03"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :arg2/VP .",
        "tree_rules": [
            ":arg2~have-03"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~grain - \n\t :arg1/NP~think-01 - \n\t :arg2/NP~i - \n\t :direction/S~back -)",
        "graph_rules": {
            "bring-01": [
                ":arg0~grain",
                ":arg1~think-01",
                ":arg2~i",
                ":direction~back"
            ]
        },
        "head": "bring-01",
        "name": ":root/ROOT~bring-01",
        "noun_info": {},
        "tree": ":arg0/NP will XXX-VB :direction/S .",
        "tree_rules": [
            ":arg1~think-01",
            ":arg2~i",
            ":direction~back",
            ":arg0~grain"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~love-02 -)",
        "graph_rules": {
            "and": [
                ":op2~love-02"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :op2/VP ''",
        "tree_rules": [
            ":op2~love-02"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~fox - \n\t :arg1/PP~prince - \n\t :arg1-of/PP~long-03 -)",
        "graph_rules": {
            "gaze-01": [
                ":arg0~fox",
                ":arg1~prince",
                ":arg1-of~long-03"
            ]
        },
        "head": "gaze-01",
        "name": ":root/ROOT~gaze-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD :arg1/PP , :arg1-of/PP .",
        "tree_rules": [
            ":arg1~prince",
            ":arg1-of~long-03",
            ":arg0~fox"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg2/S~want-01 -)",
        "graph_rules": {
            "reply-01": [
                ":arg0~prince",
                ":arg2~want-01"
            ]
        },
        "head": "reply-01",
        "name": ":root/ROOT~reply-01",
        "noun_info": {},
        "tree": "'' :arg2/S , '' :arg0/NP XXX-VBD .",
        "tree_rules": [
            ":arg2~want-01",
            ":arg0~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/SBAR~have-03 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~have-03"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "'' XXX-CC :arg0/NP .",
        "tree_rules": [
            ":arg2~have-03"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/CC~and -)",
        "graph_rules": {
            "obligate-01": [
                ":arg2~and"
            ]
        },
        "head": "obligate-01",
        "name": ":root/ROOT~obligate-01",
        "noun_info": {},
        "tree": ":arg0-of/S , :arg2/CC :op2/S . ''",
        "tree_rules": [
            ":arg2~and"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~fox - \n\t :arg1/S~understand-01 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~fox",
                ":arg1~understand-01"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~understand-01",
            ":arg0~fox"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~man - \n\t :arg1/NP~time - \n\t :polarity/DT~- -)",
        "graph_rules": {
            "have-03": [
                ":arg0~man",
                ":arg1~time",
                ":polarity~-"
            ]
        },
        "head": "have-03",
        "name": ":root/ROOT~have-03",
        "noun_info": {},
        "tree": "'' :arg0/NP XXX-VBP :arg1/NP .",
        "tree_rules": [
            ":polarity~-",
            ":arg1~time",
            ":arg0~man"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~they - \n\t :arg1/NP~thing - \n\t :location/PP~shop -)",
        "graph_rules": {
            "buy-01": [
                ":arg0~they",
                ":arg1~thing",
                ":location~shop"
            ]
        },
        "head": "buy-01",
        "name": ":root/ROOT~buy-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBP :arg1/NP :time/ADJP :arg1-of/S .",
        "tree_rules": [
            ":location~shop",
            ":arg1~thing",
            ":arg0~they"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/MD~possible-01 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~possible-01"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "XXX-CC there is :location/NP :location/RB :location/WHADVP :arg1/S , and :arg0-of/RB :arg1/S .",
        "tree_rules": [
            ":arg2~possible-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~you - \n\t :arg1/NP~i - \n\t :condition/IN~want-01 -)",
        "graph_rules": {
            "tame-01": [
                ":arg0~you",
                ":arg1~i",
                ":condition~want-01"
            ]
        },
        "head": "tame-01",
        "name": ":root/ROOT~tame-01",
        "noun_info": {},
        "tree": ":condition/IN :arg0/NP :condition/VBP :arg2/NP , XXX-JJ :arg1/NP ... ''",
        "tree_rules": [
            ":arg1~i",
            ":condition~want-01",
            ":condition~want-01",
            ":arg0~you"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~fox - \n\t :arg2/MD~obligate-01 -)",
        "graph_rules": {
            "reply-01": [
                ":arg0~fox",
                ":arg2~obligate-01"
            ]
        },
        "head": "reply-01",
        "name": ":root/ROOT~reply-01",
        "noun_info": {},
        "tree": "'' :arg2/S , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg2~obligate-01",
            ":arg0~fox"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/PRP~you - \n\t :time/IN~first - \n\t :location/IN~relative-position - \n\t :direction/PRT~down - \n\t :example/PRN~that -)",
        "graph_rules": {
            "sit-down-02": [
                ":arg1~you",
                ":time~first",
                ":location~relative-position",
                ":direction~down",
                ":example~that"
            ]
        },
        "head": "sit-down-02",
        "name": ":root/ROOT~sit-down-02",
        "noun_info": {},
        "tree": "'' :time/RB :arg1/PRP will XXX-VB :direction/PRT :direction/IN :unit/NP - :example/PRN :time/IN :location/NP .",
        "tree_rules": [
            ":time~first",
            ":arg1~you",
            ":location~relative-position",
            ":direction~down",
            ":time~first",
            ":direction~down",
            ":example~that"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/S~look-01 - \n\t :op2/S~say-01 -)",
        "graph_rules": {
            "and": [
                ":op1~look-01",
                ":op2~say-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": ":op1/S , XXX-CC :op2/S .",
        "tree_rules": [
            ":op1~look-01",
            ":op2~say-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/PP~misunderstand-01 - \n\t :arg2/NP~word -)",
        "graph_rules": {
            "source-01": [
                ":arg1~misunderstand-01",
                ":arg2~word"
            ]
        },
        "head": "source-01",
        "name": ":root/ROOT~source-01",
        "noun_info": {},
        "tree": ":arg2/NP are the XXX-NN :arg1/PP .",
        "tree_rules": [
            ":arg1~misunderstand-01",
            ":arg2~word"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP~sit-01 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~sit-01"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "XXX-CC :arg1/NP :arg2/VP ''",
        "tree_rules": [
            ":arg2~sit-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~prince - \n\t :direction/ADVP~back - \n\t :time/NP~day -)",
        "graph_rules": {
            "come-01": [
                ":arg1~prince",
                ":direction~back",
                ":time~day"
            ]
        },
        "head": "come-01",
        "name": ":root/ROOT~come-01",
        "noun_info": {},
        "tree": ":arg1/NP XXX-VBD :direction/ADVP .",
        "tree_rules": [
            ":time~day",
            ":direction~back",
            ":arg1~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~fox - \n\t :arg1/ADJP~good-02 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~fox",
                ":arg1~good-02"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' it would have been :arg1/ADJP :arg1/S , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~good-02",
            ":arg0~fox"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/S~happy-01 - \n\t :condition/S~come-01 - \n\t :time/RB~date-entity -)",
        "graph_rules": {
            "begin-01": [
                ":arg0~i",
                ":arg1~happy-01",
                ":condition~come-01",
                ":time~date-entity"
            ]
        },
        "head": "begin-01",
        "name": ":root/ROOT~begin-01",
        "noun_info": {},
        "tree": "'' :condition/S , :time/RB :time/PP :arg0/NP shall XXX-VB :arg1/S .",
        "tree_rules": [
            ":condition~come-01",
            ":time~date-entity",
            ":arg1~happy-01",
            ":arg0~i",
            ":condition~come-01",
            ":time~date-entity"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/CC~and - \n\t :time/NP~advance-01 -)",
        "graph_rules": {
            "feel-01": [
                ":arg0~i",
                ":arg1~and",
                ":time~advance-01"
            ]
        },
        "head": "feel-01",
        "name": ":root/ROOT~feel-01",
        "noun_info": {},
        "tree": ":arg0/NP shall XXX-VB :time/NP .",
        "tree_rules": [
            ":arg1~and",
            ":time~advance-01",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/ADJP~happy-01 - \n\t :arg2/NP~you -)",
        "graph_rules": {
            "show-01": [
                ":arg0~i",
                ":arg1~happy-01",
                ":arg2~you"
            ]
        },
        "head": "show-01",
        "name": ":root/ROOT~show-01",
        "noun_info": {},
        "tree": ":arg0/NP shall XXX-VB :arg2/NP :degree/SBAR !",
        "tree_rules": [
            ":arg1~happy-01",
            ":arg2~you",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP~know-01 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~know-01"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "XXX-CC :condition/SBAR , :arg0/NP :arg2/VP ...",
        "tree_rules": [
            ":arg2~know-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~one - \n\t :arg2/VP~observe-01 -)",
        "graph_rules": {
            "obligate-01": [
                ":arg1~one",
                ":arg2~observe-01"
            ]
        },
        "head": "obligate-01",
        "name": ":root/ROOT~obligate-01",
        "noun_info": {},
        "tree": ":arg1/NP XXX-MD :arg2/VP ... ''",
        "tree_rules": [
            ":arg2~observe-01",
            ":arg1~one"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~fox - \n\t :arg1/S~act-02 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~fox",
                ":arg1~act-02"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~act-02",
            ":arg0~fox"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :domain/NP~they - \n\t :arg0-of/S~make-02 -)",
        "graph_rules": {
            "thing": [
                ":domain~they",
                ":arg0-of~make-02"
            ]
        },
        "head": "thing",
        "name": ":root/ROOT~thing",
        "noun_info": {},
        "tree": "'' :domain/NP are XXX-WP :arg0-of/S , :arg1/NP .",
        "tree_rules": [
            ":arg0-of~make-02",
            ":domain~they"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1-of/PRP$~have-03 - \n\t :arg0-of/PP~exemplify-01 -)",
        "graph_rules": {
            "rite": [
                ":arg1-of~have-03",
                ":arg0-of~exemplify-01"
            ]
        },
        "head": "rite",
        "name": ":root/ROOT~rite",
        "noun_info": {},
        "tree": ":arg0/NP is a XXX-NN , :arg0-of/PP , :arg0-of/PP .",
        "tree_rules": [
            ":arg0-of~exemplify-01",
            ":arg1-of~have-03"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~they - \n\t :arg2/PP~girl - \n\t :frequency/DT~rate-entity-91 -)",
        "graph_rules": {
            "dance-01": [
                ":arg0~they",
                ":arg2~girl",
                ":frequency~rate-entity-91"
            ]
        },
        "head": "dance-01",
        "name": ":root/ROOT~dance-01",
        "noun_info": {},
        "tree": ":arg4/NP-TMP :arg0/NP XXX-VBP :arg2/PP .",
        "tree_rules": [
            ":frequency~rate-entity-91",
            ":arg2~girl",
            ":arg0~they"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/VP~day -)",
        "graph_rules": {
            "cause-01": [
                ":arg1~day"
            ]
        },
        "head": "cause-01",
        "name": ":root/ROOT~cause-01",
        "noun_info": {},
        "tree": "XXX-RB :domain/NP :arg1/VP :domain/.",
        "tree_rules": [
            ":arg1~day"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~walk-01 -)",
        "graph_rules": {
            "possible-01": [
                ":arg1~walk-01"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT~possible-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-MD :extent/VP .",
        "tree_rules": [
            ":arg1~walk-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/S~vacation-01 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~vacation-01"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "XXX-CC :condition/SBAR , :arg1/S , and :arg2/S . ''",
        "tree_rules": [
            ":arg2~vacation-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/VP~tame-01 -)",
        "graph_rules": {
            "cause-01": [
                ":arg1~tame-01"
            ]
        },
        "head": "cause-01",
        "name": ":root/ROOT~cause-01",
        "noun_info": {},
        "tree": "XXX-IN :arg0/NP :arg1/VP .",
        "tree_rules": [
            ":arg1~tame-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/ADJP~say-01 -)",
        "graph_rules": {
            "and": [
                ":op1~say-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :time-of/ADVP :time/NP :time-of/PP - '' :op2/S . ''",
        "tree_rules": [
            ":op1~say-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/S~fault-01 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~prince",
                ":arg1~fault-01"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~fault-01",
            ":arg0~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/S~wish-01 - \n\t :arg2/VP~want-01 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg1~wish-01",
                ":arg2~want-01"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": ":arg1/S ; XXX-CC you :arg2/VP ... ''",
        "tree_rules": [
            ":arg2~want-01",
            ":arg1~wish-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~fox - \n\t :arg1/S~so -)",
        "graph_rules": {
            "say-01": [
                ":arg0~fox",
                ":arg1~so"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~so",
            ":arg0~fox"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~fox - \n\t :arg1/S~so -)",
        "graph_rules": {
            "say-01": [
                ":arg0~fox",
                ":arg1~so"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~so",
            ":arg0~fox"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~it - \n\t :arg1/ADJP~good-04 - \n\t :arg2/NP~you - \n\t :mod/ADVP~at-all -)",
        "graph_rules": {
            "do-02": [
                ":arg0~it",
                ":arg1~good-04",
                ":arg2~you",
                ":mod~at-all"
            ]
        },
        "head": "do-02",
        "name": ":root/ROOT~do-02",
        "noun_info": {},
        "tree": "'' :arg0/NP has XXX-VBN :arg2/NP :arg1/ADJP :mod/ADVP ! ''",
        "tree_rules": [
            ":arg2~you",
            ":arg1~good-04",
            ":mod~at-all",
            ":arg0~it"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~fox - \n\t :arg1/S~do-02 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~fox",
                ":arg1~do-02"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' XXX-VBD :arg0/NP :arg1-of/IN of :arg0/NP . ''",
        "tree_rules": [
            ":arg0~fox",
            ":arg1~do-02"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VP~add-01 -)",
        "graph_rules": {
            "and": [
                ":op1~add-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :time/ADVP :arg0/NP :op1/VP : '' :op2/PRN .",
        "tree_rules": [
            ":op1~add-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~you - \n\t :arg1/S~unique - \n\t :time/ADVP~now -)",
        "graph_rules": {
            "understand-01": [
                ":arg0~you",
                ":arg1~unique",
                ":time~now"
            ]
        },
        "head": "understand-01",
        "name": ":root/ROOT~understand-01",
        "noun_info": {},
        "tree": ":arg0/NP will XXX-VB :time/ADVP :domain/IN :arg1/S .",
        "tree_rules": [
            ":arg1~unique",
            ":time~now",
            ":arg0~you"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/S~come-01 - \n\t :op2/S~give-01 -)",
        "graph_rules": {
            "and": [
                ":op1~come-01",
                ":op2~give-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": ":op1/S , XXX-CC :op2/S . ''",
        "tree_rules": [
            ":op1~come-01",
            ":op2~give-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :direction/ADVP~away - \n\t :purpose/S~look-01 -)",
        "graph_rules": {
            "go-02": [
                ":arg0~prince",
                ":direction~away",
                ":purpose~look-01"
            ]
        },
        "head": "go-02",
        "name": ":root/ROOT~go-02",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD :direction/ADVP , :purpose/S .",
        "tree_rules": [
            ":direction~away",
            ":purpose~look-01",
            ":arg0~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/IN~resemble-01 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~he",
                ":arg1~resemble-01"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' :arg0/NP XXX-VBD .",
        "tree_rules": [
            ":arg1~resemble-01",
            ":arg0~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :domain/NP~you - \n\t :time/PP~as-yet -)",
        "graph_rules": {
            "nothing": [
                ":domain~you",
                ":time~as-yet"
            ]
        },
        "head": "nothing",
        "name": ":root/ROOT~nothing",
        "noun_info": {},
        "tree": "'' :time/PP are XXX-NN .",
        "tree_rules": [
            ":time~as-yet",
            ":domain~you",
            ":time~as-yet"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/S~tame-01 - \n\t :op2/S~tame-01 -)",
        "graph_rules": {
            "and": [
                ":op1~tame-01",
                ":op2~tame-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": ":op1/S , XXX-CC :op2/S .",
        "tree_rules": [
            ":op1~tame-01",
            ":op2~tame-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~you - \n\t :arg2/NP~fox - \n\t :time/SBAR~know-02 -)",
        "graph_rules": {
            "resemble-01": [
                ":arg1~you",
                ":arg2~fox",
                ":time~know-02"
            ]
        },
        "head": "resemble-01",
        "name": ":root/ROOT~resemble-01",
        "noun_info": {},
        "tree": ":arg1/NP are XXX-IN :arg2/NP :time/SBAR .",
        "tree_rules": [
            ":arg2~fox",
            ":time~know-02",
            ":arg1~you"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :domain/NP~he - \n\t :arg1-of/IN~resemble-01 - \n\t :mod/ADVP~only -)",
        "graph_rules": {
            "fox": [
                ":domain~he",
                ":arg1-of~resemble-01",
                ":mod~only"
            ]
        },
        "head": "fox",
        "name": ":root/ROOT~fox",
        "noun_info": {},
        "tree": ":domain/NP was :mod/ADVP :domain/DT XXX-NN :arg1-of/IN :quant/NP .",
        "tree_rules": [
            ":domain~he",
            ":arg1-of~resemble-01",
            ":mod~only",
            ":domain~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP~make-01 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~make-01"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :arg2/VP , and :arg1/S . ''",
        "tree_rules": [
            ":arg2~make-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VP~embarrass-01 -)",
        "graph_rules": {
            "and": [
                ":op1~embarrass-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :arg1/NP :op1/VP .",
        "tree_rules": [
            ":op1~embarrass-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/CC~contrast-01 -)",
        "graph_rules": {
            "go-on-25": [
                ":arg0~he",
                ":arg1~contrast-01"
            ]
        },
        "head": "go-on-25",
        "name": ":root/ROOT~go-on-25",
        "noun_info": {},
        "tree": "'' :arg1/S , :arg1/CC :arg2/S , '' :arg0/NP XXX-VBD on .",
        "tree_rules": [
            ":arg1~contrast-01",
            ":arg0~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/RB~- - \n\t :arg1/VP~die-01 -)",
        "graph_rules": {
            "possible-01": [
                ":polarity~-",
                ":arg1~die-01"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT~possible-01",
        "noun_info": {},
        "tree": "'' :arg1/NP XXX-MD :polarity/RB :arg1/VP .",
        "tree_rules": [
            ":polarity~-",
            ":arg1~die-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~person - \n\t :arg1/SBAR~look-02 - \n\t :arg1-of/IN~sure-02 -)",
        "graph_rules": {
            "think-01": [
                ":arg0~person",
                ":arg1~look-02",
                ":arg1-of~sure-02"
            ]
        },
        "head": "think-01",
        "name": ":root/ROOT~think-01",
        "noun_info": {},
        "tree": ":arg1-of/S , :arg0/NP would XXX-VB :arg1/SBAR - - the rose :arg1-of/IN :arg0-of/S .",
        "tree_rules": [
            ":arg1~look-02",
            ":arg1-of~sure-02",
            ":arg0~person",
            ":arg1-of~sure-02"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP~important -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~important"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "XXX-CC :mod/PP :domain/NP :arg2/VP .",
        "tree_rules": [
            ":arg2~important"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/S~rose -)",
        "graph_rules": {
            "cause-01": [
                ":arg0~rose"
            ]
        },
        "head": "cause-01",
        "name": ":root/ROOT~cause-01",
        "noun_info": {},
        "tree": "XXX-IN :arg0/S .",
        "tree_rules": [
            ":arg0~rose"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VP~go-02 -)",
        "graph_rules": {
            "and": [
                ":op1~go-02"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :op1/VP .",
        "tree_rules": [
            ":op1~go-02"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/ADVP~goodbye -)",
        "graph_rules": {
            "say-01": [
                ":arg0~he",
                ":arg1~goodbye"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/ADVP , '' :arg0/NP XXX-VBD .",
        "tree_rules": [
            ":arg1~goodbye",
            ":arg0~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~fox - \n\t :arg1/ADVP~goodbye -)",
        "graph_rules": {
            "say-01": [
                ":arg0~fox",
                ":arg1~goodbye"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/ADVP , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~goodbye",
            ":arg0~fox"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VP~secret -)",
        "graph_rules": {
            "and": [
                ":op1~secret"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "'' XXX-CC :time/ADVP :op1/VP . ''",
        "tree_rules": [
            ":op1~secret"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/TO~possible-01 - \n\t :purpose/S~remember-01 -)",
        "graph_rules": {
            "repeat-01": [
                ":arg0~prince",
                ":arg1~possible-01",
                ":purpose~remember-01"
            ]
        },
        "head": "repeat-01",
        "name": ":root/ROOT~repeat-01",
        "noun_info": {},
        "tree": "'' :arg1/NP is :mod/JJ is :instrument/JJ :arg1/TO :instrument/NP , '' :arg0/NP XXX-VBN , :arg1-of/SBAR .",
        "tree_rules": [
            ":arg0~prince",
            ":arg1~possible-01",
            ":purpose~remember-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1-of/SBAR~waste-01 - \n\t :arg0-of/SBAR~make-02 -)",
        "graph_rules": {
            "time": [
                ":arg1-of~waste-01",
                ":arg0-of~make-02"
            ]
        },
        "head": "time",
        "name": ":root/ROOT~time",
        "noun_info": {},
        "tree": "'' it is the XXX-NN :arg1-of/SBAR . ''",
        "tree_rules": [
            ":arg0-of~make-02",
            ":arg1-of~waste-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/S~time - \n\t :purpose/RB~remember-01 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~prince",
                ":arg1~time",
                ":purpose~remember-01"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/S - '' XXX-VBD :arg0/NP , :purpose/RB :arg1-of/SBAR .",
        "tree_rules": [
            ":arg0~prince",
            ":purpose~remember-01",
            ":purpose~remember-01",
            ":arg1~time"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~fox - \n\t :arg1/S~forget-01 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~fox",
                ":arg1~forget-01"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~forget-01",
            ":arg0~fox"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/MD~obligate-01 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~obligate-01"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "'' XXX-CC :arg1/NP .",
        "tree_rules": [
            ":arg2~obligate-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~you - \n\t :arg2/ADJP~responsible-03 -)",
        "graph_rules": {
            "become-01": [
                ":arg1~you",
                ":arg2~responsible-03"
            ]
        },
        "head": "become-01",
        "name": ":root/ROOT~become-01",
        "noun_info": {},
        "tree": ":arg1/NP XXX-VBP :arg2/ADJP .",
        "tree_rules": [
            ":arg2~responsible-03",
            ":arg1~you"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~you - \n\t :arg1/PP~rose -)",
        "graph_rules": {
            "responsible-03": [
                ":arg0~you",
                ":arg1~rose"
            ]
        },
        "head": "responsible-03",
        "name": ":root/ROOT~responsible-03",
        "noun_info": {},
        "tree": ":arg0/NP are XXX-JJ :arg1/PP ''",
        "tree_rules": [
            ":arg1~rose",
            ":arg0~you"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/ADJP~responsible-03 - \n\t :purpose/S~remember-01 -)",
        "graph_rules": {
            "repeat-01": [
                ":arg0~prince",
                ":arg1~responsible-03",
                ":purpose~remember-01"
            ]
        },
        "head": "repeat-01",
        "name": ":root/ROOT~repeat-01",
        "noun_info": {},
        "tree": "'' i am :arg1/ADJP , '' :arg0/NP XXX-VBN , :arg1-of/SBAR .",
        "tree_rules": [
            ":purpose~remember-01",
            ":arg0~prince",
            ":purpose~remember-01",
            ":arg1~responsible-03"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/NP~22 -)",
        "graph_rules": {
            "chapter": [
                ":mod~22"
            ]
        },
        "head": "chapter",
        "name": ":root/ROOT~chapter",
        "noun_info": {},
        "tree": "XXX-NN :mod/NP .",
        "tree_rules": [
            ":mod~22"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/NN~morning -)",
        "graph_rules": {
            "say-01": [
                ":arg0~prince",
                ":arg1~morning"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1-of/ADVP , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~morning",
            ":arg0~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~switchman - \n\t :arg1/NN~morning -)",
        "graph_rules": {
            "say-01": [
                ":arg0~switchman",
                ":arg1~morning"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1-of/ADVP , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~morning",
            ":arg0~switchman"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~switchman - \n\t :arg1/NN~sort-01 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~switchman",
                ":arg1~sort-01"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/NP :arg1/NN :arg2/IN :arg0-of/NP XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~sort-01",
            ":arg0~switchman"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/NP~train - \n\t :arg5/PRT~and -)",
        "graph_rules": {
            "send-03": [
                ":arg0~i",
                ":arg1~train",
                ":arg5~and"
            ]
        },
        "head": "send-03",
        "name": ":root/ROOT~send-03",
        "noun_info": {},
        "tree": "'' :arg0/NP XXX-VB :arg5/PRT :arg1/NP . ''",
        "tree_rules": [
            ":arg5~and",
            ":arg5~and",
            ":arg1~train",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~shake-01 -)",
        "graph_rules": {
            "and": [
                ":op2~shake-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :mod/NP :op2/VP .",
        "tree_rules": [
            ":op2~shake-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/S~hurry-01 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~prince",
                ":arg1~hurry-01"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~hurry-01",
            ":arg0~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~they - \n\t :arg1/.~amr-unknown -)",
        "graph_rules": {
            "look-01": [
                ":arg0~they",
                ":arg1~amr-unknown"
            ]
        },
        "head": "look-01",
        "name": ":root/ROOT~look-01",
        "noun_info": {},
        "tree": "'' what are :arg0/NP XXX-VBG for :arg1/. ''",
        "tree_rules": [
            ":arg0~they",
            ":arg1~amr-unknown"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~switchman - \n\t :arg1/S~know-01 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~switchman",
                ":arg1~know-01"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~know-01",
            ":arg0~switchman"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/S~thunder-01 -)",
        "graph_rules": {
            "and": [
                ":op2~thunder-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :ord/NP :mod/VP .",
        "tree_rules": [
            ":op2~thunder-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~switchman - \n\t :arg1/NP~one -)",
        "graph_rules": {
            "say-01": [
                ":arg0~switchman",
                ":arg1~one"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :domain/S , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~one",
            ":arg0~switchman"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :domain/NP~it -)",
        "graph_rules": {
            "exchange-01": [
                ":domain~it"
            ]
        },
        "head": "exchange-01",
        "name": ":root/ROOT~exchange-01",
        "noun_info": {},
        "tree": "'' :domain/NP is an XXX-NN . ''",
        "tree_rules": [
            ":domain~it"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~switchman - \n\t :arg1/VBN~satisfy-01 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~switchman",
                ":arg1~satisfy-01"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :time/S , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~satisfy-01",
            ":arg0~switchman"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~hear-01 -)",
        "graph_rules": {
            "and": [
                ":op2~hear-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :op2/VP .",
        "tree_rules": [
            ":op2~hear-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~switchman - \n\t :arg1/S~pursue-01 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~switchman",
                ":arg1~pursue-01"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~pursue-01",
            ":arg0~switchman"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/ADJP~sleep-01 - \n\t :op2/S~yawn-01 -)",
        "graph_rules": {
            "or": [
                ":op1~sleep-01",
                ":op2~yawn-01"
            ]
        },
        "head": "or",
        "name": ":root/ROOT~or",
        "noun_info": {},
        "tree": "'' :arg0/S , XXX-CC :op2/S .",
        "tree_rules": [
            ":op1~sleep-01",
            ":op2~yawn-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~child - \n\t :arg1/NP~nose - \n\t :arg1-of/E~cause-01 -)",
        "graph_rules": {
            "flatten-01": [
                ":arg0~child",
                ":arg1~nose",
                ":arg1-of~cause-01"
            ]
        },
        "head": "flatten-01",
        "name": ":root/ROOT~flatten-01",
        "noun_info": {},
        "tree": ":arg0/NP are XXX-VBG :arg1/NP :arg0/IN :arg2/NP . ''",
        "tree_rules": [
            ":arg1~nose",
            ":arg0~child",
            ":arg1-of~cause-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/S~know-01 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~prince",
                ":arg1~know-01"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~know-01",
            ":arg0~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/E~cause-01 - \n\t :op2/S~cry-02 -)",
        "graph_rules": {
            "and": [
                ":op1~cause-01",
                ":op2~cry-02"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "'' :arg0/S XXX-CC :arg1/S ; and :op2/S ... ''",
        "tree_rules": [
            ":op2~cry-02",
            ":op1~cause-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~switchman - \n\t :arg1/S~lucky -)",
        "graph_rules": {
            "say-01": [
                ":arg0~switchman",
                ":arg1~lucky"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' :arg0/NP XXX-VBD .",
        "tree_rules": [
            ":arg1~lucky",
            ":arg0~switchman"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/NP~23 -)",
        "graph_rules": {
            "chapter": [
                ":mod~23"
            ]
        },
        "head": "chapter",
        "name": ":root/ROOT~chapter",
        "noun_info": {},
        "tree": "XXX-NN :mod/NP .",
        "tree_rules": [
            ":mod~23"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/NN~morning -)",
        "graph_rules": {
            "say-01": [
                ":arg0~prince",
                ":arg1~morning"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1-of/ADVP , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~morning",
            ":arg0~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~person - \n\t :arg1/NN~morning -)",
        "graph_rules": {
            "say-01": [
                ":arg0~person",
                ":arg1~morning"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1-of/ADVP , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~morning",
            ":arg0~person"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/E~person - \n\t :arg1/NP~pill -)",
        "graph_rules": {
            "sell-01": [
                ":arg0~person",
                ":arg1~pill"
            ]
        },
        "head": "sell-01",
        "name": ":root/ROOT~sell-01",
        "noun_info": {},
        "tree": ":domain/NP was :arg0-of/NP who XXX-VBD :arg1/NP .",
        "tree_rules": [
            ":arg1~pill",
            ":arg0~person"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/VBP~need-01 - \n\t :arg1/VB~feel-01 -)",
        "graph_rules": {
            "cause-01": [
                ":arg0~need-01",
                ":arg1~feel-01"
            ]
        },
        "head": "cause-01",
        "name": ":root/ROOT~cause-01",
        "noun_info": {},
        "tree": ":arg1/S , and :arg1/NP would :arg1/VB :arg1/NP XXX-IN :arg1/NP :arg1/S .",
        "tree_rules": [
            ":arg0~need-01",
            ":arg1~feel-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/SQ~sell-01 -)",
        "graph_rules": {
            "ask-01": [
                ":arg0~prince",
                ":arg1~sell-01"
            ]
        },
        "head": "ask-01",
        "name": ":root/MULTI-SENTENCE~ask-01",
        "noun_info": {},
        "tree": "'' :arg1-of/WHADVP :arg1/SQ :arg0/. '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~sell-01",
            ":arg0~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/E~person - \n\t :arg1/IN~cause-01 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~person",
                ":arg1~cause-01"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/IN :arg1/S XXX-VBD :arg0-of/NP .",
        "tree_rules": [
            ":arg1~cause-01",
            ":arg0~person"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/IN~person - \n\t :arg1/VBP~thing -)",
        "graph_rules": {
            "make-01": [
                ":arg0~person",
                ":arg1~thing"
            ]
        },
        "head": "make-01",
        "name": ":root/ROOT~make-01",
        "noun_info": {},
        "tree": "'' :arg1-of/NP :arg1/VBP been XXX-VBN :arg0/IN :arg1-of/NP .",
        "tree_rules": [
            ":arg0~person",
            ":arg1~thing"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~you - \n\t :arg1/DT~rate-entity-91 - \n\t :instrument/PP~pill -)",
        "graph_rules": {
            "save-03": [
                ":arg0~you",
                ":arg1~rate-entity-91",
                ":instrument~pill"
            ]
        },
        "head": "save-03",
        "name": ":root/ROOT~save-03",
        "noun_info": {},
        "tree": ":instrument/PP , :arg0/NP XXX-VBP :arg1/NP - :arg1/NP . ''",
        "tree_rules": [
            ":arg1~rate-entity-91",
            ":instrument~pill",
            ":arg0~you"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/SQ~do-02 -)",
        "graph_rules": {
            "and": [
                ":op1~do-02"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "'' XXX-CC what :op1/SQ :arg1/. ''",
        "tree_rules": [
            ":op1~do-02"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/ADVP~you - \n\t :arg1/NP~anything -)",
        "graph_rules": {
            "do-02": [
                ":arg0~you",
                ":arg1~anything"
            ]
        },
        "head": "do-02",
        "name": ":root/ROOT~do-02",
        "noun_info": {},
        "tree": "'' :arg1/NP :arg0/ADVP XXX-VBP ... ''",
        "tree_rules": [
            ":arg1~anything",
            ":arg0~you"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/S~walk-01 - \n\t :arg2/E~coref -)",
        "graph_rules": {
            "say-01": [
                ":arg0~prince",
                ":arg1~walk-01",
                ":arg2~coref"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' as for me , '' XXX-VBD :arg0/NP :destination/PP :arg1/NP-TMP :arg1/S . ''",
        "tree_rules": [
            ":arg1~walk-01",
            ":arg0~prince",
            ":arg2~coref"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/NP~24 -)",
        "graph_rules": {
            "chapter": [
                ":mod~24"
            ]
        },
        "head": "chapter",
        "name": ":root/ROOT~chapter",
        "noun_info": {},
        "tree": "XXX-NN :mod/NP .",
        "tree_rules": [
            ":mod~24"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VBD~pass-03 - \n\t :op2/S~listen-01 -)",
        "graph_rules": {
            "and": [
                ":op1~pass-03",
                ":op2~listen-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": ":arg1/S , XXX-CC :op2/S .",
        "tree_rules": [
            ":op1~pass-03",
            ":op2~listen-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "ah",
        "name": ":root/ROOT~ah",
        "noun_info": {},
        "tree": "'' XXX-RB , ''",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/TO~and - \n\t :arg2/NP~prince -)",
        "graph_rules": {
            "say-01": [
                ":arg0~i",
                ":arg1~and",
                ":arg2~prince"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD :arg1/TO :arg2/NP , '' :op1/PRN ; :op1/S ; :op2/S ; :concession-of/CC :op3/S ! ''",
        "tree_rules": [
            ":arg1~and",
            ":arg2~prince",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/S~fox - \n\t :arg2/PP~i -)",
        "graph_rules": {
            "say-01": [
                ":arg0~prince",
                ":arg1~fox",
                ":arg2~i"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/S - '' :arg0/NP XXX-VBD :arg2/PP .",
        "tree_rules": [
            ":arg2~i",
            ":arg0~prince",
            ":arg1~fox"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/NN~concern-02 - \n\t :arg2/NP~man -)",
        "graph_rules": {
            "say-01": [
                ":arg0~i",
                ":arg1~concern-02",
                ":arg2~man"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg0/NP :mod/RB :arg2/NP :domain/PRN that has :arg1/NN to XXX-VB :arg1/PP ! ''",
        "tree_rules": [
            ":arg2~man",
            ":arg1~concern-02",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/S~die-01 -)",
        "graph_rules": {
            "cause-01": [
                ":arg0~die-01"
            ]
        },
        "head": "cause-01",
        "name": ":root/ROOT~cause-01",
        "noun_info": {},
        "tree": "'' XXX-IN :arg1/NP am :time/IN :arg0/S ''",
        "tree_rules": [
            ":arg0~die-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/S~follow-02 - \n\t :op2/S~answer-01 -)",
        "graph_rules": {
            "and": [
                ":op1~follow-02",
                ":op2~answer-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": ":op1/S , XXX-CC :op2/S : '' :concession/PRN , :concession/RB if :arg1/S .",
        "tree_rules": [
            ":op1~follow-02",
            ":op2~answer-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/S~have-rel-role-91 - \n\t :arg1/LS~i - \n\t :degree/RB~very -)",
        "graph_rules": {
            "glad-02": [
                ":arg0~have-rel-role-91",
                ":arg1~i",
                ":degree~very"
            ]
        },
        "head": "glad-02",
        "name": ":root/ROOT~glad-02",
        "noun_info": {},
        "tree": ":arg1/LS , :arg0-of/PP , am :degree/RB XXX-JJ :arg0/S :arg0/VP ... ''",
        "tree_rules": [
            ":degree~very",
            ":arg0~have-rel-role-91",
            ":arg1~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/PP~guess-01 - \n\t :polarity/DT~- -)",
        "graph_rules": {
            "possible-01": [
                ":arg1~guess-01",
                ":polarity~-"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT~possible-01",
        "noun_info": {},
        "tree": "'' :arg0/NP has :polarity/DT XXX-NN :arg1/PP , ''",
        "tree_rules": [
            ":polarity~-",
            ":arg1~guess-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg2/E~coref -)",
        "graph_rules": {
            "say-01": [
                ":arg0~i",
                ":arg2~coref"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD to myself .",
        "tree_rules": [
            ":arg0~i",
            ":arg2~coref"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/JJ~hunger-01 - \n\t :op2/ADJP~thirst-01 - \n\t :time/ADVP~ever -)",
        "graph_rules": {
            "and": [
                ":op1~hunger-01",
                ":op2~thirst-01",
                ":time~ever"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "'' :arg0/NP :time/VBZ :time/ADVP been XXX-CC :op2/ADJP .",
        "tree_rules": [
            ":op1~hunger-01",
            ":op2~thirst-01",
            ":time~ever",
            ":time~ever"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/SBAR~sunshine - \n\t :mod/ADVP~all -)",
        "graph_rules": {
            "need-01": [
                ":arg0~he",
                ":arg1~sunshine",
                ":mod~all"
            ]
        },
        "head": "need-01",
        "name": ":root/ROOT~need-01",
        "noun_info": {},
        "tree": ":arg1/SBAR XXX-VBZ ... ''",
        "tree_rules": [
            ":mod~all",
            ":arg0~he",
            ":arg1~sunshine"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/CC~and -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~and"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "XXX-CC :op2/S : '' i am :arg2/ADJP , :mod/ADVP .",
        "tree_rules": [
            ":arg2~and"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~we - \n\t :arg1/PP~well -)",
        "graph_rules": {
            "look-01": [
                ":arg0~we",
                ":arg1~well"
            ]
        },
        "head": "look-01",
        "name": ":root/ROOT~look-01",
        "noun_info": {},
        "tree": "let :arg0/NP XXX-VB :arg1/PP ''",
        "tree_rules": [
            ":arg0~we",
            ":arg1~well"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/PP~weary-01 -)",
        "graph_rules": {
            "gesture-01": [
                ":arg0~i",
                ":arg1~weary-01"
            ]
        },
        "head": "gesture-01",
        "name": ":root/ROOT~gesture-01",
        "noun_info": {},
        "tree": ":arg0/NP made a XXX-NN :arg1/PP .",
        "tree_rules": [
            ":arg1~weary-01",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :domain/S~look-01 -)",
        "graph_rules": {
            "absurd": [
                ":domain~look-01"
            ]
        },
        "head": "absurd",
        "name": ":root/ROOT~absurd",
        "noun_info": {},
        "tree": "it is XXX-JJ :domain/S .",
        "tree_rules": [
            ":domain~look-01",
            ":domain~look-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/VP~start-01 -)",
        "graph_rules": {
            "have-concession-91": [
                ":arg1~start-01"
            ]
        },
        "head": "have-concession-91",
        "name": ":root/ROOT~have-concession-91",
        "noun_info": {},
        "tree": "XXX-CC nevertheless :arg0/NP :arg1/VP .",
        "tree_rules": [
            ":arg1~start-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/S~fall-04 - \n\t :op2/S~begin-01 - \n\t :time/SBAR~trudge-01 -)",
        "graph_rules": {
            "and": [
                ":op1~fall-04",
                ":op2~begin-01",
                ":time~trudge-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": ":op1/S , XXX-CC :op2/S .",
        "tree_rules": [
            ":time~trudge-01",
            ":op1~fall-04",
            ":op2~begin-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/S~make-02 - \n\t :op2/S~look-01 -)",
        "graph_rules": {
            "and": [
                ":op1~make-02",
                ":op2~look-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": ":op1/S , XXX-CC :op2/S .",
        "tree_rules": [
            ":op1~make-02",
            ":op2~look-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~word-01 - \n\t :arg4/PP~memory - \n\t :manner/S~reel-03 -)",
        "graph_rules": {
            "come-01": [
                ":arg1~word-01",
                ":arg4~memory",
                ":manner~reel-03"
            ]
        },
        "head": "come-01",
        "name": ":root/ROOT~come-01",
        "noun_info": {},
        "tree": ":arg1/NP XXX-VBD :manner/S : '' :arg0/S ? ''",
        "tree_rules": [
            ":arg4~memory",
            ":arg4~memory",
            ":manner~reel-03",
            ":arg1~word-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i -)",
        "graph_rules": {
            "demand-01": [
                ":arg0~i"
            ]
        },
        "head": "demand-01",
        "name": ":root/ROOT~demand-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD .",
        "tree_rules": [
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP~reply-01 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~reply-01"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :arg2/VP .",
        "tree_rules": [
            ":arg2~reply-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/MD~possible-01 - \n\t :arg2/PP~i - \n\t :mod/ADVP~mere -)",
        "graph_rules": {
            "say-01": [
                ":arg0~he",
                ":arg1~possible-01",
                ":arg2~i",
                ":mod~mere"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": ":arg0/NP :mod/ADVP XXX-VBD :arg2/PP '' :arg1/NP",
        "tree_rules": [
            ":arg1~possible-01",
            ":mod~mere",
            ":arg2~i",
            ":arg0~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/NP~answer - \n\t :polarity/RB~- - \n\t :concession-of/S~say-01 -)",
        "graph_rules": {
            "understand-01": [
                ":arg0~i",
                ":arg1~answer",
                ":polarity~-",
                ":concession-of~say-01"
            ]
        },
        "head": "understand-01",
        "name": ":root/ROOT~understand-01",
        "noun_info": {},
        "tree": ":arg0/NP :polarity/VBD :polarity/RB XXX-VB :arg1/NP , :concession-of/CC :concession-of/S .",
        "tree_rules": [
            ":arg1~answer",
            ":polarity~-",
            ":polarity~-",
            ":arg0~i",
            ":concession-of~say-01",
            ":concession-of~say-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/TO~possible-01 - \n\t :degree/S~well -)",
        "graph_rules": {
            "know-01": [
                ":arg0~i",
                ":arg1~possible-01",
                ":degree~well"
            ]
        },
        "head": "know-01",
        "name": ":root/ROOT~know-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD :degree/RB :degree/RB :polarity/SBAR .",
        "tree_rules": [
            ":degree~well",
            ":arg1~possible-01",
            ":degree~well",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~he -)",
        "graph_rules": {
            "tire-01": [
                ":arg1~he"
            ]
        },
        "head": "tire-01",
        "name": ":root/ROOT~tire-01",
        "noun_info": {},
        "tree": ":arg1/NP was XXX-VBN .",
        "tree_rules": [
            ":arg1~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~he -)",
        "graph_rules": {
            "sit-down-02": [
                ":arg1~he"
            ]
        },
        "head": "sit-down-02",
        "name": ":root/ROOT~sit-down-02",
        "noun_info": {},
        "tree": ":arg1/NP XXX-VBD down .",
        "tree_rules": [
            ":arg1~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~i - \n\t :location/ADVP~beside -)",
        "graph_rules": {
            "sit-down-02": [
                ":arg1~i",
                ":location~beside"
            ]
        },
        "head": "sit-down-02",
        "name": ":root/ROOT~sit-down-02",
        "noun_info": {},
        "tree": ":arg1/NP XXX-VBD :location/ADVP :location/RB :op1/NP .",
        "tree_rules": [
            ":location~beside",
            ":location~beside",
            ":arg1~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/S~speak-01 -)",
        "graph_rules": {
            "and": [
                ":op2~speak-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC , :time/IN :op1/NP , :op2/S : '' :arg1/S . ''",
        "tree_rules": [
            ":op2~speak-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/ADVP~i - \n\t :arg2/PP~so -)",
        "graph_rules": {
            "reply-01": [
                ":arg0~i",
                ":arg2~so"
            ]
        },
        "head": "reply-01",
        "name": ":root/ROOT~reply-01",
        "noun_info": {},
        "tree": ":arg0/ADVP XXX-VBD , '' :domain/S . ''",
        "tree_rules": [
            ":arg2~so",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~look-01 -)",
        "graph_rules": {
            "and": [
                ":op2~look-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC , :manner/PP , :arg0/NP :op2/VP .",
        "tree_rules": [
            ":op2~look-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/S~beautiful-02 -)",
        "graph_rules": {
            "add-01": [
                ":arg0~prince",
                ":arg1~beautiful-02"
            ]
        },
        "head": "add-01",
        "name": ":root/ROOT~add-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' :arg0/NP XXX-VBD .",
        "tree_rules": [
            ":arg1~beautiful-02",
            ":arg0~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~true-01 -)",
        "graph_rules": {
            "and": [
                ":op2~true-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :arg1/NP :op2/VP .",
        "tree_rules": [
            ":op2~true-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/NP~desert - \n\t :time/ADVP~always -)",
        "graph_rules": {
            "love-01": [
                ":arg0~i",
                ":arg1~desert",
                ":time~always"
            ]
        },
        "head": "love-01",
        "name": ":root/ROOT~love-01",
        "noun_info": {},
        "tree": ":arg0/NP have :time/ADVP XXX-VBN :arg1/NP .",
        "tree_rules": [
            ":arg1~desert",
            ":time~always",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/E~sit-down-02 - \n\t :op2/VP~see-01 - \n\t :op3/VP~hear-01 -)",
        "graph_rules": {
            "and": [
                ":op1~sit-down-02",
                ":op2~see-01",
                ":op3~hear-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": ":arg1/NP XXX-VBZ :location/PRT :location/IN :location/NP , :op2/VP , :op3/VP .",
        "tree_rules": [
            ":op2~see-01",
            ":op3~hear-01",
            ":op1~sit-down-02"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/IN~throb-01 - \n\t :op2/VP~gleam-01 - \n\t :concession/NP~silent -)",
        "graph_rules": {
            "and": [
                ":op1~throb-01",
                ":op2~gleam-01",
                ":concession~silent"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": ":concession/NP throbs , XXX-CC :op2/VP ...",
        "tree_rules": [
            ":concession~silent",
            ":op1~throb-01",
            ":op2~gleam-01",
            ":concession~silent"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/SBAR~make-02 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~prince",
                ":arg1~make-02"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/SBAR XXX-VBD :arg0/NP , '' is that :location/RB :arg0/SBAR ... ''",
        "tree_rules": [
            ":arg0~prince",
            ":arg1~make-02"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~understand-01 - \n\t :arg1/NP~i -)",
        "graph_rules": {
            "astonish-01": [
                ":arg0~understand-01",
                ":arg1~i"
            ]
        },
        "head": "astonish-01",
        "name": ":root/ROOT~astonish-01",
        "noun_info": {},
        "tree": ":arg1/NP was XXX-VBN :manner/IN :arg0/NP .",
        "tree_rules": [
            ":arg0~understand-01",
            ":arg1~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/S~live-01 - \n\t :op2/S~tell-01 -)",
        "graph_rules": {
            "and": [
                ":op1~live-01",
                ":op2~tell-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": ":op1/S , XXX-CC :op2/S .",
        "tree_rules": [
            ":op1~live-01",
            ":op2~tell-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VP~sure-02 - \n\t :op2/ADVP~possible-01 -)",
        "graph_rules": {
            "and": [
                ":op1~sure-02",
                ":op2~possible-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-TO :op1/VP , no one :arg1/VP ; :arg1/S .",
        "tree_rules": [
            ":op1~sure-02",
            ":op2~possible-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP~cast-01 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~cast-01"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :arg2/VP .",
        "tree_rules": [
            ":arg2~cast-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~home - \n\t :arg1/NP~secret - \n\t :location/PP~deep-02 -)",
        "graph_rules": {
            "hide-01": [
                ":arg0~home",
                ":arg1~secret",
                ":location~deep-02"
            ]
        },
        "head": "hide-01",
        "name": ":root/ROOT~hide-01",
        "noun_info": {},
        "tree": ":arg0/NP was XXX-VBG :arg1/NP :location/PP ...",
        "tree_rules": [
            ":arg1~secret",
            ":location~deep-02",
            ":arg0~home"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "yes",
        "name": ":root/ROOT~yes",
        "noun_info": {},
        "tree": "'' XXX-UH , ''",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg2/PP~prince -)",
        "graph_rules": {
            "say-01": [
                ":arg0~i",
                ":arg2~prince"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD :arg2/PP .",
        "tree_rules": [
            ":arg2~prince",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/VP~something - \n\t :arg1/NP~beautiful-02 - \n\t :arg2/E~and -)",
        "graph_rules": {
            "give-01": [
                ":arg0~something",
                ":arg1~beautiful-02",
                ":arg2~and"
            ]
        },
        "head": "give-01",
        "name": ":root/ROOT~give-01",
        "noun_info": {},
        "tree": "'' :op1/NP , :op3/PP - - :arg1-of/WHNP XXX-VBZ them :arg1/NP :arg0/VP :polarity/. ''",
        "tree_rules": [
            ":arg1~beautiful-02",
            ":arg0~something",
            ":arg2~and"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/S~glad-02 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~he",
                ":arg1~glad-02"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' :arg0/NP XXX-VBD , '' :arg0/SBAR . ''",
        "tree_rules": [
            ":arg1~glad-02",
            ":arg0~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VP~take-01 - \n\t :op2/VP~set-out-07 - \n\t :time/SBAR~drop-off-03 -)",
        "graph_rules": {
            "and": [
                ":op1~take-01",
                ":op2~set-out-07",
                ":time~drop-off-03"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": ":time/SBAR , :arg0/NP :op1/VP XXX-CC :op2/VP .",
        "tree_rules": [
            ":op1~take-01",
            ":op2~set-out-07",
            ":time~drop-off-03"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/CC~and -)",
        "graph_rules": {
            "feel-01": [
                ":arg0~i",
                ":arg1~and"
            ]
        },
        "head": "feel-01",
        "name": ":root/ROOT~feel-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD :op1/VP , :arg1/CC :op2/VP .",
        "tree_rules": [
            ":arg1~and",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/SBAR~carry-01 - \n\t :arg2/PP~i -)",
        "graph_rules": {
            "seem-01": [
                ":arg1~carry-01",
                ":arg2~i"
            ]
        },
        "head": "seem-01",
        "name": ":root/ROOT~seem-01",
        "noun_info": {},
        "tree": "it XXX-VBD :arg2/PP :arg1/SBAR .",
        "tree_rules": [
            ":arg2~i",
            ":arg1~carry-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/ADJP~fragile - \n\t :arg2/PP~i - \n\t :mod/ADVP~even -)",
        "graph_rules": {
            "seem-01": [
                ":arg1~fragile",
                ":arg2~i",
                ":mod~even"
            ]
        },
        "head": "seem-01",
        "name": ":root/ROOT~seem-01",
        "noun_info": {},
        "tree": "it XXX-VBD :arg2/PP , :mod/ADVP , that there was :arg1/ADJP :location/PP .",
        "tree_rules": [
            ":arg1~fragile",
            ":arg2~i",
            ":mod~even"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/E~thing - \n\t :arg1-of/VP~possible-01 -)",
        "graph_rules": {
            "see-01": [
                ":arg1~thing",
                ":arg1-of~possible-01"
            ]
        },
        "head": "see-01",
        "name": ":root/ROOT~see-01",
        "noun_info": {},
        "tree": "XXX-WP :mod/S :arg1-of/VP ... ''",
        "tree_rules": [
            ":arg1-of~possible-01",
            ":arg1~thing"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/FW~i - \n\t :arg1/NP~move-05 - \n\t :arg2/E~coref - \n\t :time/SBAR~open-01 - \n\t :mod/FRAG~again -)",
        "graph_rules": {
            "say-01": [
                ":arg0~i",
                ":arg1~move-05",
                ":arg2~coref",
                ":time~open-01",
                ":mod~again"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": ":time/SBAR XXX-VBD :location/S , :mod/FRAG '' :op1/SBAR , :concession/RB :concession/WHADVP :arg0-of/S ... ''",
        "tree_rules": [
            ":arg0~i",
            ":arg1~move-05",
            ":time~open-01",
            ":mod~again",
            ":time~open-01",
            ":arg2~coref"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~feel-02 -)",
        "graph_rules": {
            "and": [
                ":op2~feel-02"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :op2/VP .",
        "tree_rules": [
            ":op2~feel-02"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/NP~need-01 -)",
        "graph_rules": {
            "feel-01": [
                ":arg0~i",
                ":arg1~need-01"
            ]
        },
        "head": "feel-01",
        "name": ":root/ROOT~feel-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD :conj-as-if/NP ...",
        "tree_rules": [
            ":arg1~need-01",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~find-01 -)",
        "graph_rules": {
            "and": [
                ":op2~find-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC , :time/IN :time/S , :arg0/NP :op2/VP .",
        "tree_rules": [
            ":op2~find-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/NP~25 -)",
        "graph_rules": {
            "chapter": [
                ":mod~25"
            ]
        },
        "head": "chapter",
        "name": ":root/ROOT~chapter",
        "noun_info": {},
        "tree": "XXX-NN :mod/NP .",
        "tree_rules": [
            ":mod~25"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/PP~have-concession-91 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~prince",
                ":arg1~have-concession-91"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg0/NP , '' XXX-VBD :arg0/NP :manner/NP , :arg1/PP :polarity/VP :polarity/RB :arg1-of/S .",
        "tree_rules": [
            ":arg0~prince",
            ":arg1~have-concession-91"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/S~rush-01 - \n\t :op2/VP~excite-01 - \n\t :op3/VP~turn-01 - \n\t :time/ADVP~then -)",
        "graph_rules": {
            "and": [
                ":op1~rush-01",
                ":op2~excite-01",
                ":op3~turn-01",
                ":time~then"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": ":op1/S , XXX-CC :op3/VP ... ''",
        "tree_rules": [
            ":time~then",
            ":op2~excite-01",
            ":op3~turn-01",
            ":op1~rush-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~add-01 -)",
        "graph_rules": {
            "and": [
                ":op2~add-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :op2/VP : '' :arg1/S ... ''",
        "tree_rules": [
            ":op2~add-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg4-of/SBAR~come-01 - \n\t :arg1-of/VP~resemble-01 -)",
        "graph_rules": {
            "well": [
                ":arg4-of~come-01",
                ":arg1-of~resemble-01"
            ]
        },
        "head": "well",
        "name": ":root/ROOT~well",
        "noun_info": {},
        "tree": "the XXX-NN :arg4-of/SBAR :arg1-of/VP .",
        "tree_rules": [
            ":arg4-of~come-01",
            ":arg1-of~resemble-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1-of/SBAR~dig-01 - \n\t :mod/JJ~mere - \n\t :domain/NP~well -)",
        "graph_rules": {
            "hole": [
                ":arg1-of~dig-01",
                ":mod~mere",
                ":domain~well"
            ]
        },
        "head": "hole",
        "name": ":root/ROOT~hole",
        "noun_info": {},
        "tree": ":domain/NP are :mod/JJ XXX-NNS :arg1-of/SBAR .",
        "tree_rules": [
            ":mod~mere",
            ":arg1-of~dig-01",
            ":domain~well"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~well - \n\t :arg2/E~well -)",
        "graph_rules": {
            "resemble-01": [
                ":arg1~well",
                ":arg2~well"
            ]
        },
        "head": "resemble-01",
        "name": ":root/ROOT~resemble-01",
        "noun_info": {},
        "tree": ":mod/NP was XXX-IN :arg1/NP .",
        "tree_rules": [
            ":arg1~well",
            ":arg2~well"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/CC~and -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~and"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "XXX-CC :location/NP was :op1/NP :location/ADVP , :arg2/CC :arg1/S ...",
        "tree_rules": [
            ":arg2~and"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :domain/NP~it -)",
        "graph_rules": {
            "strange": [
                ":domain~it"
            ]
        },
        "head": "strange",
        "name": ":root/ROOT~strange",
        "noun_info": {},
        "tree": "'' :domain/NP is XXX-JJ , ''",
        "tree_rules": [
            ":domain~it"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg2/PP~prince -)",
        "graph_rules": {
            "say-01": [
                ":arg0~i",
                ":arg2~prince"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD :arg2/PP .",
        "tree_rules": [
            ":arg2~prince",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~everything - \n\t :arg2/NP~use-01 -)",
        "graph_rules": {
            "ready-02": [
                ":arg1~everything",
                ":arg2~use-01"
            ]
        },
        "head": "ready-02",
        "name": ":root/ROOT~ready-02",
        "noun_info": {},
        "tree": "'' :arg1/NP is XXX-JJ :example/IN :arg2/NP : :op3/NP ... ''",
        "tree_rules": [
            ":arg2~use-01",
            ":arg1~everything"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VP~laugh-01 - \n\t :op2/VP~touch-01 - \n\t :op3/VP~set-08 -)",
        "graph_rules": {
            "and": [
                ":op1~laugh-01",
                ":op2~touch-01",
                ":op3~set-08"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": ":arg0/NP :op1/VP , :op2/VP , XXX-CC :op3/VP .",
        "tree_rules": [
            ":op1~laugh-01",
            ":op2~touch-01",
            ":op3~set-08"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~moan-01 -)",
        "graph_rules": {
            "and": [
                ":op2~moan-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :op2/VP .",
        "tree_rules": [
            ":op2~moan-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VP~wake-01 - \n\t :op2/S~sing-01 -)",
        "graph_rules": {
            "and": [
                ":op1~wake-01",
                ":op2~sing-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "'' :arg0/NP :op1/VP , XXX-CC :op2/S ... ''",
        "tree_rules": [
            ":op1~wake-01",
            ":op2~sing-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/PP~tire-01 - \n\t :polarity/RB~- -)",
        "graph_rules": {
            "want-01": [
                ":arg0~i",
                ":arg1~tire-01",
                ":polarity~-"
            ]
        },
        "head": "want-01",
        "name": ":root/ROOT~want-01",
        "noun_info": {},
        "tree": ":arg0/NP :polarity/VBD :polarity/RB XXX-VB :arg0/NP :arg1/PP :instrument/PP .",
        "tree_rules": [
            ":arg1~tire-01",
            ":polarity~-",
            ":polarity~-",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/E~you - \n\t :arg1/NP~it - \n\t :arg2/PP~i -)",
        "graph_rules": {
            "leave-02": [
                ":arg0~you",
                ":arg1~it",
                ":arg2~i"
            ]
        },
        "head": "leave-02",
        "name": ":root/ROOT~leave-02",
        "noun_info": {},
        "tree": "'' XXX-VB :arg1/NP",
        "tree_rules": [
            ":arg2~i",
            ":arg1~it",
            ":arg0~you"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i -)",
        "graph_rules": {
            "say-01": [
                ":arg0~i"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD .",
        "tree_rules": [
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :domain/NP~it - \n\t :degree/RB~too - \n\t :compared-to/PP~you -)",
        "graph_rules": {
            "heavy": [
                ":domain~it",
                ":degree~too",
                ":compared-to~you"
            ]
        },
        "head": "heavy",
        "name": ":root/ROOT~heavy",
        "noun_info": {},
        "tree": "'' :domain/NP is :degree/RB XXX-JJ :compared-to/PP . ''",
        "tree_rules": [
            ":degree~too",
            ":compared-to~you",
            ":domain~it"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/PP~hear-01 - \n\t :op2/MD~possible-01 -)",
        "graph_rules": {
            "and": [
                ":op1~hear-01",
                ":op2~possible-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": ":arg1/S , XXX-CC :arg1/S .",
        "tree_rules": [
            ":op1~hear-01",
            ":op2~possible-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/S~thirst-01 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~prince",
                ":arg1~thirst-01"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~thirst-01",
            ":arg0~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/E~you - \n\t :arg1/E~thing - \n\t :arg2/NP~i - \n\t :purpose/PP~drink-01 -)",
        "graph_rules": {
            "give-01": [
                ":arg0~you",
                ":arg1~thing",
                ":arg2~i",
                ":purpose~drink-01"
            ]
        },
        "head": "give-01",
        "name": ":root/ROOT~give-01",
        "noun_info": {},
        "tree": "'' XXX-VB :arg2/NP :quant/NP",
        "tree_rules": [
            ":purpose~drink-01",
            ":arg2~i",
            ":arg1~thing",
            ":arg0~you"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~understand-01 -)",
        "graph_rules": {
            "and": [
                ":op2~understand-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :op2/VP .",
        "tree_rules": [
            ":op2~understand-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/NP~bucket - \n\t :arg4/PP~lip -)",
        "graph_rules": {
            "raise-01": [
                ":arg0~i",
                ":arg1~bucket",
                ":arg4~lip"
            ]
        },
        "head": "raise-01",
        "name": ":root/ROOT~raise-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD :arg1/NP :arg4/PP .",
        "tree_rules": [
            ":arg1~bucket",
            ":arg4~lip",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~it - \n\t :degree/IN~equal - \n\t :compared-to/IN~food-dish -)",
        "graph_rules": {
            "sweet-04": [
                ":arg1~it",
                ":degree~equal",
                ":compared-to~food-dish"
            ]
        },
        "head": "sweet-04",
        "name": ":root/ROOT~sweet-04",
        "noun_info": {},
        "tree": ":arg1/NP was :degree/IN XXX-JJ :compared-to/IN :arg1-of/NP .",
        "tree_rules": [
            ":compared-to~food-dish",
            ":degree~equal",
            ":arg1~it"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~water - \n\t :arg2/NN~thing - \n\t :mod/ADVP~indeed - \n\t :polarity/JJ~- -)",
        "graph_rules": {
            "resemble-01": [
                ":arg1~water",
                ":arg2~thing",
                ":mod~indeed",
                ":polarity~-"
            ]
        },
        "head": "resemble-01",
        "name": ":root/ROOT~resemble-01",
        "noun_info": {},
        "tree": ":arg1/NP was :mod/ADVP XXX-DT :polarity/JJ :arg2/NN :arg2-of/PP .",
        "tree_rules": [
            ":polarity~-",
            ":arg2~thing",
            ":mod~indeed",
            ":arg1~water"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/E~and - \n\t :arg1/NP~sweet-05 -)",
        "graph_rules": {
            "bear-02": [
                ":arg0~and",
                ":arg1~sweet-05"
            ]
        },
        "head": "bear-02",
        "name": ":root/ROOT~bear-02",
        "noun_info": {},
        "tree": ":arg1/NP was XXX-VBN :op1/PP :location/IN :op3/NP .",
        "tree_rules": [
            ":arg1~sweet-05",
            ":arg0~and"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~it - \n\t :arg2/PP~heart -)",
        "graph_rules": {
            "good-04": [
                ":arg1~it",
                ":arg2~heart"
            ]
        },
        "head": "good-04",
        "name": ":root/ROOT~good-04",
        "noun_info": {},
        "tree": ":arg1/NP was XXX-JJ :arg2/PP , :arg1-of/IN :arg2/NP .",
        "tree_rules": [
            ":arg2~heart",
            ":arg1~it"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/PRT~and - \n\t :arg1/NP~radiant - \n\t :manner/ADVP~so - \n\t :time/WHADVP~boy -)",
        "graph_rules": {
            "make-up-07": [
                ":arg0~and",
                ":arg1~radiant",
                ":manner~so",
                ":time~boy"
            ]
        },
        "head": "make-up-07",
        "name": ":root/ROOT~make-up-07",
        "noun_info": {},
        "tree": ":time/WHADVP i was :time/NP , :op1/NP of :arg0/NP , :op2/NP of :poss/NP , :op3/NP , :poss/VBN to XXX-VB :arg0/PRT , :manner/ADVP , :arg1/NP :arg1-of/VP .",
        "tree_rules": [
            ":arg0~and",
            ":manner~so",
            ":time~boy",
            ":time~boy",
            ":arg1~radiant"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/CC~and -)",
        "graph_rules": {
            "say-01": [
                ":arg0~prince",
                ":arg1~and"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg0/NP XXX-VBD :arg0/NP , '' :op1/PRN :op2/VP . ''",
        "tree_rules": [
            ":arg0~prince",
            ":arg1~and"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~they - \n\t :arg1/NP~it - \n\t :polarity/RB~- -)",
        "graph_rules": {
            "find-01": [
                ":arg0~they",
                ":arg1~it",
                ":polarity~-"
            ]
        },
        "head": "find-01",
        "name": ":root/ROOT~find-01",
        "noun_info": {},
        "tree": "'' :arg0/NP :polarity/VBP :polarity/RB XXX-VB :arg1/NP , ''",
        "tree_rules": [
            ":arg1~it",
            ":polarity~-",
            ":polarity~-",
            ":arg0~they"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i -)",
        "graph_rules": {
            "reply-01": [
                ":arg0~i"
            ]
        },
        "head": "reply-01",
        "name": ":root/ROOT~reply-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD .",
        "tree_rules": [
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/MD~possible-01 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~possible-01"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "'' and XXX-RB :arg1/NP :arg1/VP . ''",
        "tree_rules": [
            ":arg2~possible-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~that -)",
        "graph_rules": {
            "true-01": [
                ":arg1~that"
            ]
        },
        "head": "true-01",
        "name": ":root/ROOT~true-01",
        "noun_info": {},
        "tree": "'' yes , :arg1/NP is XXX-JJ , ''",
        "tree_rules": [
            ":arg1~that"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i -)",
        "graph_rules": {
            "say-01": [
                ":arg0~i"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD .",
        "tree_rules": [
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~add-01 -)",
        "graph_rules": {
            "and": [
                ":op2~add-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :op2/VP : '' :arg2/S .",
        "tree_rules": [
            ":op2~add-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/VP~look-01 -)",
        "graph_rules": {
            "recommend-01": [
                ":arg1~look-01"
            ]
        },
        "head": "recommend-01",
        "name": ":root/ROOT~recommend-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-MD :arg1/VP ... ''",
        "tree_rules": [
            ":arg1~look-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/NN~water -)",
        "graph_rules": {
            "drink-01": [
                ":arg0~i",
                ":arg1~water"
            ]
        },
        "head": "drink-01",
        "name": ":root/ROOT~drink-01",
        "noun_info": {},
        "tree": ":arg0/NP had XXX-JJ the :arg1/NN .",
        "tree_rules": [
            ":arg1~water",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1-of/ADVP~easy-05 -)",
        "graph_rules": {
            "breathe-01": [
                ":arg0~i",
                ":arg1-of~easy-05"
            ]
        },
        "head": "breathe-01",
        "name": ":root/ROOT~breathe-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBN :arg1-of/ADVP .",
        "tree_rules": [
            ":arg1-of~easy-05",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/VP~color - \n\t :arg2/E~color - \n\t :time/IN~rise-01 -)",
        "graph_rules": {
            "resemble-01": [
                ":arg1~color",
                ":arg2~color",
                ":time~rise-01"
            ]
        },
        "head": "resemble-01",
        "name": ":root/ROOT~resemble-01",
        "noun_info": {},
        "tree": "XXX-IN :arg1/NP :poss/NP :arg1/VP .",
        "tree_rules": [
            ":time~rise-01",
            ":arg1~color",
            ":arg2~color"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/SBAR~make-02 -)",
        "graph_rules": {
            "and": [
                ":op2~make-02"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :op2/SBAR .",
        "tree_rules": [
            ":op2~make-02"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/.~amr-unknown - \n\t :arg1/NP~sense-01 - \n\t :arg2/NP~i - \n\t :time/ADVP~then -)",
        "graph_rules": {
            "bring-01": [
                ":arg0~amr-unknown",
                ":arg1~sense-01",
                ":arg2~i",
                ":time~then"
            ]
        },
        "head": "bring-01",
        "name": ":root/ROOT~bring-01",
        "noun_info": {},
        "tree": "what XXX-VBD :arg1/NP :arg0/.",
        "tree_rules": [
            ":time~then",
            ":arg2~i",
            ":arg1~sense-01",
            ":arg0~amr-unknown"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/MD~obligate-01 - \n\t :manner/ADVP~soft - \n\t :time/SBAR~sit-down-02 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~prince",
                ":arg1~obligate-01",
                ":manner~soft",
                ":time~sit-down-02"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg2/S , '' XXX-VBD :arg0/NP , :manner/ADVP , :time/SBAR :frequency/RB :mod/RBR .",
        "tree_rules": [
            ":arg1~obligate-01",
            ":arg0~prince",
            ":manner~soft",
            ":time~sit-down-02"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1-of/VP~promise-01 - \n\t :domain/.~amr-unknown -)",
        "graph_rules": {
            "thing": [
                ":arg1-of~promise-01",
                ":domain~amr-unknown"
            ]
        },
        "head": "thing",
        "name": ":root/ROOT~thing",
        "noun_info": {},
        "tree": "'' XXX-WDT :arg1-of/VP :domain/. ''",
        "tree_rules": [
            ":arg1-of~promise-01",
            ":domain~amr-unknown"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2-of/NP~muzzle-01 -)",
        "graph_rules": {
            "thing": [
                ":arg2-of~muzzle-01"
            ]
        },
        "head": "thing",
        "name": ":root/ROOT~thing",
        "noun_info": {},
        "tree": "'' :arg2-of/NP XXX-VBP - - :arg2-of/NP ...",
        "tree_rules": [
            ":arg2-of~muzzle-01",
            ":arg2-of~muzzle-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/PP~flower -)",
        "graph_rules": {
            "responsible-03": [
                ":arg0~i",
                ":arg1~flower"
            ]
        },
        "head": "responsible-03",
        "name": ":root/ROOT~responsible-03",
        "noun_info": {},
        "tree": ":arg0/NP am XXX-JJ :arg1/PP ''",
        "tree_rules": [
            ":arg1~flower",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/PRP$~picture - \n\t :arg2/PP~pocket -)",
        "graph_rules": {
            "take-01": [
                ":arg0~i",
                ":arg1~picture",
                ":arg2~pocket"
            ]
        },
        "head": "take-01",
        "name": ":root/ROOT~take-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD :arg1-of/NP :arg2/PP .",
        "tree_rules": [
            ":arg1~picture",
            ":arg2~pocket",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VBD~look-01 - \n\t :op2/VP~laugh-01 -)",
        "graph_rules": {
            "and": [
                ":op1~look-01",
                ":op2~laugh-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": ":arg0/NP :op1/VBD :arg1/NP over , XXX-CC :op2/VP '' :arg0/NP - - they :arg1/VP . ''",
        "tree_rules": [
            ":op2~laugh-01",
            ":op1~look-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "oh",
        "name": ":root/ROOT~oh",
        "noun_info": {},
        "tree": "'' XXX-UH ! ''",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/PP~baobab - \n\t :degree/RB~so -)",
        "graph_rules": {
            "pride-01": [
                ":arg0~i",
                ":arg1~baobab",
                ":degree~so"
            ]
        },
        "head": "pride-01",
        "name": ":root/ROOT~pride-01",
        "noun_info": {},
        "tree": ":arg0/NP had been :degree/RB XXX-JJ :arg1/PP !",
        "tree_rules": [
            ":degree~so",
            ":arg1~baobab",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VP~look-02 - \n\t :op2/RB~long-03 -)",
        "graph_rules": {
            "and": [
                ":op1~look-02",
                ":op2~long-03"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "'' :poss/NP :part-of/ADVP - - :arg0/NP :op1/VP ; XXX-CC they are :degree/RB :op2/RB . ''",
        "tree_rules": [
            ":op2~long-03",
            ":op1~look-02"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~laugh-01 -)",
        "graph_rules": {
            "and": [
                ":op2~laugh-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :op2/VP .",
        "tree_rules": [
            ":op2~laugh-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/RB~- - \n\t :arg0/NP~prince -)",
        "graph_rules": {
            "fair-01": [
                ":polarity~-",
                ":arg0~prince"
            ]
        },
        "head": "fair-01",
        "name": ":root/ROOT~fair-01",
        "noun_info": {},
        "tree": "'' you are :polarity/RB XXX-JJ , :arg0/NP , ''",
        "tree_rules": [
            ":polarity~-",
            ":arg0~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i -)",
        "graph_rules": {
            "say-01": [
                ":arg0~i"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD .",
        "tree_rules": [
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/SBAR~draw-01 -)",
        "graph_rules": {
            "know-01": [
                ":arg0~i",
                ":arg1~draw-01"
            ]
        },
        "head": "know-01",
        "name": ":root/ROOT~know-01",
        "noun_info": {},
        "tree": "'' :arg0/NP do n't XXX-VB :arg1/SBAR . ''",
        "tree_rules": [
            ":arg1~draw-01",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/RB~all-right -)",
        "graph_rules": {
            "say-01": [
                ":arg0~he",
                ":arg1~all-right"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :domain/S , '' :arg0/NP XXX-VBD , '' :arg0/NP :arg0/VP . ''",
        "tree_rules": [
            ":arg1~all-right",
            ":arg0~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/PP~muzzle - \n\t :instrument/VBD~pencil - \n\t :time/ADVP~then -)",
        "graph_rules": {
            "sketch-01": [
                ":arg0~i",
                ":arg1~muzzle",
                ":instrument~pencil",
                ":time~then"
            ]
        },
        "head": "sketch-01",
        "name": ":root/ROOT~sketch-01",
        "noun_info": {},
        "tree": "so :time/ADVP :arg0/NP :instrument/VBD a :instrument/NN XXX-NN :arg1/PP .",
        "tree_rules": [
            ":instrument~pencil",
            ":arg1~muzzle",
            ":instrument~pencil",
            ":time~then",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~tear-01 -)",
        "graph_rules": {
            "and": [
                ":op2~tear-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :time/SBAR :arg1/NP :op2/VP .",
        "tree_rules": [
            ":op2~tear-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~you - \n\t :arg1/E~thing -)",
        "graph_rules": {
            "plan-01": [
                ":arg0~you",
                ":arg1~thing"
            ]
        },
        "head": "plan-01",
        "name": ":root/ROOT~plan-01",
        "noun_info": {},
        "tree": "'' :arg0/NP have XXX-NNS :arg1-of/SBAR , ''",
        "tree_rules": [
            ":arg0~you",
            ":arg1~thing"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i -)",
        "graph_rules": {
            "say-01": [
                ":arg0~i"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD .",
        "tree_rules": [
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/VP~answer-01 -)",
        "graph_rules": {
            "have-concession-91": [
                ":arg1~answer-01"
            ]
        },
        "head": "have-concession-91",
        "name": ":root/ROOT~have-concession-91",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :arg1/VP .",
        "tree_rules": [
            ":arg1~answer-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/S~descend-01 - \n\t :arg2/S~i - \n\t :arg1-of/FRAG~instead-of-91 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~he",
                ":arg1~descend-01",
                ":arg2~i",
                ":arg1-of~instead-of-91"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD :arg2/S , :arg1-of/FRAG '' :arg1/S :arg1/PP ...",
        "tree_rules": [
            ":arg2~i",
            ":arg1-of~instead-of-91",
            ":arg1~descend-01",
            ":arg0~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :time/NP~tomorrow - \n\t :poss/PRP$~it -)",
        "graph_rules": {
            "anniversary": [
                ":time~tomorrow",
                ":poss~it"
            ]
        },
        "head": "anniversary",
        "name": ":root/ROOT~anniversary",
        "noun_info": {},
        "tree": ":time/NP will be :poss/PRP$ XXX-NN . ''",
        "tree_rules": [
            ":poss~it",
            ":time~tomorrow"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~flush-03 -)",
        "graph_rules": {
            "and": [
                ":op2~flush-03"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :arg1/NP :op2/VP .",
        "tree_rules": [
            ":op2~flush-03"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/S~sense-01 -)",
        "graph_rules": {
            "and": [
                ":op2~sense-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :frequency/NP",
        "tree_rules": [
            ":op2~sense-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/NP~question-01 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~question-01"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": ":arg2/NP , XXX-RB , :arg0/VP : '' :polarity/PRN - :arg1/S ?",
        "tree_rules": [
            ":arg2~question-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~you - \n\t :arg4/PP~place - \n\t :direction/IN~back -)",
        "graph_rules": {
            "go-02": [
                ":arg1~you",
                ":arg4~place",
                ":direction~back"
            ]
        },
        "head": "go-02",
        "name": ":root/ROOT~go-02",
        "noun_info": {},
        "tree": ":arg1/NP were :direction/IN the XXX-PRP$ :direction/NN :arg4/PP ? ''",
        "tree_rules": [
            ":direction~back",
            ":direction~back",
            ":arg4~place",
            ":arg1~you"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~prince - \n\t :mod/ADVP~again -)",
        "graph_rules": {
            "flush-03": [
                ":arg1~prince",
                ":mod~again"
            ]
        },
        "head": "flush-03",
        "name": ":root/ROOT~flush-03",
        "noun_info": {},
        "tree": ":arg1/NP XXX-VBD :mod/ADVP .",
        "tree_rules": [
            ":mod~again",
            ":arg1~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~add-01 -)",
        "graph_rules": {
            "and": [
                ":op2~add-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :manner/PP : '' :arg0/S ? ''",
        "tree_rules": [
            ":op2~add-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~prince - \n\t :mod/RBR~again -)",
        "graph_rules": {
            "flush-03": [
                ":arg1~prince",
                ":mod~again"
            ]
        },
        "head": "flush-03",
        "name": ":root/ROOT~flush-03",
        "noun_info": {},
        "tree": ":arg1/NP XXX-VBD :frequency/RB :mod/RBR .",
        "tree_rules": [
            ":mod~again",
            ":arg1~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/S~answer-01 - \n\t :arg2/S~flush-03 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg1~answer-01",
                ":arg2~flush-03"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": ":arg1/S - - XXX-CC :arg2/S ?",
        "tree_rules": [
            ":arg1~answer-01",
            ":arg2~flush-03"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "ah",
        "name": ":root/ROOT~ah",
        "noun_info": {},
        "tree": "'' XXX-RB , ''",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/PP~frighten-01 - \n\t :arg2/NP~he -)",
        "graph_rules": {
            "say-01": [
                ":arg0~i",
                ":arg1~frighten-01",
                ":arg2~he"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD :arg1/PP",
        "tree_rules": [
            ":arg2~he",
            ":arg1~frighten-01",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP~interrupt-01 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~interrupt-01"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :arg2/VP .",
        "tree_rules": [
            ":arg2~interrupt-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/PRP~you - \n\t :arg2/VP~work-01 - \n\t :time/RB~now -)",
        "graph_rules": {
            "obligate-01": [
                ":arg1~you",
                ":arg2~work-01",
                ":time~now"
            ]
        },
        "head": "obligate-01",
        "name": ":root/ROOT~obligate-01",
        "noun_info": {},
        "tree": "'' :time/RB :arg1/PRP XXX-MD :arg2/VP .",
        "tree_rules": [
            ":time~now",
            ":arg1~you",
            ":arg2~work-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~you - \n\t :arg2/VP~return-01 -)",
        "graph_rules": {
            "obligate-01": [
                ":arg1~you",
                ":arg2~return-01"
            ]
        },
        "head": "obligate-01",
        "name": ":root/ROOT~obligate-01",
        "noun_info": {},
        "tree": ":arg1/NP XXX-MD :arg2/VP .",
        "tree_rules": [
            ":arg2~return-01",
            ":arg1~you"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~i - \n\t :arg2/PP~you - \n\t :location/ADVP~here -)",
        "graph_rules": {
            "wait-01": [
                ":arg1~i",
                ":arg2~you",
                ":location~here"
            ]
        },
        "head": "wait-01",
        "name": ":root/ROOT~wait-01",
        "noun_info": {},
        "tree": ":arg1/NP will be XXX-VBG :arg2/PP :location/ADVP .",
        "tree_rules": [
            ":arg2~you",
            ":location~here",
            ":arg1~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/E~you - \n\t :direction/PRT~back - \n\t :time/NP~date-entity -)",
        "graph_rules": {
            "come-01": [
                ":arg1~you",
                ":direction~back",
                ":time~date-entity"
            ]
        },
        "head": "come-01",
        "name": ":root/ROOT~come-01",
        "noun_info": {},
        "tree": "XXX-VB :direction/PRT :time/NP ... ''",
        "tree_rules": [
            ":direction~back",
            ":time~date-entity",
            ":arg1~you"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/VP~reassure-01 -)",
        "graph_rules": {
            "have-concession-91": [
                ":arg1~reassure-01"
            ]
        },
        "head": "have-concession-91",
        "name": ":root/ROOT~have-concession-91",
        "noun_info": {},
        "tree": "XXX-CC :arg1/NP :arg1/VP .",
        "tree_rules": [
            ":arg1~reassure-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/NP~fox -)",
        "graph_rules": {
            "remember-01": [
                ":arg0~i",
                ":arg1~fox"
            ]
        },
        "head": "remember-01",
        "name": ":root/ROOT~remember-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD :arg1/NP .",
        "tree_rules": [
            ":arg1~fox",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~one - \n\t :arg2/PP~weep-01 - \n\t :condition/IN~let-01 -)",
        "graph_rules": {
            "risk-01": [
                ":arg0~one",
                ":arg2~weep-01",
                ":condition~let-01"
            ]
        },
        "head": "risk-01",
        "name": ":root/ROOT~risk-01",
        "noun_info": {},
        "tree": ":arg0/NP runs the XXX-NN :arg2/PP ...",
        "tree_rules": [
            ":condition~let-01",
            ":condition~let-01",
            ":arg2~weep-01",
            ":arg0~one"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/NP~26 -)",
        "graph_rules": {
            "chapter": [
                ":mod~26"
            ]
        },
        "head": "chapter",
        "name": ":root/ROOT~chapter",
        "noun_info": {},
        "tree": "XXX-NN :mod/NP .",
        "tree_rules": [
            ":mod~26"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/JJ~old - \n\t :consist-of/IN~stone - \n\t :arg1-of/VB~ruin-01 - \n\t :location/SBAR~beside -)",
        "graph_rules": {
            "wall": [
                ":mod~old",
                ":consist-of~stone",
                ":arg1-of~ruin-01",
                ":location~beside"
            ]
        },
        "head": "wall",
        "name": ":root/ROOT~wall",
        "noun_info": {},
        "tree": ":location/SBAR :arg1-of/VB :consist-of/IN an :mod/JJ :consist-of/NN XXX-NN .",
        "tree_rules": [
            ":location~beside",
            ":mod~old",
            ":consist-of~stone",
            ":consist-of~stone",
            ":arg1-of~ruin-01",
            ":location~beside"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/RB~sit-01 - \n\t :time/ADVP~return-01 -)",
        "graph_rules": {
            "see-01": [
                ":arg0~i",
                ":arg1~sit-01",
                ":time~return-01"
            ]
        },
        "head": "see-01",
        "name": ":root/ROOT~see-01",
        "noun_info": {},
        "tree": ":direction/SBAR , i XXX-VBD :location/IN :arg1/NP , :arg0-of/IN :arg1/NP .",
        "tree_rules": [
            ":time~return-01",
            ":arg0~i",
            ":arg1~sit-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~hear-01 -)",
        "graph_rules": {
            "and": [
                ":op2~hear-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :op2/VP : '' :arg1/S .",
        "tree_rules": [
            ":op2~hear-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :domain/NP~this - \n\t :mod/JJ~exact -)",
        "graph_rules": {
            "spot": [
                ":domain~this",
                ":mod~exact"
            ]
        },
        "head": "spot",
        "name": ":root/ROOT~spot",
        "noun_info": {},
        "tree": ":domain/NP is :polarity/RB the :mod/JJ XXX-NN . ''",
        "tree_rules": [
            ":mod~exact",
            ":domain~this"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/S~day - \n\t :arg2/NP~place -)",
        "graph_rules": {
            "contrast-01": [
                ":arg1~day",
                ":arg2~place"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": ":arg1/S , XXX-CC :domain/S . ''",
        "tree_rules": [
            ":arg2~place",
            ":arg1~day"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/NP~walk-01 -)",
        "graph_rules": {
            "continue-01": [
                ":arg0~i",
                ":arg1~walk-01"
            ]
        },
        "head": "continue-01",
        "name": ":root/ROOT~continue-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD :arg1/NP :direction/IN :op1/NP .",
        "tree_rules": [
            ":arg1~walk-01",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VB~see-01 - \n\t :op2/VB~hear-01 - \n\t :time/PP~ever -)",
        "graph_rules": {
            "or": [
                ":op1~see-01",
                ":op2~hear-01",
                ":time~ever"
            ]
        },
        "head": "or",
        "name": ":root/ROOT~or",
        "noun_info": {},
        "tree": ":time/PP :polarity/VP :op1/VB XXX-CC :op2/VB :arg1/NP .",
        "tree_rules": [
            ":op1~see-01",
            ":op2~hear-01",
            ":time~ever"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP~reply-01 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~reply-01"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": ":arg0/NP , XXX-RB , :arg2/VP",
        "tree_rules": [
            ":arg2~reply-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~you - \n\t :arg1/SBAR~begin-01 -)",
        "graph_rules": {
            "see-01": [
                ":arg0~you",
                ":arg1~begin-01"
            ]
        },
        "head": "see-01",
        "name": ":root/ROOT~see-01",
        "noun_info": {},
        "tree": ":arg0/NP will XXX-VB :arg1/SBAR , :location/PP .",
        "tree_rules": [
            ":arg1~begin-01",
            ":arg0~you"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~you - \n\t :arg1/NP~nothing -)",
        "graph_rules": {
            "have-03": [
                ":arg0~you",
                ":arg1~nothing"
            ]
        },
        "head": "have-03",
        "name": ":root/ROOT~have-03",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBP :arg1/NP :arg1-of/CC :arg2/VP .",
        "tree_rules": [
            ":arg1~nothing",
            ":arg0~you"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :location-of/NP~i - \n\t :time/NP-TMP~date-entity -)",
        "graph_rules": {
            "there": [
                ":location-of~i",
                ":time~date-entity"
            ]
        },
        "head": "there",
        "name": ":root/ROOT~there",
        "noun_info": {},
        "tree": ":location-of/NP :location-of/MD be XXX-RB :time/NP-TMP . ''",
        "tree_rules": [
            ":time~date-entity",
            ":location-of~i",
            ":location-of~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/E~be-located-at-91 - \n\t :op2/S~see-01 -)",
        "graph_rules": {
            "and": [
                ":op1~be-located-at-91",
                ":op2~see-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": ":quant/S , XXX-CC :op2/S .",
        "tree_rules": [
            ":op2~see-01",
            ":op1~be-located-at-91"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/S~have-03 - \n\t :mod/ADVP~again - \n\t :time/IN~after -)",
        "graph_rules": {
            "speak-01": [
                ":arg0~prince",
                ":arg1~have-03",
                ":mod~again",
                ":time~after"
            ]
        },
        "head": "speak-01",
        "name": ":root/ROOT~speak-01",
        "noun_info": {},
        "tree": ":time/IN :op1/NP :arg0/NP XXX-VBD :mod/ADVP : '' :arg1/S ?",
        "tree_rules": [
            ":time~after",
            ":mod~again",
            ":arg0~prince",
            ":arg1~have-03"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~you - \n\t :arg1/SBAR~suffer-01 -)",
        "graph_rules": {
            "sure-02": [
                ":arg0~you",
                ":arg1~suffer-01"
            ]
        },
        "head": "sure-02",
        "name": ":root/ROOT~sure-02",
        "noun_info": {},
        "tree": ":arg0/NP are XXX-JJ :arg1/SBAR ? ''",
        "tree_rules": [
            ":arg1~suffer-01",
            ":arg0~you"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~and - \n\t :arg2/VP~understand-01 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg1~and",
                ":arg2~understand-01"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": ":op1/S ; XXX-CC :mod/ADVP i :arg2/VP .",
        "tree_rules": [
            ":arg1~and",
            ":arg2~understand-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/S~go-02 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~prince",
                ":arg1~go-02"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~go-02",
            ":arg0~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/S~get-05 -)",
        "graph_rules": {
            "want-01": [
                ":arg0~i",
                ":arg1~get-05"
            ]
        },
        "head": "want-01",
        "name": ":root/ROOT~want-01",
        "noun_info": {},
        "tree": "'' :arg0/NP XXX-VBP :arg1/S . ''",
        "tree_rules": [
            ":arg1~get-05",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/S~drop-01 - \n\t :op2/S~leap-03 -)",
        "graph_rules": {
            "and": [
                ":op1~drop-01",
                ":op2~leap-03"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": ":op1/S - - XXX-CC :op2/S .",
        "tree_rules": [
            ":op1~drop-01",
            ":op2~leap-03"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1-of/WHNP~yellow-02 - \n\t :arg2-of/S~take-10 - \n\t :location/ADVP~before - \n\t :arg0-of/S~face-01 -)",
        "graph_rules": {
            "snake": [
                ":arg1-of~yellow-02",
                ":arg2-of~take-10",
                ":location~before",
                ":arg0-of~face-01"
            ]
        },
        "head": "snake",
        "name": ":root/ROOT~snake",
        "noun_info": {},
        "tree": ":location/ADVP , :arg0-of/S , was one of :arg2-of/DT :arg1-of/JJ XXX-NNS :arg1-of/WHNP :arg2-of/S .",
        "tree_rules": [
            ":location~before",
            ":arg2-of~take-10",
            ":arg1-of~yellow-02",
            ":arg1-of~yellow-02",
            ":arg2-of~take-10",
            ":location~before",
            ":arg0-of~face-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~step-01 - \n\t :arg2/NP~dig-01 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg1~step-01",
                ":arg2~dig-01"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "XXX-RB as :arg0/S i made :arg1/NP :arg2/ADVP .",
        "tree_rules": [
            ":arg2~dig-01",
            ":arg1~step-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/CC~and -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~and"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "XXX-CC , :arg0/PP , :arg0/NP :op1/VP .",
        "tree_rules": [
            ":arg2~and"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :snt1/VBD~reach-01 - \n\t :snt2/NP~face -)",
        "graph_rules": {
            "multi-sentence": [
                ":snt1~reach-01",
                ":snt2~face"
            ]
        },
        "head": "multi-sentence",
        "name": ":root/ROOT~multi-sentence",
        "noun_info": {},
        "tree": ":arg0/NP :snt1/VBD the XXX-NN :mod/ADVP :location/IN :snt1/NP :time/S ; :arg1-of/S .",
        "tree_rules": [
            ":snt1~reach-01",
            ":snt1~reach-01",
            ":snt2~face"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~this - \n\t :arg2/.~amr-unknown -)",
        "graph_rules": {
            "mean-01": [
                ":arg1~this",
                ":arg2~amr-unknown"
            ]
        },
        "head": "mean-01",
        "name": ":root/ROOT~mean-01",
        "noun_info": {},
        "tree": "'' what does :arg1/NP XXX-VB :arg2/. ''",
        "tree_rules": [
            ":arg1~this",
            ":arg2~amr-unknown"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i -)",
        "graph_rules": {
            "demand-01": [
                ":arg0~i"
            ]
        },
        "head": "demand-01",
        "name": ":root/ROOT~demand-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD .",
        "tree_rules": [
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~you - \n\t :arg2/PP~snake - \n\t :purpose/.~amr-unknown -)",
        "graph_rules": {
            "talk-01": [
                ":arg0~you",
                ":arg2~snake",
                ":purpose~amr-unknown"
            ]
        },
        "head": "talk-01",
        "name": ":root/ROOT~talk-01",
        "noun_info": {},
        "tree": "'' :purpose/WHADVP are :arg0/NP XXX-VBG :arg2/PP :purpose/. ''",
        "tree_rules": [
            ":arg2~snake",
            ":arg0~you",
            ":purpose~amr-unknown",
            ":purpose~amr-unknown"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/NP~muffler -)",
        "graph_rules": {
            "loosen-01": [
                ":arg0~i",
                ":arg1~muffler"
            ]
        },
        "head": "loosen-01",
        "name": ":root/ROOT~loosen-01",
        "noun_info": {},
        "tree": ":arg0/NP :arg1-of/VBD XXX-VBN :arg1/NP :arg1-of/SBAR .",
        "tree_rules": [
            ":arg1~muffler",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VP~moisten-01 - \n\t :op2/VP~give-01 -)",
        "graph_rules": {
            "and": [
                ":op1~moisten-01",
                ":op2~give-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": ":arg0/NP :op1/VP , XXX-CC :op2/VP .",
        "tree_rules": [
            ":op1~moisten-01",
            ":op2~give-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~dare-01 - \n\t :time/ADVP~now -)",
        "graph_rules": {
            "and": [
                ":op2~dare-01",
                ":time~now"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :time/ADVP :arg1/NP :op2/VP .",
        "tree_rules": [
            ":time~now",
            ":op2~dare-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VP~look-01 - \n\t :op2/VP~put-01 -)",
        "graph_rules": {
            "and": [
                ":op1~look-01",
                ":op2~put-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": ":arg0/NP :op1/VP , XXX-CC :op2/VP .",
        "tree_rules": [
            ":op1~look-01",
            ":op2~put-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/NP~heart -)",
        "graph_rules": {
            "feel-01": [
                ":arg0~i",
                ":arg1~heart"
            ]
        },
        "head": "feel-01",
        "name": ":root/ROOT~feel-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD :arg1/NP :arg1-of/S ...",
        "tree_rules": [
            ":arg1~heart",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/S~glad-02 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~he",
                ":arg1~glad-02"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' :arg0/NP XXX-VBD .",
        "tree_rules": [
            ":arg1~glad-02",
            ":arg0~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/VP~go-02 - \n\t :time/RB~now -)",
        "graph_rules": {
            "possible-01": [
                ":arg1~go-02",
                ":time~now"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT~possible-01",
        "noun_info": {},
        "tree": "'' :time/RB :arg0/PRP XXX-MD :arg1/VP - - ''",
        "tree_rules": [
            ":time~now",
            ":arg1~go-02"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~you - \n\t :arg1/PP~that - \n\t :manner/.~amr-unknown -)",
        "graph_rules": {
            "know-01": [
                ":arg0~you",
                ":arg1~that",
                ":manner~amr-unknown"
            ]
        },
        "head": "know-01",
        "name": ":root/ROOT~know-01",
        "noun_info": {},
        "tree": "'' :manner/WHADVP do :arg0/NP XXX-VB :arg1/PP :manner/. ''",
        "tree_rules": [
            ":arg1~that",
            ":arg0~you",
            ":manner~amr-unknown",
            ":manner~amr-unknown"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~i - \n\t :purpose/S~tell-01 - \n\t :mod/ADVP~just -)",
        "graph_rules": {
            "come-01": [
                ":arg1~i",
                ":purpose~tell-01",
                ":mod~just"
            ]
        },
        "head": "come-01",
        "name": ":root/ROOT~come-01",
        "noun_info": {},
        "tree": ":arg1/NP was :mod/ADVP XXX-VBG :purpose/S .",
        "tree_rules": [
            ":purpose~tell-01",
            ":mod~just",
            ":arg1~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/VBD~make-01 - \n\t :arg2/NP~add-01 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg1~make-01",
                ":arg2~add-01"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": ":arg0/NP :arg1/VBD :arg1/NP to :arg1/NP , XXX-CC :arg2/NP : '' :arg0/S",
        "tree_rules": [
            ":arg2~add-01",
            ":arg1~make-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/E~and - \n\t :time/ADVP~then - \n\t :manner/E~sad-02 -)",
        "graph_rules": {
            "say-01": [
                ":arg1~and",
                ":time~then",
                ":manner~sad-02"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": ":time/ADVP , XXX-RB - - '' it is :mod/ADVP :op1/ADJP ... :op2/S ... ''",
        "tree_rules": [
            ":time~then",
            ":manner~sad-02",
            ":arg1~and"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/S~event - \n\t :arg1-of/ADVP~clear-06 -)",
        "graph_rules": {
            "realize-01": [
                ":arg0~i",
                ":arg1~event",
                ":arg1-of~clear-06"
            ]
        },
        "head": "realize-01",
        "name": ":root/ROOT~realize-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD :arg1-of/ADVP :arg1-of/IN :arg1/S .",
        "tree_rules": [
            ":arg1-of~clear-06",
            ":arg1~event",
            ":arg1-of~clear-06",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/S~hold-01 - \n\t :op2/S~seem-01 -)",
        "graph_rules": {
            "and": [
                ":op1~hold-01",
                ":op2~seem-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": ":op1/S ; XXX-CC :op2/S ...",
        "tree_rules": [
            ":op1~hold-01",
            ":op2~seem-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/E~he - \n\t :arg2-of/VP~serious-01 - \n\t :arg1-of/IN~resemble-01 -)",
        "graph_rules": {
            "look-01": [
                ":arg0~he",
                ":arg2-of~serious-01",
                ":arg1-of~resemble-01"
            ]
        },
        "head": "look-01",
        "name": ":root/ROOT~look-01",
        "noun_info": {},
        "tree": ":arg2-of/PRP$ XXX-NN :arg2-of/VP .",
        "tree_rules": [
            ":arg2-of~serious-01",
            ":arg1-of~resemble-01",
            ":arg2-of~serious-01",
            ":arg0~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/NP~sheep -)",
        "graph_rules": {
            "have-03": [
                ":arg0~i",
                ":arg1~sheep"
            ]
        },
        "head": "have-03",
        "name": ":root/ROOT~have-03",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VB :arg1/NP .",
        "tree_rules": [
            ":arg1~sheep",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~have-03 -)",
        "graph_rules": {
            "and": [
                ":op2~have-03"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :op2/VP .",
        "tree_rules": [
            ":op2~have-03"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~have-03 -)",
        "graph_rules": {
            "and": [
                ":op2~have-03"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :op2/VP ''",
        "tree_rules": [
            ":op2~have-03"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~give-01 -)",
        "graph_rules": {
            "and": [
                ":op2~give-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :op2/VP .",
        "tree_rules": [
            ":op2~give-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~i - \n\t :arg1-of/NP~long-03 -)",
        "graph_rules": {
            "wait-01": [
                ":arg1~i",
                ":arg1-of~long-03"
            ]
        },
        "head": "wait-01",
        "name": ":root/ROOT~wait-01",
        "noun_info": {},
        "tree": ":arg1/NP XXX-VBD :arg1-of/NP .",
        "tree_rules": [
            ":arg1-of~long-03",
            ":arg1~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/VP~see-01 -)",
        "graph_rules": {
            "possible-01": [
                ":arg1~see-01"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT~possible-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-MD :arg1/VP .",
        "tree_rules": [
            ":arg1~see-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/LS~i - \n\t :arg1/VP~fear-01 - \n\t :arg2/PP~he -)",
        "graph_rules": {
            "say-01": [
                ":arg0~i",
                ":arg1~fear-01",
                ":arg2~he"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": ":arg0/LS XXX-VBD :arg2/PP :arg1/VP ... ''",
        "tree_rules": [
            ":arg2~he",
            ":arg0~i",
            ":arg1~fear-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :mod/VP~certain -)",
        "graph_rules": {
            "fear-01": [
                ":arg0~he",
                ":mod~certain"
            ]
        },
        "head": "fear-01",
        "name": ":root/ROOT~fear-01",
        "noun_info": {},
        "tree": ":arg0/NP was XXX-JJ , there :mod/VP .",
        "tree_rules": [
            ":arg0~he",
            ":mod~certain"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP~laugh-01 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~laugh-01"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :arg2/VP .",
        "tree_rules": [
            ":arg2~laugh-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :degree/RBR~more - \n\t :time/MD~date-entity -)",
        "graph_rules": {
            "fear-01": [
                ":arg0~i",
                ":degree~more",
                ":time~date-entity"
            ]
        },
        "head": "fear-01",
        "name": ":root/ROOT~fear-01",
        "noun_info": {},
        "tree": "'' :arg0/NP :time/MD be :mod/RB :degree/RBR XXX-JJ :time/NP-TMP ... ''",
        "tree_rules": [
            ":degree~more",
            ":time~date-entity",
            ":time~date-entity",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/SBAR~freeze-01 - \n\t :mod/RB~again -)",
        "graph_rules": {
            "feel-01": [
                ":arg0~i",
                ":arg1~freeze-01",
                ":mod~again"
            ]
        },
        "head": "feel-01",
        "name": ":root/ROOT~feel-01",
        "noun_info": {},
        "tree": ":frequency/RB :mod/RB :arg0/NP XXX-VBD :arg1/SBAR .",
        "tree_rules": [
            ":mod~again",
            ":arg1~freeze-01",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~know-01 -)",
        "graph_rules": {
            "and": [
                ":op2~know-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :op2/VP .",
        "tree_rules": [
            ":op2~know-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~it - \n\t :arg2/NP~spring - \n\t :beneficiary/PP~i -)",
        "graph_rules": {
            "resemble-01": [
                ":arg1~it",
                ":arg2~spring",
                ":beneficiary~i"
            ]
        },
        "head": "resemble-01",
        "name": ":root/ROOT~resemble-01",
        "noun_info": {},
        "tree": ":beneficiary/PP , :arg1/NP was XXX-IN :arg2/NP .",
        "tree_rules": [
            ":arg2~spring",
            ":beneficiary~i",
            ":arg1~it"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/JJ~little -)",
        "graph_rules": {
            "man": [
                ":mod~little"
            ]
        },
        "head": "man",
        "name": ":root/ROOT~man",
        "noun_info": {},
        "tree": "'' :mod/JJ XXX-NN , ''",
        "tree_rules": [
            ":mod~little"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP~say-01 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~say-01"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :arg2/VP : '' :duration/PRN ... :arg1/S ... ''",
        "tree_rules": [
            ":arg2~say-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/JJ~little -)",
        "graph_rules": {
            "man": [
                ":mod~little"
            ]
        },
        "head": "man",
        "name": ":root/ROOT~man",
        "noun_info": {},
        "tree": "'' :mod/JJ XXX-NN , ''",
        "tree_rules": [
            ":mod~little"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/S~tell-01 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~i",
                ":arg1~tell-01"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD , '' :arg1/S that it is :mod/ADVP :arg1/NP - - :arg2/NP-TMP :op3/NP ... ''",
        "tree_rules": [
            ":arg1~tell-01",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP~answer-01 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~answer-01"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :arg2/VP .",
        "tree_rules": [
            ":arg2~answer-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/VP~important - \n\t :arg2/PP~i - \n\t :arg1-of/ADVP~instead-of-91 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~he",
                ":arg1~important",
                ":arg2~i",
                ":arg1-of~instead-of-91"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD :arg2/PP , :arg1-of/ADVP '' the :arg1/VP ''",
        "tree_rules": [
            ":arg2~i",
            ":arg1-of~instead-of-91",
            ":arg0~he",
            ":arg1~important"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i -)",
        "graph_rules": {
            "know-01": [
                ":arg0~i"
            ]
        },
        "head": "know-01",
        "name": ":root/ROOT~know-01",
        "noun_info": {},
        "tree": "'' yes , :arg0/NP XXX-VBP ... ''",
        "tree_rules": [
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~it - \n\t :arg2/S~flower - \n\t :mod/RB~just -)",
        "graph_rules": {
            "resemble-01": [
                ":arg1~it",
                ":arg2~flower",
                ":mod~just"
            ]
        },
        "head": "resemble-01",
        "name": ":root/ROOT~resemble-01",
        "noun_info": {},
        "tree": "'' it is :mod/RB XXX-IN :arg2/S .",
        "tree_rules": [
            ":arg1~it",
            ":mod~just",
            ":arg2~flower"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~sky - \n\t :arg1-of/JJ~sweet-04 - \n\t :condition/SBAR~love-01 -)",
        "graph_rules": {
            "look-01": [
                ":arg1~sky",
                ":arg1-of~sweet-04",
                ":condition~love-01"
            ]
        },
        "head": "look-01",
        "name": ":root/ROOT~look-01",
        "noun_info": {},
        "tree": ":condition/SBAR , it is :arg1-of/JJ to XXX-VB :time/IN :arg1/NP .",
        "tree_rules": [
            ":arg1~sky",
            ":arg1-of~sweet-04",
            ":condition~love-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/PP~flower - \n\t :location/NP~star -)",
        "graph_rules": {
            "bloom-01": [
                ":arg0~flower",
                ":location~star"
            ]
        },
        "head": "bloom-01",
        "name": ":root/ROOT~bloom-01",
        "noun_info": {},
        "tree": ":location/NP are a - XXX-NN :arg0/PP ''",
        "tree_rules": [
            ":arg0~flower",
            ":location~star"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i -)",
        "graph_rules": {
            "know-01": [
                ":arg0~i"
            ]
        },
        "head": "know-01",
        "name": ":root/ROOT~know-01",
        "noun_info": {},
        "tree": "'' yes , :arg0/NP XXX-VBP ... ''",
        "tree_rules": [
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~it - \n\t :arg2/S~water - \n\t :mod/RB~just -)",
        "graph_rules": {
            "resemble-01": [
                ":arg1~it",
                ":arg2~water",
                ":mod~just"
            ]
        },
        "head": "resemble-01",
        "name": ":root/ROOT~resemble-01",
        "noun_info": {},
        "tree": "'' :arg1/NP is :mod/RB XXX-IN :arg2/S .",
        "tree_rules": [
            ":mod~just",
            ":arg2~water",
            ":arg1~it"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/CC~and - \n\t :arg1/IN~resemble-01 -)",
        "graph_rules": {
            "cause-01": [
                ":arg0~and",
                ":arg1~resemble-01"
            ]
        },
        "head": "cause-01",
        "name": ":root/ROOT~cause-01",
        "noun_info": {},
        "tree": "XXX-IN :arg1-of/S was :arg1/IN :arg2/NP .",
        "tree_rules": [
            ":arg0~and",
            ":arg1~resemble-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~you - \n\t :arg1/JJ~good-02 -)",
        "graph_rules": {
            "remember-01": [
                ":arg0~you",
                ":arg1~good-02"
            ]
        },
        "head": "remember-01",
        "name": ":root/ROOT~remember-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBP - - :degree/WHADJP :arg1/S . ''",
        "tree_rules": [
            ":arg1~good-02",
            ":arg0~you"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i -)",
        "graph_rules": {
            "know-01": [
                ":arg0~i"
            ]
        },
        "head": "know-01",
        "name": ":root/ROOT~know-01",
        "noun_info": {},
        "tree": "'' yes , :arg0/NP XXX-VBP ... ''",
        "tree_rules": [
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/SBAR~look-01 -)",
        "graph_rules": {
            "and": [
                ":op2~look-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "'' XXX-CC :time/NP .",
        "tree_rules": [
            ":op2~look-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/RB~- - \n\t :arg1/VP~show-01 - \n\t :arg1-of/E~cause-01 -)",
        "graph_rules": {
            "possible-01": [
                ":polarity~-",
                ":arg1~show-01",
                ":arg1-of~cause-01"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT~possible-01",
        "noun_info": {},
        "tree": ":location/SBAR is :mod/ADJP that :arg0/NP XXX-MD :polarity/RB :arg1/VP .",
        "tree_rules": [
            ":polarity~-",
            ":arg1~show-01",
            ":arg1-of~cause-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~it - \n\t :arg2/NP~that -)",
        "graph_rules": {
            "resemble-01": [
                ":arg1~it",
                ":arg2~that"
            ]
        },
        "head": "resemble-01",
        "name": ":root/ROOT~resemble-01",
        "noun_info": {},
        "tree": ":arg1/NP is :degree/ADJP , XXX-IN :arg2/NP .",
        "tree_rules": [
            ":arg2~that",
            ":arg1~it"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :quant/NP~1 - \n\t :beneficiary/PP~you - \n\t :poss/PRP$~i - \n\t :arg1-of/IN~include-91 -)",
        "graph_rules": {
            "star": [
                ":quant~1",
                ":beneficiary~you",
                ":poss~i",
                ":arg1-of~include-91"
            ]
        },
        "head": "star",
        "name": ":root/ROOT~star",
        "noun_info": {},
        "tree": ":poss/PRP$ XXX-NN :mod/VP .",
        "tree_rules": [
            ":poss~i",
            ":arg1-of~include-91",
            ":quant~1",
            ":beneficiary~you"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~love-01 -)",
        "graph_rules": {
            "and": [
                ":op2~love-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC so :arg0/NP :op2/VP ... :arg2/S .",
        "tree_rules": [
            ":op2~love-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/S~make-01 -)",
        "graph_rules": {
            "and": [
                ":op1~make-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC , besides , :arg3/S ... ''",
        "tree_rules": [
            ":op1~make-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :mod/ADVP~again -)",
        "graph_rules": {
            "laugh-01": [
                ":arg0~he",
                ":mod~again"
            ]
        },
        "head": "laugh-01",
        "name": ":root/ROOT~laugh-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD :mod/ADVP .",
        "tree_rules": [
            ":mod~again",
            ":arg0~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/LS~i - \n\t :arg1/S~hear-01 -)",
        "graph_rules": {
            "love-01": [
                ":arg0~i",
                ":arg1~hear-01"
            ]
        },
        "head": "love-01",
        "name": ":root/ROOT~love-01",
        "noun_info": {},
        "tree": ":arg0/LS XXX-NN :arg1/S ! ''",
        "tree_rules": [
            ":arg0~i",
            ":arg1~hear-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/PRP$~i - \n\t :arg1/NP~that -)",
        "graph_rules": {
            "present-01": [
                ":arg0~i",
                ":arg1~that"
            ]
        },
        "head": "present-01",
        "name": ":root/ROOT~present-01",
        "noun_info": {},
        "tree": "'' :arg1/NP is :arg0/PRP$ XXX-JJ .",
        "tree_rules": [
            ":arg0~i",
            ":arg1~that"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/ADVP~just -)",
        "graph_rules": {
            "that": [
                ":mod~just"
            ]
        },
        "head": "that",
        "name": ":root/ROOT~that",
        "noun_info": {},
        "tree": ":mod/ADVP XXX-DT .",
        "tree_rules": [
            ":mod~just"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~it - \n\t :arg2/NP~time -)",
        "graph_rules": {
            "resemble-01": [
                ":arg1~it",
                ":arg2~time"
            ]
        },
        "head": "resemble-01",
        "name": ":root/ROOT~resemble-01",
        "noun_info": {},
        "tree": ":arg1/NP will be XXX-IN :arg2/NP ''",
        "tree_rules": [
            ":arg2~time",
            ":arg1~it"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~you - \n\t :arg1/S~say-01 -)",
        "graph_rules": {
            "try-01": [
                ":arg0~you",
                ":arg1~say-01"
            ]
        },
        "head": "try-01",
        "name": ":root/ROOT~try-01",
        "noun_info": {},
        "tree": "'' what are :arg0/NP XXX-VBG :arg1/S :arg1/. ''",
        "tree_rules": [
            ":arg1~say-01",
            ":arg0~you"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg2/CC~contrast-01 -)",
        "graph_rules": {
            "answer-01": [
                ":arg0~he",
                ":arg2~contrast-01"
            ]
        },
        "head": "answer-01",
        "name": ":root/ROOT~answer-01",
        "noun_info": {},
        "tree": "'' :arg1/S , '' :arg0/NP XXX-VBD , '' :arg2/CC they are :polarity/RB :arg2/NP .",
        "tree_rules": [
            ":arg0~he",
            ":arg2~contrast-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~star - \n\t :arg1/NP~some -)",
        "graph_rules": {
            "guide-01": [
                ":arg0~star",
                ":arg1~some"
            ]
        },
        "head": "guide-01",
        "name": ":root/ROOT~guide-01",
        "noun_info": {},
        "tree": ":arg0-of/IN :arg1/NP , :arg0/NP are XXX-NNS .",
        "tree_rules": [
            ":arg1~some",
            ":arg0~star"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/RB~person - \n\t :arg1/PP~light -)",
        "graph_rules": {
            "opine-01": [
                ":arg0~person",
                ":arg1~light"
            ]
        },
        "head": "opine-01",
        "name": ":root/ROOT~opine-01",
        "noun_info": {},
        "tree": "XXX-IN :mod/NP :domain/NP are :mod/ADJP :arg1/PP .",
        "tree_rules": [
            ":arg0~person",
            ":arg1~light"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~scholar - \n\t :arg1/VP~problem -)",
        "graph_rules": {
            "opine-01": [
                ":arg0~scholar",
                ":arg1~problem"
            ]
        },
        "head": "opine-01",
        "name": ":root/ROOT~opine-01",
        "noun_info": {},
        "tree": "XXX-IN :arg0/NP , :domain/NP :arg1/VP .",
        "tree_rules": [
            ":arg0~scholar",
            ":arg1~problem"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~businessman - \n\t :arg1/VP~wealth -)",
        "graph_rules": {
            "opine-01": [
                ":arg0~businessman",
                ":arg1~wealth"
            ]
        },
        "head": "opine-01",
        "name": ":root/ROOT~opine-01",
        "noun_info": {},
        "tree": "XXX-IN :arg0/NP :domain/NP :arg1/VP .",
        "tree_rules": [
            ":arg0~businessman",
            ":arg1~wealth"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP~silent -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~silent"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "XXX-CC :domain/NP :arg2/VP .",
        "tree_rules": [
            ":arg2~silent"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~you - \n\t :arg1/NP~star - \n\t :arg1-of/IN~resemble-01 -)",
        "graph_rules": {
            "have-03": [
                ":arg0~you",
                ":arg1~star",
                ":arg1-of~resemble-01"
            ]
        },
        "head": "have-03",
        "name": ":root/ROOT~have-03",
        "noun_info": {},
        "tree": ":arg0/NP - :mod/PRN will XXX-VB :arg1/NP :arg1-of/IN :arg2/S - - ''",
        "tree_rules": [
            ":arg1-of~resemble-01",
            ":arg1~star",
            ":arg0~you"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~you - \n\t :arg1/S~say-01 -)",
        "graph_rules": {
            "try-01": [
                ":arg0~you",
                ":arg1~say-01"
            ]
        },
        "head": "try-01",
        "name": ":root/ROOT~try-01",
        "noun_info": {},
        "tree": "'' what are :arg0/NP XXX-VBG :arg1/S :arg1/. ''",
        "tree_rules": [
            ":arg1~say-01",
            ":arg0~you"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :location/IN~star -)",
        "graph_rules": {
            "live-01": [
                ":arg0~i",
                ":location~star"
            ]
        },
        "head": "live-01",
        "name": ":root/ROOT~live-01",
        "noun_info": {},
        "tree": "'' :location/IN :quant/CD of :arg0/NP XXX-MD :arg1-of/VP .",
        "tree_rules": [
            ":location~star",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :location/IN~star -)",
        "graph_rules": {
            "laugh-01": [
                ":arg0~i",
                ":location~star"
            ]
        },
        "head": "laugh-01",
        "name": ":root/ROOT~laugh-01",
        "noun_info": {},
        "tree": ":location/IN :quant/NP :arg0/NP shall be XXX-VBG .",
        "tree_rules": [
            ":location~star",
            ":location~star",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/IN~resemble-01 -)",
        "graph_rules": {
            "and": [
                ":op2~resemble-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC so :arg1/NP will be :op2/IN if :time/S ! ''",
        "tree_rules": [
            ":op2~resemble-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~laugh-01 -)",
        "graph_rules": {
            "and": [
                ":op2~laugh-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :op2/VP .",
        "tree_rules": [
            ":op2~laugh-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/ADJP~content-01 -)",
        "graph_rules": {
            "and": [
                ":op2~content-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "'' XXX-CC :time/ADVP :arg1/NP :time/VP :arg1-of/PRN :arg1/S .",
        "tree_rules": [
            ":op2~content-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~you - \n\t :arg1/PRP$~i - \n\t :arg2/VP~friend - \n\t :time/ADVP~always -)",
        "graph_rules": {
            "have-rel-role-91": [
                ":arg0~you",
                ":arg1~i",
                ":arg2~friend",
                ":time~always"
            ]
        },
        "head": "have-rel-role-91",
        "name": ":root/ROOT~have-rel-role-91",
        "noun_info": {},
        "tree": ":arg0/NP XXX-MD :time/ADVP :arg2/VP .",
        "tree_rules": [
            ":arg1~i",
            ":time~always",
            ":arg2~friend",
            ":arg0~you"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~you - \n\t :arg1/NN~laugh-01 -)",
        "graph_rules": {
            "want-01": [
                ":arg0~you",
                ":arg1~laugh-01"
            ]
        },
        "head": "want-01",
        "name": ":root/ROOT~want-01",
        "noun_info": {},
        "tree": ":arg0/NP will XXX-VB to :arg1/NN :accompanier/PP .",
        "tree_rules": [
            ":arg1~laugh-01",
            ":arg0~you"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VP~open-01 - \n\t :op2/S~astonish-01 -)",
        "graph_rules": {
            "and": [
                ":op1~open-01",
                ":op2~astonish-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :op1/VP ... and :op2/S :arg1/.",
        "tree_rules": [
            ":op1~open-01",
            ":op2~astonish-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/SBAR~you - \n\t :mod/ADJP~shabby -)",
        "graph_rules": {
            "trick-01": [
                ":arg0~i",
                ":arg1~you",
                ":mod~shabby"
            ]
        },
        "head": "trick-01",
        "name": ":root/ROOT~trick-01",
        "noun_info": {},
        "tree": ":degree/NP will be a :mod/ADJP XXX-NN :arg1/SBAR ''",
        "tree_rules": [
            ":arg0~i",
            ":mod~shabby",
            ":arg1~you"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~laugh-01 -)",
        "graph_rules": {
            "and": [
                ":op2~laugh-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :op2/VP .",
        "tree_rules": [
            ":op2~laugh-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/E~give-01 -)",
        "graph_rules": {
            "resemble-01": [
                ":arg1~give-01"
            ]
        },
        "head": "resemble-01",
        "name": ":root/ROOT~resemble-01",
        "noun_info": {},
        "tree": "'' it will be XXX-IN if , :arg1/PP , :arg0/NP :arg2/VP ''",
        "tree_rules": [
            ":arg1~give-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~laugh-01 -)",
        "graph_rules": {
            "and": [
                ":op2~laugh-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :op2/VP .",
        "tree_rules": [
            ":op2~laugh-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~prince - \n\t :arg1/S~come-01 -)",
        "graph_rules": {
            "say-01": [
                ":arg0~prince",
                ":arg1~come-01"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": ":time/S - - :time/S , '' XXX-VBD :arg0/NP .",
        "tree_rules": [
            ":arg1~come-01",
            ":arg0~prince"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/RB~- - \n\t :arg0/NP~i - \n\t :arg1/NP~you -)",
        "graph_rules": {
            "leave-15": [
                ":polarity~-",
                ":arg0~i",
                ":arg1~you"
            ]
        },
        "head": "leave-15",
        "name": ":root/ROOT~leave-15",
        "noun_info": {},
        "tree": "'' :arg0/NP shall :polarity/RB XXX-VB :arg1/NP , ''",
        "tree_rules": [
            ":arg1~you",
            ":polarity~-",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i -)",
        "graph_rules": {
            "say-01": [
                ":arg0~i"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD .",
        "tree_rules": [
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/IN~have-manner-91 -)",
        "graph_rules": {
            "look-02": [
                ":arg0~i",
                ":arg1~have-manner-91"
            ]
        },
        "head": "look-02",
        "name": ":root/ROOT~look-02",
        "noun_info": {},
        "tree": "'' :arg0/NP shall XXX-VB as :arg1/IN :arg2/S .",
        "tree_rules": [
            ":arg1~have-manner-91",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/IN~have-manner-91 - \n\t :degree/PP~little -)",
        "graph_rules": {
            "look-02": [
                ":arg0~i",
                ":arg1~have-manner-91",
                ":degree~little"
            ]
        },
        "head": "look-02",
        "name": ":root/ROOT~look-02",
        "noun_info": {},
        "tree": ":arg0/NP shall XXX-VB :degree/PP .",
        "tree_rules": [
            ":arg1~have-manner-91",
            ":degree~little",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~it - \n\t :arg2/NP~that -)",
        "graph_rules": {
            "resemble-01": [
                ":arg1~it",
                ":arg2~that"
            ]
        },
        "head": "resemble-01",
        "name": ":root/ROOT~resemble-01",
        "noun_info": {},
        "tree": ":arg1/NP is XXX-IN :arg2/NP .",
        "tree_rules": [
            ":arg2~that",
            ":arg1~it"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/RB~- - \n\t :arg1/E~you - \n\t :purpose/S~see-01 -)",
        "graph_rules": {
            "come-01": [
                ":polarity~-",
                ":arg1~you",
                ":purpose~see-01"
            ]
        },
        "head": "come-01",
        "name": ":root/ROOT~come-01",
        "noun_info": {},
        "tree": "do :polarity/RB XXX-VB :purpose/S .",
        "tree_rules": [
            ":purpose~see-01",
            ":polarity~-",
            ":arg1~you"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/PRT~- - \n\t :arg1/NP~it - \n\t :arg2/SBAR~trouble-01 -)",
        "graph_rules": {
            "worth-02": [
                ":polarity~-",
                ":arg1~it",
                ":arg2~trouble-01"
            ]
        },
        "head": "worth-02",
        "name": ":root/ROOT~worth-02",
        "noun_info": {},
        "tree": ":arg1/NP is :polarity/PRT XXX-JJ :arg2/SBAR ''",
        "tree_rules": [
            ":arg2~trouble-01",
            ":polarity~-",
            ":arg1~it"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/RB~- - \n\t :arg0/NP~i - \n\t :arg1/NP~you -)",
        "graph_rules": {
            "leave-15": [
                ":polarity~-",
                ":arg0~i",
                ":arg1~you"
            ]
        },
        "head": "leave-15",
        "name": ":root/ROOT~leave-15",
        "noun_info": {},
        "tree": "'' :arg0/NP shall :polarity/RB XXX-VB :arg1/NP . ''",
        "tree_rules": [
            ":arg1~you",
            ":polarity~-",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP~worry-01 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~worry-01"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "XXX-CC :arg1/NP :arg2/VP .",
        "tree_rules": [
            ":arg2~worry-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/IN~cause-01 - \n\t :arg2/NP~you -)",
        "graph_rules": {
            "tell-01": [
                ":arg0~i",
                ":arg1~cause-01",
                ":arg2~you"
            ]
        },
        "head": "tell-01",
        "name": ":root/ROOT~tell-01",
        "noun_info": {},
        "tree": "'' :arg0/NP XXX-VBP :arg2/NP - - it is :mod/ADVP :arg0/PP .",
        "tree_rules": [
            ":arg2~you",
            ":arg0~i",
            ":arg1~cause-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/VP~bite-01 -)",
        "graph_rules": {
            "obligate-01": [
                ":arg1~bite-01"
            ]
        },
        "head": "obligate-01",
        "name": ":root/ROOT~obligate-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-MD :polarity/RB :arg1/VP .",
        "tree_rules": [
            ":arg1~bite-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/VP~creature -)",
        "graph_rules": {
            "snake": [
                ":mod~creature"
            ]
        },
        "head": "snake",
        "name": ":root/ROOT~snake",
        "noun_info": {},
        "tree": "XXX-NNS - - they :mod/VP .",
        "tree_rules": [
            ":mod~creature"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/VP~bite-01 -)",
        "graph_rules": {
            "possible-01": [
                ":arg1~bite-01"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT~possible-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-MD :arg1/VP",
        "tree_rules": [
            ":arg1~bite-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/RB~- - \n\t :arg0/NP~i - \n\t :arg1/NP~you -)",
        "graph_rules": {
            "leave-15": [
                ":polarity~-",
                ":arg0~i",
                ":arg1~you"
            ]
        },
        "head": "leave-15",
        "name": ":root/ROOT~leave-15",
        "noun_info": {},
        "tree": "'' :arg0/NP shall :polarity/RB XXX-VB :arg1/NP . ''",
        "tree_rules": [
            ":arg1~you",
            ":polarity~-",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP~come-01 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~come-01"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "XXX-CC :arg1/NP :arg2/VP : '' it is :arg1/ADJP :arg1/SBAR . ''",
        "tree_rules": [
            ":arg2~come-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/RB~- - \n\t :arg0/NP~i - \n\t :arg1/S~set-out-07 - \n\t :time/NP-TMP~date-entity -)",
        "graph_rules": {
            "see-01": [
                ":polarity~-",
                ":arg0~i",
                ":arg1~set-out-07",
                ":time~date-entity"
            ]
        },
        "head": "see-01",
        "name": ":root/ROOT~see-01",
        "noun_info": {},
        "tree": ":time/NP-TMP :arg0/NP :polarity/VBD :polarity/RB XXX-VB :arg1/S .",
        "tree_rules": [
            ":time~date-entity",
            ":arg1~set-out-07",
            ":polarity~-",
            ":polarity~-",
            ":time~date-entity",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :source/PP~i - \n\t :manner/IN~sound-02 -)",
        "graph_rules": {
            "get-away-08": [
                ":arg0~he",
                ":source~i",
                ":manner~sound-02"
            ]
        },
        "head": "get-away-08",
        "name": ":root/ROOT~get-away-08",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD away :source/PP :manner/IN :polarity/S .",
        "tree_rules": [
            ":manner~sound-02",
            ":manner~sound-02",
            ":source~i",
            ":arg0~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/PP~catch-up-04 - \n\t :time/VP~walk-01 -)",
        "graph_rules": {
            "succeed-01": [
                ":arg0~i",
                ":arg1~catch-up-04",
                ":time~walk-01"
            ]
        },
        "head": "succeed-01",
        "name": ":root/ROOT~succeed-01",
        "noun_info": {},
        "tree": "when :arg0/NP XXX-VBN :arg1/PP he :time/VP .",
        "tree_rules": [
            ":arg1~catch-up-04",
            ":arg0~i",
            ":time~walk-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/PP~ah - \n\t :arg2/PP~i - \n\t :manner/FRAG~mere -)",
        "graph_rules": {
            "say-01": [
                ":arg0~he",
                ":arg1~ah",
                ":arg2~i",
                ":manner~mere"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD :arg2/PP '' :arg1/PP !",
        "tree_rules": [
            ":manner~mere",
            ":arg2~i",
            ":arg1~ah",
            ":arg0~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :location/VP~there -)",
        "graph_rules": {
            "you": [
                ":location~there"
            ]
        },
        "head": "you",
        "name": ":root/ROOT~you",
        "noun_info": {},
        "tree": "XXX-PRP :location/VP ... ''",
        "tree_rules": [
            ":location~there"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~take-01 -)",
        "graph_rules": {
            "and": [
                ":op2~take-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :op2/VP .",
        "tree_rules": [
            ":op2~take-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP~worry-01 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~worry-01"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "XXX-CC :arg1/NP :arg2/VP .",
        "tree_rules": [
            ":arg2~worry-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/PP~you - \n\t :arg1-of/ADJP~wrong-02 -)",
        "graph_rules": {
            "come-01": [
                ":arg1~you",
                ":arg1-of~wrong-02"
            ]
        },
        "head": "come-01",
        "name": ":root/ROOT~come-01",
        "noun_info": {},
        "tree": "'' it was :arg1-of/ADJP to XXX-VB .",
        "tree_rules": [
            ":arg1~you",
            ":arg1-of~wrong-02"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~you -)",
        "graph_rules": {
            "suffer-01": [
                ":arg0~you"
            ]
        },
        "head": "suffer-01",
        "name": ":root/ROOT~suffer-01",
        "noun_info": {},
        "tree": ":arg0/NP will XXX-VB .",
        "tree_rules": [
            ":arg0~you"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/IN~resemble-01 - \n\t :op2/S~true-01 -)",
        "graph_rules": {
            "and": [
                ":op1~resemble-01",
                ":op2~true-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": ":arg1-of/S ; XXX-CC :op2/S ... ''",
        "tree_rules": [
            ":op1~resemble-01",
            ":op2~true-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/NP~nothing -)",
        "graph_rules": {
            "say-01": [
                ":arg0~i",
                ":arg1~nothing"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD :arg1/NP .",
        "tree_rules": [
            ":arg1~nothing",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~you - \n\t :arg1/RB~far -)",
        "graph_rules": {
            "understand-01": [
                ":arg0~you",
                ":arg1~far"
            ]
        },
        "head": "understand-01",
        "name": ":root/ROOT~understand-01",
        "noun_info": {},
        "tree": "'' :arg0/NP XXX-VBP ... it is :degree/RB :arg1/RB .",
        "tree_rules": [
            ":arg0~you",
            ":arg1~far"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/RB~- - \n\t :arg1/VP~carry-01 -)",
        "graph_rules": {
            "possible-01": [
                ":polarity~-",
                ":arg1~carry-01"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT~possible-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-MD :polarity/RB :arg1/VP .",
        "tree_rules": [
            ":polarity~-",
            ":arg1~carry-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :degree/NP~too -)",
        "graph_rules": {
            "heavy": [
                ":degree~too"
            ]
        },
        "head": "heavy",
        "name": ":root/ROOT~heavy",
        "noun_info": {},
        "tree": ":degree/NP is :degree/RB XXX-JJ . ''",
        "tree_rules": [
            ":degree~too",
            ":degree~too"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/NP~nothing -)",
        "graph_rules": {
            "say-01": [
                ":arg0~i",
                ":arg1~nothing"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD :arg1/NP .",
        "tree_rules": [
            ":arg1~nothing",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/IN~resemble-01 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~resemble-01"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "'' XXX-CC :arg1/NP .",
        "tree_rules": [
            ":arg2~resemble-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/IN~- - \n\t :arg0/NP~shell -)",
        "graph_rules": {
            "sad-02": [
                ":polarity~-",
                ":arg0~shell"
            ]
        },
        "head": "sad-02",
        "name": ":root/ROOT~sad-02",
        "noun_info": {},
        "tree": "there is :polarity/NN XXX-JJ :polarity/IN :arg0/NP ... ''",
        "tree_rules": [
            ":polarity~-",
            ":polarity~-",
            ":arg0~shell"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/NP~nothing -)",
        "graph_rules": {
            "say-01": [
                ":arg0~i",
                ":arg1~nothing"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD :arg1/NP .",
        "tree_rules": [
            ":arg1~nothing",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~he - \n\t :degree/NP~little -)",
        "graph_rules": {
            "discourage-01": [
                ":arg1~he",
                ":degree~little"
            ]
        },
        "head": "discourage-01",
        "name": ":root/ROOT~discourage-01",
        "noun_info": {},
        "tree": ":arg1/NP was :degree/NP XXX-VBN .",
        "tree_rules": [
            ":degree~little",
            ":arg1~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP~effort-01 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~effort-01"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :arg2/VP : '' you know , :arg1/S .",
        "tree_rules": [
            ":arg2~effort-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/PP~star -)",
        "graph_rules": {
            "look-01": [
                ":arg0~i",
                ":arg1~star"
            ]
        },
        "head": "look-01",
        "name": ":root/ROOT~look-01",
        "noun_info": {},
        "tree": ":arg0/NP , :mod/ADVP , shall XXX-VB :arg1/PP .",
        "tree_rules": [
            ":arg1~star",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :domain/VP~well - \n\t :mod/DT~all -)",
        "graph_rules": {
            "star": [
                ":domain~well",
                ":mod~all"
            ]
        },
        "head": "star",
        "name": ":root/ROOT~star",
        "noun_info": {},
        "tree": ":mod/DT the XXX-NNS :domain/VP .",
        "tree_rules": [
            ":mod~all",
            ":domain~well",
            ":domain~well"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~star - \n\t :arg1/NP~water - \n\t :purpose/PP~drink-01 - \n\t :direction/RP~out -)",
        "graph_rules": {
            "pour-01": [
                ":arg0~star",
                ":arg1~water",
                ":purpose~drink-01",
                ":direction~out"
            ]
        },
        "head": "pour-01",
        "name": ":root/ROOT~pour-01",
        "noun_info": {},
        "tree": ":arg0/NP will XXX-VB :direction/RP :arg1/NP",
        "tree_rules": [
            ":purpose~drink-01",
            ":direction~out",
            ":arg1~water",
            ":arg0~star"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/NP~nothing -)",
        "graph_rules": {
            "say-01": [
                ":arg0~i",
                ":arg1~nothing"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBD :arg1/NP .",
        "tree_rules": [
            ":arg1~nothing",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~that - \n\t :degree/RB~so -)",
        "graph_rules": {
            "amuse-01": [
                ":arg0~that",
                ":degree~so"
            ]
        },
        "head": "amuse-01",
        "name": ":root/ROOT~amuse-01",
        "noun_info": {},
        "tree": "'' :arg0/NP will be :degree/RB XXX-JJ !",
        "tree_rules": [
            ":degree~so",
            ":arg0~that"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/S~have-03 - \n\t :op2/S~have-03 -)",
        "graph_rules": {
            "and": [
                ":op1~have-03",
                ":op2~have-03"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": ":op1/S , XXX-CC :op2/S ... ''",
        "tree_rules": [
            ":op1~have-03",
            ":op2~have-03"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~say-01 -)",
        "graph_rules": {
            "and": [
                ":op2~say-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :degree/ADVP :op2/VP ...",
        "tree_rules": [
            ":op2~say-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :location/RB~here -)",
        "graph_rules": {
            "it": [
                ":location~here"
            ]
        },
        "head": "it",
        "name": ":root/ROOT~it",
        "noun_info": {},
        "tree": "'' :location/RB XXX-PRP is .",
        "tree_rules": [
            ":location~here"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/E~you - \n\t :arg1/S~go-on-15 -)",
        "graph_rules": {
            "allow-01": [
                ":arg0~you",
                ":arg1~go-on-15"
            ]
        },
        "head": "allow-01",
        "name": ":root/ROOT~allow-01",
        "noun_info": {},
        "tree": "XXX-VB :arg1/S . ''",
        "tree_rules": [
            ":arg1~go-on-15",
            ":arg0~you"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~sit-down-02 -)",
        "graph_rules": {
            "and": [
                ":op2~sit-down-02"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :arg1/NP :op2/VP .",
        "tree_rules": [
            ":op2~sit-down-02"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :arg1/S~flower - \n\t :time/ADVP~then - \n\t :mod/ADVP~again -)",
        "graph_rules": {
            "say-01": [
                ":arg0~he",
                ":arg1~flower",
                ":time~then",
                ":mod~again"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": ":time/ADVP :arg0/NP XXX-VBD , :mod/ADVP : '' :arg1/S ...",
        "tree_rules": [
            ":mod~again",
            ":time~then",
            ":arg0~he",
            ":arg1~flower"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg2/PP~she -)",
        "graph_rules": {
            "responsible-03": [
                ":arg0~i",
                ":arg2~she"
            ]
        },
        "head": "responsible-03",
        "name": ":root/ROOT~responsible-03",
        "noun_info": {},
        "tree": ":arg0/NP am XXX-JJ :arg2/PP .",
        "tree_rules": [
            ":arg2~she",
            ":arg0~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~weak-02 -)",
        "graph_rules": {
            "and": [
                ":op2~weak-02"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :arg1/NP :op2/VP !",
        "tree_rules": [
            ":op2~weak-02"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :degree/RB~so - \n\t :domain/.~she -)",
        "graph_rules": {
            "naive": [
                ":degree~so",
                ":domain~she"
            ]
        },
        "head": "naive",
        "name": ":root/ROOT~naive",
        "noun_info": {},
        "tree": ":domain/NP is :degree/RB XXX-JJ :domain/.",
        "tree_rules": [
            ":degree~so",
            ":domain~she",
            ":domain~she"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~she - \n\t :arg1/NP~thorn - \n\t :purpose/PP~protect-01 -)",
        "graph_rules": {
            "have-03": [
                ":arg0~she",
                ":arg1~thorn",
                ":purpose~protect-01"
            ]
        },
        "head": "have-03",
        "name": ":root/ROOT~have-03",
        "noun_info": {},
        "tree": ":arg0/NP XXX-VBZ :arg1/NP",
        "tree_rules": [
            ":purpose~protect-01",
            ":arg1~thorn",
            ":arg0~she"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~i - \n\t :arg1-of/SBAR~cause-01 -)",
        "graph_rules": {
            "sit-down-02": [
                ":arg1~i",
                ":arg1-of~cause-01"
            ]
        },
        "head": "sit-down-02",
        "name": ":root/ROOT~sit-down-02",
        "noun_info": {},
        "tree": ":arg1/NP :degree/ADVP XXX-VBD :arg1-of/PRT , :arg1-of/SBAR .",
        "tree_rules": [
            ":arg1-of~cause-01",
            ":arg1-of~cause-01",
            ":arg1~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/VP~all - \n\t :time/ADVP~now -)",
        "graph_rules": {
            "that": [
                ":mod~all",
                ":time~now"
            ]
        },
        "head": "that",
        "name": ":root/ROOT~that",
        "noun_info": {},
        "tree": "'' there :time/ADVP - - XXX-WDT :mod/VP ... ''",
        "tree_rules": [
            ":time~now",
            ":mod~all"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :snt1/VP~hesitate-01 - \n\t :snt2/S~get-05 -)",
        "graph_rules": {
            "multi-sentence": [
                ":snt1~hesitate-01",
                ":snt2~get-05"
            ]
        },
        "head": "multi-sentence",
        "name": ":root/ROOT~multi-sentence",
        "noun_info": {},
        "tree": ":snt1/NP XXX-RB :snt1/VP ; :snt2/S .",
        "tree_rules": [
            ":snt1~hesitate-01",
            ":snt1~hesitate-01",
            ":snt2~get-05"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~he -)",
        "graph_rules": {
            "step-01": [
                ":arg1~he"
            ]
        },
        "head": "step-01",
        "name": ":root/ROOT~step-01",
        "noun_info": {},
        "tree": ":arg1/NP took one XXX-NN .",
        "tree_rules": [
            ":arg1~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/VP~move-01 - \n\t :polarity/RB~- -)",
        "graph_rules": {
            "possible-01": [
                ":arg1~move-01",
                ":polarity~-"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT~possible-01",
        "noun_info": {},
        "tree": ":arg1/NP XXX-MD :polarity/RB :arg1/VP .",
        "tree_rules": [
            ":polarity~-",
            ":arg1~move-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~nothing - \n\t :arg2/NP~flash -)",
        "graph_rules": {
            "contrast-01": [
                ":arg1~nothing",
                ":arg2~flash"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "there was :arg1/NP XXX-CC :arg2/NP :arg2/PP .",
        "tree_rules": [
            ":arg2~flash",
            ":arg1~nothing"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~he - \n\t :duration/PP~instant - \n\t :manner/ADJP~move-01 -)",
        "graph_rules": {
            "remain-01": [
                ":arg1~he",
                ":duration~instant",
                ":manner~move-01"
            ]
        },
        "head": "remain-01",
        "name": ":root/ROOT~remain-01",
        "noun_info": {},
        "tree": ":arg1/NP XXX-VBD :manner/ADJP :duration/PP .",
        "tree_rules": [
            ":manner~move-01",
            ":duration~instant",
            ":arg1~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~he - \n\t :polarity/RB~- -)",
        "graph_rules": {
            "cry-out-03": [
                ":arg0~he",
                ":polarity~-"
            ]
        },
        "head": "cry-out-03",
        "name": ":root/ROOT~cry-out-03",
        "noun_info": {},
        "tree": ":arg0/NP :polarity/VBD :polarity/RB XXX-VB out .",
        "tree_rules": [
            ":polarity~-",
            ":polarity~-",
            ":arg0~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~he - \n\t :manner/ADVP~gentle -)",
        "graph_rules": {
            "fall-01": [
                ":arg1~he",
                ":manner~gentle"
            ]
        },
        "head": "fall-01",
        "name": ":root/ROOT~fall-01",
        "noun_info": {},
        "tree": ":arg1/NP XXX-VBD :degree/IN :manner/ADVP :compared-to/SBAR .",
        "tree_rules": [
            ":manner~gentle",
            ":arg1~he"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/RB~- - \n\t :mod/DT~any - \n\t :arg1-of/IN~cause-01 -)",
        "graph_rules": {
            "sound-02": [
                ":polarity~-",
                ":mod~any",
                ":arg1-of~cause-01"
            ]
        },
        "head": "sound-02",
        "name": ":root/ROOT~sound-02",
        "noun_info": {},
        "tree": "there was :polarity/RB :mod/RB :mod/DT XXX-NN , :arg1-of/IN :arg0/FRAG .",
        "tree_rules": [
            ":mod~any",
            ":arg1-of~cause-01",
            ":polarity~-"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/NP~27 -)",
        "graph_rules": {
            "chapter": [
                ":mod~27"
            ]
        },
        "head": "chapter",
        "name": ":root/ROOT~chapter",
        "noun_info": {},
        "tree": "XXX-NN :mod/NP .",
        "tree_rules": [
            ":mod~27"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~go-on-15 - \n\t :time/ADVP~now -)",
        "graph_rules": {
            "and": [
                ":op2~go-on-15",
                ":time~now"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :time/ADVP :arg1/NP :op2/VP ...",
        "tree_rules": [
            ":time~now",
            ":op2~go-on-15"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/S~see-01 - \n\t :arg1/NP~companion - \n\t :mod/RB~well -)",
        "graph_rules": {
            "content-01": [
                ":arg0~see-01",
                ":arg1~companion",
                ":mod~well"
            ]
        },
        "head": "content-01",
        "name": ":root/ROOT~content-01",
        "noun_info": {},
        "tree": ":arg1/NP were :mod/RB XXX-JJ :arg0/S .",
        "tree_rules": [
            ":mod~well",
            ":arg0~see-01",
            ":arg1~companion"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/S~sad-02 - \n\t :arg2/S~tell-01 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg1~sad-02",
                ":arg2~tell-01"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": ":arg1/S , XXX-CC :arg2/S : '' :arg1/S . ''",
        "tree_rules": [
            ":arg1~sad-02",
            ":arg2~tell-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~sorrow-01 - \n\t :time/ADVP~now - \n\t :degree/NP~little -)",
        "graph_rules": {
            "comfort-01": [
                ":arg1~sorrow-01",
                ":time~now",
                ":degree~little"
            ]
        },
        "head": "comfort-01",
        "name": ":root/ROOT~comfort-01",
        "noun_info": {},
        "tree": ":time/ADVP :arg1/NP is XXX-VBN :degree/NP .",
        "tree_rules": [
            ":degree~little",
            ":time~now",
            ":arg1~sorrow-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/ADVP~entire -)",
        "graph_rules": {
            "say-01": [
                ":arg1~entire"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": "that is to XXX-VB - - :polarity/NP .",
        "tree_rules": [
            ":arg1~entire"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP~know-01 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~know-01"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :arg2/VP .",
        "tree_rules": [
            ":arg2~know-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/NP~body - \n\t :op2/NP~love-01 -)",
        "graph_rules": {
            "and": [
                ":op1~body",
                ":op2~love-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": ":polarity/S ... XXX-CC :time/ADVP :time/NP-TMP :arg0/NP .",
        "tree_rules": [
            ":op1~body",
            ":op2~love-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~it - \n\t :arg2/NP~bell -)",
        "graph_rules": {
            "resemble-01": [
                ":arg1~it",
                ":arg2~bell"
            ]
        },
        "head": "resemble-01",
        "name": ":root/ROOT~resemble-01",
        "noun_info": {},
        "tree": ":arg1/NP is XXX-IN :quant/NP :arg2/NP ...",
        "tree_rules": [
            ":arg2~bell",
            ":arg1~it"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/NP~thing -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~thing"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "XXX-CC there is :arg2/NP ... :time/SBAR .",
        "tree_rules": [
            ":arg2~thing"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/E~- - \n\t :time/ADVP~ever - \n\t :arg1/S~fasten-01 -)",
        "graph_rules": {
            "possible-01": [
                ":polarity~-",
                ":time~ever",
                ":arg1~fasten-01"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT~possible-01",
        "noun_info": {},
        "tree": ":arg0/NP will :time/ADVP have been XXX-JJ :arg1/S .",
        "tree_rules": [
            ":arg1~fasten-01",
            ":time~ever",
            ":polarity~-"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/VP~wonder-01 - \n\t :time/ADVP~now -)",
        "graph_rules": {
            "keep-02": [
                ":arg1~wonder-01",
                ":time~now"
            ]
        },
        "head": "keep-02",
        "name": ":root/ROOT~keep-02",
        "noun_info": {},
        "tree": ":time/ADVP :arg0/NP XXX-VB :arg1/VP : :arg1/S :mod/.",
        "tree_rules": [
            ":arg1~wonder-01",
            ":time~now"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/VP~eat-01 -)",
        "graph_rules": {
            "possible-01": [
                ":arg1~eat-01"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT~possible-01",
        "noun_info": {},
        "tree": "XXX-RB the :arg0/NN :arg1/VP ...",
        "tree_rules": [
            ":arg1~eat-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/.~have-polarity-91 - \n\t :arg2/E~coref - \n\t :time/PP~one -)",
        "graph_rules": {
            "say-01": [
                ":arg0~i",
                ":arg1~have-polarity-91",
                ":arg2~coref",
                ":time~one"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT~say-01",
        "noun_info": {},
        "tree": ":time/PP :arg0/NP XXX-VBP to myself : :arg1-of/VP :arg2/PP :arg1/.",
        "tree_rules": [
            ":time~one",
            ":arg0~i",
            ":arg1~have-polarity-91",
            ":arg2~coref"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/S~shut-01 - \n\t :op2/S~watch-01 -)",
        "graph_rules": {
            "and": [
                ":op1~shut-01",
                ":op2~watch-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": ":op1/S , XXX-CC :op2/S ... ''",
        "tree_rules": [
            ":op1~shut-01",
            ":op2~watch-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP~i - \n\t :time/ADVP~then -)",
        "graph_rules": {
            "happy-01": [
                ":arg1~i",
                ":time~then"
            ]
        },
        "head": "happy-01",
        "name": ":root/ROOT~happy-01",
        "noun_info": {},
        "tree": ":time/ADVP :arg1/NP am XXX-JJ .",
        "tree_rules": [
            ":time~then",
            ":arg1~i"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~sweet-05 -)",
        "graph_rules": {
            "and": [
                ":op2~sweet-05"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC there :op2/VP .",
        "tree_rules": [
            ":op2~sweet-05"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/S~say-01 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2~say-01"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": "XXX-CC :arg2/S : '' at :mod/S , :arg1/CC :mod/S !",
        "tree_rules": [
            ":arg2~say-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/S~forget-01 - \n\t :op2/S~escape-01 - \n\t :time/IN~date-entity -)",
        "graph_rules": {
            "or": [
                ":op1~forget-01",
                ":op2~escape-01",
                ":time~date-entity"
            ]
        },
        "head": "or",
        "name": ":root/ROOT~or",
        "noun_info": {},
        "tree": ":op1/S , XXX-CC :op2/S ... ''",
        "tree_rules": [
            ":time~date-entity",
            ":time~date-entity",
            ":op1~forget-01",
            ":op2~escape-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~change-01 -)",
        "graph_rules": {
            "and": [
                ":op2~change-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :time/ADVP :arg1/NP :op2/VP ...",
        "tree_rules": [
            ":op2~change-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/JJ~great - \n\t :time/ADVP~then - \n\t :location/ADVP~here -)",
        "graph_rules": {
            "mystery": [
                ":mod~great",
                ":time~then",
                ":location~here"
            ]
        },
        "head": "mystery",
        "name": ":root/ROOT~mystery",
        "noun_info": {},
        "tree": ":location/ADVP , :time/ADVP , is a :mod/JJ XXX-NN .",
        "tree_rules": [
            ":mod~great",
            ":location~here",
            ":time~then"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/E~you - \n\t :arg1/NP~sky - \n\t :direction/PRT~up -)",
        "graph_rules": {
            "look-01": [
                ":arg0~you",
                ":arg1~sky",
                ":direction~up"
            ]
        },
        "head": "look-01",
        "name": ":root/ROOT~look-01",
        "noun_info": {},
        "tree": "XXX-VB :direction/PRT :direction/IN :arg1/NP .",
        "tree_rules": [
            ":direction~up",
            ":arg1~sky",
            ":direction~up",
            ":arg0~you"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~you - \n\t :arg1/CC~or - \n\t :arg2/E~coref -)",
        "graph_rules": {
            "ask-01": [
                ":arg0~you",
                ":arg1~or",
                ":arg2~coref"
            ]
        },
        "head": "ask-01",
        "name": ":root/ROOT~ask-01",
        "noun_info": {},
        "tree": "XXX-VB :arg0/NP ?",
        "tree_rules": [
            ":arg1~or",
            ":arg0~you",
            ":arg2~coref"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/S~sheep - \n\t :arg1/NP~flower -)",
        "graph_rules": {
            "eat-01": [
                ":arg0~sheep",
                ":arg1~flower"
            ]
        },
        "head": "eat-01",
        "name": ":root/ROOT~eat-01",
        "noun_info": {},
        "tree": ":arg0/S XXX-VBD :arg1/NP ?",
        "tree_rules": [
            ":arg1~flower",
            ":arg0~sheep"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~see-01 -)",
        "graph_rules": {
            "and": [
                ":op2~see-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :arg0/NP :op2/VP ...",
        "tree_rules": [
            ":op2~see-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/NP~understand-01 -)",
        "graph_rules": {
            "and": [
                ":op2~understand-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC :op2/NP",
        "tree_rules": [
            ":op2~understand-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~i - \n\t :arg1/NP~landscape -)",
        "graph_rules": {
            "opine-01": [
                ":arg0~i",
                ":arg1~landscape"
            ]
        },
        "head": "opine-01",
        "name": ":root/ROOT~opine-01",
        "noun_info": {},
        "tree": ":domain/NP is , XXX-TO :arg0/NP , :arg1/NP .",
        "tree_rules": [
            ":arg0~i",
            ":arg1~landscape"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/S~same-01 - \n\t :arg2/S~draw-01 -)",
        "graph_rules": {
            "contrast-01": [
                ":arg1~same-01",
                ":arg2~draw-01"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT~contrast-01",
        "noun_info": {},
        "tree": ":arg1/S , XXX-CC :arg2/S .",
        "tree_rules": [
            ":arg1~same-01",
            ":arg2~draw-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VP~appear-01 - \n\t :op2/VP~disappear-01 - \n\t :location/ADVP~here -)",
        "graph_rules": {
            "and": [
                ":op1~appear-01",
                ":op2~disappear-01",
                ":location~here"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "it is :location/ADVP that :arg1/NP :op1/VP , XXX-CC :op2/VP .",
        "tree_rules": [
            ":op1~appear-01",
            ":op2~disappear-01",
            ":location~here"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP~you - \n\t :arg1/PP~it - \n\t :manner/ADVP~careful - \n\t :purpose/S~recognize-02 -)",
        "graph_rules": {
            "look-01": [
                ":arg0~you",
                ":arg1~it",
                ":manner~careful",
                ":purpose~recognize-02"
            ]
        },
        "head": "look-01",
        "name": ":root/ROOT~look-01",
        "noun_info": {},
        "tree": "XXX-VB :arg1/PP :manner/ADVP that :purpose/S :arg0/NP :condition/VP .",
        "tree_rules": [
            ":arg0~you",
            ":manner~careful",
            ":purpose~recognize-02",
            ":arg1~it"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP~hurry-01 -)",
        "graph_rules": {
            "and": [
                ":op2~hurry-01"
            ]
        },
        "head": "and",
        "name": ":root/ROOT~and",
        "noun_info": {},
        "tree": "XXX-CC , :condition/SBAR :op2/VP .",
        "tree_rules": [
            ":op2~hurry-01"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/E~you - \n\t :duration/PP~time - \n\t :location/IN~under -)",
        "graph_rules": {
            "wait-01": [
                ":arg1~you",
                ":duration~time",
                ":location~under"
            ]
        },
        "head": "wait-01",
        "name": ":root/ROOT~wait-01",
        "noun_info": {},
        "tree": "XXX-VB :duration/PP , :manner/ADVP :location/IN :op1/NP .",
        "tree_rules": [
            ":location~under",
            ":duration~time",
            ":arg1~you"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polite/VB~+ - \n\t :arg0/E~you - \n\t :arg1/NP~i - \n\t :condition/SBAR~this -)",
        "graph_rules": {
            "comfort-01": [
                ":polite~+",
                ":arg0~you",
                ":arg1~i",
                ":condition~this"
            ]
        },
        "head": "comfort-01",
        "name": ":root/ROOT~comfort-01",
        "noun_info": {},
        "tree": ":condition/SBAR , :polite/VB XXX-NN :arg1/NP .",
        "tree_rules": [
            ":arg1~i",
            ":polite~+",
            ":condition~this",
            ":arg0~you"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/E~you - \n\t :arg1/NP~word-01 - \n\t :arg2/NP~i -)",
        "graph_rules": {
            "send-01": [
                ":arg0~you",
                ":arg1~word-01",
                ":arg2~i"
            ]
        },
        "head": "send-01",
        "name": ":root/ROOT~send-01",
        "noun_info": {},
        "tree": "XXX-VB :arg2/NP :arg1/NP :arg1/SBAR .",
        "tree_rules": [
            ":arg2~i",
            ":arg1~word-01",
            ":arg0~you"
        ],
        "verb_info": {}
    }
]