[
    {
        "graph": "(XXX \n\t :mod/NP -)",
        "graph_rules": {
            "chapter": [
                ":mod/NP"
            ]
        },
        "head": "chapter",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (NP (NP (NN xxx)) (:mod/NP) (. -)))",
        "tree_rules": [
            ":mod/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/PP - \n\t :ARG1/NP - \n\t :ARG2/PP - \n\t :time/PP - \n\t :mod/ADVP - \n\t :time -)",
        "graph_rules": {
            "reveal-01": [
                ":ARG0/PP",
                ":ARG1/NP",
                ":ARG2/PP",
                ":time/PP",
                ":mod/ADVP",
                ":time"
            ]
        },
        "head": "reveal-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:time/PP) (:ARG1/NP) (VP (VB -) (VP (VB xxx) (:ARG2/PP))) (. -)))",
        "tree_rules": [
            ":ARG0/PP",
            ":mod/ADVP",
            ":time/SBAR",
            ":ARG2/PP",
            ":time/PP",
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "passive"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/PRP$ - \n\t :ARG1/SBAR - \n\t :manner/E - \n\t :conj-as-if/PP - \n\t :ARG2-of/S -)",
        "graph_rules": {
            "demand-01": [
                ":ARG0/PRP$",
                ":ARG1/SBAR",
                ":manner/E",
                ":conj-as-if/PP",
                ":ARG2-of/S"
            ]
        },
        "head": "demand-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (S (ADVP (RB -)) (, -) (:conj-as-if/PP) (, -) (:poss/NP) (VP (VB xxx))) (: -) ('' -) (:condition/S) (. -) ('' -)))",
        "tree_rules": [
            ":ARG2-of/S",
            ":ARG0/PRP$",
            ":conj-as-if/PP",
            ":ARG1/SBAR",
            ":manner/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "sheep",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S (VP ('' -) (NP (DT -) (NN xxx) (, -) ('' -)))))",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/VP -)",
        "graph_rules": {
            "answer-01": [
                ":ARG0/NP",
                ":ARG1/VP"
            ]
        },
        "head": "answer-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (SINV (S (:ARG0/NP) (VP (VB xxx))) (, -) ('' -) (:ARG1/VP) (:ARG1/NP) (. -) ('' -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":ARG1/VP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :mod/ADVP - \n\t :ARG0-of/VP -)",
        "graph_rules": {
            "flower": [
                ":mod/ADVP",
                ":ARG0-of/VP"
            ]
        },
        "head": "flower",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:mod/ADVP) (NNS xxx) (NP (WDT -)) (:ARG0-of/VP) (. -) ('' -)))",
        "tree_rules": [
            ":mod/ADVP",
            ":ARG0-of/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/ADVP - \n\t :ARG0-of/VP -)",
        "graph_rules": {
            "flower": [
                ":mod/ADVP",
                ":ARG0-of/VP"
            ]
        },
        "head": "flower",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "plural"
        },
        "tree": "(ROOT (S ('' -) (ADVP (UH -)) (, -) (X (:mod/ADVP) (NP (NN xxx))) (NP (WDT -)) (:ARG0-of/VP) (. -) ('' -)))",
        "tree_rules": [
            ":mod/ADVP",
            ":ARG0-of/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :polarity/RB -)",
        "graph_rules": {
            "know-01": [
                ":ARG0/NP",
                ":polarity/RB"
            ]
        },
        "head": "know-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB -) (:polarity/RB) (VP (VB xxx))) (. -)))",
        "tree_rules": [
            ":polarity/RB",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S - \n\t :time/PP -)",
        "graph_rules": {
            "try-01": [
                ":ARG0/NP",
                ":ARG1/S",
                ":time/PP"
            ]
        },
        "head": "try-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:time/PP) (:ARG0/NP) (VP (VB -) (:ARG1-of/ADJP) (S (VP (VB xxx) (:ARG1/S)))) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":time/PP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "past continuous",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/VP -)",
        "graph_rules": {
            "and": [
                ":op1/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (S (CC xxx) (:ARG0/NP) (:op1/VP)) (: -) (:ARG1-of/S) (. -)))",
        "tree_rules": [
            ":op1/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1/NP - \n\t :ARG2/WHNP -)",
        "graph_rules": {
            "use-01": [
                ":ARG1/NP",
                ":ARG2/WHNP"
            ]
        },
        "head": "use-01",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S ('' -) (:ARG1/NP) (VP (: -) (: -) (SBAR (:ARG2/WHNP) (S (NP (NN xxx)) (VP (VBP -) (NP (PRP -)))))) (. -) ('' -)))",
        "tree_rules": [
            ":ARG2/WHNP",
            ":ARG1/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/E - \n\t :ARG0/NP - \n\t :ARG1/VP - \n\t :time/RB -)",
        "graph_rules": {
            "let-01": [
                ":polarity/E",
                ":ARG0/NP",
                ":ARG1/VP",
                ":time/RB"
            ]
        },
        "head": "let-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (ADVP (RB -)) (VP (VB xxx) (:ARG1/VP)) (. -)))",
        "tree_rules": [
            ":time/RB",
            ":ARG1/VP",
            ":ARG0/NP",
            ":polarity/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/PP - \n\t :ARG1/PP -)",
        "graph_rules": {
            "upset-01": [
                ":ARG0/PP",
                ":ARG1/PP"
            ]
        },
        "head": "upset-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/PP) (, -) (NP (PRP -)) (VP (VB -) (VP (VB xxx) (:ARG0/PP))) (. -)))",
        "tree_rules": [
            ":ARG0/PP",
            ":ARG1/PP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "passive"
        }
    },
    {
        "graph": "(XXX \n\t :op1/S -)",
        "graph_rules": {
            "and": [
                ":op1/S"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:op1/S) (: -) ('' -) (:domain/S) (. -)))",
        "tree_rules": [
            ":op1/S"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :purpose/PP - \n\t :mod/ADVP -)",
        "graph_rules": {
            "have-03": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":purpose/PP",
                ":mod/ADVP"
            ]
        },
        "head": "have-03",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:ARG1/NP) (:mod/ADVP) (:purpose/PP)) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":mod/ADVP",
            ":purpose/PP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "oh",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (INTJ ('' -) (UH xxx) (. -) ('' -)))",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1-of/E -)",
        "graph_rules": {
            "moment": [
                ":ARG1-of/E"
            ]
        },
        "head": "moment",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S (NP (EX -)) (VP (VB -) (NP (NP (DT -) (NN xxx)) (:ARG1-of/PP))) (. -)))",
        "tree_rules": [
            ":ARG1-of/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S - \n\t :ARG2/PP - \n\t :time/RB - \n\t :manner/PP - \n\t :direction/ADVP -)",
        "graph_rules": {
            "flash-01": [
                ":ARG0/NP",
                ":ARG1/S",
                ":ARG2/PP",
                ":time/RB",
                ":manner/PP",
                ":direction/ADVP"
            ]
        },
        "head": "flash-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:time/RB) (S (:ARG0/NP) (VP (VB xxx) (:direction/ADVP) (:ARG2/PP) (, -) (:mod/PP))) (: -) ('' -) (:ARG1/S) (. -)))",
        "tree_rules": [
            ":manner/PP",
            ":direction/ADVP",
            ":ARG2/PP",
            ":ARG0/NP",
            ":time/RB",
            ":ARG1/S"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1-of/JJ - \n\t :domain/NP -)",
        "graph_rules": {
            "creature": [
                ":ARG1-of/JJ",
                ":domain/NP"
            ]
        },
        "head": "creature",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "plural"
        },
        "tree": "(ROOT (S (:domain/NP) (VP (VB -) (NP (:ARG1-of/JJ) (NN xxx))) (. -)))",
        "tree_rules": [
            ":ARG1-of/JJ",
            ":domain/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :ARG2-of/E -)",
        "graph_rules": {
            "reassure-01": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":ARG2-of/E"
            ]
        },
        "head": "reassure-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:ARG1/NP) (:compared-to/PP)) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG1/NP",
            ":ARG0/NP",
            ":ARG2-of/E"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/SBAR -)",
        "graph_rules": {
            "believe-01": [
                ":ARG0/NP",
                ":ARG1/SBAR"
            ]
        },
        "head": "believe-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (ADVP (IN -)) (:domain/NP) ('' -))))",
        "tree_rules": [
            ":ARG1/SBAR",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :polarity/RB -)",
        "graph_rules": {
            "answer-01": [
                ":ARG0/NP",
                ":polarity/RB"
            ]
        },
        "head": "answer-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB -) (:polarity/RB) (VP (VB xxx))) (. -)))",
        "tree_rules": [
            ":polarity/RB",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S - \n\t :ARG2/E - \n\t :time/PP -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/S",
                ":ARG2/E",
                ":time/PP"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (S (:time/PP) (:ARG0/NP) (VP (VB -) (VP (VB xxx) (:ARG0/PP)))) (: -) ('' -) (:ARG1/S) (. -) ('' -)))",
        "tree_rules": [
            ":time/PP",
            ":ARG0/NP",
            ":ARG1/S",
            ":ARG2/E"
        ],
        "verb_info": {
            "tense": "past continuous",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :mod/ADVP -)",
        "graph_rules": {
            "disturb-01": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":mod/ADVP"
            ]
        },
        "head": "disturb-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:mod/ADVP) (:ARG0/NP) (VP (VB xxx) (:ARG1/NP)) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":mod/ADVP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/SBAR -)",
        "graph_rules": {
            "and": [
                ":op1/SBAR"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "list",
            "inPP": false,
            "number": "plural"
        },
        "tree": "(ROOT (NP ('' -) (CC xxx) (:ARG0/NP) ('' -)))",
        "tree_rules": [
            ":op1/SBAR"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/INTJ -)",
        "graph_rules": {
            "no": [
                ":mod/INTJ"
            ]
        },
        "head": "no",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": "(ROOT (FRAG (:mod/INTJ) (, -) (NP (DT xxx)) (. -) ('' -)))",
        "tree_rules": [
            ":mod/INTJ"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP -)",
        "graph_rules": {
            "cry-01": [
                ":ARG0/NP"
            ]
        },
        "head": "cry-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx)) (. -)))",
        "tree_rules": [
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :quant/E -)",
        "graph_rules": {
            "no": [
                ":quant/E"
            ]
        },
        "head": "no",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (VP ('' -) (FRAG (INTJ (UH xxx)))) (, -) (NP (DT -) (DT -)) (. -)))",
        "tree_rules": [
            ":quant/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :ARG0/NP - \n\t :ARG1/NP -)",
        "graph_rules": {
            "believe-01": [
                ":polarity/RB",
                ":ARG0/NP",
                ":ARG1/NP"
            ]
        },
        "head": "believe-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB -) (:polarity/RB) (VP (VB xxx) (:ARG1/NP))) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":polarity/RB",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :ARG2/PP -)",
        "graph_rules": {
            "answer-01": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":ARG2/PP"
            ]
        },
        "head": "answer-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:ARG1/NP) (:ARG2/PP)) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG2/PP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/: - \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "see-01": [
                ":polarity/:",
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "see-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (S (VP (VB -) (RB -) (NP (:ARG0/NP) (SBAR (S (VP (VB xxx))))))) (:polarity/:) (: -) (:ARG1/S) (. -) ('' -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":polarity/:",
            ":ARG1/S"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP -)",
        "graph_rules": {
            "stare-01": [
                ":ARG0/NP",
                ":ARG1/NP"
            ]
        },
        "head": "stare-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:mod/PP)) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0-of/E -)",
        "graph_rules": {
            "matter": [
                ":ARG0-of/E"
            ]
        },
        "head": "matter",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "plural"
        },
        "tree": "(ROOT (FRAG (NP (NP ('' -) (NN xxx)) (:ARG1/PP)) (. -) ('' -)))",
        "tree_rules": [
            ":ARG0-of/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/PP - \n\t :location/NP -)",
        "graph_rules": {
            "look-01": [
                ":ARG0/NP",
                ":ARG1/PP",
                ":location/NP"
            ]
        },
        "head": "look-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:ARG1/PP) (:location/NP) (, -) (:ARG0/PP) (, -) (:ARG0-of/S)) (: -)))",
        "tree_rules": [
            ":ARG1/PP",
            ":location/NP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1-of/E -)",
        "graph_rules": {
            "talk-01": [
                ":ARG0/NP",
                ":ARG1-of/E"
            ]
        },
        "head": "talk-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG0/NP) (VP (VB xxx) (:mod/ADVP) (PP (IN -) (NP (NP (DT -) (JJ -)) (: -) (NP (NNS -))))) (. -) ('' -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":ARG1-of/E"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/VP"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG0/NP) (:ARG2/VP) (: -)))",
        "tree_rules": [
            ":ARG2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG2/NP -)",
        "graph_rules": {
            "confuse-01": [
                ":ARG0/NP",
                ":ARG2/NP"
            ]
        },
        "head": "confuse-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:ARG2/NP)) (: -) ('' -)))",
        "tree_rules": [
            ":ARG2/NP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :domain/NP - \n\t :degree/RB - \n\t :ARG1-of/E -)",
        "graph_rules": {
            "angry": [
                ":domain/NP",
                ":degree/RB",
                ":ARG1-of/E"
            ]
        },
        "head": "angry",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:domain/NP) (VP (VB -) (ADVP (RB -)) (ADJP (:degree/RB) (JJ xxx))) (. -)))",
        "tree_rules": [
            ":degree/RB",
            ":domain/NP",
            ":ARG1-of/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :location/PP -)",
        "graph_rules": {
            "toss-01": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":location/PP"
            ]
        },
        "head": "toss-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:ARG1/NP) (:location/PP)) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":location/PP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP -)",
        "graph_rules": {
            "know-02": [
                ":ARG0/NP",
                ":ARG1/NP"
            ]
        },
        "head": "know-02",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG0/NP) (VP (VB xxx) (:ARG1/NP)) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/E - \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :time/E -)",
        "graph_rules": {
            "smell-01": [
                ":polarity/E",
                ":ARG0/NP",
                ":ARG1/NP",
                ":time/E"
            ]
        },
        "head": "smell-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB -) (ADVP (RB -)) (VP (VB xxx) (:ARG1/NP))) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG0/NP",
            ":polarity/E",
            ":time/E"
        ],
        "verb_info": {
            "tense": "present perfect",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/E - \n\t :ARG0/NP - \n\t :ARG1/PP - \n\t :time/E -)",
        "graph_rules": {
            "look-01": [
                ":polarity/E",
                ":ARG0/NP",
                ":ARG1/PP",
                ":time/E"
            ]
        },
        "head": "look-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB -) (ADVP (RB -)) (VP (VB xxx) (:ARG1/PP))) (. -)))",
        "tree_rules": [
            ":ARG1/PP",
            ":ARG0/NP",
            ":polarity/E",
            ":time/E"
        ],
        "verb_info": {
            "tense": "present perfect",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/E - \n\t :ARG0/NP - \n\t :ARG1/E - \n\t :time/E -)",
        "graph_rules": {
            "love-01": [
                ":polarity/E",
                ":ARG0/NP",
                ":ARG1/E",
                ":time/E"
            ]
        },
        "head": "love-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB -) (ADVP (RB -)) (VP (VB xxx) (NP (DT -) (CD -)))) (. -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":polarity/E",
            ":ARG1/E",
            ":time/E"
        ],
        "verb_info": {
            "tense": "present perfect",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/E - \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :time/E - \n\t :time - \n\t :ARG2-of/E -)",
        "graph_rules": {
            "do-02": [
                ":polarity/E",
                ":ARG0/NP",
                ":ARG1/NP",
                ":time/E",
                ":time",
                ":ARG2-of/E"
            ]
        },
        "head": "do-02",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VP (VB -) (ADVP (RB -)) (VP (VB xxx) (:ARG1/NP))) (CC -) (:ARG1/VP)) (. -)))",
        "tree_rules": [
            ":time/PP",
            ":ARG1/NP",
            ":ARG0/NP",
            ":time/E",
            ":polarity/E",
            ":ARG2-of/E"
        ],
        "verb_info": {
            "tense": "present perfect",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG2/E -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/E"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:op1/S) (:polarity/:) (: -) (NP (PRP -)) (:op2/VP) (. -) ('' -)))",
        "tree_rules": [
            ":ARG2/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "amr-unknown",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": "(ROOT (FRAG (S (VP ('' -) (NP (DT -) (X (WP xxx))))) (. -) ('' -)))",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "mushroom",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (SQ ('' -) (NP (DT -) (NN xxx)) (. -) ('' -)))",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1/NP - \n\t :time/ADVP - \n\t :ARG1-of/E -)",
        "graph_rules": {
            "white-03": [
                ":ARG1/NP",
                ":time/ADVP",
                ":ARG1-of/E"
            ]
        },
        "head": "white-03",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/NP) (VP (VB -) (:time/ADVP) (ADJP (JJ xxx) (PP (IN -) (NP (NN -))))) (. -)))",
        "tree_rules": [
            ":time/ADVP",
            ":ARG1/NP",
            ":ARG1-of/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :duration/E -)",
        "graph_rules": {
            "grow-03": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":duration/E"
            ]
        },
        "head": "grow-03",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG0/NP) (VP (VB -) (VP (VB -) (VP (VB xxx) (:ARG1/NP) (:op1/PP)))) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG0/NP",
            ":duration/E"
        ],
        "verb_info": {
            "tense": "present perfect continuous",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :duration/E - \n\t :ARG1-of/E -)",
        "graph_rules": {
            "eat-01": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":duration/E",
                ":ARG1-of/E"
            ]
        },
        "head": "eat-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:op1/PP) (:ARG0/NP) (VP (VB -) (VP (VB -) (VP (VB xxx) (:ARG1/NP)))) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG0/NP",
            ":duration/E",
            ":ARG1-of/E"
        ],
        "verb_info": {
            "tense": "present perfect continuous",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/E -)",
        "graph_rules": {
            "and": [
                ":op1/E"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (SQ (CC xxx) (VBZ -) (NP (PRP -)) (:polarity/NP) (. -)))",
        "tree_rules": [
            ":op1/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :domain/E -)",
        "graph_rules": {
            "important": [
                ":polarity/RB",
                ":domain/E"
            ]
        },
        "head": "important",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (SQ (VBZ -) (:ARG1/NP) (ADJP (:polarity/RB) (JJ xxx)) (. -)))",
        "tree_rules": [
            ":polarity/RB",
            ":domain/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/: - \n\t :ARG0/NP - \n\t :ARG1/NP -)",
        "graph_rules": {
            "have-03": [
                ":polarity/:",
                ":ARG0/NP",
                ":ARG1/NP"
            ]
        },
        "head": "have-03",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (SQ (VBZ -) (:ARG0/NP) (:ARG1/NP) (. -)))",
        "tree_rules": [
            ":polarity/:",
            ":ARG0/NP",
            ":ARG1/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/FRAG -)",
        "graph_rules": {
            "and": [
                ":op1/FRAG"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (FRAG (CC xxx) (:condition/SBAR) (. -)))",
        "tree_rules": [
            ":op1/FRAG"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/SBAR -)",
        "graph_rules": {
            "think-01": [
                ":ARG0/NP",
                ":ARG1/SBAR"
            ]
        },
        "head": "think-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:ARG1/SBAR)) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1/SBAR",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/NP - \n\t :ARG2/PP - \n\t :ARG3/PP - \n\t :time/SBAR -)",
        "graph_rules": {
            "turn-02": [
                ":ARG1/NP",
                ":ARG2/PP",
                ":ARG3/PP",
                ":time/SBAR"
            ]
        },
        "head": "turn-02",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (S (:ARG1/NP) (VP (VB xxx) (:ARG3/PP) (:time/SBAR))) (: -) ('' -) (:ARG1/S) (. -)))",
        "tree_rules": [
            ":ARG2/PP",
            ":ARG3/PP",
            ":time/SBAR",
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/VP -)",
        "graph_rules": {
            "possible-01": [
                ":ARG1/VP"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (MD xxx) (:ARG1/VP)) (: -)))",
        "tree_rules": [
            ":ARG1/VP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/VP -)",
        "graph_rules": {
            "and": [
                ":op1/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG0/NP) (:op1/VP) (. -) ('' -)))",
        "tree_rules": [
            ":op1/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :ARG1/VP -)",
        "graph_rules": {
            "possible-01": [
                ":polarity/RB",
                ":ARG1/VP"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (MD xxx) (:polarity/RB) (:ARG1/VP)) (. -)))",
        "tree_rules": [
            ":polarity/RB",
            ":ARG1/VP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/PP - \n\t :ARG1/NP -)",
        "graph_rules": {
            "choke-up-04": [
                ":ARG0/PP",
                ":ARG1/NP"
            ]
        },
        "head": "choke-up-04",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/NP) (VP (VB -) (ADJP (VB xxx) (:ARG0/PP))) (. -)))",
        "tree_rules": [
            ":ARG0/PP",
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "passive"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/NP -)",
        "graph_rules": {
            "fall-04": [
                ":ARG1/NP"
            ]
        },
        "head": "fall-04",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/NP) (VP (VB -) (VP (VB xxx))) (. -)))",
        "tree_rules": [
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "past perfect",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/VP -)",
        "graph_rules": {
            "let-01": [
                ":ARG0/NP",
                ":ARG1/VP"
            ]
        },
        "head": "let-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB -) (S (VP (VB xxx) (:ARG1/NP) (:ARG1/VP)))) (. -)))",
        "tree_rules": [
            ":ARG1/VP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/NP - \n\t :op2/NP - \n\t :op3/NP - \n\t :op4/NP - \n\t :time/PP -)",
        "graph_rules": {
            "or": [
                ":op1/NP",
                ":op2/NP",
                ":op3/NP",
                ":op4/NP",
                ":time/PP"
            ]
        },
        "head": "or",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "list",
            "inPP": false,
            "number": "plural"
        },
        "tree": "(ROOT (S (:time/PP) (NP (RB -)) (VP (VB -) (NP (:op1/NP) (, -) (:op2/NP) (, -) (CC xxx) (:op3/NP) (, -) (CC -) (:op4/NP))) (. -)))",
        "tree_rules": [
            ":op1/NP",
            ":op2/NP",
            ":op3/NP",
            ":op4/NP",
            ":time/PP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VP - \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op1/VP",
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (:op1/VP) (, -) (CC xxx) (:op2/VP)) (. -)))",
        "tree_rules": [
            ":op1/VP",
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/E - \n\t :ARG2/PP -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/E",
                ":ARG2/PP"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (S (:ARG0/NP) (VP (VB xxx) (:ARG2/PP))) (: -) ('' -) (:polarity/S) (. -)))",
        "tree_rules": [
            ":ARG2/PP",
            ":ARG0/NP",
            ":ARG1/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/E - \n\t :ARG2/NP -)",
        "graph_rules": {
            "draw-01": [
                ":ARG0/NP",
                ":ARG1/E",
                ":ARG2/NP"
            ]
        },
        "head": "draw-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (MD -) (VP (VB xxx) (S (:ARG2/NP) (:ARG2-of/NP)))) (. -)))",
        "tree_rules": [
            ":ARG2/NP",
            ":ARG0/NP",
            ":ARG1/E"
        ],
        "verb_info": {
            "tense": "simple future",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :ARG2/NP -)",
        "graph_rules": {
            "draw-01": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":ARG2/NP"
            ]
        },
        "head": "draw-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (MD -) (VP (VB xxx) (S (:ARG2/NP) (:ARG1/NP)))) (. -)))",
        "tree_rules": [
            ":ARG2/NP",
            ":ARG1/NP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple future",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :ARG0/NP - \n\t :ARG1/E -)",
        "graph_rules": {
            "know-01": [
                ":polarity/RB",
                ":ARG0/NP",
                ":ARG1/E"
            ]
        },
        "head": "know-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB -) (:polarity/RB) (VP (VB xxx) (:ARG1-of/SBAR))) (. -)))",
        "tree_rules": [
            ":polarity/RB",
            ":ARG0/NP",
            ":ARG1/E"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/CC -)",
        "graph_rules": {
            "feel-01": [
                ":ARG0/NP",
                ":ARG1/CC"
            ]
        },
        "head": "feel-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:op2/NP)) (. -)))",
        "tree_rules": [
            ":ARG1/CC",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :ARG0/NP - \n\t :ARG1/CC -)",
        "graph_rules": {
            "know-01": [
                ":polarity/RB",
                ":ARG0/NP",
                ":ARG1/CC"
            ]
        },
        "head": "know-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB -) (:polarity/RB) (VP (VB xxx) (:manner-of/SBAR))) (. -)))",
        "tree_rules": [
            ":ARG1/CC",
            ":polarity/RB",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :mod/JJ - \n\t :domain/NP -)",
        "graph_rules": {
            "place": [
                ":mod/JJ",
                ":domain/NP"
            ]
        },
        "head": "place",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": true,
            "number": "singular"
        },
        "tree": "(ROOT (S (NP (PRP -)) (VP (VB -) (PP (:degree/JJ) (NP (NP (DT -) (:mod/JJ) (NN xxx)) (, -) (:domain/NP)))) (. -)))",
        "tree_rules": [
            ":mod/JJ",
            ":domain/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/NP -)",
        "graph_rules": {
            "chapter": [
                ":mod/NP"
            ]
        },
        "head": "chapter",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (NP (NP (NN xxx)) (:mod/NP) (. -)))",
        "tree_rules": [
            ":mod/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S - \n\t :time/ADVP -)",
        "graph_rules": {
            "learn-01": [
                ":ARG0/NP",
                ":ARG1/S",
                ":time/ADVP"
            ]
        },
        "head": "learn-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (:time/ADVP) (VP (VB xxx) (:ARG1/S)) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/NP",
            ":time/ADVP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/NP - \n\t :degree/RB - \n\t :time/ADVP - \n\t :location/PP -)",
        "graph_rules": {
            "simple-02": [
                ":ARG1/NP",
                ":degree/RB",
                ":time/ADVP",
                ":location/PP"
            ]
        },
        "head": "simple-02",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:location/PP) (:ARG1/NP) (VP (VB -) (:time/ADVP) (VP (VB -) (ADJP (:degree/RB) (JJ xxx)))) (. -)))",
        "tree_rules": [
            ":degree/RB",
            ":time/ADVP",
            ":location/PP",
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "past perfect",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :snt1/S - \n\t :snt2/S - \n\t :snt3/S -)",
        "graph_rules": {
            "multi-sentence": [
                ":snt1/S",
                ":snt2/S",
                ":snt3/S"
            ]
        },
        "head": "multi-sentence",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:snt1/S) (: -) (:snt2/S) (: -) (:snt3/S) (. -)))",
        "tree_rules": [
            ":snt1/S",
            ":snt2/S",
            ":snt3/S"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/S - \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op1/S",
                ":op2/S"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:op1/S) (, -) (CC xxx) (:op2/S) (. -)))",
        "tree_rules": [
            ":op1/S",
            ":op2/S"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/CC - \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op1/CC",
                ":op2/S"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:op1/CC) (NP (:time/NP) (, -) (PP (IN -) (NP (:source/NP) (VP (:ARG1-of/VB) (PP (IN -) (NP (:polarity/NP) (SBAR (S (VP (VB -) (SBAR (:source/WHADVP) (, -) (S (:ARG2/S) (: -) (CC xxx) (:op2/S)))))))))))) (:ARG1/VP) (. -)))",
        "tree_rules": [
            ":op2/S",
            ":op1/CC"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/PP -)",
        "graph_rules": {
            "possible-01": [
                ":ARG1/PP"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (S (:domain/NP) (VP (MD xxx))) (, -) (NP (PRP -)) (:mod/VP) (. -)))",
        "tree_rules": [
            ":ARG1/PP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/VP - \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op1/VP",
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (:time/ADVP) (VP (:op1/VP) (, -) (CC xxx) (:op2/VP)) (. -)))",
        "tree_rules": [
            ":op1/VP",
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/MD - \n\t :time/E -)",
        "graph_rules": {
            "feel-01": [
                ":ARG0/NP",
                ":ARG1/MD",
                ":time/E"
            ]
        },
        "head": "feel-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (ADVP (IN -) (RB -)) (:ARG2/SBAR)) (. -)))",
        "tree_rules": [
            ":ARG1/MD",
            ":ARG0/NP",
            ":time/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/VB -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG1/VB"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG1/NP) (:polarity/VP) (. -)))",
        "tree_rules": [
            ":ARG1/VB"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/E - \n\t :manner/PP -)",
        "graph_rules": {
            "choose-01": [
                ":ARG0/NP",
                ":ARG1/E",
                ":manner/PP"
            ]
        },
        "head": "choose-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:poss/NP) (:manner/PP)) (. -)))",
        "tree_rules": [
            ":manner/PP",
            ":ARG0/NP",
            ":ARG1/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :manner/E -)",
        "graph_rules": {
            "adjust-01": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":manner/E"
            ]
        },
        "head": "adjust-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:ARG1/NP) (PP (NP (CD -)) (IN -) (NP (CD -)))) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG0/NP",
            ":manner/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "wish-01": [
                ":polarity/RB",
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "wish-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB -) (:polarity/RB) (VP (VB xxx) (:ARG1/S) (NP-TMP (:mod/DT) (:ARG1-of/JJ)) (, -) (:ARG2/PP))) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":polarity/RB",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/PRP$ - \n\t :ARG1/S -)",
        "graph_rules": {
            "wish-01": [
                ":ARG0/PRP$",
                ":ARG1/S"
            ]
        },
        "head": "wish-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (NP (PRP -)) (VP (VB -) (:mod/ADVP) (:manner/PP) (SBAR (IN -) (S (:ARG1/NP) (VP (VB xxx) (:ARG1/S))))) (. -)))",
        "tree_rules": [
            ":ARG0/PRP$",
            ":ARG1/S"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "yes",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (INTJ (INTJ (UH -)) (, -) (INTJ (UH xxx) (. -))))",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VP -)",
        "graph_rules": {
            "and": [
                ":op1/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG2-of/NP) (:op1/VP) (. -)))",
        "tree_rules": [
            ":op1/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :manner/E - \n\t :time/PP - \n\t :time - \n\t :time -)",
        "graph_rules": {
            "show-01": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":manner/E",
                ":time/PP",
                ":time",
                ":time"
            ]
        },
        "head": "show-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:time/RB) (:time/NP-TMP) (, -) (:time/PP) (, -) (:ARG0/NP) (ADVP (RB -)) (VP (VB xxx) (:ARG1/NP)) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":time/RB",
            ":time/NP-TMP",
            ":time/PP",
            ":ARG0/NP",
            ":manner/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/VP - \n\t :op2/VP - \n\t :time/IN -)",
        "graph_rules": {
            "and": [
                ":op1/VP",
                ":op2/VP",
                ":time/IN"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (S (CC xxx) (, -) (PP (:time/IN) (:op1/S)) (, -) (:ARG0/NP) (:op2/VP)) (: -) ('' -) (:ARG1/PRN) (. -)))",
        "tree_rules": [
            ":time/IN",
            ":op1/VP",
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1/NP - \n\t :degree/ADVP -)",
        "graph_rules": {
            "awake-03": [
                ":ARG1/NP",
                ":degree/ADVP"
            ]
        },
        "head": "awake-03",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/NP) (VP (VB -) (:degree/ADVP) (ADJP (RB xxx))) (. -)))",
        "tree_rules": [
            ":degree/ADVP",
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :ARG2/SBAR -)",
        "graph_rules": {
            "beg-01": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":ARG2/SBAR"
            ]
        },
        "head": "beg-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:ARG2/SBAR)) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG2/SBAR",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG2/MD -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/MD"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG0/NP) (:ARG1/VP) (. -)))",
        "tree_rules": [
            ":ARG2/MD"
        ],
        "verb_info": {}
    },
    {
        "graph": "(b / beautiful-02 \n\t :ARG1/NP - \n\t :degree (s / so))",
        "graph_rules": {
            "beautiful-02": [
                ":ARG1/NP"
            ]
        },
        "head": "beautiful-02/so",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (S (ADJP (WRB -) (JJ xxx))) (:ARG1/NP) (VP (VBP -)) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (CC xxx) (:ARG1/NP) (:op2/VP) ('' -)))",
        "tree_rules": [
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1/VP -)",
        "graph_rules": {
            "possible-01": [
                ":ARG1/VP"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (NP (NP (DT -) (:mod/JJ) (NX (NX (:ARG0/NN) (S (VP (MD xxx) (:ARG1/VP)))) (PRN (: -) (:ARG2/CC) (:op2/ADJP) (: -)))) (: -) (:ARG0/S) (. -)))",
        "tree_rules": [
            ":ARG1/VP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S - \n\t :time/E -)",
        "graph_rules": {
            "add-01": [
                ":ARG0/NP",
                ":ARG1/S",
                ":time/E"
            ]
        },
        "head": "add-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (:ARG0/NP) (VP (VB xxx) (:quant/NP) (ADVP (RB -))) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/NP",
            ":time/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/E - \n\t :ARG1-of/NP -)",
        "graph_rules": {
            "think-01": [
                ":ARG0/NP",
                ":ARG1/E",
                ":ARG1-of/NP"
            ]
        },
        "head": "think-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (IN -) (:ARG0/NP) (VP (MD -) (VP (VB -) (NP (:ARG1-of/NP) (PP (TO -)) (PP (NP (VB xxx)) (:ARG1-of/PP)) (: -)))) ('' -)))",
        "tree_rules": [
            ":ARG1-of/NP",
            ":ARG0/NP",
            ":ARG1/E"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/S -)",
        "graph_rules": {
            "and": [
                ":op1/S"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:op1/S) (: -) (VP (:ARG1/MD) (:ARG1/PP)) (. -)))",
        "tree_rules": [
            ":op1/S"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :ARG1-of/E -)",
        "graph_rules": {
            "tend-01": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":ARG1-of/E"
            ]
        },
        "head": "tend-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (ADVP (RB -)) (, -) (:ARG0/NP) (VP (VB xxx) (:ARG1/NP)) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG0/NP",
            ":ARG1-of/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S - \n\t :mod/ADVP - \n\t :ARG1-of/E -)",
        "graph_rules": {
            "begin-01": [
                ":ARG0/NP",
                ":ARG1/S",
                ":mod/ADVP",
                ":ARG1-of/E"
            ]
        },
        "head": "begin-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (ADVP (RB -)) (, -) (:mod/ADVP) (, -) (:ARG0/NP) (VP (VB xxx) (:degree/ADVP) (:ARG1/S)) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":mod/ADVP",
            ":ARG0/NP",
            ":ARG1-of/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S - \n\t :ARG2/PP - \n\t :time/SBAR - \n\t :ARG0-of/E - \n\t :time -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/S",
                ":ARG2/PP",
                ":time/SBAR",
                ":ARG0-of/E",
                ":time"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (S (:time/NP-TMP) (, -) (PP (IN -) (NP (NN -))) (, -) (:time/SBAR) (, -) (:part-of/NP) (VP (VB xxx) (:ARG2/PP))) (: -) ('' -) (:ARG1/S) (. -) ('' -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":ARG2/PP",
            ":time/NP-TMP",
            ":time/SBAR",
            ":ARG1/S",
            ":ARG0-of/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "object-01": [
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "object-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (:ARG0/NP) (VP (VB xxx)) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (ADVP (CC xxx)) (, -) (:mod/ADVP) (, -) (:ARG0/NP) (:op2/VP) (. -) ('' -)))",
        "tree_rules": [
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG2/NP - \n\t :manner/E -)",
        "graph_rules": {
            "reply-01": [
                ":ARG0/NP",
                ":ARG2/NP",
                ":manner/E"
            ]
        },
        "head": "reply-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (S (NP (PRP -)) (VP (VBP -) (:polarity/RB) (:ARG2/NP))) (, -) ('' -) (:ARG0/NP) (VP (VB xxx) (, -) (ADVP (RB -))) (. -)))",
        "tree_rules": [
            ":ARG2/NP",
            ":ARG0/NP",
            ":manner/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polite/INTJ - \n\t :ARG0/E - \n\t :ARG1/NP -)",
        "graph_rules": {
            "excuse-01": [
                ":polite/INTJ",
                ":ARG0/E",
                ":ARG1/NP"
            ]
        },
        "head": "excuse-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (VP ('' -) (S (:polite/INTJ) (VP (VB xxx) (:ARG1/NP)))) (: -) ('' -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":polite/INTJ",
            ":ARG0/E"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/CC -)",
        "graph_rules": {
            "go-on-25": [
                ":ARG0/NP",
                ":ARG1/CC"
            ]
        },
        "head": "go-on-25",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (S (NP (PRP -)) (VP (VBP -) (:polarity/RB) (ADVP (IN -) (DT -)) (:ARG1/ADJP))) (, -) ('' -) (:ARG0/NP) (VP (VB xxx) (PP (IN xxx)) (, -) ('' -) (SBAR (:ARG1/CC) (:ARG1/S))) (. -)))",
        "tree_rules": [
            ":ARG1/CC",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/SBAR -)",
        "graph_rules": {
            "suppose-01": [
                ":ARG0/NP",
                ":ARG1/SBAR"
            ]
        },
        "head": "suppose-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:ARG1/SBAR)) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1/SBAR",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/VP - \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op1/VP",
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (S (:ARG1/NP) (VP (:op1/VP) (, -) (CC xxx) (:op2/VP))) (, -) ('' -) (:domain/NP) (VP (VBZ -) (:degree/NP) (:mod/FRAG)) ('' -)))",
        "tree_rules": [
            ":op1/VP",
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "want-01": [
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "want-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (PP (IN -) (S (VP (:time/NN) (:ARG0/NP)))) (VP (VB xxx) (:ARG1/S)) (. -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":ARG1/S"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :degree/RB - \n\t :location/SBAR -)",
        "graph_rules": {
            "cold-01": [
                ":degree/RB",
                ":location/SBAR"
            ]
        },
        "head": "cold-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (NP (PRP -)) (VP (VB -) (ADJP (:degree/RB) (JJ xxx)) (:location/SBAR)) (. -)))",
        "tree_rules": [
            ":degree/RB",
            ":location/SBAR"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/VP"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG0/NP) (:ARG2/VP) (. -)))",
        "tree_rules": [
            ":ARG2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1/NP - \n\t :time-of/PP -)",
        "graph_rules": {
            "come-01": [
                ":ARG1/NP",
                ":time-of/PP"
            ]
        },
        "head": "come-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/NP) (VP (VB -) (VP (VB xxx) (:time-of/PP))) (. -)))",
        "tree_rules": [
            ":time-of/PP",
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "past perfect",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :ARG1/VP -)",
        "graph_rules": {
            "possible-01": [
                ":polarity/RB",
                ":ARG1/VP"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (MD xxx) (:polarity/RB) (:ARG1/VP)) (. -)))",
        "tree_rules": [
            ":polarity/RB",
            ":ARG1/VP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :purpose/SBAR - \n\t :frequency/CC -)",
        "graph_rules": {
            "cough-01": [
                ":ARG0/NP",
                ":purpose/SBAR",
                ":frequency/CC"
            ]
        },
        "head": "cough-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/S) (, -) (:ARG0/NP) (VP (VB xxx) (NP (QP (:op1/CD) (:frequency/CC) (:op2/CD) (NNS -))) (, -) (:purpose/SBAR)) (. -)))",
        "tree_rules": [
            ":frequency/CC",
            ":purpose/SBAR",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "screen",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (SQ ('' -) (NP (DT -) (NN xxx)) (. -) ('' -)))",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/PP - \n\t :time/SBAR -)",
        "graph_rules": {
            "look-01": [
                ":ARG0/NP",
                ":ARG1/PP",
                ":time/SBAR"
            ]
        },
        "head": "look-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG0/NP) (VP (VB -) (ADVP (RB -)) (VP (VB -) (S (VP (TO -) (VP (VB xxx) (:ARG1/PP) (:time/SBAR)))))) (: -) ('' -)))",
        "tree_rules": [
            ":ARG1/PP",
            ":time/SBAR",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :time/RB - \n\t :degree/RBR - \n\t :purpose/ADVP -)",
        "graph_rules": {
            "force-02": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":time/RB",
                ":degree/RBR",
                ":purpose/ADVP"
            ]
        },
        "head": "force-02",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:time/RB) (:ARG0/NP) (VP (VB xxx) (:ARG1/NP) (:purpose/ADVP)) (. -)))",
        "tree_rules": [
            ":degree/RBR",
            ":ARG1/NP",
            ":purpose/ADVP",
            ":time/RB",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/NP - \n\t :ARG2/S - \n\t :time/ADVP - \n\t :ARG1-of/E - \n\t :concession/PP -)",
        "graph_rules": {
            "come-04": [
                ":ARG1/NP",
                ":ARG2/S",
                ":time/ADVP",
                ":ARG1-of/E",
                ":concession/PP"
            ]
        },
        "head": "come-04",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (IN -) (:ARG1/NP) (VP (VB -) (:time/ADVP) (VP (VB xxx) (:ARG2/S))) (. -)))",
        "tree_rules": [
            ":concession/PP",
            ":ARG2/S",
            ":time/ADVP",
            ":ARG1/NP",
            ":ARG1-of/E"
        ],
        "verb_info": {
            "tense": "past perfect",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/NP - \n\t :ARG2/S - \n\t :ARG0-of/S -)",
        "graph_rules": {
            "serious-01": [
                ":ARG1/NP",
                ":ARG2/S",
                ":ARG0-of/S"
            ]
        },
        "head": "serious-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG2/S) (, -) (CC -) (:ARG0-of/S) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG2/S",
            ":ARG0-of/S"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/MD - \n\t :ARG2/S - \n\t :time/NP-TMP -)",
        "graph_rules": {
            "confide-01": [
                ":ARG0/NP",
                ":ARG1/MD",
                ":ARG2/S",
                ":time/NP-TMP"
            ]
        },
        "head": "confide-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG2/S) (, -) ('' -) (:ARG0/NP) (VP (VB xxx) (PP (TO -) (NP (PRP -))) (:time/NP-TMP)) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1/MD",
            ":time/NP-TMP",
            ":ARG2/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/S -)",
        "graph_rules": {
            "recommend-01": [
                ":ARG1/S"
            ]
        },
        "head": "recommend-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (ADVP (RB -)) (VP (MD xxx) (:ARG1/S)) (. -)))",
        "tree_rules": [
            ":ARG1/S"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/CC -)",
        "graph_rules": {
            "recommend-01": [
                ":ARG1/CC"
            ]
        },
        "head": "recommend-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (MD xxx) (ADVP (RB -)) (:op2/VP)) (. -)))",
        "tree_rules": [
            ":ARG1/CC"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/E - \n\t :ARG1/NP -)",
        "graph_rules": {
            "perfume-01": [
                ":ARG0/E",
                ":ARG1/NP"
            ]
        },
        "head": "perfume-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (NP (NNP -)) (VP (JJ xxx) (:mod/NP) (:ARG1/NP)) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG0/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/VP"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG0/NP) (:ARG2/VP) (. -)))",
        "tree_rules": [
            ":ARG2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1/VP -)",
        "graph_rules": {
            "recommend-01": [
                ":ARG1/VP"
            ]
        },
        "head": "recommend-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (MD xxx) (:mod/ADVP) (:ARG1/VP)) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1/VP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/S -)",
        "graph_rules": {
            "and": [
                ":op1/S"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:op1/S) (: -) ('' -) (:ARG1/S) (. -)))",
        "tree_rules": [
            ":op1/S"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1/CC -)",
        "graph_rules": {
            "recommend-01": [
                ":ARG1/CC"
            ]
        },
        "head": "recommend-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (MD xxx) (:op1/S)) (. -)))",
        "tree_rules": [
            ":ARG1/CC"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/CC - \n\t :ARG2/PP -)",
        "graph_rules": {
            "cast-01": [
                ":ARG0/NP",
                ":ARG1/CC",
                ":ARG2/PP"
            ]
        },
        "head": "cast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:ARG1-of/NP) (:ARG2/PP)) (. -)))",
        "tree_rules": [
            ":ARG1/CC",
            ":ARG2/PP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/S -)",
        "graph_rules": {
            "recommend-01": [
                ":ARG1/S"
            ]
        },
        "head": "recommend-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (MD xxx) (:ARG1/S)) (: -)))",
        "tree_rules": [
            ":ARG1/S"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/S -)",
        "graph_rules": {
            "recommend-01": [
                ":ARG1/S"
            ]
        },
        "head": "recommend-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (MD xxx) (:ARG1/S)) (. -)))",
        "tree_rules": [
            ":ARG1/S"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/VP"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:domain/NP) (:ARG2/VP) ('' -)))",
        "tree_rules": [
            ":ARG2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/NP -)",
        "graph_rules": {
            "chapter": [
                ":mod/NP"
            ]
        },
        "head": "chapter",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (NP (NP (NN xxx)) (:mod/NP) (. -)))",
        "tree_rules": [
            ":mod/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/SBAR -)",
        "graph_rules": {
            "believe-01": [
                ":ARG0/NP",
                ":ARG1/SBAR"
            ]
        },
        "head": "believe-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:ARG1/SBAR)) (. -)))",
        "tree_rules": [
            ":ARG1/SBAR",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/PP - \n\t :ARG1/NP - \n\t :ARG1-of/JJ - \n\t :time/PP -)",
        "graph_rules": {
            "order-03": [
                ":ARG0/PP",
                ":ARG1/NP",
                ":ARG1-of/JJ",
                ":time/PP"
            ]
        },
        "head": "order-03",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": true,
            "number": "singular"
        },
        "tree": "(ROOT (S (:time/PP) (:poss/NP) (VP (VB -) (:ARG1/NP) (PP (IN -) (NP (:ARG1-of/JJ) (NN xxx)))) (. -)))",
        "tree_rules": [
            ":ARG0/PP",
            ":ARG1-of/JJ",
            ":ARG1/NP",
            ":time/PP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :manner/ADVP -)",
        "graph_rules": {
            "clean-out-03": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":manner/ADVP"
            ]
        },
        "head": "clean-out-03",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (:manner/ADVP) (VP (VB xxx) (PRT (RP xxx)) (:ARG1/NP)) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG0/NP",
            ":manner/ADVP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/S - \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op1/S",
                ":op2/S"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:op1/S) (: -) (CC xxx) (:op2/S) (. -)))",
        "tree_rules": [
            ":op1/S",
            ":op2/S"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :mod/ADVP -)",
        "graph_rules": {
            "have-03": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":mod/ADVP"
            ]
        },
        "head": "have-03",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (:mod/ADVP) (VP (VB xxx) (:ARG1/NP)) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG0/NP",
            ":mod/ADVP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG2/SBAR -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/SBAR"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (, -) (:ARG2/SBAR) (, -) ('' -) (:ARG0/NP) (ADVP (RB -)) (:ARG1/VP) (. -) ('' -)))",
        "tree_rules": [
            ":ARG2/SBAR"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :mod/ADVP -)",
        "graph_rules": {
            "clean-out-03": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":mod/ADVP"
            ]
        },
        "head": "clean-out-03",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (IN -) (:ARG0/NP) (VP (VB xxx) (PRT (RP xxx)) (:ARG1/NP) (, -) (:mod/ADVP)) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":mod/ADVP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/NP - \n\t :condition/SBAR - \n\t :manner/E - \n\t :ARG1-of/E -)",
        "graph_rules": {
            "burn-01": [
                ":ARG1/NP",
                ":condition/SBAR",
                ":manner/E",
                ":ARG1-of/E"
            ]
        },
        "head": "burn-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:condition/SBAR) (, -) (S (:ARG1/NP) (VP (VB xxx) (ADVP (RB -)))) (CC -) (ADVP (RB -)) (, -) (:ARG1-of/PP) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":condition/SBAR",
            ":manner/E",
            ":ARG1-of/E"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/E - \n\t :ARG1-of/E -)",
        "graph_rules": {
            "erupt-01": [
                ":ARG1/E",
                ":ARG1-of/E"
            ]
        },
        "head": "erupt-01",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "plural"
        },
        "tree": "(ROOT (S (NP (JJ -) (NN xxx)) (:ARG2/VP) (. -)))",
        "tree_rules": [
            ":ARG1-of/E",
            ":ARG1/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :degree/RB - \n\t :compared-to/S - \n\t :domain/PRP$ - \n\t :location/PP - \n\t :ARG1-of/E -)",
        "graph_rules": {
            "small": [
                ":degree/RB",
                ":compared-to/S",
                ":domain/PRP$",
                ":location/PP",
                ":ARG1-of/E"
            ]
        },
        "head": "small",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:location/PP) (:poss/NP) (VP (VB -) (ADVP (RB -)) (ADJP (:degree/RB) (:degree/RB) (JJ xxx) (:compared-to/S))) (. -)))",
        "tree_rules": [
            ":domain/PRP$",
            ":degree/RB",
            ":compared-to/S",
            ":location/PP",
            ":ARG1-of/E"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/PP - \n\t :mod/ADVP - \n\t :direction/PRT -)",
        "graph_rules": {
            "pull-01": [
                ":ARG0/NP",
                ":ARG1/PP",
                ":mod/ADVP",
                ":direction/PRT"
            ]
        },
        "head": "pull-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (:mod/ADVP) (VP (VB xxx) (:direction/PRT) (, -) (:ARG0-of/PP)) (. -)))",
        "tree_rules": [
            ":ARG1/PP",
            ":direction/PRT",
            ":ARG0/NP",
            ":mod/ADVP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/SBAR -)",
        "graph_rules": {
            "believe-01": [
                ":ARG0/NP",
                ":ARG1/SBAR"
            ]
        },
        "head": "believe-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:ARG1/SBAR)) (. -)))",
        "tree_rules": [
            ":ARG1/SBAR",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/VP"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:time/PP) (:domain/NP) (:ARG2/VP) (. -)))",
        "tree_rules": [
            ":ARG2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/ADVP - \n\t :ARG2/PP -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/ADVP",
                ":ARG2/PP"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/ADVP) (, -) ('' -) (:ARG0/NP) (VP (VB xxx) (:ARG2/PP)) (. -)))",
        "tree_rules": [
            ":ARG2/PP",
            ":ARG1/ADVP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/VP"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG0/NP) (:ARG2/VP) (. -)))",
        "tree_rules": [
            ":ARG2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/ADVP - \n\t :mod/ADVP -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/ADVP",
                ":mod/ADVP"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/ADVP) (, -) ('' -) (:ARG0/NP) (VP (VB xxx) (:mod/ADVP)) (. -)))",
        "tree_rules": [
            ":mod/ADVP",
            ":ARG1/ADVP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP -)",
        "graph_rules": {
            "cough-01": [
                ":ARG0/NP"
            ]
        },
        "head": "cough-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx)) (. -)))",
        "tree_rules": [
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG2/E -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/E"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG1/NP) (VP (VBD -) (SBAR (:polarity/RB) (IN -) (:ARG0/S))) (. -)))",
        "tree_rules": [
            ":ARG2/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S - \n\t :ARG2/PP - \n\t :time/E -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/S",
                ":ARG2/PP",
                ":time/E"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (:ARG0/NP) (VP (VB xxx) (:ARG2/PP) (, -) (PP (IN -) (NP (JJ -)))) (. -)))",
        "tree_rules": [
            ":ARG2/PP",
            ":ARG1/S",
            ":ARG0/NP",
            ":time/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :ARG2/PRP$ -)",
        "graph_rules": {
            "ask-02": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":ARG2/PRP$"
            ]
        },
        "head": "ask-02",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG0/NP) (VP (VB xxx) (:ARG1/NP)) (. -)))",
        "tree_rules": [
            ":ARG2/PRP$",
            ":ARG1/NP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/E - \n\t :ARG1/S -)",
        "graph_rules": {
            "try-01": [
                ":ARG0/E",
                ":ARG1/S"
            ]
        },
        "head": "try-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (VP (VB xxx) (:ARG1/S)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/E"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/E - \n\t :ARG1/NP -)",
        "graph_rules": {
            "surprise-01": [
                ":ARG0/E",
                ":ARG1/NP"
            ]
        },
        "head": "surprise-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/NP) (VP (VB -) (VP (VB xxx) (:ARG1/PP))) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG0/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "passive"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/NP - \n\t :ARG2/NP -)",
        "graph_rules": {
            "stand-01": [
                ":ARG1/NP",
                ":ARG2/NP"
            ]
        },
        "head": "stand-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (S (:ARG1/NP) (VP (VB xxx) (S (:ARG2/NP) (:ARG1-of/ADJP)))) (, -) (:ARG1/NP) (:ARG1-of/VP) (. -)))",
        "tree_rules": [
            ":ARG2/NP",
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :ARG0/NP - \n\t :ARG1/NP -)",
        "graph_rules": {
            "understand-01": [
                ":polarity/RB",
                ":ARG0/NP",
                ":ARG1/NP"
            ]
        },
        "head": "understand-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB -) (:polarity/RB) (VP (VB xxx) (:ARG1/NP))) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":polarity/RB",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S - \n\t :ARG2/PP -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/S",
                ":ARG2/PP"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (:ARG0/NP) (VP (VB xxx) (:ARG2/PP)) (. -)))",
        "tree_rules": [
            ":ARG2/PP",
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/E - \n\t :ARG2/SBAR -)",
        "graph_rules": {
            "fault-01": [
                ":ARG1/E",
                ":ARG2/SBAR"
            ]
        },
        "head": "fault-01",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S ('' -) (:ARG1/NP) (VP (VB -) (NP (PRP$ -) (NN xxx)) (:ARG2/SBAR)) (. -)))",
        "tree_rules": [
            ":ARG2/SBAR",
            ":ARG1/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/DT - \n\t :domain/NP -)",
        "graph_rules": {
            "important": [
                ":polarity/DT",
                ":domain/NP"
            ]
        },
        "head": "important",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": true,
            "number": "singular"
        },
        "tree": "(ROOT (S (:domain/NP) (VP (VB -) (PP (IN -) (NP (:polarity/DT) (NN xxx)))) (. -)))",
        "tree_rules": [
            ":polarity/DT",
            ":domain/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG2/PP -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/PP"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:domain/ADVP) (: -) (: -) (NP (PRP -)) (VP (VBP -) (VP (VBN -) (:ARG2/PP) (:compared-to/PP))) (. -)))",
        "tree_rules": [
            ":ARG2/PP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :polarity/RB - \n\t :time/E -)",
        "graph_rules": {
            "want-01": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":polarity/RB",
                ":time/E"
            ]
        },
        "head": "want-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB -) (:polarity/RB) (VP (VB xxx) (:ARG1/NP) (ADVP (DT -) (RBR -)))) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":polarity/RB",
            ":ARG0/NP",
            ":time/E"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG2/NN -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/NN"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": "(ROOT (S (VP ('' -) (NP (NP (ADVP (CC xxx)) (DT -) (:ARG2/NN)) (: -) (NP (: -)) ('' -)))))",
        "tree_rules": [
            ":ARG2/NN"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/ADJP - \n\t :op2/ADJP -)",
        "graph_rules": {
            "and": [
                ":op1/ADJP",
                ":op2/ADJP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (: -) (:ARG1/S) (. -)))",
        "tree_rules": [
            ":op1/ADJP",
            ":op2/ADJP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :domain/NP -)",
        "graph_rules": {
            "flower": [
                ":domain/NP"
            ]
        },
        "head": "flower",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S (:domain/NP) (VP (VB -) (NP (DT -) (NN xxx))) (. -) ('' -)))",
        "tree_rules": [
            ":domain/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG2/NN -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/NN"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": "(ROOT (NP (NP (ADJP (ADVP ('' -) (CC xxx)) (DT -)) (:ARG2/NN)) (: -) (NP (: -) ('' -))))",
        "tree_rules": [
            ":ARG2/NN"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG2/MD -)",
        "graph_rules": {
            "have-concession-91": [
                ":ARG2/MD"
            ]
        },
        "head": "have-concession-91",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG2/S) (:quant/CC) (:ARG1/S) (. -)))",
        "tree_rules": [
            ":ARG2/MD"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1/SBAR -)",
        "graph_rules": {
            "seem-01": [
                ":ARG1/SBAR"
            ]
        },
        "head": "seem-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (NP (PRP -)) (VP (VB xxx) (:ARG1/SBAR)) (. -)))",
        "tree_rules": [
            ":ARG1/SBAR"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/PP - \n\t :condition/E -)",
        "graph_rules": {
            "call-on-05": [
                ":ARG0/NP",
                ":ARG1/PP",
                ":condition/E"
            ]
        },
        "head": "call-on-05",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (FRAG (:ARG0/CC) (SBAR (IN -) (S (:op2/NP) (: -) (:ARG0/NP) (VP (MD -) (VP (VB xxx) (:ARG1/PP))))) (. -)))",
        "tree_rules": [
            ":ARG1/PP",
            ":ARG0/NP",
            ":condition/E"
        ],
        "verb_info": {
            "tense": "simple future",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/RB - \n\t :op2/E -)",
        "graph_rules": {
            "and": [
                ":op1/RB",
                ":op2/E"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:location-of/S) (: -) (:op2/S) (. -)))",
        "tree_rules": [
            ":op1/RB",
            ":op2/S",
            ":op2/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP -)",
        "graph_rules": {
            "have-03": [
                ":ARG0/NP",
                ":ARG1/NP"
            ]
        },
        "head": "have-03",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:ARG1/NP)) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :manner/E -)",
        "graph_rules": {
            "show-01": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":manner/E"
            ]
        },
        "head": "show-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC -) (, -) (ADVP (RB -)) (, -) (:ARG0/NP) (VP (VB xxx) (:ARG1/NP)) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG0/NP",
            ":manner/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/PRN - \n\t :time/ADVP -)",
        "graph_rules": {
            "add-01": [
                ":ARG0/NP",
                ":ARG1/PRN",
                ":time/ADVP"
            ]
        },
        "head": "add-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (S (:time/ADVP) (:ARG0/NP) (VP (VB xxx))) (: -) ('' -) (:ARG1/PRN) (. -)))",
        "tree_rules": [
            ":time/ADVP",
            ":ARG0/NP",
            ":ARG1/PRN"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "decide-01": [
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "decide-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB -) (VP (VB xxx) (:ARG1/S))) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "present perfect",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/E - \n\t :time/NP -)",
        "graph_rules": {
            "go-02": [
                ":ARG0/E",
                ":time/NP"
            ]
        },
        "head": "go-02",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (FRAG (:time/NP) (S (VP (VB xxx))) (. -) ('' -)))",
        "tree_rules": [
            ":time/NP",
            ":ARG0/E"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "want-01": [
                ":polarity/RB",
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "want-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (IN -) (:ARG0/NP) (VP (VB -) (:polarity/RB) (VP (VB xxx) (:ARG1/S))) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":polarity/RB",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NN - \n\t :degree/JJ -)",
        "graph_rules": {
            "pride-01": [
                ":ARG0/NN",
                ":degree/JJ"
            ]
        },
        "head": "pride-01",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "",
            "inPP": true,
            "number": ""
        },
        "tree": "(ROOT (S (:domain/NP) (VP (VB -) (PP (:degree/JJ) (NP (DT -) (JJ xxx) (:ARG0/NN)))) (: -)))",
        "tree_rules": [
            ":ARG0/NN",
            ":degree/JJ"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/NP -)",
        "graph_rules": {
            "chapter": [
                ":mod/NP"
            ]
        },
        "head": "chapter",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (NP (NP (NN xxx)) (:mod/NP) (. -)))",
        "tree_rules": [
            ":mod/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/E -)",
        "graph_rules": {
            "find-out-03": [
                ":ARG0/NP",
                ":ARG1/E"
            ]
        },
        "head": "find-out-03",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (S (:ARG1/NP) (:op1/NP))) (. -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":ARG1/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG2/PP - \n\t :mod/ADVP - \n\t :purpose/SBAR -)",
        "graph_rules": {
            "begin-01": [
                ":ARG0/NP",
                ":ARG2/PP",
                ":mod/ADVP",
                ":purpose/SBAR"
            ]
        },
        "head": "begin-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (, -) (:mod/ADVP) (, -) (:ARG2/PP) (, -) (:purpose/SBAR)) (. -)))",
        "tree_rules": [
            ":mod/ADVP",
            ":ARG2/PP",
            ":purpose/SBAR",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/PP - \n\t :ARG1/E -)",
        "graph_rules": {
            "inhabit-01": [
                ":ARG0/PP",
                ":ARG1/E"
            ]
        },
        "head": "inhabit-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ord/NP) (VP (VB -) (VP (VB xxx) (:ARG0/PP))) (. -)))",
        "tree_rules": [
            ":ARG0/PP",
            ":ARG1/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "passive"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/NP - \n\t :ARG2/PP -)",
        "graph_rules": {
            "seat-01": [
                ":ARG1/NP",
                ":ARG2/PP"
            ]
        },
        "head": "seat-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:op2/S) (, -) (:ARG1/NP) (VP (VB -) (VP (VB xxx) (:ARG2/PP))) (. -)))",
        "tree_rules": [
            ":ARG2/PP",
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "passive"
        }
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "ah",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (FRAG ('' -) (INTJ (UH xxx)) (. -)))",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :time/SBAR -)",
        "graph_rules": {
            "exclaim-01": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":time/SBAR"
            ]
        },
        "head": "exclaim-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (SINV (:location-of/S) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":time/SBAR",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/MD - \n\t :ARG2/E -)",
        "graph_rules": {
            "ask-01": [
                ":ARG0/NP",
                ":ARG1/MD",
                ":ARG2/E"
            ]
        },
        "head": "ask-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (S (CC -) (:ARG0/NP) (VP (VB xxx) (:ARG1/NP))) (: -) ('' -) (:condition/S) (. -) ('' -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":ARG1/MD",
            ":ARG2/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/SBAR - \n\t :polarity/RB -)",
        "graph_rules": {
            "know-01": [
                ":ARG0/NP",
                ":ARG1/SBAR",
                ":polarity/RB"
            ]
        },
        "head": "know-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB -) (:polarity/RB) (VP (VB xxx) (:ARG1/SBAR))) (. -)))",
        "tree_rules": [
            ":ARG1/SBAR",
            ":polarity/RB",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/NP"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (S (:ARG1/NP) (:purpose/ADJP)) (, -) ('' -) (VP (VB xxx) (:ARG0/NP)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/VB - \n\t :op2/VB - \n\t :concession/S -)",
        "graph_rules": {
            "and": [
                ":op1/VB",
                ":op2/VB",
                ":concession/S"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:concession/S) (: -) (CC -) (S (:ARG2/NP) (VP (VB -) (VP (:op1/VB) (CC xxx) (:op2/VB) (:ARG1/PP)))) (. -)))",
        "tree_rules": [
            ":op1/VB",
            ":op2/VB",
            ":concession/S"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/S - \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op1/S",
                ":op2/S"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:op1/S) (, -) (CC xxx) (:op2/S) (. -)))",
        "tree_rules": [
            ":op1/S",
            ":op2/S"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/ADJP - \n\t :ARG2/PP -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/ADJP",
                ":ARG2/PP"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (S (NP (PRP -)) (VP (VBZ -) (:ARG1/ADJP) (:ARG1/S))) (, -) ('' -) (:ARG0/NP) (VP (VB xxx) (:ARG2/PP)) (. -)))",
        "tree_rules": [
            ":ARG1/ADJP",
            ":ARG2/PP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S - \n\t :ARG2/NP -)",
        "graph_rules": {
            "forbid-01": [
                ":ARG0/NP",
                ":ARG1/S",
                ":ARG2/NP"
            ]
        },
        "head": "forbid-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG0/NP) (VP (VB xxx) (:ARG1/S)) (. -) ('' -)))",
        "tree_rules": [
            ":ARG2/NP",
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :ARG1/VP -)",
        "graph_rules": {
            "possible-01": [
                ":polarity/RB",
                ":ARG1/VP"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG0/NP) (VP (MD xxx) (:polarity/RB) (:ARG1/VP)) (. -)))",
        "tree_rules": [
            ":polarity/RB",
            ":ARG1/VP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG2/MD - \n\t :manner/ADJP -)",
        "graph_rules": {
            "reply-01": [
                ":ARG0/NP",
                ":ARG2/MD",
                ":manner/ADJP"
            ]
        },
        "head": "reply-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (SINV (:ARG1/S) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG2/MD",
            ":manner/ADJP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/S - \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op1/S",
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "list",
            "inPP": false,
            "number": "plural"
        },
        "tree": "(ROOT (S ('' -) (:op1/S) (, -) (NP (CC xxx)) (:op2/VP) ('' -)))",
        "tree_rules": [
            ":op1/S",
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/ADVP -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/ADVP"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/ADVP) (, -) (:mod/ADVP) (, -) ('' -) (:ARG0/NP) (VP (VB xxx)) (. -)))",
        "tree_rules": [
            ":ARG1/ADVP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :ARG2/PP -)",
        "graph_rules": {
            "order-01": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":ARG2/PP"
            ]
        },
        "head": "order-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG0/NP) (VP (VB xxx) (:ARG1/NP) (:ARG2/PP)) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG2/PP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/E - \n\t :time/ADVP -)",
        "graph_rules": {
            "come-01": [
                ":ARG1/E",
                ":time/ADVP"
            ]
        },
        "head": "come-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (SQ (VP (VB xxx) (, -) (:time/ADVP)) (. -)))",
        "tree_rules": [
            ":time/ADVP",
            ":ARG1/E"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/E - \n\t :mod/ADVP -)",
        "graph_rules": {
            "yawn-01": [
                ":ARG0/E",
                ":mod/ADVP"
            ]
        },
        "head": "yawn-01",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (FRAG (NP (NN xxx)) (:mod/ADVP) (. -)))",
        "tree_rules": [
            ":mod/ADVP",
            ":ARG0/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG2/NP -)",
        "graph_rules": {
            "order-01": [
                ":ARG2/NP"
            ]
        },
        "head": "order-01",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S (:ARG2/NP) (VP (VB -) (NP (DT -) (NN xxx))) (. -) ('' -)))",
        "tree_rules": [
            ":ARG2/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP -)",
        "graph_rules": {
            "frighten-01": [
                ":ARG0/NP",
                ":ARG1/NP"
            ]
        },
        "head": "frighten-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG0/NP) (VP (VB xxx) (:ARG1/NP)) (: -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/MD -)",
        "graph_rules": {
            "murmur-01": [
                ":ARG0/NP",
                ":ARG1/MD"
            ]
        },
        "head": "murmur-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (S (S (NP (PRP -)) (VP (:ARG1/MD) (:polarity/RB))) (, -) (S (NP (DT -)) (ADJP (JJR -)))) (: -) ('' -) (PRN (SINV (VP (VB xxx)) (:ARG0/NP))) (, -) (S (:time/NP) (:ARG1-of/ADJP)) (. -)))",
        "tree_rules": [
            ":ARG1/MD",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "hum",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "proper",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (NP ('' -) (NN xxx) (. -)))",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/ADVP - \n\t :ARG1/NP - \n\t :ARG2/CC - \n\t :mod/NP -)",
        "graph_rules": {
            "order-01": [
                ":ARG0/ADVP",
                ":ARG1/NP",
                ":ARG2/CC",
                ":mod/NP"
            ]
        },
        "head": "order-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:mod/NP) (:ARG0/ADVP) (: -) (: -) (NP (PRP -)) (VP (VB xxx) (S (:ARG1/NP) (:frequency/ADVP) (PP (:op1/PP) (:ARG2/CC) (:frequency/ADVP) (PP (TO -))))) (: -) (: -) ('' -)))",
        "tree_rules": [
            ":ARG2/CC",
            ":ARG1/NP",
            ":mod/NP",
            ":ARG0/ADVP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/VP - \n\t :op2/VB -)",
        "graph_rules": {
            "and": [
                ":op1/VP",
                ":op2/VB"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (:op1/VP) (, -) (CC xxx) (:ARG1/VP)) (. -)))",
        "tree_rules": [
            ":op2/VB",
            ":op1/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/SBAR - \n\t :mod/ADVP -)",
        "graph_rules": {
            "insist-01": [
                ":ARG0/NP",
                ":ARG1/SBAR",
                ":mod/ADVP"
            ]
        },
        "head": "insist-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (PP (IN -) (NP (WP -))) (:ARG0/NP) (:mod/ADVP) (VP (VB xxx) (:ARG1/SBAR)) (. -)))",
        "tree_rules": [
            ":ARG1/SBAR",
            ":ARG0/NP",
            ":mod/ADVP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :polarity/DT -)",
        "graph_rules": {
            "tolerate-01": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":polarity/DT"
            ]
        },
        "head": "tolerate-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:ARG1/NP)) (. -)))",
        "tree_rules": [
            ":polarity/DT",
            ":ARG1/NP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :mod/JJ - \n\t :domain/NP -)",
        "graph_rules": {
            "monarch": [
                ":mod/JJ",
                ":domain/NP"
            ]
        },
        "head": "monarch",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S (:domain/NP) (VP (VB -) (NP (DT -) (:mod/JJ) (NN xxx))) (. -)))",
        "tree_rules": [
            ":mod/JJ",
            ":domain/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/SBAR - \n\t :ARG0-of/E -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/SBAR",
                ":ARG0-of/E"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (S (:ARG1/SBAR) (, -) ('' -) (:ARG0/NP) (VP (MD -) (VP (VB xxx) (, -) (PP (IN -) (NP (NP (NN -)) (PP (IN -) (NP (NN -))))) (, -) ('' -) (SBAR (IN -) (S (NP (PRP -)) (VP (VBD -) (:ARG1/NP) (:ARG2/S))))))) (, -) (CC -) (:condition-of/S) (. -)))",
        "tree_rules": [
            ":ARG1/SBAR",
            ":ARG0/NP",
            ":ARG0-of/E"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/E -)",
        "graph_rules": {
            "fault-01": [
                ":ARG1/E"
            ]
        },
        "head": "fault-01",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S (NP (PRP -)) (VP (MD -) (VP (VB -) (NP (PRP$ -) (NN xxx)))) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VP - \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op1/VP",
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG2/S) (, -) ('' -) (:ARG0/NP) (VP (:op1/VP) (, -) (CC xxx) (ADVP (RB -)) (:op2/VP)) (. -)))",
        "tree_rules": [
            ":op1/VP",
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP -)",
        "graph_rules": {
            "wonder-01": [
                ":ARG0/NP"
            ]
        },
        "head": "wonder-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC -) (:ARG0/NP) (VP (VB -) (VP (VB xxx))) (: -)))",
        "tree_rules": [
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "past continuous",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :domain/NP -)",
        "graph_rules": {
            "tiny": [
                ":domain/NP"
            ]
        },
        "head": "tiny",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:domain/NP) (VP (VB -) (ADJP (JJ xxx))) (. -)))",
        "tree_rules": [
            ":domain/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/VP -)",
        "graph_rules": {
            "possible-01": [
                ":ARG1/VP"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (FRAG (PP (IN -) (NP (:ARG1/NP) (SBAR (S (VP (MD xxx) (:ARG0/ADVP) (:ARG1/VP)))))) (. -)))",
        "tree_rules": [
            ":ARG1/VP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/VP - \n\t :ARG2/E -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/VP",
                ":ARG2/E"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (S (NP (:ARG2/NP) (PRN (, -) ('' -) (S (:ARG0/NP) (VP (VB xxx))))) (:ARG0/PP)) (, -) ('' -) (NP (PRP -)) (:ARG1/VP) ('' -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":ARG1/VP",
            ":ARG2/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "hasten-01": [
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "hasten-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG2/S) (, -) ('' -) (:ARG0/NP) (VP (VB xxx) (:ARG1/S)) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/PP - \n\t :ARG1-of/E -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/PP",
                ":ARG1-of/E"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/PP) (, -) ('' -) (VP (VB xxx) (:ARG0/NP) (, -) (:mod/PP)) (. -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":ARG1/PP",
            ":ARG1-of/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/NP -)",
        "graph_rules": {
            "over": [
                ":op1/NP"
            ]
        },
        "head": "over",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (FRAG (S (VP ('' -) (S (PP (IN xxx) (:op1/NP))))) (. -) ('' -)))",
        "tree_rules": [
            ":op1/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG0-of/SBAR -)",
        "graph_rules": {
            "gesture-01": [
                ":ARG0/NP",
                ":ARG0-of/SBAR"
            ]
        },
        "head": "gesture-01",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB -) (NP (NP (DT -) (NN xxx)) (, -) (:ARG0-of/SBAR))) (. -)))",
        "tree_rules": [
            ":ARG0-of/SBAR",
            ":ARG0/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/IN -)",
        "graph_rules": {
            "ask-01": [
                ":ARG0/NP",
                ":ARG1/IN"
            ]
        },
        "head": "ask-01",
        "name": ":root/MULTI-SENTENCE",
        "noun_info": {},
        "tree": "(MULTI-SENTENCE (ROOT (FRAG (S (VP ('' -) (S (PP (:ARG1/IN) (:mod/NP))))) (. -) ('' -))) (ROOT (S (VP (VB xxx) (:ARG0/NP)) (. -))))",
        "tree_rules": [
            ":ARG1/IN",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG2/IN -)",
        "graph_rules": {
            "answer-01": [
                ":ARG0/NP",
                ":ARG2/IN"
            ]
        },
        "head": "answer-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (PP (:ARG2/IN) (:mod/NP)) (, -) ('' -) (:ARG0/NP) (VP (VB xxx)) (. -)))",
        "tree_rules": [
            ":ARG2/IN",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/JJ - \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op1/JJ",
                ":op2/S"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:domain/S) (: -) (:op2/S) (. -)))",
        "tree_rules": [
            ":op1/JJ",
            ":op2/S"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP -)",
        "graph_rules": {
            "obey-01": [
                ":ARG0/NP",
                ":ARG1/NP"
            ]
        },
        "head": "obey-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (CC -) (S (:ARG0/NP) (VP (VB xxx) (:ARG1/NP))) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (:ARG0/NP) (VP (VB xxx)) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :manner/E -)",
        "graph_rules": {
            "obey-01": [
                ":ARG0/NP",
                ":manner/E"
            ]
        },
        "head": "obey-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG0/NP) (VP (VB xxx) (ADVP (RB -))) (. -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":manner/E"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :ARG0/NP - \n\t :ARG1/NP -)",
        "graph_rules": {
            "permit-01": [
                ":polarity/RB",
                ":ARG0/NP",
                ":ARG1/NP"
            ]
        },
        "head": "permit-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB -) (:polarity/RB) (VP (VB xxx) (:ARG1/NP))) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":polarity/RB",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NN - \n\t :ARG1/NP -)",
        "graph_rules": {
            "marvel-01": [
                ":ARG0/NN",
                ":ARG1/NP"
            ]
        },
        "head": "marvel-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/NP) (VP (VB -) (NP (NP (DT -) (NN -)) (PP (IN -) (NP (DT -) (:mod/JJ) (:ARG0/NN) (S (VP (TO -) (VP (VB xxx) (PP (IN -))))))))) (. -)))",
        "tree_rules": [
            ":ARG0/NN",
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :mod/RP - \n\t :ARG1-of/E - \n\t :ARG0-of/E -)",
        "graph_rules": {
            "pluck-01": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":mod/RP",
                ":ARG1-of/E",
                ":ARG0-of/E"
            ]
        },
        "head": "pluck-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (S (S (:ARG1/CC) (:ARG0/SBAR) (, -) (:ARG0/NP) (VP (VB xxx) (PP (:mod/RP) (:ARG1/NP)))) (:ARG0/NP) (:op1/VP)) (: -) (:op2/S)))",
        "tree_rules": [
            ":ARG0/NP",
            ":mod/RP",
            ":ARG1/NP",
            ":ARG1-of/E",
            ":ARG0-of/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/E - \n\t :ARG1/NP - \n\t :ARG2/SBAR -)",
        "graph_rules": {
            "order-01": [
                ":ARG0/E",
                ":ARG1/NP",
                ":ARG2/SBAR"
            ]
        },
        "head": "order-01",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "proper",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (FRAG (NP (NP (NN xxx)) (:ARG2/SBAR)) (: -) ('' -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG2/SBAR",
            ":ARG0/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/NP - \n\t :op2/E -)",
        "graph_rules": {
            "or": [
                ":op1/NP",
                ":op2/E"
            ]
        },
        "head": "or",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "list",
            "inPP": false,
            "number": "plural"
        },
        "tree": "(ROOT (FRAG (S (VP ('' -) (NP (:op1/NP) (, -) (CC xxx) (NP (PRP -))))) (. -) ('' -)))",
        "tree_rules": [
            ":op1/NP",
            ":op2/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/ADVP - \n\t :ARG1-of/E -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/ADVP",
                ":ARG1-of/E"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/ADVP) (, -) ('' -) (VP (VB xxx) (:ARG0/NP) (ADVP (RB -))) (. -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":ARG1/ADVP",
            ":ARG1-of/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "exact",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (FRAG (ADJP ('' -) (RB -)) (. -)))",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/MD -)",
        "graph_rules": {
            "go-on-25": [
                ":ARG0/NP",
                ":ARG1/MD"
            ]
        },
        "head": "go-on-25",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG2/S) (, -) ('' -) (:ARG0/NP) (VP (VB xxx) (PP (IN xxx))) (. -)))",
        "tree_rules": [
            ":ARG1/MD",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/NP - \n\t :ARG2/PP - \n\t :mod/E -)",
        "graph_rules": {
            "rest-02": [
                ":ARG1/NP",
                ":ARG2/PP",
                ":mod/E"
            ]
        },
        "head": "rest-02",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/NP) (VP (VB xxx) (ADVP (RB -)) (:ARG2/PP)) (. -)))",
        "tree_rules": [
            ":ARG2/PP",
            ":ARG1/NP",
            ":mod/E"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/E - \n\t :condition/SBAR -)",
        "graph_rules": {
            "rise-up-03": [
                ":ARG0/NP",
                ":ARG1/E",
                ":condition/SBAR"
            ]
        },
        "head": "rise-up-03",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:condition/SBAR) (, -) (:ARG0/NP) (VP (MD -) (VP (VB xxx) (PRT (RP xxx)) (:ARG0-of/PP))) (. -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":condition/SBAR",
            ":ARG1/E"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1 - \n\t :ARG2/S - \n\t :ARG1-of/E -)",
        "graph_rules": {
            "right-05": [
                ":ARG1",
                ":ARG2/S",
                ":ARG1-of/E"
            ]
        },
        "head": "right-05",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB -) (NP (DT -) (NN xxx) (:ARG2/S))) (. -) ('' -)))",
        "tree_rules": [
            ":ARG2/S",
            ":ARG1-of/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP -)",
        "graph_rules": {
            "have-03": [
                ":ARG0/NP",
                ":ARG1/NP"
            ]
        },
        "head": "have-03",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG0/NP) (VP (MD -) (VP (VB xxx) (:ARG1/NP))) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG2/NP -)",
        "graph_rules": {
            "command-02": [
                ":ARG0/NP",
                ":ARG2/NP"
            ]
        },
        "head": "command-02",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (MD -) (VP (VB xxx) (:ARG2/NP))) (. -)))",
        "tree_rules": [
            ":ARG2/NP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/VP"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (, -) (:ARG0/PP) (, -) (:ARG1/NP) (:ARG2/VP) (. -) ('' -)))",
        "tree_rules": [
            ":ARG2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "hum",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "proper",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (NP ('' -) (NN xxx) (. -)))",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "hum",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "proper",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (NP ('' -) (NN xxx) (. -)))",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "hum",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "proper",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (FRAG (NP (NN xxx)) (. -)))",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "see-01": [
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "see-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC -) (:ARG0/NP) (VP (MD -) (VP (VB xxx) (SBAR (:degree/WHADVP) (:ARG1/S)))) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple future",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP -)",
        "graph_rules": {
            "yawn-01": [
                ":ARG0/NP"
            ]
        },
        "head": "yawn-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx)) (. -)))",
        "tree_rules": [
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/VB -)",
        "graph_rules": {
            "regret-01": [
                ":ARG0/NP",
                ":ARG1/VB"
            ]
        },
        "head": "regret-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB -) (VP (VB xxx) (:ARG1/NP))) (. -)))",
        "tree_rules": [
            ":ARG1/VB",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "past continuous",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (ADVP (RB -)) (, -) (ADVP (RB -)) (, -) (:ARG1/NP) (:op2/VP) (. -)))",
        "tree_rules": [
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/E - \n\t :ARG2/PP -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/E",
                ":ARG2/PP"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1-of/S) (, -) ('' -) (:ARG0/NP) (VP (VB xxx) (:ARG2/PP)) (. -)))",
        "tree_rules": [
            ":ARG2/PP",
            ":ARG0/NP",
            ":ARG1/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/SBAR -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/SBAR"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (S (:polarity/S) (VP (VB xxx) (:ARG0/NP))) (, -) (:ARG0/NP) (:ARG0-of/VP) (. -)))",
        "tree_rules": [
            ":ARG1/SBAR",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :ARG0/E -)",
        "graph_rules": {
            "go-02": [
                ":polarity/RB",
                ":ARG0/E"
            ]
        },
        "head": "go-02",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (NP ('' -)) (VP (VB -) (:polarity/RB) (VP (VB xxx))) (. -)))",
        "tree_rules": [
            ":polarity/RB",
            ":ARG0/E"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP -)",
        "graph_rules": {
            "make-02": [
                ":ARG0/NP",
                ":ARG1/NP"
            ]
        },
        "head": "make-02",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (MD -) (VP (VB xxx) (S (:ARG0/NP) (:ARG1/NP)))) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple future",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :topic/PP -)",
        "graph_rules": {
            "minister": [
                ":topic/PP"
            ]
        },
        "head": "minister",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "proper",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (FRAG (NP (NP ('' -) (NN xxx)) (:topic/PP)) (. -) ('' -)))",
        "tree_rules": [
            ":topic/PP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :location/ADVP - \n\t :ARG1-of/S -)",
        "graph_rules": {
            "nobody": [
                ":location/ADVP",
                ":ARG1-of/S"
            ]
        },
        "head": "nobody",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S ('' -) (CC -) (NP (EX -)) (VP (VB -) (NP (NN xxx)) (:location/ADVP) (:ARG1-of/S)) (. -) ('' -)))",
        "tree_rules": [
            ":location/ADVP",
            ":ARG1-of/S"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S - \n\t :ARG2/PP -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/S",
                ":ARG2/PP"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (:ARG0/NP) (VP (VB xxx) (:ARG2/PP)) (. -)))",
        "tree_rules": [
            ":ARG2/PP",
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :ARG0/NP - \n\t :ARG1/PP - \n\t :ARG1-of/JJ -)",
        "graph_rules": {
            "tour-01": [
                ":polarity/RB",
                ":ARG0/NP",
                ":ARG1/PP",
                ":ARG1-of/JJ"
            ]
        },
        "head": "tour-01",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S ('' -) (:ARG0/NP) (VP (VB -) (:polarity/RB) (ADVP (RB -)) (VP (VB -) (NP (NP (DT -) (:ARG1-of/JJ) (NN xxx)) (:ARG1/PP)))) (. -)))",
        "tree_rules": [
            ":ARG1-of/JJ",
            ":ARG1/PP",
            ":polarity/RB",
            ":ARG0/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :domain/NP - \n\t :degree/RB -)",
        "graph_rules": {
            "old": [
                ":domain/NP",
                ":degree/RB"
            ]
        },
        "head": "old",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:domain/NP) (VP (VB -) (ADJP (:degree/RB) (JJ xxx))) (. -)))",
        "tree_rules": [
            ":degree/RB",
            ":domain/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/DT - \n\t :purpose/NP - \n\t :location/ADVP -)",
        "graph_rules": {
            "room": [
                ":polarity/DT",
                ":purpose/NP",
                ":location/ADVP"
            ]
        },
        "head": "room",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S (NP (EX -)) (VP (VB -) (NP (NP (:polarity/DT) (NN xxx)) (PP (:location/ADVP) (IN -) (:purpose/NP)))) (. -)))",
        "tree_rules": [
            ":polarity/DT",
            ":location/ADVP",
            ":purpose/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/S - \n\t :ARG1/E -)",
        "graph_rules": {
            "tire-01": [
                ":ARG0/S",
                ":ARG1/E"
            ]
        },
        "head": "tire-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC -) (NP (PRP -)) (VP (VB xxx) (:ARG0/S)) (. -) ('' -)))",
        "tree_rules": [
            ":ARG0/S",
            ":ARG1/E"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :location/PP - \n\t :mod/E -)",
        "graph_rules": {
            "nobody": [
                ":location/PP",
                ":mod/E"
            ]
        },
        "head": "nobody",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S (:location/PP) (, -) (:ARG2/PP) (, -) (NP (EX -)) (VP (VB -) (NP (NP (NN xxx)) (PP (IN -) (NP (DT -))))) (: -)))",
        "tree_rules": [
            ":location/PP",
            ":mod/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG2/E -)",
        "graph_rules": {
            "answer-01": [
                ":ARG0/NP",
                ":ARG2/E"
            ]
        },
        "head": "answer-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG0/NP) (VP (MD -) (VP (:ARG1/VB) (NP (PRP -)) (, -) ('' -) (NP (:ARG0/NP) (VP (VB xxx))))) (. -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":ARG2/E"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :domain/NP - \n\t :mod/ADJP -)",
        "graph_rules": {
            "thing": [
                ":domain/NP",
                ":mod/ADJP"
            ]
        },
        "head": "thing",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S ('' -) (:domain/NP) (VP (VB -) (NP (NP (DT -) (:mod/ADJP) (NN xxx)) (:compared-to/PP))) (. -)))",
        "tree_rules": [
            ":mod/ADJP",
            ":domain/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :degree/RBR - \n\t :domain/S - \n\t :compared-to/SBAR -)",
        "graph_rules": {
            "difficult": [
                ":degree/RBR",
                ":domain/S",
                ":compared-to/SBAR"
            ]
        },
        "head": "difficult",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (NP (PRP -)) (VP (VB -) (ADJP (:degree/RB) (:degree/RBR) (JJ xxx) (:domain/S))) (. -)))",
        "tree_rules": [
            ":compared-to/SBAR",
            ":degree/RBR",
            ":domain/S"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/INTJ -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/INTJ"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (S (:ARG1/INTJ) (, -) (NP ('' -)) (VP (VB xxx) (:ARG0/NP))) (, -) ('' -) (CC -) (:ARG1/S) (. -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":ARG1/INTJ"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S - \n\t :polarity/RB -)",
        "graph_rules": {
            "need-01": [
                ":ARG0/NP",
                ":ARG1/S",
                ":polarity/RB"
            ]
        },
        "head": "need-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB -) (:polarity/RB) (VP (VB xxx) (:ARG1/S))) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":polarity/RB",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "hum",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "proper",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (NP ('' -) (NN xxx) (. -)))",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP -)",
        "graph_rules": {
            "have-03": [
                ":ARG0/NP",
                ":ARG1/NP"
            ]
        },
        "head": "have-03",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG0/NP) (VP (VB xxx) (:ARG1/NP)) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :time/PP -)",
        "graph_rules": {
            "hear-01": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":time/PP"
            ]
        },
        "head": "hear-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:ARG1/NP) (:time/PP)) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":time/PP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/VP -)",
        "graph_rules": {
            "possible-01": [
                ":ARG1/VP"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (MD xxx) (:ARG1/VP)) (. -)))",
        "tree_rules": [
            ":ARG1/VP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :ARG3/PP - \n\t :frequency/E -)",
        "graph_rules": {
            "condemn-01": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":ARG3/PP",
                ":frequency/E"
            ]
        },
        "head": "condemn-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (PP (IN -) (NP (NP (NN -)) (PP (TO -) (NP (NN -))))) (:ARG0/NP) (VP (MD -) (VP (VB xxx) (:ARG1/NP) (:ARG3/PP))) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG3/PP",
            ":ARG0/NP",
            ":frequency/E"
        ],
        "verb_info": {
            "tense": "simple future",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/PP -)",
        "graph_rules": {
            "depend-01": [
                ":ARG0/NP",
                ":ARG1/PP"
            ]
        },
        "head": "depend-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (ADVP (RB -)) (:ARG0/NP) (VP (MD -) (VP (VB xxx) (:ARG1/PP))) (. -)))",
        "tree_rules": [
            ":ARG1/PP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple future",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :frequency/PP - \n\t :ARG1-of/E -)",
        "graph_rules": {
            "pardon-01": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":frequency/PP",
                ":ARG1-of/E"
            ]
        },
        "head": "pardon-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC -) (:ARG0/NP) (VP (MD -) (VP (NN xxx) (:ARG1/NP))) (. -)))",
        "tree_rules": [
            ":frequency/PP",
            ":ARG1/NP",
            ":ARG0/NP",
            ":ARG1-of/E"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :mod/RB - \n\t :domain/NP - \n\t :ARG1-of/SBAR -)",
        "graph_rules": {
            "one": [
                ":mod/RB",
                ":domain/NP",
                ":ARG1-of/SBAR"
            ]
        },
        "head": "one",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": "(ROOT (S (:domain/NP) (VP (VB -) (NP (NP (DT -) (QP (:mod/RB) (CD xxx))) (:ARG1-of/SBAR))) (. -) ('' -)))",
        "tree_rules": [
            ":mod/RB",
            ":ARG1-of/SBAR",
            ":domain/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/SBAR -)",
        "graph_rules": {
            "reply-01": [
                ":ARG0/NP",
                ":ARG1/SBAR"
            ]
        },
        "head": "reply-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (ADVP (PRP -)) (, -) ('' -) (VP (VB xxx) (:ARG0/NP)) (. -)))",
        "tree_rules": [
            ":ARG1/SBAR",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/SBAR - \n\t :time/ADVP -)",
        "graph_rules": {
            "think-01": [
                ":ARG0/NP",
                ":ARG1/SBAR",
                ":time/ADVP"
            ]
        },
        "head": "think-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC -) (:time/ADVP) (:ARG0/NP) (VP (VB xxx) (:ARG1/SBAR)) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1/SBAR",
            ":time/ADVP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/FRAG -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/FRAG"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (SINV ('' -) (:ARG1/FRAG) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG1/FRAG",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/DT - \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "wish-01": [
                ":polarity/DT",
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "wish-01",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S (CC -) (:ARG0/NP) (, -) (:ARG0-of/S) (, -) (VP (VB -) (NP (:polarity/DT) (NN xxx) (:ARG1/S))) (. -)))",
        "tree_rules": [
            ":polarity/DT",
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/MD -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/MD"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (S (:ARG1/SBAR) (, -) ('' -) (:ARG0/NP) (VP (VB xxx))) (, -) ('' -) (:ARG1/NP) (:ARG1/VP) (. -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":ARG1/MD"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/SBAR - \n\t :ARG2/PP -)",
        "graph_rules": {
            "seem-01": [
                ":ARG1/SBAR",
                ":ARG2/PP"
            ]
        },
        "head": "seem-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (NP (PRP -)) (VP (VB xxx) (:ARG2/PP))))",
        "tree_rules": [
            ":ARG1/SBAR",
            ":ARG2/PP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :duration/NP - \n\t :ARG1-of/E -)",
        "graph_rules": {
            "hesitate-01": [
                ":ARG0/NP",
                ":duration/NP",
                ":ARG1-of/E"
            ]
        },
        "head": "hesitate-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/SBAR) (, -) (:ARG0/NP) (VP (VB xxx) (:duration/NP)) (. -)))",
        "tree_rules": [
            ":duration/NP",
            ":ARG0/NP",
            ":ARG1-of/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :time/ADVP -)",
        "graph_rules": {
            "take-01": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":time/ADVP"
            ]
        },
        "head": "take-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:time/ADVP) (, -) (:ARG0-of/PP) (, -) (:ARG0/NP) (VP (VB xxx) (:ARG1/NP)) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":time/ADVP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/VB - \n\t :manner/E -)",
        "graph_rules": {
            "call-07": [
                ":ARG0/NP",
                ":ARG1/VB",
                ":manner/E"
            ]
        },
        "head": "call-07",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (NP (PRP -)) (VP (:ARG1/VB) (:ARG0/NP) (NP (:ARG1/NP) (, -) ('' -) (NP (:ARG0/NP) (VP (VB xxx) (PRT (RP -)) (, -) (ADVP (RB -)))))) (. -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":ARG1/VB",
            ":manner/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP -)",
        "graph_rules": {
            "have-03": [
                ":ARG0/NP",
                ":ARG1/NP"
            ]
        },
        "head": "have-03",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:ARG1/NP)) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S - \n\t :ARG2/E - \n\t :time/SBAR -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/S",
                ":ARG2/E",
                ":time/SBAR"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (:ARG0/NP) (VP (VB xxx) (PP (TO -) (NP (PRP -))) (, -) (:time/SBAR)) (. -)))",
        "tree_rules": [
            ":time/SBAR",
            ":ARG1/S",
            ":ARG0/NP",
            ":ARG2/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :mod/NP -)",
        "graph_rules": {
            "chapter": [
                ":mod/NP"
            ]
        },
        "head": "chapter",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (NP (NP (NN xxx)) (:mod/NP) (. -)))",
        "tree_rules": [
            ":mod/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/PP - \n\t :ARG1/NP -)",
        "graph_rules": {
            "inhabit-01": [
                ":ARG0/PP",
                ":ARG1/NP"
            ]
        },
        "head": "inhabit-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/NP) (VP (VB -) (VP (VB xxx) (:ARG0/PP))) (. -)))",
        "tree_rules": [
            ":ARG0/PP",
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "passive"
        }
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "ah",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (FRAG ('' -) (INTJ (UH xxx)) (. -)))",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "ah",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (INTJ (NN xxx) (. -)))",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NN -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/NN"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1-of/ADVP) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG1/NN",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :mod/NN - \n\t :domain/NP - \n\t :ARG1-of/SBAR -)",
        "graph_rules": {
            "hat": [
                ":mod/NN",
                ":domain/NP",
                ":ARG1-of/SBAR"
            ]
        },
        "head": "hat",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S ('' -) (:domain/NP) (VP (VB -) (NP (NP (DT -) (:mod/NN) (NN xxx)) (:ARG1-of/SBAR))) (. -) ('' -)))",
        "tree_rules": [
            ":mod/NN",
            ":ARG1-of/SBAR",
            ":domain/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "reply-01": [
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "reply-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (:ARG0/NP) (VP (VB xxx)) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/NP - \n\t :path/NP - \n\t :ARG2-of/E - \n\t :time/ADVP -)",
        "graph_rules": {
            "pass-03": [
                ":ARG1/NP",
                ":path/NP",
                ":ARG2-of/E",
                ":time/ADVP"
            ]
        },
        "head": "pass-03",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (ADVP (RB -)) (, -) (:ARG1/NP) (:time/ADVP) (VP (VB xxx) (:path/NP)) (. -) ('' -)))",
        "tree_rules": [
            ":path/NP",
            ":ARG1/NP",
            ":time/ADVP",
            ":ARG2-of/E"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :ARG2/NP - \n\t :time/ADVP -)",
        "graph_rules": {
            "direct-01": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":ARG2/NP",
                ":time/ADVP"
            ]
        },
        "head": "direct-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (S (:ARG2/NP) (:ARG1/PP)) (, -) ('' -) (:ARG0/NP) (VP (:time/ADVP) (VB xxx) (:ARG1/NP)) (. -)))",
        "tree_rules": [
            ":ARG2/NP",
            ":time/ADVP",
            ":ARG1/NP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP -)",
        "graph_rules": {
            "clap-01": [
                ":ARG0/NP",
                ":ARG1/NP"
            ]
        },
        "head": "clap-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:ARG1/NP)) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :subevent-of/PP -)",
        "graph_rules": {
            "raise-01": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":subevent-of/PP"
            ]
        },
        "head": "raise-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:ARG1/NP) (:subevent-of/PP)) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":subevent-of/PP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/ADJP - \n\t :ARG2/E -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/ADJP",
                ":ARG2/E"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG0/S) (, -) ('' -) (:ARG0/NP) (VP (VB xxx) (PP (TO -) (NP (PRP -)))) (. -)))",
        "tree_rules": [
            ":ARG1/ADJP",
            ":ARG0/NP",
            ":ARG2/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S - \n\t :mod/ADVP -)",
        "graph_rules": {
            "begin-01": [
                ":ARG0/NP",
                ":ARG1/S",
                ":mod/ADVP"
            ]
        },
        "head": "begin-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC -) (:ARG0/NP) (VP (VB xxx) (:mod/ADVP) (:ARG1/S)) (. -)))",
        "tree_rules": [
            ":mod/ADVP",
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :mod/E - \n\t :subevent-of/PP -)",
        "graph_rules": {
            "raise-01": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":mod/E",
                ":subevent-of/PP"
            ]
        },
        "head": "raise-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:ARG1/NP) (:subevent-of/PP)) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":subevent-of/PP",
            ":ARG0/NP",
            ":mod/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/PP - \n\t :time/IN -)",
        "graph_rules": {
            "tire-01": [
                ":ARG0/NP",
                ":ARG1/PP",
                ":time/IN"
            ]
        },
        "head": "tire-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (PP (:time/IN) (:duration/NP)) (:ARG0/NP) (VP (VB -) (ADJP (JJ xxx)) (:ARG1/PP)) (. -)))",
        "tree_rules": [
            ":time/IN",
            ":ARG1/PP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/SQ -)",
        "graph_rules": {
            "ask-01": [
                ":ARG0/NP",
                ":ARG1/SQ"
            ]
        },
        "head": "ask-01",
        "name": ":root/MULTI-SENTENCE",
        "noun_info": {},
        "tree": "(MULTI-SENTENCE (ROOT (SBARQ ('' -) (CC -) (:ARG1/WHNP) (:ARG1/SQ) (. -) ('' -))) (ROOT (S (:ARG0/NP) (VP (VB xxx)) (. -))))",
        "tree_rules": [
            ":ARG1/SQ",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG2/NP - \n\t :polarity/RB -)",
        "graph_rules": {
            "hear-01": [
                ":ARG0/NP",
                ":ARG2/NP",
                ":polarity/RB"
            ]
        },
        "head": "hear-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC -) (:ARG0/NP) (VP (VB -) (:polarity/RB) (VP (VB xxx) (:ARG2/NP))) (. -)))",
        "tree_rules": [
            ":ARG2/NP",
            ":polarity/RB",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/E - \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :time/E -)",
        "graph_rules": {
            "hear-01": [
                ":polarity/E",
                ":ARG0/NP",
                ":ARG1/NP",
                ":time/E"
            ]
        },
        "head": "hear-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (ADVP (RB -)) (VP (VB xxx) (:ARG1/NP)) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG0/NP",
            ":time/E",
            ":polarity/E"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/VP - \n\t :ARG2/NP -)",
        "graph_rules": {
            "mean-01": [
                ":ARG1/VP",
                ":ARG2/NP"
            ]
        },
        "head": "mean-01",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S ('' -) (:ARG2/NP) (VP (VB -) (SBAR (IN -) (S (NP (NP (NN xxx)) (: -) (NP (: -)) ('' -)) (:ARG1/VP)))) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1/VP",
            ":ARG2/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1/VB - \n\t :ARG2/SBAR -)",
        "graph_rules": {
            "mean-01": [
                ":ARG1/VB",
                ":ARG2/SBAR"
            ]
        },
        "head": "mean-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (NP (TO -)) (VP (:ARG1/VB) (VP (VB xxx) (:ARG2/SBAR))) (. -) ('' -)))",
        "tree_rules": [
            ":ARG2/SBAR",
            ":ARG1/VB"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/VP"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "list",
            "inPP": false,
            "number": "plural"
        },
        "tree": "(ROOT (S ('' -) (NP (CC xxx)) (:domain/ADVP) (:ARG2/VP) (. -) ('' -)))",
        "tree_rules": [
            ":ARG2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/E - \n\t :ARG1/DT - \n\t :ARG2/NP -)",
        "graph_rules": {
            "kind-01": [
                ":ARG0/E",
                ":ARG1/DT",
                ":ARG2/NP"
            ]
        },
        "head": "kind-01",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S (NP ('' -)) (VP (VB -) (S (:ARG2/NP) (NP (:ARG1/DT) (NN xxx)))) (. -)))",
        "tree_rules": [
            ":ARG1/DT",
            ":ARG2/NP",
            ":ARG0/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/E - \n\t :ARG1/NP - \n\t :manner/JJ -)",
        "graph_rules": {
            "admire-01": [
                ":ARG0/E",
                ":ARG1/NP",
                ":manner/JJ"
            ]
        },
        "head": "admire-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (VP (VB xxx) (:ARG1/NP)) (. -) ('' -)))",
        "tree_rules": [
            ":manner/JJ",
            ":ARG1/NP",
            ":ARG0/E"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/CC -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/CC"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG0/NP) (VP (:ARG1/VB) (SBAR (S (:ARG1/NP) (, -) ('' -) (VP (VB xxx) (:ARG0/NP) (, -) (:ARG0-of/S))) (, -) ('' -) (:ARG1/CC) (:ARG1/S))) (. -) ('' -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":ARG1/CC"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG0/NP) (:op2/VP) (. -)))",
        "tree_rules": [
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S - \n\t :ARG2/NP - \n\t :time/SBAR -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/S",
                ":ARG2/NP",
                ":time/SBAR"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (:ARG0/NP) (VP (VB xxx) (PP (TO -) (NP (PRP -))) (, -) (:time/SBAR)) (. -)))",
        "tree_rules": [
            ":ARG2/NP",
            ":time/SBAR",
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :mod/NP -)",
        "graph_rules": {
            "chapter": [
                ":mod/NP"
            ]
        },
        "head": "chapter",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (NP (NP (NN xxx)) (:mod/NP) (. -)))",
        "tree_rules": [
            ":mod/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/PP - \n\t :ARG1/NP -)",
        "graph_rules": {
            "inhabit-01": [
                ":ARG0/PP",
                ":ARG1/NP"
            ]
        },
        "head": "inhabit-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/NP) (VP (VB -) (VP (VB xxx) (:ARG0/PP))) (. -)))",
        "tree_rules": [
            ":ARG0/PP",
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "passive"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG2/S - \n\t :manner/PP -)",
        "graph_rules": {
            "reply-01": [
                ":ARG0/NP",
                ":ARG2/S",
                ":manner/PP"
            ]
        },
        "head": "reply-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG2/S) (, -) ('' -) (VP (VB xxx) (:ARG0/NP) (, -) (:manner/PP)) (. -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":manner/PP",
            ":ARG2/S"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/E -)",
        "graph_rules": {
            "demand-01": [
                ":ARG0/NP",
                ":ARG1/E"
            ]
        },
        "head": "demand-01",
        "name": ":root/MULTI-SENTENCE",
        "noun_info": {},
        "tree": "(MULTI-SENTENCE (ROOT (SBARQ ('' -) (:ARG0/WHADVP) (:ARG1/SQ) (. -) ('' -))) (ROOT (S (VP (VB xxx) (:ARG0/NP)) (. -))))",
        "tree_rules": [
            ":ARG0/NP",
            ":ARG1/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG2/E -)",
        "graph_rules": {
            "reply-01": [
                ":ARG0/NP",
                ":ARG2/E"
            ]
        },
        "head": "reply-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":ARG2/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "confess-01": [
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "confess-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (:ARG0/NP) (VP (VB xxx) (, -) (:ARG0-of/S)) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/PP - \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op1/PP",
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VP (VBD -) (:ARG0/NP) (:op1/PP)) (, -) (CC xxx) (:op2/VP)) (. -)))",
        "tree_rules": [
            ":op1/PP",
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG0/NP) (:op2/VP) (. -)))",
        "tree_rules": [
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S - \n\t :ARG2/NP - \n\t :time/SBAR -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/S",
                ":ARG2/NP",
                ":time/SBAR"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (:ARG0/NP) (VP (VB xxx) (PP (TO -) (NP (PRP -))) (, -) (:time/SBAR)) (. -)))",
        "tree_rules": [
            ":ARG2/NP",
            ":time/SBAR",
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :mod/NP -)",
        "graph_rules": {
            "chapter": [
                ":mod/NP"
            ]
        },
        "head": "chapter",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "proper",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (NP (NP (NN xxx)) (:mod/NP) (. -)))",
        "tree_rules": [
            ":mod/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/PP -)",
        "graph_rules": {
            "belong-01": [
                ":ARG0/NP",
                ":ARG1/PP"
            ]
        },
        "head": "belong-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:ARG1/PP)) (. -)))",
        "tree_rules": [
            ":ARG1/PP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/NP - \n\t :degree/ADVP - \n\t :ARG0-of/E -)",
        "graph_rules": {
            "occupy-01": [
                ":ARG1/NP",
                ":degree/ADVP",
                ":ARG0-of/E"
            ]
        },
        "head": "occupy-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/NP) (VP (VB -) (ADJP (:degree/ADVP) (VB xxx) (:ARG1/SBAR))) (. -)))",
        "tree_rules": [
            ":degree/ADVP",
            ":ARG1/NP",
            ":ARG0-of/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "passive"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NN - \n\t :ARG2/PP -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/NN",
                ":ARG2/PP"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1-of/ADVP) (, -) ('' -) (:ARG0/NP) (VP (VB xxx) (:ARG2/PP)) (. -)))",
        "tree_rules": [
            ":ARG1/NN",
            ":ARG2/PP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/NP -)",
        "graph_rules": {
            "go-out-18": [
                ":ARG1/NP"
            ]
        },
        "head": "go-out-18",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/NP) (VP (VB -) (VP (VB xxx) (PRT (RP xxx)))) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "present perfect",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/E - \n\t :ARG2/E -)",
        "graph_rules": {
            "equal-01": [
                ":ARG1/E",
                ":ARG2/E"
            ]
        },
        "head": "equal-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (NP (:op1/CD) (CC -) (:op2/CD)) (VP (VBP -) (NP (CD -))) (. -)))",
        "tree_rules": [
            ":ARG2/E",
            ":ARG1/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1-of/JJ -)",
        "graph_rules": {
            "morning": [
                ":ARG1-of/JJ"
            ]
        },
        "head": "morning",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (INTJ (:ARG1-of/JJ) (NN xxx) (. -)))",
        "tree_rules": [
            ":ARG1-of/JJ"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1/E - \n\t :ARG2/E -)",
        "graph_rules": {
            "equal-01": [
                ":ARG1/E",
                ":ARG2/E"
            ]
        },
        "head": "equal-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (NP (:op1/CD) (CC -) (:op2/CD)) (VP (VBP -) (NP (CD -)) (: -) (NP (CD -))) (. -)))",
        "tree_rules": [
            ":ARG1/E",
            ":ARG2/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :polarity/RB -)",
        "graph_rules": {
            "have-03": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":polarity/RB"
            ]
        },
        "head": "have-03",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:polarity/RB) (:ARG1/NP)) (. -)))",
        "tree_rules": [
            ":polarity/RB",
            ":ARG1/NP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "phew",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (FRAG (ADVP (RB xxx)) (. -)))",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "eh",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "proper",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (NP ('' -) (NN xxx) (. -)))",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1/NP - \n\t :ARG2/NP - \n\t :mod/ADVP -)",
        "graph_rules": {
            "be-located-at-91": [
                ":ARG1/NP",
                ":ARG2/NP",
                ":mod/ADVP"
            ]
        },
        "head": "be-located-at-91",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (VP (VBP -) (S (:ARG1/NP) (:mod/ADVP) (:ARG2/NP))) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":mod/ADVP",
            ":ARG2/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/E - \n\t :op2/MD -)",
        "graph_rules": {
            "and": [
                ":op1/E",
                ":op2/MD"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": "(ROOT (NP (NP (NP (NP (:polarity/NP) (ADVP (CC xxx))) (PRN (: -) (NP (QP (CD -) (CD -))) (: -))) (: -) (:ARG1/S)) (: -)))",
        "tree_rules": [
            ":op2/MD",
            ":op1/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/PP - \n\t :ARG1/NP -)",
        "graph_rules": {
            "concern-01": [
                ":ARG0/PP",
                ":ARG1/NP"
            ]
        },
        "head": "concern-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/NP) (VP (VB -) (VP (VB xxx) (:ARG0/PP))) (. -)))",
        "tree_rules": [
            ":ARG0/PP",
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "passive"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :ARG2/PP - \n\t :polarity/RB -)",
        "graph_rules": {
            "amuse-01": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":ARG2/PP",
                ":polarity/RB"
            ]
        },
        "head": "amuse-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB -) (:polarity/RB) (VP (VB xxx) (:ARG1/NP) (:ARG2/PP))) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG2/PP",
            ":polarity/RB",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/FRAG -)",
        "graph_rules": {
            "repeat-01": [
                ":ARG0/NP",
                ":ARG1/FRAG"
            ]
        },
        "head": "repeat-01",
        "name": ":root/MULTI-SENTENCE",
        "noun_info": {},
        "tree": "(MULTI-SENTENCE (ROOT (FRAG (S (VP ('' -) (:polarity/NP) (:ARG1/FRAG))) (. -) ('' -))) (ROOT (S (VP (VB xxx) (:ARG0/NP)) (. -))))",
        "tree_rules": [
            ":ARG1/FRAG",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP -)",
        "graph_rules": {
            "raise-01": [
                ":ARG0/NP",
                ":ARG1/NP"
            ]
        },
        "head": "raise-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:ARG1/NP)) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/NP - \n\t :ARG1-of/E - \n\t :time/SBAR -)",
        "graph_rules": {
            "disturb-01": [
                ":ARG1/NP",
                ":ARG1-of/E",
                ":time/SBAR"
            ]
        },
        "head": "disturb-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:duration/PP) (VP (VB -) (VP (VB -) (VP (VB xxx) (NP-TMP (QP (:mod/RB) (:ARG2/CD)) (NNS -))))) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":time/SBAR",
            ":ARG1-of/E"
        ],
        "verb_info": {
            "tense": "present perfect",
            "voice": "passive"
        }
    },
    {
        "graph": "(XXX \n\t :op1/S - \n\t :op1 -)",
        "graph_rules": {
            "and": [
                ":op1/S",
                ":op1"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:op1/S) (, -) (CC xxx) (:ARG0/S) (. -)))",
        "tree_rules": [
            ":op1/NP",
            ":op1/S"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/PP - \n\t :ARG1/NP - \n\t :time/E - \n\t :domain/E -)",
        "graph_rules": {
            "disturb-01": [
                ":ARG0/PP",
                ":ARG1/NP",
                ":time/E",
                ":domain/E"
            ]
        },
        "head": "disturb-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ord/NP) (, -) (:quant/ADVP) (, -) (:ARG1/NP) (VP (VB -) (VP (VB xxx) (:ARG0/PP))) (. -)))",
        "tree_rules": [
            ":ARG0/PP",
            ":ARG1/NP",
            ":time/E",
            ":domain/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "passive"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :degree/RB -)",
        "graph_rules": {
            "exercise-02": [
                ":ARG0/NP",
                ":degree/RB"
            ]
        },
        "head": "exercise-02",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB -) (:polarity/RB) (VP (VB -) (NP (:degree/RB) (NN xxx)))) (. -)))",
        "tree_rules": [
            ":degree/RB",
            ":ARG0/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :polarity/DT -)",
        "graph_rules": {
            "have-03": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":polarity/DT"
            ]
        },
        "head": "have-03",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:ARG1/NP)) (. -)))",
        "tree_rules": [
            ":polarity/DT",
            ":ARG1/NP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/E -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/E"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (S (:ARG0/NP) (VP (VB -) (VP (VB xxx)))) (, -) (ADVP (RB -)) (, -) (S (NP (NP (CD -)) (: -) (NP (CD -)) (: -) (CC -) (PRN (: -) (NP (CD -))) (NP (NNS -)) (: -))) (: -) ('' -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":ARG1/E"
        ],
        "verb_info": {
            "tense": "past continuous",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :quant/E -)",
        "graph_rules": {
            "amr-unknown": [
                ":quant/E"
            ]
        },
        "head": "amr-unknown",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "",
            "inPP": true,
            "number": ""
        },
        "tree": "(ROOT (FRAG (NP (NP ('' -) (NNPS -)) (PP (IN -) (NP (WP xxx)))) (. -) ('' -)))",
        "tree_rules": [
            ":quant/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/SBAR - \n\t :manner/E -)",
        "graph_rules": {
            "realize-01": [
                ":ARG0/NP",
                ":ARG1/SBAR",
                ":manner/E"
            ]
        },
        "head": "realize-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (ADVP (RB -)) (VP (VB xxx) (:ARG1/SBAR)) (. -)))",
        "tree_rules": [
            ":ARG1/SBAR",
            ":ARG0/NP",
            ":manner/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/PP -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/PP"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/PP) (, -) ('' -) (:ARG0/NP) (VP (VB xxx) (, -) ('' -) (:ARG1-of/SBAR)) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1/PP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "fly",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (SBARQ (WHNP ('' -)) (SQ (VP (VB xxx))) (. -) ('' -)))",
        "tree_rules": [],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :mod/INTJ -)",
        "graph_rules": {
            "no": [
                ":mod/INTJ"
            ]
        },
        "head": "no",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": "(ROOT (FRAG (:mod/INTJ) (, -) (NP (DT xxx)) (. -)))",
        "tree_rules": [
            ":mod/INTJ"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/NP - \n\t :ARG0-of/NP -)",
        "graph_rules": {
            "object": [
                ":mod/NP",
                ":ARG0-of/NP"
            ]
        },
        "head": "object",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "plural"
        },
        "tree": "(ROOT (FRAG (NP (:mod/NP) (NP (:ARG0-of/NP) (NN xxx))) (. -) ('' -)))",
        "tree_rules": [
            ":ARG0-of/NP",
            ":mod/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "bee",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (SQ ('' -) (NP (NNPS -)) (. -) ('' -)))",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/INTJ -)",
        "graph_rules": {
            "no": [
                ":mod/INTJ"
            ]
        },
        "head": "no",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": "(ROOT (FRAG (:mod/INTJ) (, -) (NP (DT xxx)) (. -)))",
        "tree_rules": [
            ":mod/INTJ"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/PP - \n\t :ARG1/PP -)",
        "graph_rules": {
            "concern-01": [
                ":ARG0/PP",
                ":ARG1/PP"
            ]
        },
        "head": "concern-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/PP) (, -) (NP (PRP -)) (VP (VB -) (VP (VB xxx) (:ARG0/PP))) (. -)))",
        "tree_rules": [
            ":ARG0/PP",
            ":ARG1/PP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "passive"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/DT - \n\t :purpose/VP - \n\t :duration/PP -)",
        "graph_rules": {
            "time": [
                ":polarity/DT",
                ":purpose/VP",
                ":duration/PP"
            ]
        },
        "head": "time",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S (NP (EX -)) (VP (VB -) (NP (NP (:polarity/DT) (NN xxx)) (:manner/PP))) (. -) ('' -)))",
        "tree_rules": [
            ":polarity/DT",
            ":duration/PP",
            ":purpose/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "ah",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (FRAG ('' -) (INTJ (UH xxx)) (. -)))",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG2/NP -)",
        "graph_rules": {
            "mean-01": [
                ":ARG0/NP",
                ":ARG2/NP"
            ]
        },
        "head": "mean-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:ARG2/NP)) (. -) ('' -)))",
        "tree_rules": [
            ":ARG2/NP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "that-is-it-00",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "pronoun",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S ('' -) (ADVP (UH -)) (, -) (NP (DT xxx)) (VP (VB -) (NP (PRP xxx))) (. -)))",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "star",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "plural"
        },
        "tree": "(ROOT (FRAG (NP (NP (DT -)) (NP (NN xxx))) (. -) ('' -)))",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VB -)",
        "graph_rules": {
            "and": [
                ":op2/VB"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (SBARQ ('' -) (CC xxx) (:ARG1/WHNP) (:quant/SQ) (. -) ('' -)))",
        "tree_rules": [
            ":op2/VB"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG2/E -)",
        "graph_rules": {
            "have-quant-91": [
                ":ARG2/E"
            ]
        },
        "head": "have-quant-91",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (FRAG (PP ('' -) (NP (NP (CD -)) (: -) (NP (CD -)) (: -) (CC -) (PRN (: -) (NP (NP (CD -) (CD -)) (, -) (NP (CD -))) (: -)) (NP (CD -)))) (: -) (NP (NP (CD -)) (: -) (NP (NP (CD -) (CD -)) (, -) (NP (CD -) (: -) (CD -))) (: -) (NP (CD -) (: -) (CD -))) (. -)))",
        "tree_rules": [
            ":ARG2/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/S - \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op1/S",
                ":op2/S"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:op1/S) (: -) (:op2/S) (. -) ('' -)))",
        "tree_rules": [
            ":op1/S",
            ":op2/S"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VB -)",
        "graph_rules": {
            "and": [
                ":op2/VB"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (SBARQ ('' -) (CC xxx) (:ARG1/WHNP) (:ARG3/SQ) (. -) ('' -)))",
        "tree_rules": [
            ":op2/VB"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :ARG3/SBAR -)",
        "graph_rules": {
            "do-02": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":ARG3/SBAR"
            ]
        },
        "head": "do-02",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/NP) (VP (VB xxx) (:ARG3/SBAR)) (. -) ('' -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":ARG3/SBAR",
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "yes",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (INTJ ('' -) (UH xxx) (. -) ('' -)))",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "nothing",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (NP ('' -) (NN xxx) (. -)))",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP -)",
        "graph_rules": {
            "own-01": [
                ":ARG0/NP",
                ":ARG1/NP"
            ]
        },
        "head": "own-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:ARG1/NP)) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP -)",
        "graph_rules": {
            "own-01": [
                ":ARG0/NP",
                ":ARG1/NP"
            ]
        },
        "head": "own-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG0/NP) (VP (VB xxx) (:ARG1/NP)) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "yes",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (INTJ ('' -) (UH xxx) (. -) ('' -)))",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/VP"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "list",
            "inPP": false,
            "number": "plural"
        },
        "tree": "(ROOT (S ('' -) (NP (CC xxx)) (:ARG2/VP) (: -) (: -) ('' -)))",
        "tree_rules": [
            ":ARG2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1-of/ADJP - \n\t :domain/NP -)",
        "graph_rules": {
            "matter": [
                ":ARG1-of/ADJP",
                ":domain/NP"
            ]
        },
        "head": "matter",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S (:domain/NP) (VP (VB -) (NP (DT -) (:ARG1-of/ADJP) (NN xxx))) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1-of/ADJP",
            ":domain/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/E -)",
        "graph_rules": {
            "and": [
                ":op2/E"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (SBARQ ('' -) (CC xxx) (:ARG1/WHNP) (:ARG0/SQ) (. -) ('' -)))",
        "tree_rules": [
            ":op2/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/E -)",
        "graph_rules": {
            "and": [
                ":op2/E"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (SBARQ ('' -) (CC xxx) (:ARG1/WHNP) (:ARG0/SQ) (. -) ('' -)))",
        "tree_rules": [
            ":op2/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1/SBAR - \n\t :condition/SBAR -)",
        "graph_rules": {
            "possible-01": [
                ":ARG1/SBAR",
                ":condition/SBAR"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (NP (PRP -)) (VP (VB -) (S (NP (PRP -)) (ADJP (JJ xxx)) (:ARG1/SBAR)) (, -) (:condition/SBAR)) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1/SBAR",
            ":condition/SBAR"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/SBAR - \n\t :ARG2/E -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/SBAR",
                ":ARG2/E"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (ADVP (:mod/DT) (:ARG0/NN)) (, -) ('' -) (:ARG0/NP) (VP (VB xxx) (:ARG1/SBAR)) ('' -)))",
        "tree_rules": [
            ":ARG1/SBAR",
            ":ARG0/NP",
            ":ARG2/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/SBAR - \n\t :manner/WHADVP -)",
        "graph_rules": {
            "possible-01": [
                ":ARG1/SBAR",
                ":manner/WHADVP"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (SBARQ ('' -) (:manner/WHADVP) (SQ (VBZ -) (NP (PRP -)) (ADJP (JJ xxx) (:ARG0/PP))) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1/SBAR",
            ":manner/WHADVP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG2/SQ - \n\t :manner/E -)",
        "graph_rules": {
            "retort-01": [
                ":ARG0/NP",
                ":ARG2/SQ",
                ":manner/E"
            ]
        },
        "head": "retort-01",
        "name": ":root/MULTI-SENTENCE",
        "noun_info": {},
        "tree": "(MULTI-SENTENCE (ROOT (SBARQ (:ARG1/WHNP) (:ARG2/SQ) (. -) ('' -))) (ROOT (S (:ARG0/NP) (VP (VB xxx) (, -) (ADVP (RB -))) (. -))))",
        "tree_rules": [
            ":ARG2/SQ",
            ":ARG0/NP",
            ":manner/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :polarity/RB -)",
        "graph_rules": {
            "know-01": [
                ":ARG0/NP",
                ":polarity/RB"
            ]
        },
        "head": "know-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG0/NP) (VP (VB -) (:polarity/RB) (VP (VB xxx))) (. -)))",
        "tree_rules": [
            ":polarity/RB",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/PP - \n\t :ARG1-of/E -)",
        "graph_rules": {
            "belong-01": [
                ":ARG0/NP",
                ":ARG1/PP",
                ":ARG1-of/E"
            ]
        },
        "head": "belong-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG0/NP) (VP (VB xxx) (:ARG1/PP) (, -) (:ARG0/SBAR)) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1/PP",
            ":ARG0/NP",
            ":ARG1-of/E"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :domain/IN - \n\t :ARG1-of/E -)",
        "graph_rules": {
            "all": [
                ":domain/IN",
                ":ARG1-of/E"
            ]
        },
        "head": "all",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": "(ROOT (S (NP ('' -)) (VP (VB -) (SBAR (:domain/IN) (S (NP (DT xxx) (DT -)) (VP (VBZ -) (ADJP (JJ -)))))) (. -) ('' -)))",
        "tree_rules": [
            ":domain/IN",
            ":ARG1-of/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "certain",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (FRAG (ADVP ('' -)) (RB -) (. -)))",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0 - \n\t :ARG1/NP - \n\t :condition/VB -)",
        "graph_rules": {
            "belong-01": [
                ":ARG0",
                ":ARG1/NP",
                ":condition/VB"
            ]
        },
        "head": "belong-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (SBAR (WHADVP (WRB -)) (S (:ARG1/NP) (VP (:condition/VB) (NP (:ARG1/NP) (SBAR (WHNP (WDT -)) (S (VP (VB xxx) (:ARG1/PP)))))))) (, -) (NP (PRP -)) (VP (VBZ -) (NP (PRP$ -))) (. -)))",
        "tree_rules": [
            ":condition/VB",
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0 - \n\t :ARG1/NP - \n\t :condition/VB -)",
        "graph_rules": {
            "belong-01": [
                ":ARG0",
                ":ARG1/NP",
                ":condition/VB"
            ]
        },
        "head": "belong-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (SBAR (WHADVP (WRB -)) (S (:ARG1/NP) (VP (:condition/VB) (NP (:ARG1/NP) (SBAR (WHNP (WDT -)) (S (VP (VB xxx) (:ARG1/PP)))))))) (, -) (NP (PRP -)) (VP (VBZ -) (NP (PRP$ -))) (. -)))",
        "tree_rules": [
            ":condition/VB",
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VB -)",
        "graph_rules": {
            "and": [
                ":op2/VB"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (SBARQ ('' -) (CC xxx) (:ARG1/WHNP) (:ARG2/SQ) (. -) ('' -)))",
        "tree_rules": [
            ":op2/VB"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG2/S -)",
        "graph_rules": {
            "reply-01": [
                ":ARG0/NP",
                ":ARG2/S"
            ]
        },
        "head": "reply-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG2/S) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG2/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/VP - \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op1/VP",
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG0/NP) (VP (:op1/VP) (CC xxx) (:op2/VP)) (. -)))",
        "tree_rules": [
            ":op1/VP",
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :domain/NP -)",
        "graph_rules": {
            "difficult": [
                ":domain/NP"
            ]
        },
        "head": "difficult",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:domain/NP) (VP (VB -) (ADJP (JJ xxx))) (. -)))",
        "tree_rules": [
            ":domain/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/VP"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:domain/NP) (:ARG2/VP) (. -) ('' -)))",
        "tree_rules": [
            ":ARG2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1/NP - \n\t :mod/ADVP - \n\t :polarity/RB -)",
        "graph_rules": {
            "satisfy-01": [
                ":ARG1/NP",
                ":mod/ADVP",
                ":polarity/RB"
            ]
        },
        "head": "satisfy-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/NP) (VP (VB -) (:mod/ADVP) (ADJP (:polarity/RB) (JJ xxx))) (. -)))",
        "tree_rules": [
            ":polarity/RB",
            ":mod/ADVP",
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/MD -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/MD"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (S (:condition/SBAR) (, -) ('' -) (:ARG0/NP) (VP (VB xxx))) (, -) ('' -) (NP (PRP -)) (:op2/VP) (. -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":ARG1/MD"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/CC - \n\t :condition/SBAR -)",
        "graph_rules": {
            "possible-01": [
                ":ARG1/CC",
                ":condition/SBAR"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:condition/SBAR) (, -) (:ARG0/NP) (VP (MD xxx) (:op2/VP)) (. -)))",
        "tree_rules": [
            ":ARG1/CC",
            ":condition/SBAR"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG2/MD -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/MD"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG0/NP) (:ARG1/VP) ('' -)))",
        "tree_rules": [
            ":ARG2/MD"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "no",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (FRAG (ADVP ('' -) (DT xxx)) (. -)))",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG2/MD -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/MD"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG0/NP) (:ARG1/VP) (. -) ('' -)))",
        "tree_rules": [
            ":ARG2/MD"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1/IN - \n\t :ARG2/NP -)",
        "graph_rules": {
            "mean-01": [
                ":ARG1/IN",
                ":ARG2/NP"
            ]
        },
        "head": "mean-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG2/NP) (VP (VB -) (SBAR (:ARG1/IN) (S (VP (VB xxx))))) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1/IN",
            ":ARG2/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/NP - \n\t :ARG2/SBAR -)",
        "graph_rules": {
            "mean-01": [
                ":ARG1/NP",
                ":ARG2/SBAR"
            ]
        },
        "head": "mean-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/NP) (VP (VB xxx) (:ARG2/SBAR)) (. -)))",
        "tree_rules": [
            ":ARG2/SBAR",
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/CC - \n\t :time/ADVP -)",
        "graph_rules": {
            "and": [
                ":op2/CC",
                ":time/ADVP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:time/ADVP) (:ARG0/NP) (:op2/VP) (. -) ('' -)))",
        "tree_rules": [
            ":op2/CC",
            ":time/ADVP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "list",
            "inPP": false,
            "number": "plural"
        },
        "tree": "(ROOT (S ('' -) (NP (CC xxx)) (:domain/ADVP) (:op2/VP) (. -) ('' -)))",
        "tree_rules": [
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "think-01": [
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "think-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/VP"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:domain/NP) (:ARG2/VP) (. -) ('' -)))",
        "tree_rules": [
            ":ARG2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP -)",
        "graph_rules": {
            "have-03": [
                ":ARG0/NP",
                ":ARG1/NP"
            ]
        },
        "head": "have-03",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:topic/PP) (, -) (:ARG0/NP) (VP (VB xxx) (NP (:ARG1/NP) (:ARG1-of/SBAR) (: -) (NP (NNS -)))) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S - \n\t :ARG2/PP - \n\t :ARG3/NP -)",
        "graph_rules": {
            "continue-02": [
                ":ARG0/NP",
                ":ARG1/S",
                ":ARG2/PP",
                ":ARG3/NP"
            ]
        },
        "head": "continue-02",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (:ARG0/NP) (VP (VB xxx) (:ARG3/NP) (:ARG2/PP)) (. -)))",
        "tree_rules": [
            ":ARG3/NP",
            ":ARG2/PP",
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP -)",
        "graph_rules": {
            "own-01": [
                ":ARG0/NP",
                ":ARG1/NP"
            ]
        },
        "head": "own-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:ARG1/NP) (PRN (-LRB- -) (FRAG (:ARG0/SBAR) (: -) (:ARG0/NP) (ADVP (RB -)) (:ARG0/VP)) (-RRB- -))) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/SBAR - \n\t :ARG1/S -)",
        "graph_rules": {
            "cause-01": [
                ":ARG0/SBAR",
                ":ARG1/S"
            ]
        },
        "head": "cause-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/S) (, -) (:ARG1/CC) (S (NP (PRP -)) (VP (VBZ -) (:op2/PP) (, -) (:ARG0/SBAR))) (. -)))",
        "tree_rules": [
            ":ARG0/SBAR",
            ":ARG1/S"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG2/PP -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/PP"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG1/NP) (VP (VBP -) (:ARG2/PP) (:ARG0/PP)) ('' -)))",
        "tree_rules": [
            ":ARG2/PP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1/S - \n\t :ARG2/S -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG1/S",
                ":ARG2/S"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/S) (, -) (CC xxx) (:ARG2/S) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG2/S"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG0/NP) (:op2/VP) (. -)))",
        "tree_rules": [
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S - \n\t :ARG1-of/E -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/S",
                ":ARG1-of/E"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (:ARG0/NP) (VP (VB xxx) (ADVP (RB -)) (, -) (:ARG0-of/S)) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/NP",
            ":ARG1-of/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :mod/NP -)",
        "graph_rules": {
            "chapter": [
                ":mod/NP"
            ]
        },
        "head": "chapter",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (NP (NP (NN xxx)) (:mod/NP) (. -)))",
        "tree_rules": [
            ":mod/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :degree/RB - \n\t :domain/NP -)",
        "graph_rules": {
            "strange": [
                ":degree/RB",
                ":domain/NP"
            ]
        },
        "head": "strange",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:domain/NP) (VP (VB -) (ADJP (:degree/RB) (JJ xxx))) (. -)))",
        "tree_rules": [
            ":degree/RB",
            ":domain/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(s / small \n\t :compared-to/PP - \n\t :degree (m / most) \n\t :domain/NP -)",
        "graph_rules": {
            "small": [
                ":compared-to/PP",
                ":domain/NP"
            ]
        },
        "head": "small/most",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": "(ROOT (S (:domain/NP) (VP (VB -) (NP (NP (DT -) (JJS xxx)) (:compared-to/PP))) (. -)))",
        "tree_rules": [
            ":compared-to/PP",
            ":domain/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1/S -)",
        "graph_rules": {
            "have-concession-91": [
                ":ARG1/S"
            ]
        },
        "head": "have-concession-91",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC -) (:ARG1/S) (: -) ('' -) (:ARG1/S) (. -)))",
        "tree_rules": [
            ":ARG1/S"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG2/ADJP -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/ADJP"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:domain/NP) (VP (VBZ -) (:polarity/RB) (:ARG2/ADJP)) (. -)))",
        "tree_rules": [
            ":ARG2/ADJP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0 - \n\t :ARG1/NP - \n\t :ARG1-of/E -)",
        "graph_rules": {
            "light-04": [
                ":ARG0",
                ":ARG1/NP",
                ":ARG1-of/E"
            ]
        },
        "head": "light-04",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "plural"
        },
        "tree": "(ROOT (S (SBAR (WHADVP (WRB -)) (FRAG (NP-TMP (NP (:ARG0/PRP) (NN xxx)) (:ARG1/NP)))) (, -) (NP (PRP -)) (:ARG2/VP) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG1-of/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/CC - \n\t :ARG2/S - \n\t :time/SBAR -)",
        "graph_rules": {
            "send-02": [
                ":ARG0/NP",
                ":ARG1/CC",
                ":ARG2/S",
                ":time/SBAR"
            ]
        },
        "head": "send-02",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:time/SBAR) (, -) (:poss/NP) (VP (VB xxx) (:op2/NP) (:ARG2/S)) (. -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":ARG1/CC",
            ":ARG2/S",
            ":time/SBAR"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1-of/JJ - \n\t :domain/NP -)",
        "graph_rules": {
            "occupation": [
                ":ARG1-of/JJ",
                ":domain/NP"
            ]
        },
        "head": "occupation",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S (:domain/NP) (VP (VB -) (NP (DT -) (:ARG1-of/JJ) (NN xxx))) (. -)))",
        "tree_rules": [
            ":ARG1-of/JJ",
            ":domain/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/E -)",
        "graph_rules": {
            "and": [
                ":op2/E"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG0/SBAR) (, -) (:ARG1/NP) (:ARG1/VP) (. -) ('' -)))",
        "tree_rules": [
            ":op2/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/E - \n\t :manner/ADVP - \n\t :time/SBAR -)",
        "graph_rules": {
            "salute-01": [
                ":ARG0/NP",
                ":ARG1/E",
                ":manner/ADVP",
                ":time/SBAR"
            ]
        },
        "head": "salute-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:time/SBAR) (:ARG1/NP) (:manner/ADVP) (VP (VB xxx) (NP (DT -) (NN -))) (. -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":time/SBAR",
            ":manner/ADVP",
            ":ARG1/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1-of/JJ -)",
        "graph_rules": {
            "morning": [
                ":ARG1-of/JJ"
            ]
        },
        "head": "morning",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (FRAG ('' -) (INTJ (:ARG1-of/JJ) (NN xxx)) (. -)))",
        "tree_rules": [
            ":ARG1-of/JJ"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/E - \n\t :ARG2/S -)",
        "graph_rules": {
            "reply-01": [
                ":ARG0/E",
                ":ARG2/S"
            ]
        },
        "head": "reply-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG2/S) (, -) ('' -) (VP (VB xxx)) (NP (DT -) (NN -)) (. -)))",
        "tree_rules": [
            ":ARG2/S",
            ":ARG0/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1-of/JJ -)",
        "graph_rules": {
            "morning": [
                ":ARG1-of/JJ"
            ]
        },
        "head": "morning",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (VP ('' -) (FRAG (INTJ (:ARG1-of/JJ) (NN xxx)))) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1-of/JJ"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG2/NP -)",
        "graph_rules": {
            "order-01": [
                ":ARG2/NP"
            ]
        },
        "head": "order-01",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "plural"
        },
        "tree": "(ROOT (S ('' -) (:ARG2/NP) (VP (VB -) (NP (DT -) (NN xxx))) (. -) ('' -)))",
        "tree_rules": [
            ":ARG2/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG2/VP -)",
        "graph_rules": {
            "order-01": [
                ":ARG2/VP"
            ]
        },
        "head": "order-01",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "plural"
        },
        "tree": "(ROOT (S ('' -) (NP (DT -) (NN xxx)) (:ARG2/VP) (. -)))",
        "tree_rules": [
            ":ARG2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1-of/JJ -)",
        "graph_rules": {
            "evening": [
                ":ARG1-of/JJ"
            ]
        },
        "head": "evening",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (FRAG (NP (:ARG1-of/JJ) (NN xxx) (. -) ('' -))))",
        "tree_rules": [
            ":ARG1-of/JJ"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG0/NP) (:op2/VP) (. -)))",
        "tree_rules": [
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG2/E -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/E"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (SBARQ ('' -) (CC xxx) (:ARG0/WHADVP) (:ARG0/SQ) (. -) ('' -)))",
        "tree_rules": [
            ":ARG2/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/E - \n\t :ARG2/S -)",
        "graph_rules": {
            "reply-01": [
                ":ARG0/E",
                ":ARG2/S"
            ]
        },
        "head": "reply-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG2/S) (, -) ('' -) (VP (VB xxx)) (NP (DT -) (NN -)) (. -)))",
        "tree_rules": [
            ":ARG2/S",
            ":ARG0/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/E - \n\t :ARG1/S -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/E",
                ":ARG1/S"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (VP (VB xxx)) (NP (DT -) (NN -)) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :domain/VP -)",
        "graph_rules": {
            "order": [
                ":domain/VP"
            ]
        },
        "head": "order",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "plural"
        },
        "tree": "(ROOT (S ('' -) (NP (NN xxx)) (:domain/VP) (. -)))",
        "tree_rules": [
            ":domain/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1-of/JJ -)",
        "graph_rules": {
            "morning": [
                ":ARG1-of/JJ"
            ]
        },
        "head": "morning",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (FRAG (NP (:ARG1-of/JJ) (NN xxx) (. -) ('' -))))",
        "tree_rules": [
            ":ARG1-of/JJ"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG0/NP) (:op2/VP) (. -)))",
        "tree_rules": [
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :ARG2/PP - \n\t :time/RB -)",
        "graph_rules": {
            "mop-01": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":ARG2/PP",
                ":time/RB"
            ]
        },
        "head": "mop-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:time/RB) (:ARG0/NP) (VP (VB xxx) (:ARG1/NP) (:ARG2/PP)) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG2/PP",
            ":time/RB",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP -)",
        "graph_rules": {
            "follow-02": [
                ":ARG0/NP",
                ":ARG1/NP"
            ]
        },
        "head": "follow-02",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG0/NP) (VP (VB xxx) (:ARG1/NP)) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/NP - \n\t :time/PP -)",
        "graph_rules": {
            "reasonable-02": [
                ":ARG1/NP",
                ":time/PP"
            ]
        },
        "head": "reasonable-02",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:time/PP) (:ARG1/NP) (VP (VB -) (ADJP (JJ xxx))) (. -)))",
        "tree_rules": [
            ":time/PP",
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/S - \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op1/S",
                ":op2/S"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:op1/S) (, -) (CC xxx) (:op2/S) (. -)))",
        "tree_rules": [
            ":op1/S",
            ":op2/S"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/CC -)",
        "graph_rules": {
            "have-03": [
                ":ARG0/NP",
                ":ARG1/CC"
            ]
        },
        "head": "have-03",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:op1/NP)) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1/CC",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "list",
            "inPP": false,
            "number": "plural"
        },
        "tree": "(ROOT (S ('' -) (NP (CC xxx)) (:op2/VP) (. -) ('' -)))",
        "tree_rules": [
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/E - \n\t :ARG1/S -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/E",
                ":ARG1/S"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (VP (VB xxx)) (NP (DT -) (NN -)) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :domain/NP -)",
        "graph_rules": {
            "tragedy": [
                ":domain/NP"
            ]
        },
        "head": "tragedy",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S ('' -) (:domain/NP) (VP (VB -) (NP (DT -) (NN xxx))) (. -)))",
        "tree_rules": [
            ":domain/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/S - \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op1/S",
                ":op2/S"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:op1/S) (CC xxx) (:op2/S) (. -) ('' -)))",
        "tree_rules": [
            ":op1/S",
            ":op2/S"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP -)",
        "graph_rules": {
            "ask-01": [
                ":ARG0/NP",
                ":ARG1/NP"
            ]
        },
        "head": "ask-01",
        "name": ":root/MULTI-SENTENCE",
        "noun_info": {},
        "tree": "(MULTI-SENTENCE (ROOT (FRAG (S (VP ('' -) (:time/ADVP) (:ARG1/NP))) (. -) ('' -))) (ROOT (S (VP (VB xxx) (:ARG0/NP)) (. -))))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/NP - \n\t :op2/S - \n\t :time/ADVP -)",
        "graph_rules": {
            "and": [
                ":op1/NP",
                ":op2/S",
                ":time/ADVP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG3/S) (, -) (CC xxx) (:op2/S) (. -)))",
        "tree_rules": [
            ":time/ADVP",
            ":op1/NP",
            ":op2/S"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :degree/RB - \n\t :domain/NP -)",
        "graph_rules": {
            "funny": [
                ":degree/RB",
                ":domain/NP"
            ]
        },
        "head": "funny",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:domain/NP) (VP (VB -) (ADJP (:degree/RB) (JJ xxx))) (. -)))",
        "tree_rules": [
            ":degree/RB",
            ":domain/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/NP - \n\t :ARG2/NP - \n\t :mod/RB - \n\t :location/SBAR -)",
        "graph_rules": {
            "last-01": [
                ":ARG1/NP",
                ":ARG2/NP",
                ":mod/RB",
                ":location/SBAR"
            ]
        },
        "head": "last-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/NP) (VP (VB xxx) (:ARG2/NP) (, -) (ADVP (RB -)) (:location/SBAR)) (. -) ('' -)))",
        "tree_rules": [
            ":mod/RB",
            ":ARG2/NP",
            ":location/SBAR",
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :quant c \n\t :unit (m / month))",
        "graph_rules": {},
        "head": "temporal-quantity",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (SQ ('' -) (NP (DT -) (NN xxx)) (. -) ('' -)))",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :unit (m / month) \n\t :quant c)",
        "graph_rules": {},
        "head": "temporal-quantity",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (FRAG (INTJ ('' -) (UH -)) (, -) (NP (DT -) (NN xxx)) (. -)))",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :unit (m / minute) \n\t :quant c)",
        "graph_rules": {},
        "head": "temporal-quantity",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "plural"
        },
        "tree": "(ROOT (NP (CD -) (NN xxx) (. -)))",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :unit (d / day) \n\t :quant c)",
        "graph_rules": {},
        "head": "temporal-quantity",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "plural"
        },
        "tree": "(ROOT (NP (CD -) (NN xxx) (. -)))",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1-of/JJ -)",
        "graph_rules": {
            "evening": [
                ":ARG1-of/JJ"
            ]
        },
        "head": "evening",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (FRAG (NP (:ARG1-of/JJ) (NN xxx) (. -) ('' -))))",
        "tree_rules": [
            ":ARG1-of/JJ"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG0/NP) (:op2/VP) (. -)))",
        "tree_rules": [
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/SBAR - \n\t :time/SBAR -)",
        "graph_rules": {
            "feel-01": [
                ":ARG0/NP",
                ":ARG1/SBAR",
                ":time/SBAR"
            ]
        },
        "head": "feel-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:time/SBAR) (, -) (:ARG0/NP) (VP (VB xxx) (:ARG1/SBAR)) (. -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":ARG1/SBAR",
            ":time/SBAR"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/S - \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op1/S",
                ":op2/S"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:op1/S) (: -) (CC xxx) (:op2/S) (. -)))",
        "tree_rules": [
            ":op1/S",
            ":op2/S"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/MD -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/MD"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (S (:ARG0/NP) (VP (VB xxx))) (, -) ('' -) (NP (PRP -)) (:ARG1/VP) ('' -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":ARG1/MD"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/E - \n\t :ARG1/S -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/E",
                ":ARG1/S"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (VP (VB xxx)) (NP (DT -) (NN -)) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/PP -)",
        "graph_rules": {
            "go-on-25": [
                ":ARG0/NP",
                ":ARG1/PP"
            ]
        },
        "head": "go-on-25",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (S (:ARG0/NP) (VP (VB xxx) (PP (IN xxx) (:ARG1/PP)))) (: -) ('' -) (:domain/S) (. -)))",
        "tree_rules": [
            ":ARG1/PP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/VP - \n\t :purpose/E -)",
        "graph_rules": {
            "need-01": [
                ":ARG0/NP",
                ":ARG1/VP",
                ":purpose/E"
            ]
        },
        "head": "need-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (S (VP (TO -) (VP (VB -) (:time/ADVP) (:ARG2/PP)))) (, -) (:ARG0/NP) (VP (VB xxx) (:mod/RB) (:ARG1/VP)) (. -)))",
        "tree_rules": [
            ":ARG1/VP",
            ":ARG0/NP",
            ":purpose/E"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :time/SBAR - \n\t :ARG0-of/E -)",
        "graph_rules": {
            "walk-01": [
                ":ARG0/NP",
                ":time/SBAR",
                ":ARG0-of/E"
            ]
        },
        "head": "walk-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (S (:time/SBAR) (, -) (:ARG0/NP) (VP (MD -) (VP (VB xxx)))) (: -) (: -) (CC -) (:ARG1/S) (. -) ('' -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":time/SBAR",
            ":ARG0-of/E"
        ],
        "verb_info": {
            "tense": "simple future",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/E - \n\t :ARG1/VB -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/E",
                ":ARG1/VB"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (VP (VB xxx)) (NP (DT -) (NN -)) (. -)))",
        "tree_rules": [
            ":ARG1/VB",
            ":ARG0/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/ADVP - \n\t :ARG1/SBAR - \n\t :time/NP -)",
        "graph_rules": {
            "love-01": [
                ":ARG0/ADVP",
                ":ARG1/SBAR",
                ":time/NP"
            ]
        },
        "head": "love-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:mod/NP) (:ARG0/ADVP) (VP (VB xxx) (:ARG1/SBAR)) (. -) ('' -)))",
        "tree_rules": [
            ":time/NP",
            ":ARG1/SBAR",
            ":ARG0/ADVP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/E -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/E"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (S (:time/ADVP) (:domain/NP) (VP (VBP -) (ADJP (JJ -)))) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":ARG1/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/E - \n\t :ARG1/E -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/E",
                ":ARG1/E"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (S (NP (PRP -)) (VP (VBP -) (ADJP (JJ -)))) (, -) ('' -) (VP (VB xxx)) (NP (DT -) (NN -)) (. -)))",
        "tree_rules": [
            ":ARG0/E",
            ":ARG1/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1-of/JJ -)",
        "graph_rules": {
            "morning": [
                ":ARG1-of/JJ"
            ]
        },
        "head": "morning",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (VP ('' -) (FRAG (INTJ (:ARG1-of/JJ) (NN xxx)))) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1-of/JJ"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG0/NP) (:op2/VP) (. -)))",
        "tree_rules": [
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/VP - \n\t :ARG2/PP - \n\t :time/SBAR -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/VP",
                ":ARG2/PP",
                ":time/SBAR"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (S (:op2/NP) (VP (VB xxx) (:ARG0/NP) (:ARG2/PP) (, -) (:time/SBAR))) (, -) ('' -) (:ARG1/NP) (:ARG1/VP) (. -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":ARG2/PP",
            ":time/SBAR",
            ":ARG1/VP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/VP - \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op1/VP",
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (S (:ARG0/NP) (VP (:op1/VP) (, -) (CC xxx) (:op2/VP))) (: -) ('' -) (:mod/S) (. -)))",
        "tree_rules": [
            ":op1/VP",
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG2/ADJP -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/ADJP"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:domain/NP) (VP (VBZ -) (:mod/ADVP) (:ARG2/ADJP)) (. -)))",
        "tree_rules": [
            ":ARG2/ADJP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :poss/PP - \n\t :beneficiary/PP - \n\t :polarity/DT -)",
        "graph_rules": {
            "room": [
                ":poss/PP",
                ":beneficiary/PP",
                ":polarity/DT"
            ]
        },
        "head": "room",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S (NP (EX -)) (VP (VB -) (NP (:polarity/DT) (NN xxx)) (:poss/PP) (:beneficiary/PP) ('' -))))",
        "tree_rules": [
            ":polarity/DT",
            ":poss/PP",
            ":beneficiary/PP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :ARG0/NP - \n\t :ARG2/NP -)",
        "graph_rules": {
            "dare-01": [
                ":polarity/RB",
                ":ARG0/NP",
                ":ARG2/NP"
            ]
        },
        "head": "dare-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (SBAR (WHNP (WP -)) (S (:ARG0/NP) (VP (VB -) (:polarity/RB) (VP (VB xxx) (:ARG2/NP))))) (VP (VBD -) (UCP (:ARG1/SBAR) (:ARG3/NP))) (. -)))",
        "tree_rules": [
            ":ARG2/NP",
            ":polarity/RB",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :mod/NP -)",
        "graph_rules": {
            "chapter": [
                ":mod/NP"
            ]
        },
        "head": "chapter",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "proper",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (NP (NP (NN xxx)) (:mod/NP) (. -)))",
        "tree_rules": [
            ":mod/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/PP - \n\t :ARG1/NP -)",
        "graph_rules": {
            "inhabit-01": [
                ":ARG0/PP",
                ":ARG1/NP"
            ]
        },
        "head": "inhabit-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/NP) (VP (VB -) (VP (VB xxx) (:ARG0/PP))) (. -)))",
        "tree_rules": [
            ":ARG0/PP",
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "passive"
        }
    },
    {
        "graph": "(XXX \n\t :op1/VP - \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op1/VP",
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/NP) (VP (:op1/VP) (CC xxx) (:op2/VP)) (. -)))",
        "tree_rules": [
            ":op1/VP",
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VB - \n\t :op2/E - \n\t :time/ADVP -)",
        "graph_rules": {
            "and": [
                ":op1/VB",
                ":op2/E",
                ":time/ADVP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB -) (:time/ADVP) (VP (:op1/VB) (ADVP (:quant/ADVP) (CC xxx) (ADVP (:mod/RB) (:ARG1/RB))))) (. -)))",
        "tree_rules": [
            ":op1/VB",
            ":time/ADVP",
            ":op2/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/SQ - \n\t :ARG2/PP -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/SQ",
                ":ARG2/PP"
            ]
        },
        "head": "say-01",
        "name": ":root/MULTI-SENTENCE",
        "noun_info": {},
        "tree": "(MULTI-SENTENCE (ROOT (SBARQ ('' -) (:ARG3/WHADVP) (:ARG1/SQ) (. -) ('' -))) (ROOT (S (:ARG0/NP) (VP (VB xxx) (:ARG2/PP)) (. -))))",
        "tree_rules": [
            ":ARG1/SQ",
            ":ARG2/PP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP -)",
        "graph_rules": {
            "do-02": [
                ":ARG0/NP",
                ":ARG1/NP"
            ]
        },
        "head": "do-02",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/NP) (VP (VB -) (NP (:ARG0/NP) (VP (VB xxx)))) (. -) ('' -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "present continuous",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S - \n\t :ARG2/PP -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/S",
                ":ARG2/PP"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (:ARG0/NP) (VP (VB xxx) (:ARG2/PP)) (. -)))",
        "tree_rules": [
            ":ARG2/PP",
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :domain/NP - \n\t :ARG0-of/SBAR -)",
        "graph_rules": {
            "scholar": [
                ":domain/NP",
                ":ARG0-of/SBAR"
            ]
        },
        "head": "scholar",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S ('' -) (:domain/NP) (VP (VB -) (NP (NP (DT -) (NN xxx)) (:ARG0-of/SBAR))) (. -) ('' -)))",
        "tree_rules": [
            ":ARG0-of/SBAR",
            ":domain/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0-of/SBAR - \n\t :time/E -)",
        "graph_rules": {
            "man": [
                ":ARG0-of/SBAR",
                ":time/E"
            ]
        },
        "head": "man",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S ('' -) (NP (RB -)) (ADVP (IN -) (JJ -)) (VP (VB -) (NP (NP (DT -) (NN xxx)) (:ARG0-of/SBAR))) (. -) ('' -)))",
        "tree_rules": [
            ":ARG0-of/SBAR",
            ":time/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/NP -)",
        "graph_rules": {
            "and": [
                ":op2/NP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG0/NP) (VP (VBD -) (:op2/NP) (PP (:direction/IN) (:op1/NP)) (:ARG1/PP)) (. -)))",
        "tree_rules": [
            ":op2/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :domain/NP - \n\t :mod/JJ - \n\t :mod -)",
        "graph_rules": {
            "planet": [
                ":domain/NP",
                ":mod/JJ",
                ":mod"
            ]
        },
        "head": "planet",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S (:domain/NP) (VP (VB -) (NP (NP (DT -) (:degree/RBS) (:mod/JJ)) (CC -) (NP (:mod/JJ) (NN xxx))) (:ARG1-of/SBAR)) (. -)))",
        "tree_rules": [
            ":mod/JJ",
            ":mod/JJ",
            ":domain/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (:ARG0/NP) (VP (VB xxx)) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP -)",
        "graph_rules": {
            "have-03": [
                ":ARG0/NP",
                ":ARG1/NP"
            ]
        },
        "head": "have-03",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (SBARQ (WHNP ('' -)) (SQ (VP (VB xxx) (S (:ARG0/NP) (:ARG1/NP)))) (. -) ('' -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/MD -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/MD"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG1/MD",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "ah",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (INTJ ('' -) (UH xxx) (. -) ('' -)))",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1/NP -)",
        "graph_rules": {
            "disappoint-01": [
                ":ARG1/NP"
            ]
        },
        "head": "disappoint-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/NP) (VP (VB -) (VP (VB xxx))) (. -)))",
        "tree_rules": [
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "passive"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP -)",
        "graph_rules": {
            "have-03": [
                ":ARG0/NP",
                ":ARG1/NP"
            ]
        },
        "head": "have-03",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (SBARQ (WHNP ('' -)) (SQ (VP (VB xxx) (S (:ARG0/NP) (:ARG1/NP)))) (. -) ('' -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/MD -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/MD"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG1/MD",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/CC -)",
        "graph_rules": {
            "and": [
                ":op2/CC"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "list",
            "inPP": false,
            "number": "plural"
        },
        "tree": "(ROOT (FRAG (S (VP ('' -) (S (NP (CC xxx) (:op2/NP) (, -) (CC -) (:op3/NP))))) (. -) ('' -)))",
        "tree_rules": [
            ":op2/CC"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :ARG1/VP - \n\t :mod/ADVP -)",
        "graph_rules": {
            "possible-01": [
                ":polarity/RB",
                ":ARG1/VP",
                ":mod/ADVP"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG0/NP) (VP (MD xxx) (:polarity/RB) (:ARG1/VP)) (. -) ('' -)))",
        "tree_rules": [
            ":mod/ADVP",
            ":polarity/RB",
            ":ARG1/VP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/VP"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "list",
            "inPP": false,
            "number": "plural"
        },
        "tree": "(ROOT (S ('' -) (NP (CC xxx)) (:domain/ADVP) (:ARG2/VP) (. -) ('' -)))",
        "tree_rules": [
            ":ARG2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/E -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/E"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (ADVP (RB -)) (, -) ('' -) (:ARG0/NP) (VP (VB xxx)) (. -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":ARG1/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG2/NP -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/NP"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "list",
            "inPP": false,
            "number": "plural"
        },
        "tree": "(ROOT (NP ('' -) (CC xxx) (:domain/NP) (. -)))",
        "tree_rules": [
            ":ARG2/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :ARG0/NP - \n\t :ARG1/NP -)",
        "graph_rules": {
            "have-03": [
                ":polarity/RB",
                ":ARG0/NP",
                ":ARG1/NP"
            ]
        },
        "head": "have-03",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:polarity/RB) (:ARG1/NP)) (. -)))",
        "tree_rules": [
            ":polarity/RB",
            ":ARG1/NP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :domain/NP - \n\t :ARG0-of/SBAR -)",
        "graph_rules": {
            "person": [
                ":domain/NP",
                ":ARG0-of/SBAR"
            ]
        },
        "head": "person",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (NP (PRP -)) (VP (VBZ -) (:polarity/RB) (:domain/NP)) (. -)))",
        "tree_rules": [
            ":ARG0-of/SBAR",
            ":domain/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :domain/NP - \n\t :degree/RB -)",
        "graph_rules": {
            "important": [
                ":domain/NP",
                ":degree/RB"
            ]
        },
        "head": "important",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:domain/NP) (VP (VB -) (ADJP (:degree/RB) (:degree/RB) (JJ xxx)) (:ARG1-of/S)) (. -)))",
        "tree_rules": [
            ":degree/RB",
            ":domain/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :ARG0/NP - \n\t :ARG1/NP -)",
        "graph_rules": {
            "leave-11": [
                ":polarity/RB",
                ":ARG0/NP",
                ":ARG1/NP"
            ]
        },
        "head": "leave-11",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB -) (:polarity/RB) (VP (VB xxx) (:ARG1/NP))) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":polarity/RB",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/VP"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG0/NP) (:ARG2/VP) (. -)))",
        "tree_rules": [
            ":ARG2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/NP - \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op1/NP",
                ":op2/S"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/S) (, -) (CC xxx) (:op2/S) (. -)))",
        "tree_rules": [
            ":op1/NP",
            ":op2/S"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/NP -)",
        "graph_rules": {
            "and": [
                ":op2/NP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:mod/PP) (VP (VBP -) (:condition/ADJP) (:ARG1/PP)) (. -) ('' -)))",
        "tree_rules": [
            ":op2/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1-of/E -)",
        "graph_rules": {
            "that": [
                ":ARG1-of/E"
            ]
        },
        "head": "that",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (SBARQ ('' -) (:ARG0/WHADVP) (SQ (VBZ -) (ADJP (IN xxx))) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1-of/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :quant/ADJP - \n\t :ARG0-of/E -)",
        "graph_rules": {
            "drink-01": [
                ":ARG0/NP",
                ":quant/ADJP",
                ":ARG0-of/E"
            ]
        },
        "head": "drink-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (NP (RB -)) (VP (MD -) (S (NP (:ARG0/NP) (SBAR (WHNP (WP -)) (S (VP (VB xxx) (:quant/ADJP))))))) (. -) ('' -)))",
        "tree_rules": [
            ":quant/ADJP",
            ":ARG0/NP",
            ":ARG0-of/E"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/SQ -)",
        "graph_rules": {
            "ask-01": [
                ":ARG0/NP",
                ":ARG1/SQ"
            ]
        },
        "head": "ask-01",
        "name": ":root/MULTI-SENTENCE",
        "noun_info": {},
        "tree": "(MULTI-SENTENCE (ROOT (SBARQ ('' -) (:ARG0/WHADVP) (:ARG1/SQ) (. -) ('' -))) (ROOT (S (VP (VB xxx) (:ARG0/NP)) (. -))))",
        "tree_rules": [
            ":ARG1/SQ",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/PP - \n\t :ARG2/RB - \n\t :ARG0-of/E -)",
        "graph_rules": {
            "see-01": [
                ":ARG0/PP",
                ":ARG2/RB",
                ":ARG0-of/E"
            ]
        },
        "head": "see-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG0/PP) (VP (VB xxx) (:ARG2/RB)) (. -)))",
        "tree_rules": [
            ":ARG2/RB",
            ":ARG0/PP",
            ":ARG0-of/E"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (VP (VB xxx) (:ARG0/NP)) (. -) ('' -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":ARG1/S"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/NP -)",
        "graph_rules": {
            "possible-01": [
                ":ARG1/NP"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/NP) (VP (VB -) (ADJP (JJ xxx))) (. -)))",
        "tree_rules": [
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/NP - \n\t :time/SBAR - \n\t :time -)",
        "graph_rules": {
            "order-01": [
                ":ARG1/NP",
                ":time/SBAR",
                ":time"
            ]
        },
        "head": "order-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:time/RB) (, -) (:time/SBAR) (, -) (:ARG1/NP) (VP (VB -) (VP (VB xxx) (:ARG1-of/PP))) (. -) ('' -)))",
        "tree_rules": [
            ":time/RB",
            ":time/SBAR",
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "passive"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :purpose/S -)",
        "graph_rules": {
            "go-02": [
                ":ARG0/NP",
                ":purpose/S"
            ]
        },
        "head": "go-02",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG0/NP) (VP (VB xxx) (:purpose/S)) (. -) ('' -)))",
        "tree_rules": [
            ":purpose/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "no",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (FRAG (ADVP ('' -) (DT xxx)) (. -)))",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1/NP - \n\t :degree/RB -)",
        "graph_rules": {
            "complicate-01": [
                ":ARG1/NP",
                ":degree/RB"
            ]
        },
        "head": "complicate-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/NP) (VP (MD -) (VP (VB -) (ADJP (:degree/RB) (VB xxx)))) (. -)))",
        "tree_rules": [
            ":degree/RB",
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/VP"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG0/NP) (:ARG2/VP) (. -)))",
        "tree_rules": [
            ":ARG2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1/NP - \n\t :ARG3/PP - \n\t :manner/E -)",
        "graph_rules": {
            "stir-02": [
                ":ARG1/NP",
                ":ARG3/PP",
                ":manner/E"
            ]
        },
        "head": "stir-02",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/NP) (VP (VB -) (ADVP (RB -)) (VP (VB xxx) (:ARG3/PP))) (. -)))",
        "tree_rules": [
            ":ARG3/PP",
            ":ARG1/NP",
            ":manner/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "passive"
        }
    },
    {
        "graph": "(XXX \n\t :ARG2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/VP"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "list",
            "inPP": false,
            "number": "plural"
        },
        "tree": "(ROOT (S ('' -) (NP (CC xxx)) (:ARG1/ADVP) (: -) (: -) (NP (PRP -)) (:ARG2/VP) (. -)))",
        "tree_rules": [
            ":ARG2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(p2 / person \n\t :ARG0-of (e / explore-01) \n\t :domain/NP -)",
        "graph_rules": {
            "person": [
                ":domain/NP"
            ]
        },
        "head": "person/explore-01",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S (:domain/NP) (VP (VB -) (NP (DT -) (NN xxx))) (. -)))",
        "tree_rules": [
            ":domain/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :beneficiary/PP -)",
        "graph_rules": {
            "describe-01": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":beneficiary/PP"
            ]
        },
        "head": "describe-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (MD -) (VP (VB xxx) (:ARG1/NP) (:beneficiary/PP))) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":beneficiary/PP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (, -) (:op1/S) (, -) (:ARG0/NP) (:op2/VP) (. -)))",
        "tree_rules": [
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1/E - \n\t :direction/PRT - \n\t :time/ADVP - \n\t :instrument/PP -)",
        "graph_rules": {
            "put-01": [
                ":ARG1/E",
                ":direction/PRT",
                ":time/ADVP",
                ":instrument/PP"
            ]
        },
        "head": "put-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1-of/NP) (VP (VB -) (VP (VB xxx) (:direction/PRT) (:time/ADVP) (:instrument/PP))) (. -)))",
        "tree_rules": [
            ":direction/PRT",
            ":time/ADVP",
            ":instrument/PP",
            ":ARG1/E"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "passive"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/NP - \n\t :time/IN - \n\t :time -)",
        "graph_rules": {
            "wait-01": [
                ":ARG1/NP",
                ":time/IN",
                ":time"
            ]
        },
        "head": "wait-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/NP) (VP (VB xxx) (SBAR (:time/IN) (:op1/S))) (. -)))",
        "tree_rules": [
            ":time/IN",
            ":time/IN",
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/E -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/E"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (S (:op1/INTJ) (, -) (:location-of/PRN) (VP (VB xxx) (:ARG0/NP))) (, -) ('' -) (NP (PRP -)) (VP (VBZ -) (:polarity/RB) (:op2/ADJP)) (. -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":ARG1/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :domain/NP - \n\t :degree/RB -)",
        "graph_rules": {
            "small": [
                ":domain/NP",
                ":degree/RB"
            ]
        },
        "head": "small",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:domain/NP) (VP (VB -) (ADJP (:mod/DT) (:degree/RB) (JJ xxx))) (. -)))",
        "tree_rules": [
            ":degree/RB",
            ":domain/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP -)",
        "graph_rules": {
            "have-03": [
                ":ARG0/NP",
                ":ARG1/NP"
            ]
        },
        "head": "have-03",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:ARG1/NP)) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/S - \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op1/S",
                ":op2/S"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:op1/S) (CC xxx) (:op2/S) (. -)))",
        "tree_rules": [
            ":op1/S",
            ":op2/S"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/VP"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG0/NP) (ADVP (RB -)) (:ARG2/VP) (. -) ('' -)))",
        "tree_rules": [
            ":ARG2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/E - \n\t :mod/RB -)",
        "graph_rules": {
            "have-03": [
                ":ARG0/NP",
                ":ARG1/E",
                ":mod/RB"
            ]
        },
        "head": "have-03",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG0/NP) (VP (VB xxx) (:ARG1-of/NP)) (. -) ('' -)))",
        "tree_rules": [
            ":mod/RB",
            ":ARG0/NP",
            ":ARG1/E"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/JJ -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/JJ"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1-of/S) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG1/JJ",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1-of/E -)",
        "graph_rules": {
            "that": [
                ":ARG1-of/E"
            ]
        },
        "head": "that",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (SBARQ ('' -) (:ARG0/WHADVP) (SQ (VBZ -) (ADJP (IN xxx))) (. -)))",
        "tree_rules": [
            ":ARG1-of/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1-of/ADJP - \n\t :location/PP - \n\t :domain/E -)",
        "graph_rules": {
            "thing": [
                ":ARG1-of/ADJP",
                ":location/PP",
                ":domain/E"
            ]
        },
        "head": "thing",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S (:ARG1-of/NP) (VP (VB -) (NP (NP (DT -) (:ARG1-of/ADJP) (NN xxx)) (:location/PP))) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1-of/ADJP",
            ":location/PP",
            ":domain/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (VP (VB xxx) (:ARG0/NP)) (. -) ('' -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":ARG1/S"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/VP - \n\t :ARG2/NP -)",
        "graph_rules": {
            "mean-01": [
                ":ARG1/VP",
                ":ARG2/NP"
            ]
        },
        "head": "mean-01",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S ('' -) (:ARG2/NP) (VP (VB -) (SBAR (IN -) (S (NP (NN xxx)) (: -) (:ARG1/VP)))) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1/VP",
            ":ARG2/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/NP"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (S (NP (NP (NNPS -)) (PRN (, -) ('' -) (SINV (S (VP (VB xxx) (:ARG0/NP))) (, -) ('' -) (VP (VBP -)) (:ARG1/NP)) (, -))) (:ARG2/PP)) (, -) (:ARG1/VP) (. -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/NP - \n\t :ARG2/ADJP - \n\t :time/E - \n\t :polarity/: -)",
        "graph_rules": {
            "become-01": [
                ":ARG1/NP",
                ":ARG2/ADJP",
                ":time/E",
                ":polarity/:"
            ]
        },
        "head": "become-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/NP) (ADVP (RB -)) (VP (VB xxx) (ADJP (:mod/ADJP) (:polarity/:) (:ARG2/ADJP))) (. -)))",
        "tree_rules": [
            ":polarity/:",
            ":ARG2/ADJP",
            ":ARG1/NP",
            ":time/E"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/E - \n\t :ARG1-of/RB -)",
        "graph_rules": {
            "change-01": [
                ":ARG0/NP",
                ":ARG1/E",
                ":ARG1-of/RB"
            ]
        },
        "head": "change-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (NP (PRP -)) (VP (VB -) (ADJP (:degree/RB) (:ARG1-of/RB)) (SBAR (IN -) (S (:ARG0/NP) (VP (VB xxx) (:ARG2-of/NP))))) (. -)))",
        "tree_rules": [
            ":ARG1-of/RB",
            ":ARG0/NP",
            ":ARG1/E"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :ARG2/NP - \n\t :ARG1-of/RB -)",
        "graph_rules": {
            "empty-01": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":ARG2/NP",
                ":ARG1-of/RB"
            ]
        },
        "head": "empty-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (NP (PRP -)) (VP (VB -) (ADJP (:degree/RB) (:ARG1-of/RB)) (SBAR (IN -) (S (:ARG0/NP) (VP (VB xxx) (:ARG1/NP))))) (. -)))",
        "tree_rules": [
            ":ARG1-of/RB",
            ":ARG1/PRP$",
            ":ARG1/IN",
            ":ARG2/NP",
            ":ARG1/NP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/PP -)",
        "graph_rules": {
            "write-01": [
                ":ARG0/NP",
                ":ARG1/PP"
            ]
        },
        "head": "write-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:ARG1/PP)) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1/PP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG2/CC -)",
        "graph_rules": {
            "interrupt-01": [
                ":ARG0/NP",
                ":ARG2/CC"
            ]
        },
        "head": "interrupt-01",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": "(ROOT (NP ('' -) (:ARG2/CC) (NP (:ARG1/NP) (ADJP (:ARG0/NP) (JJ xxx))) (. -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":ARG2/CC"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1/VP - \n\t :ARG2/NP -)",
        "graph_rules": {
            "mean-01": [
                ":ARG1/VP",
                ":ARG2/NP"
            ]
        },
        "head": "mean-01",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S ('' -) (:ARG2/NP) (VP (VB -) (SBAR (IN -) (S (NP (NN xxx)) (: -) (:ARG1/VP)))) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1/VP",
            ":ARG2/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :domain/PP -)",
        "graph_rules": {
            "mountain": [
                ":domain/PP"
            ]
        },
        "head": "mountain",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S ('' -) (:domain/PP) (VP (VB -) (NP (DT -) (NN xxx))) (. -)))",
        "tree_rules": [
            ":domain/PP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1/NP - \n\t :polarity/RB -)",
        "graph_rules": {
            "change-01": [
                ":ARG1/NP",
                ":polarity/RB"
            ]
        },
        "head": "change-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/NP) (VP (VB -) (:polarity/RB) (VP (VB xxx))) (. -) ('' -)))",
        "tree_rules": [
            ":polarity/RB",
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/CC -)",
        "graph_rules": {
            "repeat-01": [
                ":ARG0/NP",
                ":ARG1/CC"
            ]
        },
        "head": "repeat-01",
        "name": ":root/MULTI-SENTENCE",
        "noun_info": {},
        "tree": "(MULTI-SENTENCE (ROOT (SBARQ ('' -) (:ARG1/CC) (:ARG2/WHNP) (:ARG1/SQ) (. -) ('' -))) (ROOT (S (S (VP (VB xxx) (:ARG0/NP))) (, -) (:time/ADVP) (:ARG0/NP) (:op1/VP) (. -))))",
        "tree_rules": [
            ":ARG1/CC",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/NP - \n\t :ARG2/E -)",
        "graph_rules": {
            "mean-01": [
                ":ARG1/NP",
                ":ARG2/E"
            ]
        },
        "head": "mean-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (S (:ARG1/NP) (VP (VB xxx))) (, -) ('' -) (NP (WDT -)) (:ARG0/VP) (. -) ('' -) ('' -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG2/E"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/CC - \n\t :ARG2/E -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/CC",
                ":ARG2/E"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (S (:op1/S) (, -) ('' -) (:ARG0/NP) (VP (VB xxx) (:poss/PP))) (, -) ('' -) (:ARG1/CC) (:op2/S) (. -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":ARG1/CC",
            ":ARG2/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG0/NP) (:op2/VP) (. -) ('' -)))",
        "tree_rules": [
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :domain/NP - \n\t :mod/PP - \n\t :ord/JJ - \n\t :poss/PRP$ -)",
        "graph_rules": {
            "moment": [
                ":domain/NP",
                ":mod/PP",
                ":ord/JJ",
                ":poss/PRP$"
            ]
        },
        "head": "moment",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S (:domain/NP) (VP (VB -) (NP (NP (:poss/PRP$) (:ord/JJ) (NN xxx)) (:mod/PP))) (. -)))",
        "tree_rules": [
            ":poss/PRP$",
            ":ord/JJ",
            ":mod/PP",
            ":domain/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/VP"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG0/NP) (:ARG2/VP) (. -)))",
        "tree_rules": [
            ":ARG2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "ask-01": [
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "ask-01",
        "name": ":root/MULTI-SENTENCE",
        "noun_info": {},
        "tree": "(MULTI-SENTENCE (ROOT (S ('' -) (:domain/NP) (:ARG1/ADVP) (VP (MD -) (:ARG0/NP) (:ARG1/S)) (. -) ('' -))) (ROOT (S (:ARG0/NP) (VP (VB xxx)) (. -))))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG2/S -)",
        "graph_rules": {
            "reply-01": [
                ":ARG0/NP",
                ":ARG2/S"
            ]
        },
        "head": "reply-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG2/S) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG2/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP -)",
        "graph_rules": {
            "have-03": [
                ":ARG0/NP",
                ":ARG1/NP"
            ]
        },
        "head": "have-03",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG0/NP) (VP (VB xxx) (:ARG1/NP)) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/E -)",
        "graph_rules": {
            "and": [
                ":op2/E"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG0/NP) (:op1/VP) (. -)))",
        "tree_rules": [
            ":op2/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/NP -)",
        "graph_rules": {
            "chapter": [
                ":mod/NP"
            ]
        },
        "head": "chapter",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (NP (NP (NN xxx)) (:mod/NP) (. -)))",
        "tree_rules": [
            ":mod/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ord/JJ - \n\t :domain/VP - \n\t :ARG1-of/E -)",
        "graph_rules": {
            "planet": [
                ":ord/JJ",
                ":domain/VP",
                ":ARG1-of/E"
            ]
        },
        "head": "planet",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S (RB -) (ADVP (RB -)) (NP (DT -) (:ord/JJ) (NN xxx)) (:domain/VP) (. -)))",
        "tree_rules": [
            ":ord/JJ",
            ":domain/VP",
            ":ARG1-of/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/JJ - \n\t :domain/NP -)",
        "graph_rules": {
            "planet": [
                ":mod/JJ",
                ":domain/NP"
            ]
        },
        "head": "planet",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S (:domain/NP) (VP (VB -) (:polarity/RB) (:mod/ADVP) (NP (DT -) (:mod/JJ) (NN xxx))) (. -)))",
        "tree_rules": [
            ":mod/JJ",
            ":domain/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1/E -)",
        "graph_rules": {
            "possible-01": [
                ":ARG1/E"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (MD xxx) (:op1/VP)) (. -)))",
        "tree_rules": [
            ":ARG1/E"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/E - \n\t :ARG2 - \n\t :purpose/S -)",
        "graph_rules": {
            "tell-01": [
                ":ARG0/NP",
                ":ARG1/E",
                ":ARG2",
                ":purpose/S"
            ]
        },
        "head": "tell-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:purpose/S) (, -) (:ARG0/NP) (VP (MD -) (VP (VB xxx) (NP (PRP -)) (:ARG2/SBAR))) (. -)))",
        "tree_rules": [
            ":purpose/S",
            ":ARG0/NP",
            ":ARG1/E"
        ],
        "verb_info": {
            "tense": "simple future",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :condition/S -)",
        "graph_rules": {
            "make-01": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":condition/S"
            ]
        },
        "head": "make-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:condition/S) (, -) (:ARG0/NP) (VP (MD -) (VP (VB xxx) (:ARG1/NP))) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":condition/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/NP -)",
        "graph_rules": {
            "regulate-01": [
                ":ARG1/NP"
            ]
        },
        "head": "regulate-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/NP) (VP (MD -) (VP (VB -) (VP (VB xxx) (:ARG0/PP)))) (. -)))",
        "tree_rules": [
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/NP - \n\t :time/NP -)",
        "graph_rules": {
            "come-03": [
                ":ARG1/NP",
                ":time/NP"
            ]
        },
        "head": "come-03",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:time/NP) (VP (MD -) (VP (VB xxx) (:ARG1/NP))) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":time/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/PRP$ - \n\t :purpose/S - \n\t :time/E -)",
        "graph_rules": {
            "go-02": [
                ":ARG0/PRP$",
                ":purpose/S",
                ":time/E"
            ]
        },
        "head": "go-02",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/S) (, -) (NP (DT -)) (VP (MD -) (VP (VB xxx) (PRT (RP -)) (:purpose/S))) (. -)))",
        "tree_rules": [
            ":ARG0/PRP$",
            ":purpose/S",
            ":time/E"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/VP - \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op1/VP",
                ":op2/S"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "list",
            "inPP": true,
            "number": "plural"
        },
        "tree": "(ROOT (S (:time/ADVP) (, -) (S (NP (NP (DT -) (NNS -)) (PP (IN -) (NP (:op1/NN) (CC xxx) (:op2/NN)))) (:op1/VP)) (, -) (:source/CC) (:time/RB) (:op2/S) (. -)))",
        "tree_rules": [
            ":op1/VP",
            ":op2/S"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1/NP -)",
        "graph_rules": {
            "come-03": [
                ":ARG1/NP"
            ]
        },
        "head": "come-03",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (NP (NP (:time/NP) (SBAR (WHNP (DT -)) (S (VP (MD -) (VP (VB xxx) (:ARG1/NP)))))) (: -) (RB -) (:op2/NP) (: -) (:location/NP) (: -) (:location/NP) (. -)))",
        "tree_rules": [
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/NP -)",
        "graph_rules": {
            "and": [
                ":op2/NP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (SINV (CC xxx) (ADVP (RB -)) (MD -) (:ARG0/NP) (VP (VB -) (:op2/NP) (:ARG1/PP)) (. -)))",
        "tree_rules": [
            ":op2/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :domain/NP -)",
        "graph_rules": {
            "magnificent": [
                ":domain/NP"
            ]
        },
        "head": "magnificent",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:domain/NP) (VP (MD -) (VP (VB -) (ADJP (JJ xxx)))) (. -)))",
        "tree_rules": [
            ":domain/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/CC - \n\t :ARG3-of/ADJP - \n\t :ARG1-of/E -)",
        "graph_rules": {
            "live-01": [
                ":ARG0/CC",
                ":ARG3-of/ADJP",
                ":ARG1-of/E"
            ]
        },
        "head": "live-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (S (NP (:op1/NP) (SBAR (WHNP (WP -)) (S (VP (VP (VBD -) (:ARG1-of/PP) (:op2/PP)) (: -) (SBAR (:mod/RB) (S (:quant/NP) (VP (MD -) (VP (VB xxx) (:ARG3-of/ADJP))))))))) (:op2/VP)) (: -) (S (NP (PRP -)) (VP (MD -) (VP (VB -) (:ARG0/ADJP) (:ARG2/NP-TMP)))) (. -)))",
        "tree_rules": [
            ":ARG0/CC",
            ":ARG3-of/ADJP",
            ":ARG1-of/E"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :mod/NP -)",
        "graph_rules": {
            "chapter": [
                ":mod/NP"
            ]
        },
        "head": "chapter",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (NP (NP (NN xxx)) (:mod/NP) (. -)))",
        "tree_rules": [
            ":mod/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0 - \n\t :ARG1/IN - \n\t :time/SBAR - \n\t :degree/NP - \n\t :frequency/ADVP -)",
        "graph_rules": {
            "wander-01": [
                ":ARG0",
                ":ARG1/IN",
                ":time/SBAR",
                ":degree/NP",
                ":frequency/ADVP"
            ]
        },
        "head": "wander-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:time/SBAR) (, -) (NP (PRP -)) (VP (:frequency/ADVP) (VB xxx) (:degree/NP) (PP (:ARG1/IN) (:op1/NP))) (. -)))",
        "tree_rules": [
            ":ARG1/IN",
            ":frequency/ADVP",
            ":degree/NP",
            ":time/SBAR"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/E - \n\t :degree/RB -)",
        "graph_rules": {
            "honest-01": [
                ":ARG0/NP",
                ":ARG1/E",
                ":degree/RB"
            ]
        },
        "head": "honest-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB -) (:polarity/RB) (VP (VB -) (ADJP (:degree/RB) (JJ xxx) (:ARG1-of/PP)))) (. -)))",
        "tree_rules": [
            ":degree/RB",
            ":ARG0/NP",
            ":ARG1/E"
        ],
        "verb_info": {
            "tense": "present perfect",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG0/NP) (:op2/VP) (. -)))",
        "tree_rules": [
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP -)",
        "graph_rules": {
            "occupy-01": [
                ":ARG0/NP",
                ":ARG1/NP"
            ]
        },
        "head": "occupy-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:ARG1/NP) (:location/PP)) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/VP - \n\t :condition/SBAR -)",
        "graph_rules": {
            "possible-01": [
                ":ARG1/VP",
                ":condition/SBAR"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:condition/SBAR) (, -) (:ARG2/SBAR) (, -) (NP (PRP -)) (VP (MD xxx) (ADVP (RB -)) (:ARG1/VP)) (. -)))",
        "tree_rules": [
            ":ARG1/VP",
            ":condition/SBAR"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/VP -)",
        "graph_rules": {
            "possible-01": [
                ":ARG1/VP"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/NP) (VP (MD xxx) (:ARG1/VP)) (. -)))",
        "tree_rules": [
            ":ARG1/VP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/NP - \n\t :ARG0/E - \n\t :ARG1/NP - \n\t :time/SBAR - \n\t :ARG1-of/S -)",
        "graph_rules": {
            "believe-01": [
                ":polarity/NP",
                ":ARG0/E",
                ":ARG1/NP",
                ":time/SBAR",
                ":ARG1-of/S"
            ]
        },
        "head": "believe-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:polarity/NP) (, -) (:ARG1-of/S) (, -) (VP (MD -) (RB -) (VP (VB xxx) (:ARG1/NP) (:time/SBAR))) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":time/SBAR",
            ":polarity/NP",
            ":ARG1-of/S",
            ":ARG0/E"
        ],
        "verb_info": {
            "tense": "simple future",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/SBAR -)",
        "graph_rules": {
            "imagine-01": [
                ":ARG0/NP",
                ":ARG1/SBAR"
            ]
        },
        "head": "imagine-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:ARG1/SBAR)) (. -)))",
        "tree_rules": [
            ":ARG1/SBAR",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/ADJP -)",
        "graph_rules": {
            "fancy-01": [
                ":ARG0/NP",
                ":ARG1/ADJP"
            ]
        },
        "head": "fancy-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (JJ xxx) (:domain/NP) (:compared-to/PP)) (. -)))",
        "tree_rules": [
            ":ARG1/ADJP",
            ":ARG0/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1/VP - \n\t :ARG2/E -)",
        "graph_rules": {
            "recommend-01": [
                ":ARG1/VP",
                ":ARG2/E"
            ]
        },
        "head": "recommend-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (MD xxx) (:ARG1/VP)) (. -)))",
        "tree_rules": [
            ":ARG1/VP",
            ":ARG2/E"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/S - \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op1/S",
                ":op2/S"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:op1/S) (, -) (CC xxx) (:op2/S) (. -)))",
        "tree_rules": [
            ":op1/S",
            ":op2/S"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/VP"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG2/VP) (. -)))",
        "tree_rules": [
            ":ARG2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/S - \n\t :ARG1/NP - \n\t :degree/ADVP - \n\t :time/SBAR -)",
        "graph_rules": {
            "surprise-01": [
                ":ARG0/S",
                ":ARG1/NP",
                ":degree/ADVP",
                ":time/SBAR"
            ]
        },
        "head": "surprise-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:time/SBAR) (, -) (:ARG1/NP) (VP (VB -) (:degree/ADVP) (ADJP (JJ xxx) (:ARG0/S))) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG0/S",
            ":degree/ADVP",
            ":time/SBAR"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S - \n\t :time/SBAR -)",
        "graph_rules": {
            "begin-01": [
                ":ARG0/NP",
                ":ARG1/S",
                ":time/SBAR"
            ]
        },
        "head": "begin-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB -) (VP (VB xxx) (:ARG1/S))) (. -)))",
        "tree_rules": [
            ":time/SBAR",
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "past continuous",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NN - \n\t :manner/E -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/NN",
                ":manner/E"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1-of/ADVP) (, -) ('' -) (VP (VB xxx) (:ARG0/NP) (ADVP (RB -))) (. -)))",
        "tree_rules": [
            ":ARG1/NN",
            ":ARG0/NP",
            ":manner/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/ADVP -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/ADVP"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/ADVP) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG1/ADVP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG2/E -)",
        "graph_rules": {
            "answer-01": [
                ":ARG0/NP",
                ":ARG2/E"
            ]
        },
        "head": "answer-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:op1/S) (: -) (S (:domain/NP) (VP (VB -) (NP (:op2/NP) (, -) ('' -) (NP (:ARG0/NP) (VP (VB xxx)))))) (. -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":ARG2/E"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "passive"
        }
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "ah",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (FRAG ('' -) (INTJ (UH xxx)) (. -)))",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/DT - \n\t :location/PP -)",
        "graph_rules": {
            "person": [
                ":polarity/DT",
                ":location/PP"
            ]
        },
        "head": "person",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "plural"
        },
        "tree": "(ROOT (S (RB -) (NP (EX -)) (VP (VB -) (NP (NP (:polarity/DT) (NN xxx)) (:location/PP))) (. -) ('' -)))",
        "tree_rules": [
            ":polarity/DT",
            ":location/PP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :domain/NP -)",
        "graph_rules": {
            "desert": [
                ":domain/NP"
            ]
        },
        "head": "desert",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S ('' -) (:domain/NP) (VP (VB -) (NP (DT -) (NN xxx))) (. -)))",
        "tree_rules": [
            ":domain/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/DT - \n\t :location/PP -)",
        "graph_rules": {
            "person": [
                ":polarity/DT",
                ":location/PP"
            ]
        },
        "head": "person",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "plural"
        },
        "tree": "(ROOT (S (NP (EX -)) (VP (VB -) (NP (NP (:polarity/DT) (NN xxx)) (:location/PP))) (. -)))",
        "tree_rules": [
            ":polarity/DT",
            ":location/PP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (SINV (:ARG1/S) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/VP - \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op1/VP",
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/NP) (VP (:op1/VP) (, -) (CC xxx) (:op2/VP)) (. -)))",
        "tree_rules": [
            ":op1/VP",
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (:ARG0/NP) (VP (VB xxx) (, -) ('' -) (:ARG1/SBAR)) (: -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/E - \n\t :ARG1/PP -)",
        "graph_rules": {
            "look-01": [
                ":ARG0/E",
                ":ARG1/PP"
            ]
        },
        "head": "look-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (VP (VB xxx) (:ARG1/PP)) (. -)))",
        "tree_rules": [
            ":ARG1/PP",
            ":ARG0/E"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG2/RB -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/RB"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (ADVP (WRB -)) (ADVP (:ARG2/RB) (:direction/RB)) (:domain/NP) (VP (VBZ -)) (. -) ('' -)))",
        "tree_rules": [
            ":ARG2/RB"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (:ARG0/NP) (VP (VB xxx)) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :ARG2/ADVP -)",
        "graph_rules": {
            "bring-01": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":ARG2/ADVP"
            ]
        },
        "head": "bring-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG0/NP) (VP (VB -) (VP (VB xxx) (S (:ARG1/NP) (:ARG2/ADVP)))) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG2/ADVP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "present perfect",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/VB -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/VB"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG1/VB",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:domain/NP) (:op2/VP) (. -)))",
        "tree_rules": [
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :domain/E - \n\t :degree/NP -)",
        "graph_rules": {
            "lonely": [
                ":domain/E",
                ":degree/NP"
            ]
        },
        "head": "lonely",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (NP (PRP -)) (VP (VB -) (ADJP (:degree/NP) (JJ xxx) (:ARG2/PP))) (: -) ('' -)))",
        "tree_rules": [
            ":degree/NP",
            ":domain/E"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/ADJP -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/ADJP"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (S (NP (PRP -)) (VP (VBZ -) (:mod/ADVP) (:ARG1/ADJP))) (, -) ('' -) (:ARG0/NP) (VP (VB xxx)) (. -)))",
        "tree_rules": [
            ":ARG1/ADJP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/PP - \n\t :ARG1-of/PP -)",
        "graph_rules": {
            "gaze-01": [
                ":ARG0/NP",
                ":ARG1/PP",
                ":ARG1-of/PP"
            ]
        },
        "head": "gaze-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:ARG1/PP) (:ARG1-of/PP)) (. -)))",
        "tree_rules": [
            ":ARG1/PP",
            ":ARG1-of/PP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S - \n\t :time/E -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/S",
                ":time/E"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (:ARG0/NP) (VP (VB xxx) (PP (IN -) (NP (JJ -)))) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/NP",
            ":time/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(t / thick-03 \n\t :ARG1/NP - \n\t :degree (m / more \n\t\t :polarity/DT -) \n\t :compared-to/PP -)",
        "graph_rules": {
            "more": [
                ":polarity/DT"
            ],
            "thick-03": [
                ":ARG1/NP",
                ":compared-to/PP"
            ]
        },
        "head": "thick-03/more",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": "(ROOT (S ('' -) (:ARG1/NP) (VP (VB -) (NP (NP (:polarity/DT) (JJR xxx)) (:compared-to/PP))) (: -) ('' -)))",
        "tree_rules": [
            ":polarity/DT",
            ":compared-to/PP",
            ":ARG1/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/CC -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/CC"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG2/S) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG1/CC",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP -)",
        "graph_rules": {
            "smile-01": [
                ":ARG0/NP"
            ]
        },
        "head": "smile-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx)) (. -)))",
        "tree_rules": [
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/NP - \n\t :degree/RB -)",
        "graph_rules": {
            "powerful-02": [
                ":ARG1/NP",
                ":degree/RB"
            ]
        },
        "head": "powerful-02",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/NP) (VP (VB -) (:polarity/RB) (ADJP (:degree/RB) (JJ xxx))) (. -)))",
        "tree_rules": [
            ":degree/RB",
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :mod/ADVP -)",
        "graph_rules": {
            "have-03": [
                ":polarity/RB",
                ":ARG0/NP",
                ":ARG1/NP",
                ":mod/ADVP"
            ]
        },
        "head": "have-03",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:polarity/RB) (:mod/ADVP) (:ARG1/NP)) (. -)))",
        "tree_rules": [
            ":polarity/RB",
            ":mod/ADVP",
            ":ARG1/NP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :ARG1/FRAG - \n\t :mod/VP -)",
        "graph_rules": {
            "possible-01": [
                ":polarity/RB",
                ":ARG1/FRAG",
                ":mod/VP"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (FRAG (:ARG0/NP) (VP (MD xxx) (:polarity/RB) (:mod/VP) ('' -))))",
        "tree_rules": [
            ":ARG1/FRAG",
            ":polarity/RB",
            ":mod/VP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/MD -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/MD"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG1/MD",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :ARG2/PP - \n\t :manner/E -)",
        "graph_rules": {
            "twine-01": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":ARG2/PP",
                ":manner/E"
            ]
        },
        "head": "twine-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:ARG1/NP) (:ARG2/PP) (, -) (:ARG2/PP)) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG2/PP",
            ":ARG0/NP",
            ":manner/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S - \n\t :mod/ADVP -)",
        "graph_rules": {
            "speak-01": [
                ":ARG0/NP",
                ":ARG1/S",
                ":mod/ADVP"
            ]
        },
        "head": "speak-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (:ARG0/NP) (VP (VB xxx) (:mod/ADVP)) (. -)))",
        "tree_rules": [
            ":mod/ADVP",
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG2/CC -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/CC"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (S (CC xxx) (:ARG1/NP) (:op2/VP)) (, -) (:op1/NP) (:op2/VP) ('' -)))",
        "tree_rules": [
            ":ARG2/CC"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :polarity/DT -)",
        "graph_rules": {
            "reply-01": [
                ":ARG0/NP",
                ":polarity/DT"
            ]
        },
        "head": "reply-01",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB -) (NP (:polarity/DT) (NN xxx))) (. -)))",
        "tree_rules": [
            ":polarity/DT",
            ":ARG0/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (: -) (: -) (:ARG0/S) (, -) ('' -) (S (:ARG0/NP) (VP (VB xxx))) (. -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":ARG1/S"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/VP - \n\t :condition/SBAR -)",
        "graph_rules": {
            "possible-01": [
                ":ARG1/VP",
                ":condition/SBAR"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG0/NP) (VP (MD xxx) (:ARG1/VP)) (. -)))",
        "tree_rules": [
            ":condition/SBAR",
            ":ARG1/VP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/E -)",
        "graph_rules": {
            "possible-01": [
                ":ARG1/E"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (MD xxx)) (: -) (: -) ('' -)))",
        "tree_rules": [
            ":ARG1/E"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "oh",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (FRAG ('' -) (INTJ (UH xxx)) (. -)))",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (SINV (:ARG1/S) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG2/SQ -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/SQ"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (SBARQ ('' -) (CC xxx) (:purpose/WHADVP) (:ARG2/SQ) (. -) ('' -)))",
        "tree_rules": [
            ":ARG2/SQ"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:domain/NP) (:op2/VP) (. -)))",
        "tree_rules": [
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/NP -)",
        "graph_rules": {
            "chapter": [
                ":mod/NP"
            ]
        },
        "head": "chapter",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (NP (NP (NN xxx)) (:mod/NP) (. -)))",
        "tree_rules": [
            ":mod/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VP - \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op1/VP",
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (:op1/VP) (CC xxx) (:op2/VP)) (. -)))",
        "tree_rules": [
            ":op1/VP",
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0-of/E - \n\t :mod/PP - \n\t :domain/NP -)",
        "graph_rules": {
            "flower": [
                ":ARG0-of/E",
                ":mod/PP",
                ":domain/NP"
            ]
        },
        "head": "flower",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S (:domain/NP) (VP (VB -) (NP (NP (DT -) (NN xxx)) (:mod/PP))) (. -)))",
        "tree_rules": [
            ":mod/PP",
            ":domain/NP",
            ":ARG0-of/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NN -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/NN"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1-of/ADVP) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG1/NN",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NN -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/NN"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1-of/ADVP) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG1/NN",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/E - \n\t :manner/ADVP -)",
        "graph_rules": {
            "ask-01": [
                ":ARG0/NP",
                ":ARG1/E",
                ":manner/ADVP"
            ]
        },
        "head": "ask-01",
        "name": ":root/MULTI-SENTENCE",
        "noun_info": {},
        "tree": "(MULTI-SENTENCE (ROOT (SBARQ ('' -) (:ARG2/WHADVP) (:ARG1/SQ) (. -) ('' -))) (ROOT (S (:ARG0/NP) (VP (VB xxx) (, -) (:manner/ADVP)) (. -))))",
        "tree_rules": [
            ":manner/ADVP",
            ":ARG0/NP",
            ":ARG1/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :frequency/E - \n\t :ARG0/NP - \n\t :ARG1/NP -)",
        "graph_rules": {
            "see-01": [
                ":frequency/E",
                ":ARG0/NP",
                ":ARG1/NP"
            ]
        },
        "head": "see-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB -) (ADVP (RB -)) (VP (VB xxx) (:ARG1/NP))) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG0/NP",
            ":frequency/E"
        ],
        "verb_info": {
            "tense": "past perfect",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/PP -)",
        "graph_rules": {
            "think-01": [
                ":ARG0/NP",
                ":ARG1/PP"
            ]
        },
        "head": "think-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG0/NP) (VP (VB xxx) (SBAR (S (NP (EX -)) (VP (VBP -) (NP (NP (:op1/CD) (:quant/CC) (:op2/CD)) (:ARG1/PP) (:ARG1/PP)))))) (. -)))",
        "tree_rules": [
            ":ARG1/PP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :time/E -)",
        "graph_rules": {
            "see-01": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":time/E"
            ]
        },
        "head": "see-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:ARG1/NP) (, -) (:op1/ADVP)) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG0/NP",
            ":time/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/VP"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (NP (CD -)) (ADVP (RB -)) (:ARG2/VP) (. -)))",
        "tree_rules": [
            ":ARG2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP-TMP - \n\t :direction/ADVP -)",
        "graph_rules": {
            "blow-01": [
                ":ARG0/NP",
                ":ARG1/NP-TMP",
                ":direction/ADVP"
            ]
        },
        "head": "blow-01",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "plural"
        },
        "tree": "(ROOT (NP (:ARG0/NP) (NP (NP (NN xxx)) (:ARG1/NP-TMP)) (. -)))",
        "tree_rules": [
            ":direction/ADVP",
            ":ARG1/NP-TMP",
            ":ARG0/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VB - \n\t :op2/SBAR -)",
        "graph_rules": {
            "and": [
                ":op1/VB",
                ":op2/SBAR"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "list",
            "inPP": false,
            "number": "plural"
        },
        "tree": "(ROOT (S (:ARG0/NP) (VP (:op1/VB) (NP (:ARG1/NP) (, -) (CC xxx) (:op2/SBAR))) (. -) ('' -)))",
        "tree_rules": [
            ":op2/SBAR",
            ":op1/VB"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/ADVP -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/ADVP"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/ADVP) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG1/ADVP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/ADVP -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/ADVP"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/ADVP) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG1/ADVP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :mod/NP -)",
        "graph_rules": {
            "chapter": [
                ":mod/NP"
            ]
        },
        "head": "chapter",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (NP (NP (NN xxx)) (:mod/NP) (. -)))",
        "tree_rules": [
            ":mod/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :time/IN -)",
        "graph_rules": {
            "climb-01": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":time/IN"
            ]
        },
        "head": "climb-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (PP (:time/IN) (:op1/NP)) (, -) (:ARG0/NP) (VP (VB xxx) (:ARG1/NP)) (. -)))",
        "tree_rules": [
            ":time/IN",
            ":ARG1/NP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :quant/CD - \n\t :domain/NP - \n\t :ARG1-of/SBAR -)",
        "graph_rules": {
            "volcano": [
                ":quant/CD",
                ":domain/NP",
                ":ARG1-of/SBAR"
            ]
        },
        "head": "volcano",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "plural"
        },
        "tree": "(ROOT (S (:domain/NP) (VP (VB -) (NP (NP (DT -) (:quant/CD) (NN xxx)) (, -) (:ARG1-of/SBAR))) (. -)))",
        "tree_rules": [
            ":quant/CD",
            ":ARG1-of/SBAR",
            ":domain/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG0/NP) (:op2/VP) (. -)))",
        "tree_rules": [
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/MD - \n\t :ARG2/E -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/MD",
                ":ARG2/E"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (S (:source/PP) (:ARG1-of/ADVP) (, -) ('' -) (:ARG0/NP) (VP (VB xxx) (:ARG0/PP))) (, -) ('' -) (NP (PRP -)) (:ARG1/VP) ('' -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":ARG1/MD",
            ":ARG2/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/VP"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG0/NP) (:ARG2/VP) (. -)))",
        "tree_rules": [
            ":ARG2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NN - \n\t :manner/E -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/NN",
                ":manner/E"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1-of/ADVP) (, -) ('' -) (:ARG0/NP) (VP (VB xxx) (ADVP (RB -))) (. -)))",
        "tree_rules": [
            ":ARG1/NN",
            ":ARG0/NP",
            ":manner/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/SBAR - \n\t :ARG1/S -)",
        "graph_rules": {
            "answer-01": [
                ":ARG0/SBAR",
                ":ARG1/S"
            ]
        },
        "head": "answer-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (VP (VB xxx) (:ARG0/SBAR)) (. -)))",
        "tree_rules": [
            ":ARG0/SBAR",
            ":ARG1/S"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG2/SQ -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG2/SQ"
            ]
        },
        "head": "say-01",
        "name": ":root/MULTI-SENTENCE",
        "noun_info": {},
        "tree": "(MULTI-SENTENCE (ROOT (SBARQ ('' -) (:domain/WHNP) (:ARG2/SQ) (. -) ('' -))) (ROOT (S (VP (VB xxx) (:ARG0/NP)) (. -))))",
        "tree_rules": [
            ":ARG2/SQ",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/VP - \n\t :ARG2/S -)",
        "graph_rules": {
            "answer-01": [
                ":ARG0/VP",
                ":ARG2/S"
            ]
        },
        "head": "answer-01",
        "name": ":root/MULTI-SENTENCE",
        "noun_info": {},
        "tree": "(MULTI-SENTENCE (ROOT (FRAG (S (VP ('' -) (SBAR (:domain/WHNP) (:ARG2/S)) (PRN (: -) (SBAR (WHNP (WP -)) (S (VP (VBP -) (NP (PRP -))) (: -))) (: -)) (SBAR (WHNP (WP -)) (S (VP (VBP -) (NP (PRP -))))))) (. -) ('' -))) (ROOT (S (S (VP (VB xxx))) (NP (DT -)) (:ARG0/VP) (. -))))",
        "tree_rules": [
            ":ARG2/S",
            ":ARG0/VP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(h / have-rel-role-91 \n\t :ARG0/E - \n\t :ARG1/E - \n\t :ARG2 (f / friend))",
        "graph_rules": {
            "have-rel-role-91": [
                ":ARG0/E",
                ":ARG1/E"
            ]
        },
        "head": "have-rel-role-91/friend",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "plural"
        },
        "tree": "(ROOT (S (VP ('' -) (VP (VB -) (NP (PRP$ -) (NN xxx)))) (. -)))",
        "tree_rules": [
            ":ARG0/E",
            ":ARG1/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/RB -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/RB"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (S (NP (PRP -)) (VP (VBP -) (ADVP (:degree/DT) (:ARG1/RB)))) (, -) ('' -) (:ARG0/NP) (VP (VB xxx)) (. -)))",
        "tree_rules": [
            ":ARG1/RB",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/SBAR - \n\t :ARG2/FRAG -)",
        "graph_rules": {
            "answer-01": [
                ":ARG0/SBAR",
                ":ARG2/FRAG"
            ]
        },
        "head": "answer-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:domain/NP) (VP (VB -) (NP (:mod/NP) (SBAR (S (:ARG2/FRAG) (, -) ('' -) (VP (VB xxx) (:ARG0/SBAR)))))) (. -)))",
        "tree_rules": [
            ":ARG0/SBAR",
            ":ARG2/FRAG"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/ADJP - \n\t :op2/VP - \n\t :op3/CC -)",
        "graph_rules": {
            "and": [
                ":op1/ADJP",
                ":op2/VP",
                ":op3/CC"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/NP) (VP (VB -) (ADJP (:op1/ADJP) (PRN (, -) (CC xxx) (:op2/VP) (, -)) (:op3/CC) (ADJP (:op1/ADJP) (CC -) (:op2/ADJP)))) (. -)))",
        "tree_rules": [
            ":op2/VP",
            ":op1/ADJP",
            ":op3/CC"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG0/NP) (:op2/VP) (. -)))",
        "tree_rules": [
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/E -)",
        "graph_rules": {
            "repeat-01": [
                ":ARG0/NP",
                ":ARG1/E"
            ]
        },
        "head": "repeat-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:ARG1-of/SBAR)) (: -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":ARG1/E"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :location/PP -)",
        "graph_rules": {
            "have-03": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":location/PP"
            ]
        },
        "head": "have-03",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (S (:location/PP) (:ARG0/NP) (VP (VB xxx) (:ARG1/NP))) (: -) (:time/S) (: -) ('' -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":location/PP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :mod/NP -)",
        "graph_rules": {
            "chapter": [
                ":mod/NP"
            ]
        },
        "head": "chapter",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (NP (NP (NN xxx)) (:mod/NP) (. -)))",
        "tree_rules": [
            ":mod/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/VP"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (NP (PRP -)) (:ARG2/VP) (. -)))",
        "tree_rules": [
            ":ARG2/IN",
            ":ARG2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG0/NP) (:op2/VP) (. -)))",
        "tree_rules": [
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NN -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/NN"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1-of/ADVP) (, -) ('' -) (:ARG0/NP) (VP (VB xxx)) (. -)))",
        "tree_rules": [
            ":ARG1/NN",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/NP - \n\t :ARG2/IN -)",
        "graph_rules": {
            "stand-01": [
                ":ARG1/NP",
                ":ARG2/IN"
            ]
        },
        "head": "stand-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/NP) (VP (VB -) (VP (VB xxx) (PP (:ARG2/IN) (:location-of/NP)))) (. -)))",
        "tree_rules": [
            ":ARG2/IN",
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "past continuous",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NN -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/NN"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1-of/ADVP) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG1/NN",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/PP -)",
        "graph_rules": {
            "gaze-01": [
                ":ARG0/NP",
                ":ARG1/PP"
            ]
        },
        "head": "gaze-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:ARG1/PP)) (. -)))",
        "tree_rules": [
            ":ARG1/PP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/PP -)",
        "graph_rules": {
            "look-02": [
                ":ARG0/NP",
                ":ARG1/PP"
            ]
        },
        "head": "look-02",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (:mod/ADVP) (VP (VB xxx) (:ARG1/PP)) (. -)))",
        "tree_rules": [
            ":ARG1/PP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/WHNP -)",
        "graph_rules": {
            "demand-01": [
                ":ARG0/NP",
                ":ARG1/WHNP"
            ]
        },
        "head": "demand-01",
        "name": ":root/MULTI-SENTENCE",
        "noun_info": {},
        "tree": "(MULTI-SENTENCE (ROOT (SBARQ ('' -) (:ARG1/WHNP) (:domain/SQ) (. -) ('' -))) (ROOT (S (S (:ARG0/NP) (VP (VB xxx))) (, -) (:mod/FRAG) (. -))))",
        "tree_rules": [
            ":ARG1/WHNP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/S - \n\t :ARG1/NP -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/S",
                ":ARG1/NP"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG0/S) (, -) ('' -) (:ARG1/NP) (VP (VB xxx)) (. -)))",
        "tree_rules": [
            ":ARG0/S",
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG1/NP) (:op2/VP) (. -)))",
        "tree_rules": [
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/E - \n\t :ARG2/NP -)",
        "graph_rules": {
            "tell-01": [
                ":ARG0/NP",
                ":ARG1/E",
                ":ARG2/NP"
            ]
        },
        "head": "tell-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB -) (VP (VB xxx) (:ARG2/NP) (:location/SBAR))) (. -)))",
        "tree_rules": [
            ":ARG2/NP",
            ":ARG0/NP",
            ":ARG1/E"
        ],
        "verb_info": {
            "tense": "past perfect",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/PP -)",
        "graph_rules": {
            "and": [
                ":op1/PP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:quant/S) (, -) (S (:mod/NP) (:ARG1-of/ADJP)) (, -) (:location/PP) (. -)))",
        "tree_rules": [
            ":op1/PP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/CC - \n\t :ARG2/PP -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/CC",
                ":ARG2/PP"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:op1/S) (, -) ('' -) (:ARG0/NP) (VP (VB xxx) (:ARG2/PP) (, -) ('' -) (SBAR (IN -) (S (:condition/S) (: -) (:op2/S) (, -) (:ARG1/CC) (:op3/S)))) (. -)))",
        "tree_rules": [
            ":ARG1/CC",
            ":ARG2/PP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP - \n\t :ARG1-of/E -)",
        "graph_rules": {
            "and": [
                ":op2/VP",
                ":ARG1-of/E"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (S (CC xxx) (:ARG1/NP) (:op2/VP)) (:polarity/:) (: -) (:ARG0/S) (: -) ('' -)))",
        "tree_rules": [
            ":op2/VP",
            ":ARG1-of/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0 - \n\t :ARG1/PP - \n\t :time/ADVP -)",
        "graph_rules": {
            "go-on-25": [
                ":ARG0",
                ":ARG1/PP",
                ":time/ADVP"
            ]
        },
        "head": "go-on-25",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (S (:time/ADVP) (:ARG0/NP) (VP (VB xxx) (PP (IN xxx) (:ARG1/PP)))) (: -) ('' -) (:ARG1/PRN) (: -) (CC -) (:mod/S) (. -)))",
        "tree_rules": [
            ":ARG1/PP",
            ":time/ADVP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/: - \n\t :ARG0/CC - \n\t :ARG1/NP -)",
        "graph_rules": {
            "make-02": [
                ":polarity/:",
                ":ARG0/CC",
                ":ARG1/NP"
            ]
        },
        "head": "make-02",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:quant/S) (: -) (S (NP (WDT -)) (VP (VB -) (RB -) (VP (VB xxx) (S (:domain/NP) (:ARG1/NP))))) (: -) ('' -)))",
        "tree_rules": [
            ":polarity/:",
            ":ARG0/CC",
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/CC -)",
        "graph_rules": {
            "and": [
                ":op2/CC"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG1/NP) (:op2/VP) (. -)))",
        "tree_rules": [
            ":op2/CC"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/NP -)",
        "graph_rules": {
            "chapter": [
                ":mod/NP"
            ]
        },
        "head": "chapter",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (NP (NP (NN xxx)) (:mod/NP) (. -)))",
        "tree_rules": [
            ":mod/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1/NP - \n\t :time/ADVP -)",
        "graph_rules": {
            "appear-01": [
                ":ARG1/NP",
                ":time/ADVP"
            ]
        },
        "head": "appear-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (NP (PRP -)) (VP (VB -) (:time/ADVP) (SBAR (IN -) (S (:ARG1/NP) (VP (VB xxx))))) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":time/ADVP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NN -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/NN"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1-of/ADVP) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG1/NN",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG2/NN - \n\t :manner/ADVP - \n\t :concession/SBAR -)",
        "graph_rules": {
            "respond-01": [
                ":ARG0/NP",
                ":ARG2/NN",
                ":manner/ADVP",
                ":concession/SBAR"
            ]
        },
        "head": "respond-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1-of/ADVP) (, -) ('' -) (:ARG0/NP) (VP (VB xxx) (:manner/ADVP) (, -) (:concession/SBAR)) (. -)))",
        "tree_rules": [
            ":ARG2/NN",
            ":manner/ADVP",
            ":concession/SBAR",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (:ARG0/NP) (VP (VB xxx) (, -) ('' -) (PP (:location/IN) (:op1/NP))) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/VP - \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op1/VP",
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/MULTI-SENTENCE",
        "noun_info": {},
        "tree": "(MULTI-SENTENCE (ROOT (SBARQ ('' -) (:mod/WHNP) (:ARG1/SQ) (. -) ('' -))) (ROOT (S (S (VP (:op1/VP) (, -) (CC xxx) (:op2/VP))) (, -) ('' -) (:ARG1/NP) (VP (VBP -) (ADJP (:degree/RB) (:ARG2/RB) (:ARG1/S))) (. -) ('' -))))",
        "tree_rules": [
            ":op1/VP",
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/S - \n\t :ARG1/NP -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/S",
                ":ARG1/NP"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG0/S) (, -) ('' -) (VP (VB xxx)) (:ARG1/NP) (. -)))",
        "tree_rules": [
            ":ARG0/S",
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/CC -)",
        "graph_rules": {
            "propose-01": [
                ":ARG0/NP",
                ":ARG1/CC"
            ]
        },
        "head": "propose-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (S (:op1/S) (:ARG1/CC) (:op2/S)) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG1/CC",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/MD -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/MD"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (:ARG0/NP) (VP (VB xxx)) (. -)))",
        "tree_rules": [
            ":ARG1/MD",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/NP - \n\t :polarity/RB -)",
        "graph_rules": {
            "tame-01": [
                ":ARG1/NP",
                ":polarity/RB"
            ]
        },
        "head": "tame-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/NP) (VP (VB -) (:polarity/RB) (VP (VB xxx))) (. -) ('' -)))",
        "tree_rules": [
            ":polarity/RB",
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "passive"
        }
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "ah",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (FRAG ('' -) (INTJ (UH xxx)) (. -)))",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/S) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG2/S -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/S"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (, -) (PP (:time/IN) (:op1/NP)) (, -) (:ARG2/S) (: -) ('' -) (:ARG1/S) (. -) ('' -)))",
        "tree_rules": [
            ":ARG2/S"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP -)",
        "graph_rules": {
            "look-01": [
                ":ARG0/NP",
                ":ARG1/NP"
            ]
        },
        "head": "look-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/NP) (VP (VB -) (NP (PRP -)) (SBAR (IN -) (S (:ARG0/NP) (VP (VB -) (VP (VB xxx) (PP (IN -))))))) (. -) ('' -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/VP - \n\t :ARG2/NP -)",
        "graph_rules": {
            "mean-01": [
                ":ARG1/VP",
                ":ARG2/NP"
            ]
        },
        "head": "mean-01",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S ('' -) (:ARG2/NP) (VP (VB -) (SBAR (IN -) (S (NP (NN xxx)) (: -) (:ARG1/VP)))) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1/VP",
            ":ARG2/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/ADVP -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/ADVP"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/ADVP) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG1/ADVP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/VB - \n\t :op2/NP -)",
        "graph_rules": {
            "and": [
                ":op1/VB",
                ":op2/NP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "list",
            "inPP": false,
            "number": "plural"
        },
        "tree": "(ROOT (S ('' -) (:ARG0/NP) (VP (:op1/VB) (NP (:ARG1/NP) (, -) (CC xxx) (:op2/NP))) (. -)))",
        "tree_rules": [
            ":op2/NP",
            ":op1/VB"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :degree/RB -)",
        "graph_rules": {
            "disturb-01": [
                ":ARG0/NP",
                ":degree/RB"
            ]
        },
        "head": "disturb-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB -) (ADJP (:degree/RB) (JJ xxx))) (. -)))",
        "tree_rules": [
            ":degree/RB",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :mod/ADVP -)",
        "graph_rules": {
            "raise-03": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":mod/ADVP"
            ]
        },
        "head": "raise-03",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (:mod/ADVP) (VP (VB xxx) (:ARG1/NP)) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG0/NP",
            ":mod/ADVP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/E - \n\t :ARG1/PRP$ - \n\t :mod/JJ -)",
        "graph_rules": {
            "interest-01": [
                ":ARG0/E",
                ":ARG1/PRP$",
                ":mod/JJ"
            ]
        },
        "head": "interest-01",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "plural"
        },
        "tree": "(ROOT (S (NP (DT -)) (VP (VB -) (NP (:ARG1/PRP$) (:mod/JJ) (NN xxx))) (. -)))",
        "tree_rules": [
            ":ARG1/PRP$",
            ":mod/JJ",
            ":ARG0/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/PP -)",
        "graph_rules": {
            "look-01": [
                ":ARG0/NP",
                ":ARG1/PP"
            ]
        },
        "head": "look-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (FRAG (S (VP (VB -) (S (:ARG0/NP) (VP (VB xxx) (:ARG1/PP))))) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1/PP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "present continuous",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/FRAG -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/FRAG"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (SINV ('' -) (:ARG1/FRAG) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG1/FRAG",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/PP -)",
        "graph_rules": {
            "look-01": [
                ":ARG0/NP",
                ":ARG1/PP"
            ]
        },
        "head": "look-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG0/NP) (VP (VB -) (VP (VB xxx) (:ARG1/PP))) (. -)))",
        "tree_rules": [
            ":ARG1/PP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "present continuous",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/VP - \n\t :ARG2/WHNP -)",
        "graph_rules": {
            "mean-01": [
                ":ARG1/VP",
                ":ARG2/WHNP"
            ]
        },
        "head": "mean-01",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (SBARQ (:ARG2/WHNP) (SQ (VP (VB -) (SBAR (IN -) (S (NP (NN xxx)) (: -) (:ARG1/VP))))) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1/VP",
            ":ARG2/WHNP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/NP - \n\t :ARG2/S -)",
        "graph_rules": {
            "mean-01": [
                ":ARG1/NP",
                ":ARG2/S"
            ]
        },
        "head": "mean-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/NP) (VP (VB xxx) (:ARG2/S)) (. -) ('' -)))",
        "tree_rules": [
            ":ARG2/S",
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/NP -)",
        "graph_rules": {
            "establish-01": [
                ":ARG1/NP"
            ]
        },
        "head": "establish-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (FRAG (NP (NP ('' -) ('' -)) (SBAR (S (VP (TO -) (VP (VB xxx) (:ARG1/NP)))))) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/PP -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/PP"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/PP) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG1/PP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG0/NP) (:op2/VP) (. -)))",
        "tree_rules": [
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG0/NP) (, -) (PP (IN -) (NP (PRP$ -) (NN -))) (, -) (:op2/VP) (. -)))",
        "tree_rules": [
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/PP - \n\t :ARG1/PP -)",
        "graph_rules": {
            "opine-01": [
                ":ARG0/PP",
                ":ARG1/PP"
            ]
        },
        "head": "opine-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/PP) (, -) (:domain/NP) (VP (VBP -) (ADJP (:mod/ADJP) (:ARG1/PP))) (. -)))",
        "tree_rules": [
            ":ARG1/PP",
            ":ARG0/PP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/VP"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG0/SBAR) (, -) (RB -) (:ARG0/NP) (:ARG2/VP) (. -)))",
        "tree_rules": [
            ":ARG2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/PP - \n\t :ARG1/S -)",
        "graph_rules": {
            "opine-01": [
                ":ARG0/PP",
                ":ARG1/S"
            ]
        },
        "head": "opine-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/PP) (, -) (:ARG1/S) (: -) ('' -)))",
        "tree_rules": [
            ":ARG0/PP",
            ":ARG1/S"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "flower",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S ('' -) (NP (EX -)) (VP (VB -) (NP (DT -) (NN xxx))) (: -)))",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/SBAR -)",
        "graph_rules": {
            "think-01": [
                ":ARG0/NP",
                ":ARG1/SBAR"
            ]
        },
        "head": "think-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (ADVP (IN -)) (:ARG0/NP) ('' -))))",
        "tree_rules": [
            ":ARG1/SBAR",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/ADVP - \n\t :ARG1/PP - \n\t :location/ADVP -)",
        "graph_rules": {
            "see-01": [
                ":ARG0/ADVP",
                ":ARG1/PP",
                ":location/ADVP"
            ]
        },
        "head": "see-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (NP (IN -) (DT -)) (:location/ADVP) (VP (:ARG0/ADVP) (VB xxx) (:mod/NP)) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1/PP",
            ":ARG0/ADVP",
            ":location/ADVP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/E -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/E"
            ]
        },
        "head": "say-01",
        "name": ":root/MULTI-SENTENCE",
        "noun_info": {},
        "tree": "(MULTI-SENTENCE (ROOT (S ('' -) (:op1/ADVP) (, -) (:op2/ADVP) (:ARG1/NP) (VP (VBZ -) (:polarity/RB) (:ARG2/PP)) (. -) ('' -))) (ROOT (S (VP (VB xxx) (:ARG0/NP)) (. -))))",
        "tree_rules": [
            ":ARG0/NP",
            ":ARG1/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/CC -)",
        "graph_rules": {
            "seem-01": [
                ":ARG1/CC"
            ]
        },
        "head": "seem-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/NP) (VP (VB xxx) (ADJP (:op1/ADJP) (, -) (:ARG1/CC) (:op2/ADJP))) (. -)))",
        "tree_rules": [
            ":ARG1/CC"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "yes",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (INTJ ('' -) (UH xxx) (. -) ('' -)))",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(p / person \n\t :ARG0-of (h / hunt-01) \n\t :location/PP -)",
        "graph_rules": {
            "person": [
                ":location/PP"
            ]
        },
        "head": "person/hunt-01",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "plural"
        },
        "tree": "(ROOT (SBARQ (WHNP ('' -)) (SQ (VBP -) (NP (EX -)) (NP (NN xxx)) (:location/PP)) (. -) ('' -)))",
        "tree_rules": [
            ":location/PP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "no",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": "(ROOT (S (VP ('' -) (NP (DT xxx))) (. -) ('' -)))",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1/VP -)",
        "graph_rules": {
            "ah-01": [
                ":ARG1/VP"
            ]
        },
        "head": "ah-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (ADVP (UH xxx)) (, -) (:ARG0/NP) (:ARG1/VP) (. -)))",
        "tree_rules": [
            ":ARG1/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "chicken",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "plural"
        },
        "tree": "(ROOT (FRAG (S (VP (VB -) (S (NP (EX -)) (NP (NN xxx))))) (. -) ('' -)))",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "no",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": "(ROOT (S (VP ('' -) (NP (DT xxx))) (. -) ('' -)))",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "sigh-01": [
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "sigh-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/VP"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG1/NP) (:ARG2/VP) (. -)))",
        "tree_rules": [
            ":ARG2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (:ARG0/NP) (VP (VB xxx)) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/ADJP - \n\t :op2/ADJP -)",
        "graph_rules": {
            "and": [
                ":op1/ADJP",
                ":op2/ADJP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/S) (, -) (CC xxx) (:ARG1/S) (. -)))",
        "tree_rules": [
            ":op1/ADJP",
            ":op2/ADJP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/E -)",
        "graph_rules": {
            "and": [
                ":op2/E"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (, -) (PP (IN -) (NP (NN -))) (, -) (:ARG1/NP) (:ARG1/VP) (. -)))",
        "tree_rules": [
            ":op2/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/VP"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG0/SBAR) (, -) (NP (PRP -)) (:ARG2/VP) (. -)))",
        "tree_rules": [
            ":ARG2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP -)",
        "graph_rules": {
            "know-04": [
                ":ARG0/NP",
                ":ARG1/NP"
            ]
        },
        "head": "know-04",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (MD -) (VP (VB xxx) (:ARG1/NP))) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :ARG4/IN - \n\t :ARG5/ADVP - \n\t :manner/S -)",
        "graph_rules": {
            "send-03": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":ARG4/IN",
                ":ARG5/ADVP",
                ":manner/S"
            ]
        },
        "head": "send-03",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:manner/S)) (. -)))",
        "tree_rules": [
            ":ARG4/IN",
            ":ARG5/ADVP",
            ":ARG1/NP",
            ":manner/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/E - \n\t :ARG1/IN - \n\t :ARG2/NP - \n\t :ARG1-of/E -)",
        "graph_rules": {
            "call-03": [
                ":ARG0/E",
                ":ARG1/IN",
                ":ARG2/NP",
                ":ARG1-of/E"
            ]
        },
        "head": "call-03",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (NP (NNP -)) (VP (MD -) (VP (VB xxx) (:ARG2/NP) (, -) (:ARG2/PP) (, -) (ADVP (:ARG1/IN) (:ARG2/PP)))) (. -)))",
        "tree_rules": [
            ":ARG1/IN",
            ":ARG2/NP",
            ":ARG0/E",
            ":ARG1-of/E"
        ],
        "verb_info": {
            "tense": "simple future",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/S - \n\t :op3/S -)",
        "graph_rules": {
            "and": [
                ":op2/S",
                ":op3/S"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:op2/S) (: -) (:op3/S) (. -)))",
        "tree_rules": [
            ":op2/S",
            ":op3/S"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :polarity/RB -)",
        "graph_rules": {
            "eat-01": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":polarity/RB"
            ]
        },
        "head": "eat-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB -) (:polarity/RB) (VP (VB xxx) (:ARG1/NP))) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":polarity/RB",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/PP - \n\t :ARG1/NP - \n\t :polarity/DT -)",
        "graph_rules": {
            "use-01": [
                ":ARG0/PP",
                ":ARG1/NP",
                ":polarity/DT"
            ]
        },
        "head": "use-01",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": true,
            "number": "singular"
        },
        "tree": "(ROOT (S (:ARG1/NP) (VP (VB -) (PP (IN -) (NP (NP (:polarity/DT) (NN xxx)) (:ARG0/PP)))) (. -)))",
        "tree_rules": [
            ":polarity/DT",
            ":ARG0/PP",
            ":ARG1/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/ADVP - \n\t :ARG2/PP -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/ADVP",
                ":ARG2/PP"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB -) (:ARG1/ADVP) (S (VP (TO -) (VP (VB xxx) (:ARG2/PP))))) (. -)))",
        "tree_rules": [
            ":ARG2/PP",
            ":ARG1/ADVP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG0/NP) (:op2/VP) (. -)))",
        "tree_rules": [
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/VP"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG0/NP) (:ARG2/VP) (. -)))",
        "tree_rules": [
            ":ARG2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0 - \n\t :ARG1/ADJP -)",
        "graph_rules": {
            "think-01": [
                ":ARG0",
                ":ARG1/ADJP"
            ]
        },
        "head": "think-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (VP (VB xxx) (SBAR (:degree/WHADVP) (:ARG1/S))) (. -)))",
        "tree_rules": [
            ":ARG1/ADJP"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :ARG2/NP - \n\t :direction/S -)",
        "graph_rules": {
            "bring-01": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":ARG2/NP",
                ":direction/S"
            ]
        },
        "head": "bring-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (MD -) (VP (VB xxx) (:direction/S))) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG2/NP",
            ":direction/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple future",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG0/NP) (:op2/VP) ('' -)))",
        "tree_rules": [
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/PP - \n\t :ARG1-of/PP -)",
        "graph_rules": {
            "gaze-01": [
                ":ARG0/NP",
                ":ARG1/PP",
                ":ARG1-of/PP"
            ]
        },
        "head": "gaze-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:ARG1/PP) (, -) (:ARG1-of/PP)) (. -)))",
        "tree_rules": [
            ":ARG1/PP",
            ":ARG1-of/PP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/JJ -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/JJ"
            ]
        },
        "head": "say-01",
        "name": ":root/MULTI-SENTENCE",
        "noun_info": {},
        "tree": "(MULTI-SENTENCE (ROOT (FRAG (:polite/PP) (: -) (:ARG1/JJ) (NP (PRP -)) (. -) ('' -))) (ROOT (S (:ARG0/NP) (VP (VB xxx)) (. -))))",
        "tree_rules": [
            ":ARG1/JJ",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG2/S -)",
        "graph_rules": {
            "reply-01": [
                ":ARG0/NP",
                ":ARG2/S"
            ]
        },
        "head": "reply-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG2/S) (, -) ('' -) (:ARG0/NP) (VP (VB xxx)) (. -)))",
        "tree_rules": [
            ":ARG2/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG2/SBAR -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/SBAR"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "list",
            "inPP": false,
            "number": "plural"
        },
        "tree": "(ROOT (NP ('' -) (CC xxx) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG2/SBAR"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG2/CC -)",
        "graph_rules": {
            "obligate-01": [
                ":ARG2/CC"
            ]
        },
        "head": "obligate-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/S) (, -) (:ARG2/CC) (:op2/S) (. -) ('' -)))",
        "tree_rules": [
            ":ARG2/CC"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :polarity/DT -)",
        "graph_rules": {
            "have-03": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":polarity/DT"
            ]
        },
        "head": "have-03",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG0/NP) (VP (VB xxx) (:ARG1/NP)) (. -)))",
        "tree_rules": [
            ":polarity/DT",
            ":ARG1/NP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :location/PP -)",
        "graph_rules": {
            "buy-01": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":location/PP"
            ]
        },
        "head": "buy-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (S (:ARG1/NP) (ADJP (DT -) (JJ -)) (:ARG1-of/S))) (. -)))",
        "tree_rules": [
            ":location/PP",
            ":ARG1/NP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG2/MD -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/MD"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG1/S) (, -) (CC -) (RB -) (:ARG0-of/S) (. -)))",
        "tree_rules": [
            ":ARG2/MD"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :condition/VB -)",
        "graph_rules": {
            "tame-01": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":condition/VB"
            ]
        },
        "head": "tame-01",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": "(ROOT (SBAR (IN -) (S (:ARG0/NP) (VP (:condition/VB) (S (NP (:ARG1/NP) (, -) (PP (JJ xxx) (:ARG1/NP)) (: -) ('' -)))))))",
        "tree_rules": [
            ":ARG1/NP",
            ":condition/VB",
            ":ARG0/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG2/MD -)",
        "graph_rules": {
            "reply-01": [
                ":ARG0/NP",
                ":ARG2/MD"
            ]
        },
        "head": "reply-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG2/S) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG2/MD",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/PRP - \n\t :time/NP - \n\t :location/E - \n\t :direction/E - \n\t :example/PRN -)",
        "graph_rules": {
            "sit-down-02": [
                ":ARG1/PRP",
                ":time/NP",
                ":location/E",
                ":direction/E",
                ":example/PRN"
            ]
        },
        "head": "sit-down-02",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:time/NP) (VP (MD -) (VP (VB xxx) (PRT (RP xxx)) (:unit/PP) (: -) (:example/PRN) (:location/PP))) (. -)))",
        "tree_rules": [
            ":ARG1/PRP",
            ":example/PRN",
            ":time/NP",
            ":location/E",
            ":direction/E"
        ],
        "verb_info": {
            "tense": "simple future",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/S - \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op1/S",
                ":op2/S"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:op1/S) (, -) (CC xxx) (:op2/S) (. -)))",
        "tree_rules": [
            ":op1/S",
            ":op2/S"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1/PP - \n\t :ARG2/NP -)",
        "graph_rules": {
            "source-01": [
                ":ARG1/PP",
                ":ARG2/NP"
            ]
        },
        "head": "source-01",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S (:ARG2/NP) (VP (VB -) (NP (NP (DT -) (NN xxx)) (:ARG1/PP))) (. -)))",
        "tree_rules": [
            ":ARG1/PP",
            ":ARG2/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/VP"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG1/NP) (:ARG2/VP) ('' -)))",
        "tree_rules": [
            ":ARG2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1/NP - \n\t :direction/ADVP - \n\t :time/NP -)",
        "graph_rules": {
            "come-01": [
                ":ARG1/NP",
                ":direction/ADVP",
                ":time/NP"
            ]
        },
        "head": "come-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/NP) (VP (VB xxx) (:direction/ADVP)) (. -)))",
        "tree_rules": [
            ":time/NP",
            ":direction/ADVP",
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/E -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/E"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":ARG1/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S - \n\t :condition/S - \n\t :time/PP -)",
        "graph_rules": {
            "begin-01": [
                ":ARG0/NP",
                ":ARG1/S",
                ":condition/S",
                ":time/PP"
            ]
        },
        "head": "begin-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:condition/S) (, -) (RB -) (S (:time/PP) (:ARG0/NP) (VP (MD -) (VP (VB xxx) (:ARG1/S)))) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":time/PP",
            ":ARG0/NP",
            ":condition/S"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/ADJP - \n\t :time/NP -)",
        "graph_rules": {
            "feel-01": [
                ":ARG0/NP",
                ":ARG1/ADJP",
                ":time/NP"
            ]
        },
        "head": "feel-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (MD -) (VP (VB xxx) (:time/NP))) (. -)))",
        "tree_rules": [
            ":ARG1/ADJP",
            ":time/NP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/VB - \n\t :op2/VB - \n\t :time/PP - \n\t :time -)",
        "graph_rules": {
            "and": [
                ":op1/VB",
                ":op2/VB",
                ":time/PP",
                ":time"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:time/PP) (, -) (:ARG1/NP) (VP (MD -) (:time/ADVP) (VP (VB -) (VP (:op1/VB) (CC xxx) (:op2/VB) (:direction/ADVP)))) (. -)))",
        "tree_rules": [
            ":op1/VB",
            ":op2/VB",
            ":time/ADVP",
            ":time/PP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/WHADVP - \n\t :ARG2/NP -)",
        "graph_rules": {
            "show-01": [
                ":ARG0/NP",
                ":ARG1/WHADVP",
                ":ARG2/NP"
            ]
        },
        "head": "show-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (MD -) (VP (VB xxx) (:ARG2/NP) (SBAR (:ARG1/WHADVP) (:ARG1/S)))) (. -)))",
        "tree_rules": [
            ":ARG1/WHADVP",
            ":ARG2/NP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/VP"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:condition/SBAR) (, -) (:ARG0/NP) (:ARG2/VP) (: -)))",
        "tree_rules": [
            ":ARG2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1/NP - \n\t :ARG2/VP -)",
        "graph_rules": {
            "obligate-01": [
                ":ARG1/NP",
                ":ARG2/VP"
            ]
        },
        "head": "obligate-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/NP) (VP (MD xxx) (:ARG2/VP)) (: -) ('' -)))",
        "tree_rules": [
            ":ARG2/VP",
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/E -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/E"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1-of/S) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":ARG1/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1-of/E - \n\t :ARG0-of/E -)",
        "graph_rules": {
            "rite": [
                ":ARG1-of/E",
                ":ARG0-of/E"
            ]
        },
        "head": "rite",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S (NP (EX -)) (VP (VB -) (NP (NP (NP (DT -) (NN xxx)) (, -) (PP (IN -) (NP (NN -))) (, -)) (:ARG0/PP))) (. -)))",
        "tree_rules": [
            ":ARG0-of/E",
            ":ARG1-of/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG2/PP - \n\t :frequency/E -)",
        "graph_rules": {
            "dance-01": [
                ":ARG0/NP",
                ":ARG2/PP",
                ":frequency/E"
            ]
        },
        "head": "dance-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG4/NP-TMP) (:ARG0/NP) (VP (VB xxx) (:ARG2/PP)) (. -)))",
        "tree_rules": [
            ":ARG2/PP",
            ":ARG0/NP",
            ":frequency/E"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/NP -)",
        "graph_rules": {
            "possible-01": [
                ":ARG1/NP"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (MD xxx) (VP (VB -) (:ARG1/NP) (:extent/ADVP) (:compared-to/PP))) (. -)))",
        "tree_rules": [
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG2/S -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/S"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:condition/SBAR) (, -) (:ARG2/S) (, -) (CC -) (:ARG2/S) (. -) ('' -)))",
        "tree_rules": [
            ":ARG2/S"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VP -)",
        "graph_rules": {
            "and": [
                ":op1/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:time/SBAR) (, -) ('' -) (:op1/VP) (. -) ('' -)))",
        "tree_rules": [
            ":op1/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/S - \n\t :ARG2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG1/S",
                ":ARG2/VP"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/S) (: -) (S (CC xxx) (:ARG2/NP) (:ARG2/VP)) (: -) ('' -)))",
        "tree_rules": [
            ":ARG2/VP",
            ":ARG1/S"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/ADJP - \n\t :ARG2/NP - \n\t :mod/E -)",
        "graph_rules": {
            "do-02": [
                ":ARG0/NP",
                ":ARG1/ADJP",
                ":ARG2/NP",
                ":mod/E"
            ]
        },
        "head": "do-02",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG0/NP) (VP (VB -) (VP (VB xxx) (S (:ARG2/NP) (:ARG1/ADJP) (ADVP (IN -) (DT -))))) (. -) ('' -)))",
        "tree_rules": [
            ":ARG2/NP",
            ":ARG1/ADJP",
            ":ARG0/NP",
            ":mod/E"
        ],
        "verb_info": {
            "tense": "present perfect",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (VP (VB xxx) (:ARG0/NP) (:ARG0/PP)) (. -) ('' -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":ARG1/S"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/VP -)",
        "graph_rules": {
            "and": [
                ":op1/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (S (CC xxx) (:time/ADVP) (:ARG0/NP) (:op1/VP)) (: -) ('' -) (:op2/PRN) (. -)))",
        "tree_rules": [
            ":op1/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/SBAR - \n\t :time/ADVP -)",
        "graph_rules": {
            "understand-01": [
                ":ARG0/NP",
                ":ARG1/SBAR",
                ":time/ADVP"
            ]
        },
        "head": "understand-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (MD -) (VP (VB xxx) (:time/ADVP) (:ARG1/SBAR))) (. -)))",
        "tree_rules": [
            ":time/ADVP",
            ":ARG1/SBAR",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple future",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/S - \n\t :op2/E -)",
        "graph_rules": {
            "and": [
                ":op1/S",
                ":op2/E"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:op1/S) (, -) (CC xxx) (:ARG0/S) (. -) ('' -)))",
        "tree_rules": [
            ":op1/S",
            ":op2/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :direction/ADVP - \n\t :purpose/S -)",
        "graph_rules": {
            "go-02": [
                ":ARG0/NP",
                ":direction/ADVP",
                ":purpose/S"
            ]
        },
        "head": "go-02",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:direction/ADVP) (, -) (:purpose/S)) (. -)))",
        "tree_rules": [
            ":direction/ADVP",
            ":purpose/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/E -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/E"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (:ARG0/NP) (VP (VB xxx)) (. -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":ARG1/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :domain/PP - \n\t :time/E -)",
        "graph_rules": {
            "nothing": [
                ":domain/PP",
                ":time/E"
            ]
        },
        "head": "nothing",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S ('' -) (:domain/PP) (VP (VB -) (NP (NN xxx))) (. -)))",
        "tree_rules": [
            ":domain/PP",
            ":time/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/S - \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op1/S",
                ":op2/S"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:op1/S) (, -) (CC xxx) (:op2/S) (. -)))",
        "tree_rules": [
            ":op1/S",
            ":op2/S"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :domain/NP - \n\t :ARG1-of/E - \n\t :mod/ADVP -)",
        "graph_rules": {
            "fox": [
                ":domain/NP",
                ":ARG1-of/E",
                ":mod/ADVP"
            ]
        },
        "head": "fox",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S (:domain/NP) (VP (VB -) (:mod/ADVP) (NP (NP (DT -) (NN xxx)) (:ARG2/PP))) (. -)))",
        "tree_rules": [
            ":mod/ADVP",
            ":domain/NP",
            ":ARG1-of/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/VP"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (S (CC xxx) (:ARG0/NP) (:ARG2/VP)) (, -) (CC -) (:ARG1/S) (. -) ('' -)))",
        "tree_rules": [
            ":ARG2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/E -)",
        "graph_rules": {
            "and": [
                ":op1/E"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG1/NP) (:degree/VP) (. -)))",
        "tree_rules": [
            ":op1/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/CC -)",
        "graph_rules": {
            "go-on-25": [
                ":ARG0/NP",
                ":ARG1/CC"
            ]
        },
        "head": "go-on-25",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (S (:ARG1/S) (, -) (:ARG1/CC) (:ARG2/S)) (, -) ('' -) (:ARG0/NP) (VP (VB xxx) (PP (IN xxx))) (. -)))",
        "tree_rules": [
            ":ARG1/CC",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :ARG1/VP -)",
        "graph_rules": {
            "possible-01": [
                ":polarity/RB",
                ":ARG1/VP"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/NP) (VP (MD xxx) (:polarity/RB) (:ARG1/VP)) (. -)))",
        "tree_rules": [
            ":polarity/RB",
            ":ARG1/VP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/SBAR - \n\t :ARG1-of/S -)",
        "graph_rules": {
            "think-01": [
                ":ARG0/NP",
                ":ARG1/SBAR",
                ":ARG1-of/S"
            ]
        },
        "head": "think-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (S (:ARG1-of/S) (, -) (:ARG0/NP) (VP (MD -) (VP (VB xxx) (:ARG1/SBAR)))) (: -) (: -) (:ARG0-of/S) (. -)))",
        "tree_rules": [
            ":ARG1/SBAR",
            ":ARG1-of/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG2/ADJP -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/ADJP"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:mod/PP) (:domain/NP) (VP (VBZ -) (ADJP (:ARG2/ADJP) (:ARG1/SBAR))) (. -)))",
        "tree_rules": [
            ":ARG2/ADJP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VP -)",
        "graph_rules": {
            "and": [
                ":op1/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG0/NP) (:op1/VP) (. -)))",
        "tree_rules": [
            ":op1/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/ADVP -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/ADVP"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/ADVP) (, -) ('' -) (:ARG0/NP) (VP (VB xxx)) (. -)))",
        "tree_rules": [
            ":ARG1/ADVP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/ADVP -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/ADVP"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/ADVP) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG1/ADVP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/NP -)",
        "graph_rules": {
            "and": [
                ":op1/NP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "list",
            "inPP": false,
            "number": "plural"
        },
        "tree": "(ROOT (S ('' -) (NP (CC xxx)) (:time/ADVP) (:ARG1-of/VP) (. -) ('' -)))",
        "tree_rules": [
            ":op1/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/E - \n\t :purpose/S -)",
        "graph_rules": {
            "repeat-01": [
                ":ARG0/NP",
                ":ARG1/E",
                ":purpose/S"
            ]
        },
        "head": "repeat-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (NP (WP -)) (VP (VB -) (ADJP (:mod/JJ) (SBAR (S (VP (VB -) (ADJP (JJ -) (PP (TO -) (NP (:instrument/NP) (, -) ('' -) (NP (:ARG0/NP) (VP (VB xxx)))))) (, -) (:ARG1-of/SBAR)))))) (. -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":purpose/S",
            ":ARG1/E"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1-of/SBAR - \n\t :ARG0-of/SBAR -)",
        "graph_rules": {
            "time": [
                ":ARG1-of/SBAR",
                ":ARG0-of/SBAR"
            ]
        },
        "head": "time",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S ('' -) (NP (PRP -)) (VP (VB -) (NP (NP (DT -) (NN xxx)) (:ARG1-of/SBAR))) (. -) ('' -)))",
        "tree_rules": [
            ":ARG0-of/SBAR",
            ":ARG1-of/SBAR"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S - \n\t :purpose/S -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/S",
                ":purpose/S"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (: -) ('' -) (S (S (VP (VB xxx) (:ARG0/NP))) (, -) (:ARG1-of/S)) (. -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":purpose/S",
            ":ARG1/S"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG2/MD -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/MD"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "list",
            "inPP": false,
            "number": "plural"
        },
        "tree": "(ROOT (NP ('' -) (CC xxx) (:ARG1/NP) (. -)))",
        "tree_rules": [
            ":ARG2/MD"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1/NP - \n\t :ARG2/ADJP -)",
        "graph_rules": {
            "become-01": [
                ":ARG1/NP",
                ":ARG2/ADJP"
            ]
        },
        "head": "become-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/NP) (VP (VB xxx) (:ARG2/ADJP)) (. -)))",
        "tree_rules": [
            ":ARG2/ADJP",
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/PP -)",
        "graph_rules": {
            "responsible-03": [
                ":ARG0/NP",
                ":ARG1/PP"
            ]
        },
        "head": "responsible-03",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB -) (NP (NP (JJ xxx)) (:ARG1/PP) ('' -)))))",
        "tree_rules": [
            ":ARG1/PP",
            ":ARG0/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/ADJP - \n\t :purpose/S -)",
        "graph_rules": {
            "repeat-01": [
                ":ARG0/NP",
                ":ARG1/ADJP",
                ":purpose/S"
            ]
        },
        "head": "repeat-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (NP (PRP -)) (VP (VB -) (ADJP (:ARG1/ADJP) (PRN (, -) ('' -) (S (:ARG0/NP) (VP (VB xxx))) (, -)) (:ARG1-of/SBAR))) (. -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":purpose/S",
            ":ARG1/ADJP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "passive"
        }
    },
    {
        "graph": "(XXX \n\t :mod/NP -)",
        "graph_rules": {
            "chapter": [
                ":mod/NP"
            ]
        },
        "head": "chapter",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (NP (NP (NN xxx)) (:mod/NP) (. -)))",
        "tree_rules": [
            ":mod/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NN -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/NN"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1-of/ADVP) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG1/NN",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NN -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/NN"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1-of/ADVP) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG1/NN",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :ARG5/E -)",
        "graph_rules": {
            "send-03": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":ARG5/E"
            ]
        },
        "head": "send-03",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG0/NP) (VP (VB xxx) (PRT (RP -)) (:ARG1/NP)) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG0/NP",
            ":ARG5/E"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG1-of/NP) (:op2/VP) (. -)))",
        "tree_rules": [
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP -)",
        "graph_rules": {
            "look-01": [
                ":ARG0/NP",
                ":ARG1/NP"
            ]
        },
        "head": "look-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/NP) (VP (VB -) (S (:ARG0/NP) (VP (VB xxx) (PP (IN -))))) (. -) ('' -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "present continuous",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op2/S"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG1-of/NP) (:mod/VP) (. -)))",
        "tree_rules": [
            ":op2/S"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/NP"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (S (NP (DT -)) (VP (VBP -) (:polarity/RB) (:ARG1/NP))) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :domain/NP -)",
        "graph_rules": {
            "exchange-01": [
                ":domain/NP"
            ]
        },
        "head": "exchange-01",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S ('' -) (:domain/NP) (VP (VB -) (NP (DT -) (NN xxx))) (. -) ('' -)))",
        "tree_rules": [
            ":domain/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/ADJP -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/ADJP"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (S (NP (DT -) (NN -)) (VP (VBZ -) (:time/ADVP) (:ARG1/ADJP))) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG1/ADJP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG0/NP) (:op2/VP) (. -)))",
        "tree_rules": [
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/ADJP - \n\t :op2/S -)",
        "graph_rules": {
            "or": [
                ":op1/ADJP",
                ":op2/S"
            ]
        },
        "head": "or",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG0/S) (, -) (CC xxx) (:op2/S) (. -)))",
        "tree_rules": [
            ":op1/ADJP",
            ":op2/S"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :ARG1-of/E -)",
        "graph_rules": {
            "flatten-01": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":ARG1-of/E"
            ]
        },
        "head": "flatten-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB -) (VP (VB xxx) (:ARG1/NP) (:ARG2/PP))) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG0/NP",
            ":ARG1-of/E"
        ],
        "verb_info": {
            "tense": "present continuous",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/E - \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op1/E",
                ":op2/S"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (S ('' -) (:ARG0/S) (CC xxx) (:ARG1/S)) (: -) (CC -) (:op2/S) (: -) ('' -)))",
        "tree_rules": [
            ":op2/S",
            ":op1/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (:ARG0/NP) (VP (VB xxx)) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :mod/NP -)",
        "graph_rules": {
            "chapter": [
                ":mod/NP"
            ]
        },
        "head": "chapter",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (NP (NP (NN xxx)) (:mod/NP) (. -)))",
        "tree_rules": [
            ":mod/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NN -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/NN"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1-of/ADVP) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG1/NN",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NN -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/NN"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1-of/ADVP) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG1/NN",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP -)",
        "graph_rules": {
            "sell-01": [
                ":ARG0/NP",
                ":ARG1/NP"
            ]
        },
        "head": "sell-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:domain/NP) (VP (VB -) (NP (:ARG0/NP) (SBAR (WHNP (WP -)) (S (VP (VB xxx) (:ARG1/NP)))))) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/VB - \n\t :ARG1/S -)",
        "graph_rules": {
            "cause-01": [
                ":ARG0/VB",
                ":ARG1/S"
            ]
        },
        "head": "cause-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/S) (, -) (CC -) (:ARG1/S) (. -)))",
        "tree_rules": [
            ":ARG0/VB",
            ":ARG1/S"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/SQ -)",
        "graph_rules": {
            "ask-01": [
                ":ARG0/NP",
                ":ARG1/SQ"
            ]
        },
        "head": "ask-01",
        "name": ":root/MULTI-SENTENCE",
        "noun_info": {},
        "tree": "(MULTI-SENTENCE (ROOT (SBARQ ('' -) (:ARG0/WHADVP) (:ARG1/SQ) (. -) ('' -))) (ROOT (S (VP (VB xxx) (:ARG0/NP)) (. -))))",
        "tree_rules": [
            ":ARG1/SQ",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/E -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/E"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/PP) (VP (VB xxx) (:ARG0/NP)) (. -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":ARG1/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/E - \n\t :ARG1/E -)",
        "graph_rules": {
            "make-01": [
                ":ARG0/E",
                ":ARG1/E"
            ]
        },
        "head": "make-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1-of/NP) (VP (VB -) (VP (VB -) (VP (VB xxx) (:ARG1-of/PP)))) (. -)))",
        "tree_rules": [
            ":ARG0/E",
            ":ARG1/E"
        ],
        "verb_info": {
            "tense": "present perfect",
            "voice": "passive"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/E - \n\t :instrument/PP -)",
        "graph_rules": {
            "save-03": [
                ":ARG0/NP",
                ":ARG1/E",
                ":instrument/PP"
            ]
        },
        "head": "save-03",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:instrument/PP) (, -) (:ARG0/NP) (VP (VB xxx) (NP (CD -)) (: -) (:ARG1/NP)) (. -) ('' -)))",
        "tree_rules": [
            ":instrument/PP",
            ":ARG0/NP",
            ":ARG1/E"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/VB -)",
        "graph_rules": {
            "and": [
                ":op1/VB"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (SBARQ ('' -) (CC xxx) (:ARG1/WHNP) (:ARG2/SQ) (. -) ('' -)))",
        "tree_rules": [
            ":op1/VB"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S - \n\t :ARG2/E -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/S",
                ":ARG2/E"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG0/PP) (, -) ('' -) (VP (VB xxx) (:ARG0/NP) (:poss/PP) (:ARG1/NP-TMP) (:ARG1/S)) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/NP",
            ":ARG2/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :mod/NP -)",
        "graph_rules": {
            "chapter": [
                ":mod/NP"
            ]
        },
        "head": "chapter",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (NP (NP (NN xxx)) (:mod/NP) (. -)))",
        "tree_rules": [
            ":mod/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/E - \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op1/E",
                ":op2/S"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/S) (, -) (CC xxx) (:op2/S) (. -)))",
        "tree_rules": [
            ":op2/S",
            ":op1/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "ah",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": "(ROOT (FRAG (VP ('' -) (NP (UH xxx)) (, -) ('' -))))",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/CC - \n\t :ARG2/PP -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/CC",
                ":ARG2/PP"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (S (:ARG0/NP) (VP (VB xxx) (:ARG2/PP))) (, -) ('' -) (:op1/PRN) (: -) (:op1/S) (: -) (:ARG0/S) (: -) (:ARG1/CC) (:condition/S) (. -) ('' -)))",
        "tree_rules": [
            ":ARG2/PP",
            ":ARG0/NP",
            ":ARG1/CC"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S - \n\t :ARG2/PP -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/S",
                ":ARG2/PP"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (: -) ('' -) (S (:ARG0/NP) (VP (VB xxx) (:ARG2/PP))) (. -)))",
        "tree_rules": [
            ":ARG2/PP",
            ":ARG0/NP",
            ":ARG1/S"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/S - \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op1/S",
                ":op2/S"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (S (:op1/S) (, -) (CC xxx) (:op2/S)) (: -) ('' -) (PRN (S (NP (PRP -)) (VP (VBZ -) (NP (DT -) (:ARG2/JJ) (NN -) (:ARG1/S))))) (, -) (:op1/SBAR) (. -)))",
        "tree_rules": [
            ":op1/S",
            ":op2/S"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/PP - \n\t :ARG1/WHNP - \n\t :degree/RB -)",
        "graph_rules": {
            "glad-02": [
                ":ARG0/PP",
                ":ARG1/WHNP",
                ":degree/RB"
            ]
        },
        "head": "glad-02",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (SBAR (:ARG1/WHNP) (S (VP (VB -) (ADJP (:degree/RB) (JJ xxx) (S (VP (TO -) (VP (VB -)))))))) (:ARG0/VP) (: -) ('' -)))",
        "tree_rules": [
            ":degree/RB",
            ":ARG1/WHNP",
            ":ARG0/PP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG2/PP -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG2/PP"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:ARG2/PP)) (. -)))",
        "tree_rules": [
            ":ARG2/PP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :mod/ADVP -)",
        "graph_rules": {
            "need-01": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":mod/ADVP"
            ]
        },
        "head": "need-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (SBAR (WHNP (NP (DT -)) (PP (:quant/JJ) (:ARG1/NP))) (S (VP (VBZ -) (:mod/ADVP) (:ARG0/NP)))) (VP (VB xxx)) (: -) ('' -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":mod/ADVP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG2/CC -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/CC"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:op2/S) (: -) ('' -) (:ARG0/S) (. -)))",
        "tree_rules": [
            ":ARG2/CC"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/PP -)",
        "graph_rules": {
            "look-01": [
                ":ARG0/NP",
                ":ARG1/PP"
            ]
        },
        "head": "look-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (VP (VB -) (S (:ARG0/NP) (VP (VB xxx))) (:ARG1/PP) ('' -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":ARG1/PP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/PP -)",
        "graph_rules": {
            "gesture-01": [
                ":ARG0/NP",
                ":ARG1/PP"
            ]
        },
        "head": "gesture-01",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB -) (NP (NP (DT -) (NN xxx)) (:ARG1/PP))) (. -)))",
        "tree_rules": [
            ":ARG1/PP",
            ":ARG0/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :domain/S -)",
        "graph_rules": {
            "absurd": [
                ":domain/S"
            ]
        },
        "head": "absurd",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (NP (PRP -)) (VP (VB -) (ADJP (JJ xxx) (:domain/S))) (. -)))",
        "tree_rules": [
            ":domain/S"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/S - \n\t :op2/S - \n\t :time/SBAR -)",
        "graph_rules": {
            "and": [
                ":op1/S",
                ":op2/S",
                ":time/SBAR"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:op1/S) (, -) (CC xxx) (:op2/S) (. -)))",
        "tree_rules": [
            ":time/SBAR",
            ":op1/S",
            ":op2/S"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/S - \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op1/S",
                ":op2/S"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:op1/S) (, -) (CC xxx) (:op2/S) (. -)))",
        "tree_rules": [
            ":op1/S",
            ":op2/S"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1/NP - \n\t :ARG4/PP - \n\t :manner/S -)",
        "graph_rules": {
            "come-01": [
                ":ARG1/NP",
                ":ARG4/PP",
                ":manner/S"
            ]
        },
        "head": "come-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (S (:ARG1/NP) (VP (VB xxx) (:manner/S))) (: -) ('' -) (:ARG0/S) (. -) ('' -)))",
        "tree_rules": [
            ":ARG4/PP",
            ":manner/S",
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP -)",
        "graph_rules": {
            "demand-01": [
                ":ARG0/NP"
            ]
        },
        "head": "demand-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx)) (. -)))",
        "tree_rules": [
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/VP"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG0/NP) (:ARG2/VP) (. -)))",
        "tree_rules": [
            ":ARG2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/MD - \n\t :ARG2/PP - \n\t :mod/ADVP -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/MD",
                ":ARG2/PP",
                ":mod/ADVP"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (:mod/ADVP) (VB xxx) (:ARG2/PP) ('' -) (:ARG1/NP))))",
        "tree_rules": [
            ":ARG1/MD",
            ":mod/ADVP",
            ":ARG2/PP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :polarity/RB - \n\t :concession-of/S -)",
        "graph_rules": {
            "understand-01": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":polarity/RB",
                ":concession-of/S"
            ]
        },
        "head": "understand-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (S (:ARG0/NP) (VP (VB -) (:polarity/RB) (VP (VB xxx) (:ARG1/NP)))) (, -) (CC -) (:concession-of/S) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":polarity/RB",
            ":ARG0/NP",
            ":concession-of/S"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/E - \n\t :degree/RB -)",
        "graph_rules": {
            "know-01": [
                ":ARG0/NP",
                ":ARG1/E",
                ":degree/RB"
            ]
        },
        "head": "know-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (ADVP (:degree/RB) (:degree/RB)) (:ARG1/SBAR)) (. -)))",
        "tree_rules": [
            ":degree/RB",
            ":ARG0/NP",
            ":ARG1/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/NP -)",
        "graph_rules": {
            "tire-01": [
                ":ARG1/NP"
            ]
        },
        "head": "tire-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/NP) (VP (VB -) (ADJP (VB xxx))) (. -)))",
        "tree_rules": [
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "passive"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/NP -)",
        "graph_rules": {
            "sit-down-02": [
                ":ARG1/NP"
            ]
        },
        "head": "sit-down-02",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/NP) (VP (VB xxx) (PRT (RP xxx))) (. -)))",
        "tree_rules": [
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/NP - \n\t :location/RB -)",
        "graph_rules": {
            "sit-down-02": [
                ":ARG1/NP",
                ":location/RB"
            ]
        },
        "head": "sit-down-02",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/NP) (VP (VB xxx) (ADVP (IN xxx)) (PP (:location/RB) (:op1/NP))) (. -)))",
        "tree_rules": [
            ":location/RB",
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op2/S"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (, -) (PP (:time/IN) (:duration/NP)) (, -) (:op2/S) (: -) ('' -) (:ARG1/S) (. -) ('' -)))",
        "tree_rules": [
            ":op2/S"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/ADVP - \n\t :ARG2/PP -)",
        "graph_rules": {
            "reply-01": [
                ":ARG0/ADVP",
                ":ARG2/PP"
            ]
        },
        "head": "reply-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (VP (:ARG0/ADVP) (VB xxx) (, -) ('' -) (:domain/S)) (. -) ('' -)))",
        "tree_rules": [
            ":ARG2/PP",
            ":ARG0/ADVP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (, -) (:manner/PP) (, -) (:ARG0/NP) (:op2/VP) (. -)))",
        "tree_rules": [
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "add-01": [
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "add-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (:ARG0/NP) (VP (VB xxx)) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG1/NP) (:op2/VP) (. -)))",
        "tree_rules": [
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :time/ADVP -)",
        "graph_rules": {
            "love-01": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":time/ADVP"
            ]
        },
        "head": "love-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB -) (:time/ADVP) (VP (VB xxx) (:ARG1/NP))) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":time/ADVP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "present perfect",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/VP - \n\t :op2/VP - \n\t :concession/E -)",
        "graph_rules": {
            "and": [
                ":op1/VP",
                ":op2/VP",
                ":concession/E"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "",
            "inPP": true,
            "number": ""
        },
        "tree": "(ROOT (UCP (ADVP (RB -)) (PP (IN -) (NP (:ARG1/NP) (SBAR (S (VP (:op1/VP) (, -) (CC xxx) (:op2/VP))))) (: -))))",
        "tree_rules": [
            ":op1/VP",
            ":op2/VP",
            ":concession/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/SBAR -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/SBAR"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (S (:ARG1/SBAR) (VP (VB xxx) (:ARG0/NP))) (, -) ('' -) (VP (VBZ -) (ADVP (DT -) (:location/RB) (:ARG0/SBAR))) (: -) ('' -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":ARG1/SBAR"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/PP - \n\t :ARG1/NP -)",
        "graph_rules": {
            "astonish-01": [
                ":ARG0/PP",
                ":ARG1/NP"
            ]
        },
        "head": "astonish-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/NP) (VP (VB -) (VP (VB xxx) (:ARG0/PP))) (. -)))",
        "tree_rules": [
            ":ARG0/PP",
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "passive"
        }
    },
    {
        "graph": "(XXX \n\t :op1/S - \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op1/S",
                ":op2/S"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:op1/S) (, -) (CC xxx) (:op2/S) (. -)))",
        "tree_rules": [
            ":op1/S",
            ":op2/S"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/S - \n\t :op2/E -)",
        "graph_rules": {
            "and": [
                ":op1/S",
                ":op2/E"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:manner-of/S) (: -) (:ARG1/S) (. -)))",
        "tree_rules": [
            ":op1/S",
            ":op2/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/VP"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG0/NP) (:ARG2/VP) (. -)))",
        "tree_rules": [
            ":ARG2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :location/E -)",
        "graph_rules": {
            "hide-01": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":location/E"
            ]
        },
        "head": "hide-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB -) (VP (VB xxx) (:ARG1/NP) (:ARG1/PP))) (: -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG0/NP",
            ":location/E"
        ],
        "verb_info": {
            "tense": "past continuous",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "yes",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": "(ROOT (FRAG (VP ('' -) (NP (UH xxx)) (, -) ('' -))))",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG2/PP -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG2/PP"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:ARG2/PP)) (. -)))",
        "tree_rules": [
            ":ARG2/PP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/VP - \n\t :ARG1/NP - \n\t :ARG2/E -)",
        "graph_rules": {
            "give-01": [
                ":ARG0/VP",
                ":ARG1/NP",
                ":ARG2/E"
            ]
        },
        "head": "give-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (FRAG ('' -) (:op1/NP) (, -) (:op3/PP) (:polarity/:)) (: -) (S (SBAR (WHNP (WP -)) (S (VP (VB xxx) (NP (PRP -)) (:ARG1/NP)))) (:ARG0/VP)) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG0/VP",
            ":ARG2/E"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (:ARG0/NP) (VP (VB xxx) (, -) ('' -) (:ARG0/SBAR)) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/VP - \n\t :op2/VP - \n\t :time/SBAR -)",
        "graph_rules": {
            "and": [
                ":op1/VP",
                ":op2/VP",
                ":time/SBAR"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:time/SBAR) (, -) (:ARG0/NP) (VP (:op1/VP) (CC xxx) (:op2/VP)) (. -)))",
        "tree_rules": [
            ":op1/VP",
            ":op2/VP",
            ":time/SBAR"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/CC -)",
        "graph_rules": {
            "feel-01": [
                ":ARG0/NP",
                ":ARG1/CC"
            ]
        },
        "head": "feel-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VP (VB xxx) (:op1/VP)) (, -) (:ARG1/CC) (:op2/VP)) (. -)))",
        "tree_rules": [
            ":ARG1/CC",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/SBAR - \n\t :ARG2/PP -)",
        "graph_rules": {
            "seem-01": [
                ":ARG1/SBAR",
                ":ARG2/PP"
            ]
        },
        "head": "seem-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (NP (PRP -)) (VP (VB xxx) (:ARG2/PP) (:ARG1/SBAR)) (. -)))",
        "tree_rules": [
            ":ARG2/PP",
            ":ARG1/SBAR"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/ADJP - \n\t :ARG2/PP - \n\t :mod/ADVP -)",
        "graph_rules": {
            "seem-01": [
                ":ARG1/ADJP",
                ":ARG2/PP",
                ":mod/ADVP"
            ]
        },
        "head": "seem-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (NP (PRP -)) (VP (VB xxx) (:ARG2/PP) (, -) (:mod/ADVP) (, -) (SBAR (IN -) (S (NP (EX -)) (VP (VBD -) (:ARG1/ADJP) (:location/PP))))) (. -)))",
        "tree_rules": [
            ":ARG1/ADJP",
            ":ARG2/PP",
            ":mod/ADVP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/S - \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op1/S",
                ":op2/S"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (S (:op1/S) (, -) (CC xxx) (:op2/S)) (: -) ('' -) (:ARG1/S) (. -)))",
        "tree_rules": [
            ":op1/S",
            ":op2/S"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/SBAR - \n\t :ARG2/E - \n\t :time/VB - \n\t :mod/ADVP -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/SBAR",
                ":ARG2/E",
                ":time/VB",
                ":mod/ADVP"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (SBAR (IN -) (S (:ARG1/NP) (VP (:time/VB) (ADVP (RB -)) (PP (IN -) (NP (NP (:mod/NP) (PP (IN -) (NP (:mod/NP) (: -) (NP (:manner/NP) (PRN (, -) (S (:ARG0/NP) (VP (VB xxx) (:ARG1/PP) (, -) (:mod/ADVP))))) (: -) ('' -))) (:ARG1/SBAR)) (, -) (:ARG0/PP) (, -)))))) (:op1/VP) (: -) ('' -)))",
        "tree_rules": [
            ":mod/ADVP",
            ":ARG0/NP",
            ":ARG1/SBAR",
            ":time/VB",
            ":ARG2/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG0/NP) (:op2/VP) (. -)))",
        "tree_rules": [
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP -)",
        "graph_rules": {
            "feel-01": [
                ":ARG0/NP",
                ":ARG1/NP"
            ]
        },
        "head": "feel-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:ARG1/NP)) (: -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (, -) (:time/SBAR) (, -) (:ARG0/NP) (:op2/VP) (. -)))",
        "tree_rules": [
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/NP -)",
        "graph_rules": {
            "chapter": [
                ":mod/NP"
            ]
        },
        "head": "chapter",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (NP (NP (NN xxx)) (:mod/NP) (. -)))",
        "tree_rules": [
            ":mod/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/E -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/E"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG0/ADVP) (, -) ('' -) (VP (VB xxx) (:ARG0/NP)) (. -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":ARG1/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/S - \n\t :op2/VP - \n\t :op3/VP - \n\t :time/ADVP -)",
        "graph_rules": {
            "and": [
                ":op1/S",
                ":op2/VP",
                ":op3/VP",
                ":time/ADVP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "list",
            "inPP": false,
            "number": "plural"
        },
        "tree": "(ROOT (S (:op1/S) (, -) (S (NP (CC xxx)) (:op3/VP)) (: -) ('' -)))",
        "tree_rules": [
            ":time/ADVP",
            ":op2/VP",
            ":op3/VP",
            ":op1/S"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (S (CC xxx) (:ARG0/NP) (:op2/VP)) (: -) ('' -) (:ARG1/S) (: -) ('' -)))",
        "tree_rules": [
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG4-of/SBAR - \n\t :ARG1-of/E -)",
        "graph_rules": {
            "well": [
                ":ARG4-of/SBAR",
                ":ARG1-of/E"
            ]
        },
        "head": "well",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S (NP (NP (DT -) (NN xxx)) (:ARG4-of/SBAR)) (:ARG2/VP) (. -)))",
        "tree_rules": [
            ":ARG4-of/SBAR",
            ":ARG1-of/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1-of/SBAR - \n\t :mod/JJ - \n\t :domain/NP -)",
        "graph_rules": {
            "hole": [
                ":ARG1-of/SBAR",
                ":mod/JJ",
                ":domain/NP"
            ]
        },
        "head": "hole",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "plural"
        },
        "tree": "(ROOT (S (:domain/NP) (VP (VB -) (NP (NP (:mod/JJ) (NN xxx)) (:ARG1-of/SBAR))) (. -)))",
        "tree_rules": [
            ":mod/JJ",
            ":ARG1-of/SBAR",
            ":domain/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG2/CC -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/CC"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (S (CC xxx) (NP (EX -)) (VP (VBD -) (:op1/NP) (:location/ADVP))) (, -) (:ARG2/CC) (:op2/S) (: -)))",
        "tree_rules": [
            ":ARG2/CC"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :domain/NP -)",
        "graph_rules": {
            "strange": [
                ":domain/NP"
            ]
        },
        "head": "strange",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:domain/NP) (VP (VB -) (ADJP (JJ xxx))) (, -) ('' -)))",
        "tree_rules": [
            ":domain/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG2/PP -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG2/PP"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:ARG2/PP)) (. -)))",
        "tree_rules": [
            ":ARG2/PP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/NP - \n\t :ARG2/PP -)",
        "graph_rules": {
            "ready-02": [
                ":ARG1/NP",
                ":ARG2/PP"
            ]
        },
        "head": "ready-02",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/NP) (VP (VB -) (UCP (ADJP (JJ xxx) (:ARG2/PP)) (: -) (:op3/NP))) (: -) ('' -)))",
        "tree_rules": [
            ":ARG2/PP",
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/VP - \n\t :op2/VP - \n\t :op3/VP -)",
        "graph_rules": {
            "and": [
                ":op1/VP",
                ":op2/VP",
                ":op3/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (:op1/VP) (, -) (:op2/VP) (, -) (CC xxx) (:op3/VP)) (. -)))",
        "tree_rules": [
            ":op1/VP",
            ":op2/VP",
            ":op3/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG0/NP) (:op2/VP) (. -)))",
        "tree_rules": [
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/E - \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op1/E",
                ":op2/S"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG0/NP) (:ARG1/VP) (, -) (CC xxx) (:op2/S) (: -) ('' -)))",
        "tree_rules": [
            ":op2/S",
            ":op1/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/PP - \n\t :polarity/RB -)",
        "graph_rules": {
            "want-01": [
                ":ARG0/NP",
                ":ARG1/PP",
                ":polarity/RB"
            ]
        },
        "head": "want-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB -) (:polarity/RB) (VP (VB xxx) (:ARG0/NP) (:ARG1/PP) (PP (:ARG1/NP) (IN -) (:instrument/NP)))) (. -)))",
        "tree_rules": [
            ":ARG1/PP",
            ":polarity/RB",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/E - \n\t :ARG1/NP - \n\t :ARG2/PP -)",
        "graph_rules": {
            "leave-02": [
                ":ARG0/E",
                ":ARG1/NP",
                ":ARG2/PP"
            ]
        },
        "head": "leave-02",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (VP ('' -) (VB xxx) (:ARG1/NP))))",
        "tree_rules": [
            ":ARG2/PP",
            ":ARG1/NP",
            ":ARG0/E"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx)) (. -)))",
        "tree_rules": [
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :domain/NP - \n\t :degree/RB - \n\t :compared-to/PP -)",
        "graph_rules": {
            "heavy": [
                ":domain/NP",
                ":degree/RB",
                ":compared-to/PP"
            ]
        },
        "head": "heavy",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:domain/NP) (VP (VB -) (ADJP (:degree/RB) (JJ xxx) (:compared-to/PP))) (. -) ('' -)))",
        "tree_rules": [
            ":degree/RB",
            ":compared-to/PP",
            ":domain/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/VP - \n\t :op1 -)",
        "graph_rules": {
            "and": [
                ":op1/VP",
                ":op1"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (S (:ARG0/NP) (VP (:op1/VP) (CC xxx) (:op1/VP))) (: -) (: -) (:ARG1-of/S) (. -)))",
        "tree_rules": [
            ":op1/VP",
            ":op1/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/E - \n\t :op2/MD -)",
        "graph_rules": {
            "and": [
                ":op1/E",
                ":op2/MD"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:mod/S) (, -) (CC xxx) (:ARG1/S) (. -)))",
        "tree_rules": [
            ":op2/MD",
            ":op1/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/E - \n\t :ARG1/E - \n\t :ARG2/NP - \n\t :purpose/PP -)",
        "graph_rules": {
            "give-01": [
                ":ARG0/E",
                ":ARG1/E",
                ":ARG2/NP",
                ":purpose/PP"
            ]
        },
        "head": "give-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (FRAG (WHADVP ('' -)) (VP (VB xxx) (:ARG2/NP) (:quant/NP))))",
        "tree_rules": [
            ":purpose/PP",
            ":ARG2/NP",
            ":ARG1/E",
            ":ARG0/E"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG0/NP) (:op2/VP) (. -)))",
        "tree_rules": [
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :ARG4/PP -)",
        "graph_rules": {
            "raise-01": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":ARG4/PP"
            ]
        },
        "head": "raise-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:ARG1/NP) (:ARG4/PP)) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG4/PP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(s / sweet-04 \n\t :ARG1/NP - \n\t :degree (e / equal) \n\t :compared-to/E -)",
        "graph_rules": {
            "sweet-04": [
                ":ARG1/NP",
                ":compared-to/E"
            ]
        },
        "head": "sweet-04/equal",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/NP) (VP (VB -) (ADJP (IN -) (JJ xxx) (:ARG1-of/PP))) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":compared-to/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/E - \n\t :ARG1/NP -)",
        "graph_rules": {
            "bear-02": [
                ":ARG0/E",
                ":ARG1/NP"
            ]
        },
        "head": "bear-02",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/NP) (VP (VB -) (VP (VB xxx) (:op1/PP) (PP (:location/IN) (:op3/NP)))) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG0/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "passive"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/NP - \n\t :ARG2/PP -)",
        "graph_rules": {
            "good-04": [
                ":ARG1/NP",
                ":ARG2/PP"
            ]
        },
        "head": "good-04",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/NP) (VP (VB -) (ADJP (JJ xxx) (:ARG2/PP)) (, -) (:ARG2/PP)) (. -)))",
        "tree_rules": [
            ":ARG2/PP",
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/E - \n\t :ARG1/E - \n\t :manner/ADVP - \n\t :time/NP -)",
        "graph_rules": {
            "make-up-07": [
                ":ARG0/E",
                ":ARG1/E",
                ":manner/ADVP",
                ":time/NP"
            ]
        },
        "head": "make-up-07",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:op3/SBAR) (, -) (S (VP (VB -) (S (VP (TO -) (VP (VB xxx) (PRT (RP xxx))))))) (, -) (:manner/ADVP) (, -) (:domain/NP) (:domain/NP) (:ARG1-of/VP) (. -)))",
        "tree_rules": [
            ":time/NP",
            ":manner/ADVP",
            ":ARG0/E",
            ":ARG1/E"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/CC -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/CC"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (S (:ARG0/NP) (VP (VB xxx) (:ARG0/NP))) (, -) ('' -) (:op1/PRN) (:op2/VP) (. -) ('' -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":ARG1/CC"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :polarity/RB -)",
        "graph_rules": {
            "find-01": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":polarity/RB"
            ]
        },
        "head": "find-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG0/NP) (VP (VB -) (:polarity/RB) (VP (VB xxx) (:ARG1/NP))) (, -) ('' -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":polarity/RB",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP -)",
        "graph_rules": {
            "reply-01": [
                ":ARG0/NP"
            ]
        },
        "head": "reply-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx)) (. -)))",
        "tree_rules": [
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/NP -)",
        "graph_rules": {
            "true-01": [
                ":ARG1/NP"
            ]
        },
        "head": "true-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (VP ('' -) (S (INTJ (UH -)) (, -) (:ARG1/NP) (VP (VB -) (ADJP (JJ xxx))) (, -) ('' -)))))",
        "tree_rules": [
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx)) (. -)))",
        "tree_rules": [
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op2/S"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:op2/S) (: -) ('' -) (:ARG2/S) (. -)))",
        "tree_rules": [
            ":op2/S"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1/VP -)",
        "graph_rules": {
            "recommend-01": [
                ":ARG1/VP"
            ]
        },
        "head": "recommend-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (MD xxx) (:ARG1/VP)) (: -) ('' -)))",
        "tree_rules": [
            ":ARG1/VP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1-of/E -)",
        "graph_rules": {
            "breathe-01": [
                ":ARG0/NP",
                ":ARG1-of/E"
            ]
        },
        "head": "breathe-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (ADVP (RB -))) (. -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":ARG1-of/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG0/NP) (:op2/VP) (. -)))",
        "tree_rules": [
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/WHNP - \n\t :ARG1/NP - \n\t :ARG2/NP - \n\t :time/ADVP -)",
        "graph_rules": {
            "bring-01": [
                ":ARG0/WHNP",
                ":ARG1/NP",
                ":ARG2/NP",
                ":time/ADVP"
            ]
        },
        "head": "bring-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (SBARQ (:ARG0/WHNP) (SQ (VP (VB xxx) (:ARG1/NP))) (. -)))",
        "tree_rules": [
            ":time/ADVP",
            ":ARG2/NP",
            ":ARG1/NP",
            ":ARG0/WHNP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/MD - \n\t :manner/E - \n\t :time/SBAR -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/MD",
                ":manner/E",
                ":time/SBAR"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1-of/S) (, -) ('' -) (VP (VB xxx) (:ARG0/NP) (, -) (ADVP (RB -)) (, -) (:time/SBAR)) (NP (RB -) (RBR -)) (. -)))",
        "tree_rules": [
            ":ARG1/MD",
            ":ARG0/NP",
            ":time/SBAR",
            ":manner/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/PP -)",
        "graph_rules": {
            "responsible-03": [
                ":ARG0/NP",
                ":ARG1/PP"
            ]
        },
        "head": "responsible-03",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB -) (NP (NP (JJ xxx)) (:ARG1/PP) ('' -)))))",
        "tree_rules": [
            ":ARG1/PP",
            ":ARG0/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/PP - \n\t :ARG2/PP -)",
        "graph_rules": {
            "take-01": [
                ":ARG0/NP",
                ":ARG1/PP",
                ":ARG2/PP"
            ]
        },
        "head": "take-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:ARG1-of/NP) (:ARG2/PP)) (. -)))",
        "tree_rules": [
            ":ARG1/PP",
            ":ARG2/PP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/VB - \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op1/VB",
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "list",
            "inPP": false,
            "number": "plural"
        },
        "tree": "(ROOT (S (NP (NP (:ARG0/NP) (SBAR (S (VP (:op1/VB) (:ARG1/NP) (S (ADVP (RP -)) (, -) (NP (CC xxx)) (:op2/VP) ('' -)))))) (:ARG0/NP)) (: -) (: -) (NP (PRP -)) (:ARG1/VP) (. -) ('' -)))",
        "tree_rules": [
            ":op2/VP",
            ":op1/VB"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "oh",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (INTJ ('' -) (UH xxx) (. -) ('' -)))",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/PP - \n\t :degree/RB -)",
        "graph_rules": {
            "pride-01": [
                ":ARG0/NP",
                ":ARG1/PP",
                ":degree/RB"
            ]
        },
        "head": "pride-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB -) (VP (VB -) (ADJP (:degree/RB) (JJ xxx)) (:ARG1/PP))) (. -)))",
        "tree_rules": [
            ":degree/RB",
            ":ARG1/PP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "past perfect",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/VP - \n\t :op2/RB -)",
        "graph_rules": {
            "and": [
                ":op1/VP",
                ":op2/RB"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:poss/NP) (:part-of/ADVP) (: -) (: -) (:ARG0/NP) (:op1/VP) (: -) (S (CC xxx) (S (NP (PRP -)) (VP (VBP -) (ADVP (:degree/RB) (:op2/RB))))) (. -) ('' -)))",
        "tree_rules": [
            ":op2/RB",
            ":op1/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG0/NP) (:op2/VP) (. -)))",
        "tree_rules": [
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :ARG0/NP -)",
        "graph_rules": {
            "fair-01": [
                ":polarity/RB",
                ":ARG0/NP"
            ]
        },
        "head": "fair-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (NP (PRP -)) (VP (VB -) (:polarity/RB) (ADJP (JJ xxx)) (, -) (:ARG0/NP)) (, -) ('' -)))",
        "tree_rules": [
            ":polarity/RB",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx)) (. -)))",
        "tree_rules": [
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/SBAR -)",
        "graph_rules": {
            "know-01": [
                ":ARG0/NP",
                ":ARG1/SBAR"
            ]
        },
        "head": "know-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG0/NP) (VP (VB -) (RB -) (VP (VB xxx) (:ARG1/SBAR))) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1/SBAR",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/E -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/E"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:domain/S) (, -) ('' -) (S (:ARG0/NP) (VP (VB xxx))) (, -) ('' -) (:ARG0/NP) (:ARG0/VP) (. -) ('' -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":ARG1/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/PP - \n\t :instrument/NN - \n\t :time/ADVP -)",
        "graph_rules": {
            "sketch-01": [
                ":ARG0/NP",
                ":ARG1/PP",
                ":instrument/NN",
                ":time/ADVP"
            ]
        },
        "head": "sketch-01",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S (RB -) (:time/ADVP) (:ARG0/NP) (VP (VB -) (NP (NP (DT -) (:instrument/NN) (NN xxx)) (:ARG1/PP))) (. -)))",
        "tree_rules": [
            ":instrument/NN",
            ":ARG1/PP",
            ":time/ADVP",
            ":ARG0/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:time/SBAR) (:ARG1/NP) (:op2/VP) (. -)))",
        "tree_rules": [
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/E -)",
        "graph_rules": {
            "plan-01": [
                ":ARG0/NP",
                ":ARG1/E"
            ]
        },
        "head": "plan-01",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "plural"
        },
        "tree": "(ROOT (S ('' -) (:ARG0/NP) (VP (VB -) (NP (NP (NN xxx)) (:ARG1-of/SBAR))) (, -) ('' -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":ARG1/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx)) (. -)))",
        "tree_rules": [
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :ARG2/S - \n\t :ARG1-of/E -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":ARG2/S",
                ":ARG1-of/E"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:ARG2/S) (, -) (FRAG (ADVP (RB -)) (: -)) ('' -) (:ARG0/S) (:ARG1/PP)) (: -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG2/S",
            ":ARG0/NP",
            ":ARG1-of/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :time/NP - \n\t :poss/PRP$ -)",
        "graph_rules": {
            "anniversary": [
                ":time/NP",
                ":poss/PRP$"
            ]
        },
        "head": "anniversary",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S (:time/NP) (VP (MD -) (VP (VB -) (NP (:poss/PRP$) (NN xxx)))) (. -) ('' -)))",
        "tree_rules": [
            ":poss/PRP$",
            ":time/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S - \n\t :time/ADVP - \n\t :time -)",
        "graph_rules": {
            "go-23": [
                ":ARG0/NP",
                ":ARG1/S",
                ":time/ADVP",
                ":time"
            ]
        },
        "head": "go-23",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:time/ADVP) (, -) (S (:time/PP) (, -) (:ARG0/NP) (VP (VB xxx) (PP (IN -)))) (: -) ('' -) (:ARG1/S) (. -) ('' -)))",
        "tree_rules": [
            ":time/PP",
            ":ARG0/NP",
            ":time/ADVP",
            ":ARG1/S"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG1/NP) (:op2/VP) (. -)))",
        "tree_rules": [
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op2/S"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (FRAG (CC xxx) (:mod/NP) (. -)))",
        "tree_rules": [
            ":op2/S"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG2/NP -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/NP"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (S (:ARG2/NP) (, -) (ADVP (RB xxx)) (, -) (:ARG0/VP)) (: -) ('' -) (:ARG0/PRN) (: -) (:ARG1/S) (. -)))",
        "tree_rules": [
            ":ARG2/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1/NP - \n\t :mod/ADVP -)",
        "graph_rules": {
            "flush-03": [
                ":ARG1/NP",
                ":mod/ADVP"
            ]
        },
        "head": "flush-03",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/NP) (VP (VB xxx) (:mod/ADVP)) (. -)))",
        "tree_rules": [
            ":mod/ADVP",
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (S (CC xxx) (:ARG0/NP) (:op2/VP)) (: -) ('' -) (:ARG0/S) (. -) ('' -)))",
        "tree_rules": [
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1/NP - \n\t :mod/E -)",
        "graph_rules": {
            "flush-03": [
                ":ARG1/NP",
                ":mod/E"
            ]
        },
        "head": "flush-03",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/NP) (VP (VB xxx) (ADVP (RB -) (RBR -))) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":mod/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/S - \n\t :ARG2/S -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG1/S",
                ":ARG2/S"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/S) (:polarity/:) (: -) (CC xxx) (:ARG2/S) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG2/S"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "ah",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": "(ROOT (FRAG (VP ('' -) (NP (UH xxx)) (, -) ('' -))))",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/SBAR - \n\t :ARG2/NP -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/SBAR",
                ":ARG2/NP"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:ARG1/PP))))",
        "tree_rules": [
            ":ARG1/SBAR",
            ":ARG2/NP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/VP"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG0/NP) (:ARG2/VP) (. -)))",
        "tree_rules": [
            ":ARG2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1/PRP - \n\t :ARG2/VP - \n\t :time/RB -)",
        "graph_rules": {
            "obligate-01": [
                ":ARG1/PRP",
                ":ARG2/VP",
                ":time/RB"
            ]
        },
        "head": "obligate-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (NP (:time/RB) (:ARG1/PRP)) (VP (MD xxx) (:ARG2/VP)) (. -)))",
        "tree_rules": [
            ":time/RB",
            ":ARG1/PRP",
            ":ARG2/VP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/NP - \n\t :ARG2/VP -)",
        "graph_rules": {
            "obligate-01": [
                ":ARG1/NP",
                ":ARG2/VP"
            ]
        },
        "head": "obligate-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/NP) (VP (MD xxx) (:ARG2/VP)) (. -)))",
        "tree_rules": [
            ":ARG2/VP",
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/NP - \n\t :ARG2/PP - \n\t :location/ADVP -)",
        "graph_rules": {
            "wait-01": [
                ":ARG1/NP",
                ":ARG2/PP",
                ":location/ADVP"
            ]
        },
        "head": "wait-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/NP) (VP (MD -) (VP (VB -) (VP (VB xxx) (:ARG2/PP) (:location/ADVP)))) (. -)))",
        "tree_rules": [
            ":ARG2/PP",
            ":location/ADVP",
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "future continuous",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/E - \n\t :direction/PRT - \n\t :time/NP -)",
        "graph_rules": {
            "come-01": [
                ":ARG1/E",
                ":direction/PRT",
                ":time/NP"
            ]
        },
        "head": "come-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (VP (VB xxx) (:direction/PRT) (:time/NP)) (: -) ('' -)))",
        "tree_rules": [
            ":direction/PRT",
            ":time/NP",
            ":ARG1/E"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP -)",
        "graph_rules": {
            "remember-01": [
                ":ARG0/NP",
                ":ARG1/NP"
            ]
        },
        "head": "remember-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:ARG1/NP)) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG2/PP - \n\t :condition/SBAR -)",
        "graph_rules": {
            "risk-01": [
                ":ARG0/NP",
                ":ARG2/PP",
                ":condition/SBAR"
            ]
        },
        "head": "risk-01",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB -) (NP (NP (DT -) (NN xxx)) (:ARG2/PP))) (: -)))",
        "tree_rules": [
            ":condition/SBAR",
            ":ARG2/PP",
            ":ARG0/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/NP -)",
        "graph_rules": {
            "chapter": [
                ":mod/NP"
            ]
        },
        "head": "chapter",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (NP (NP (NN xxx)) (:mod/NP) (. -)))",
        "tree_rules": [
            ":mod/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/JJ - \n\t :consist-of/NN - \n\t :ARG1-of/VB - \n\t :location/IN -)",
        "graph_rules": {
            "wall": [
                ":mod/JJ",
                ":consist-of/NN",
                ":ARG1-of/VB",
                ":location/IN"
            ]
        },
        "head": "wall",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": true,
            "number": "singular"
        },
        "tree": "(ROOT (S (PP (:location/IN) (:op1/NP)) (NP (EX -)) (VP (VB -) (S (NP (DT -)) (VP (:ARG1-of/VB) (PP (IN -) (NP (DT -) (:mod/JJ) (:consist-of/NN) (NN xxx)))))) (. -)))",
        "tree_rules": [
            ":location/IN",
            ":mod/JJ",
            ":consist-of/NN",
            ":ARG1-of/VB"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/PP - \n\t :time/E -)",
        "graph_rules": {
            "see-01": [
                ":ARG0/NP",
                ":ARG1/PP",
                ":time/E"
            ]
        },
        "head": "see-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:time/SBAR) (, -) (:poss/NP) (VP (VB xxx) (:ARG1/PP) (, -) (:ARG1/PP)) (. -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":ARG1/PP",
            ":time/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op2/S"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:op2/S) (: -) ('' -) (:ARG1/S) (. -)))",
        "tree_rules": [
            ":op2/S"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :domain/NP - \n\t :mod/JJ -)",
        "graph_rules": {
            "spot": [
                ":domain/NP",
                ":mod/JJ"
            ]
        },
        "head": "spot",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S (:domain/NP) (VP (VB -) (:polarity/RB) (NP (DT -) (:mod/JJ) (NN xxx))) (. -) ('' -)))",
        "tree_rules": [
            ":mod/JJ",
            ":domain/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1 - \n\t :ARG2/VP - \n\t :ARG0-of/E -)",
        "graph_rules": {
            "obligate-01": [
                ":ARG0/NP",
                ":ARG1",
                ":ARG2/VP",
                ":ARG0-of/E"
            ]
        },
        "head": "obligate-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (S (:ARG0/NP) (VP (MD xxx) (:ARG2/VP))) (, -) (FRAG (INTJ (UH -))) (. -)))",
        "tree_rules": [
            ":ARG2/VP",
            ":ARG0/NP",
            ":ARG0-of/E"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/S - \n\t :ARG2/NP -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG1/S",
                ":ARG2/NP"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/S) (, -) (CC xxx) (:domain/S) (. -) ('' -)))",
        "tree_rules": [
            ":ARG2/NP",
            ":ARG1/S"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP -)",
        "graph_rules": {
            "continue-01": [
                ":ARG0/NP",
                ":ARG1/NP"
            ]
        },
        "head": "continue-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:ARG1/NP) (PP (:direction/IN) (:op1/NP))) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/VB - \n\t :op2/VB - \n\t :time/E -)",
        "graph_rules": {
            "or": [
                ":op1/VB",
                ":op2/VB",
                ":time/E"
            ]
        },
        "head": "or",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (SINV (:polarity/PP) (VBD -) (:ARG0/NP) (VP (:op1/VB) (CC xxx) (:op2/VB) (:ARG1/NP)) (. -)))",
        "tree_rules": [
            ":op1/VB",
            ":op2/VB",
            ":time/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/VP"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": "(ROOT (S (NP (:ARG0/NP) (, -) (ADVP (RB xxx)) (, -)) (:ARG2/VP)))",
        "tree_rules": [
            ":ARG2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/SBAR -)",
        "graph_rules": {
            "see-01": [
                ":ARG0/NP",
                ":ARG1/SBAR"
            ]
        },
        "head": "see-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (MD -) (VP (VB xxx) (:ARG1/SBAR) (, -) (:location/PP))) (. -)))",
        "tree_rules": [
            ":ARG1/SBAR",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple future",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP -)",
        "graph_rules": {
            "have-03": [
                ":ARG0/NP",
                ":ARG1/NP"
            ]
        },
        "head": "have-03",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VP (VB xxx) (:ARG1/NP)) (:ARG1-of/CC) (:ARG2/VP)) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :location-of/NP - \n\t :time/E -)",
        "graph_rules": {
            "there": [
                ":location-of/NP",
                ":time/E"
            ]
        },
        "head": "there",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:location-of/NP) (VP (MD -) (VP (VB -) (ADVP (RB xxx)) (NP-TMP (RB -)))) (. -) ('' -)))",
        "tree_rules": [
            ":location-of/NP",
            ":time/E"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/E - \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op1/E",
                ":op2/S"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/S) (, -) (CC xxx) (:op2/S) (. -)))",
        "tree_rules": [
            ":op2/S",
            ":op1/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S - \n\t :mod/ADVP - \n\t :time/PP -)",
        "graph_rules": {
            "speak-01": [
                ":ARG0/NP",
                ":ARG1/S",
                ":mod/ADVP",
                ":time/PP"
            ]
        },
        "head": "speak-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (S (:time/PP) (:ARG0/NP) (VP (VB xxx) (:mod/ADVP))) (: -) ('' -) (:ARG1/S) (. -)))",
        "tree_rules": [
            ":mod/ADVP",
            ":time/PP",
            ":ARG0/NP",
            ":ARG1/S"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/SBAR -)",
        "graph_rules": {
            "sure-02": [
                ":ARG0/NP",
                ":ARG1/SBAR"
            ]
        },
        "head": "sure-02",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB -) (ADJP (JJ xxx) (:ARG1/SBAR))) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1/SBAR",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/E - \n\t :ARG2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG1/E",
                ":ARG2/VP"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:op1/S) (: -) (S (CC xxx) (:mod/ADVP) (:part-of/NP) (:ARG2/VP)) (. -)))",
        "tree_rules": [
            ":ARG2/VP",
            ":ARG1/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "want-01": [
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "want-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG0/NP) (VP (VB xxx) (:ARG1/S)) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/S - \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op1/S",
                ":op2/S"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:op1/S) (: -) (: -) (CC xxx) (:op2/S) (. -)))",
        "tree_rules": [
            ":op1/S",
            ":op2/S"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1-of/JJ - \n\t :ARG2-of/SBAR - \n\t :location/IN - \n\t :ARG0-of/S -)",
        "graph_rules": {
            "snake": [
                ":ARG1-of/JJ",
                ":ARG2-of/SBAR",
                ":location/IN",
                ":ARG0-of/S"
            ]
        },
        "head": "snake",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": true,
            "number": "plural"
        },
        "tree": "(ROOT (S (NP (EX -)) (SBAR (:location/IN) (S (:op1/NP) (, -) (:ARG0-of/S) (, -) (VP (VB -) (NP (NP (CD -)) (PP (IN -) (NP (NP (DT -) (:ARG1-of/JJ) (NN xxx)) (:ARG2-of/SBAR))))))) (. -)))",
        "tree_rules": [
            ":ARG1-of/JJ",
            ":ARG2-of/SBAR",
            ":ARG0-of/S",
            ":location/IN"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1/NP - \n\t :ARG2/NP -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG1/NP",
                ":ARG2/NP"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/SBAR) (:poss/NP) (VP (VBD -) (:ARG1/NP) (:ARG2/ADVP)) (. -)))",
        "tree_rules": [
            ":ARG2/NP",
            ":ARG1/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG2/CC -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/CC"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (, -) (:ARG0/PP) (, -) (:ARG0/NP) (:op1/VP) (. -)))",
        "tree_rules": [
            ":ARG2/CC"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :snt1/S - \n\t :snt2/NP -)",
        "graph_rules": {
            "multi-sentence": [
                ":snt1/S",
                ":snt2/NP"
            ]
        },
        "head": "multi-sentence",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:snt1/S) (: -) (:ARG1-of/S) (. -)))",
        "tree_rules": [
            ":snt2/NP",
            ":snt1/S"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1/NP - \n\t :ARG2/NP -)",
        "graph_rules": {
            "mean-01": [
                ":ARG1/NP",
                ":ARG2/NP"
            ]
        },
        "head": "mean-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG2/NP) (VP (VB -) (S (:ARG1/NP) (VP (VB xxx)))) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG2/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP -)",
        "graph_rules": {
            "demand-01": [
                ":ARG0/NP"
            ]
        },
        "head": "demand-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx)) (. -)))",
        "tree_rules": [
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG2/PP - \n\t :purpose/WHADVP -)",
        "graph_rules": {
            "talk-01": [
                ":ARG0/NP",
                ":ARG2/PP",
                ":purpose/WHADVP"
            ]
        },
        "head": "talk-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (SBARQ ('' -) (:purpose/WHADVP) (SQ (VBP -) (:ARG0/NP) (VP (VB xxx) (:ARG2/PP))) (. -) ('' -)))",
        "tree_rules": [
            ":ARG2/PP",
            ":ARG0/NP",
            ":purpose/WHADVP"
        ],
        "verb_info": {
            "tense": "present continuous",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP -)",
        "graph_rules": {
            "loosen-01": [
                ":ARG0/NP",
                ":ARG1/NP"
            ]
        },
        "head": "loosen-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB -) (VP (VB xxx) (:ARG1/NP) (:ARG1-of/SBAR))) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "past perfect",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/VP - \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op1/VP",
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (:op1/VP) (, -) (CC xxx) (:op2/VP)) (. -)))",
        "tree_rules": [
            ":op1/VP",
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP - \n\t :time/ADVP -)",
        "graph_rules": {
            "and": [
                ":op2/VP",
                ":time/ADVP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:time/ADVP) (:ARG1/NP) (:op2/VP) (. -)))",
        "tree_rules": [
            ":time/ADVP",
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VP - \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op1/VP",
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (:op1/VP) (, -) (CC xxx) (:op2/VP)) (. -)))",
        "tree_rules": [
            ":op1/VP",
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP -)",
        "graph_rules": {
            "feel-01": [
                ":ARG0/NP",
                ":ARG1/NP"
            ]
        },
        "head": "feel-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:ARG1/NP) (:ARG1-of/S)) (: -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/S) (, -) ('' -) (:ARG0/NP) (VP (VB xxx)) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/VP - \n\t :time/RB -)",
        "graph_rules": {
            "possible-01": [
                ":ARG1/VP",
                ":time/RB"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (NP (:time/RB) (:ARG0/PRP)) (VP (MD xxx) (:ARG1/VP)) (: -) (: -) ('' -)))",
        "tree_rules": [
            ":time/RB",
            ":ARG1/VP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/PP - \n\t :manner/WHADVP -)",
        "graph_rules": {
            "know-01": [
                ":ARG0/NP",
                ":ARG1/PP",
                ":manner/WHADVP"
            ]
        },
        "head": "know-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (SBARQ ('' -) (:manner/WHADVP) (SQ (VBP -) (:ARG0/NP) (VP (VB xxx) (:ARG1/PP))) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1/PP",
            ":ARG0/NP",
            ":manner/WHADVP"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/NP - \n\t :purpose/S - \n\t :mod/ADVP -)",
        "graph_rules": {
            "come-01": [
                ":ARG1/NP",
                ":purpose/S",
                ":mod/ADVP"
            ]
        },
        "head": "come-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/NP) (VP (VB -) (:mod/ADVP) (VP (VB xxx) (:purpose/S))) (. -)))",
        "tree_rules": [
            ":purpose/S",
            ":mod/ADVP",
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "past continuous",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/VB - \n\t :ARG2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG1/VB",
                ":ARG2/VP"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "list",
            "inPP": true,
            "number": "plural"
        },
        "tree": "(ROOT (S (:ARG0/NP) (VP (:ARG1/VB) (:ARG1/NP) (PP (TO -) (NP (:ARG1/NP) (, -) (CC xxx) (:ARG0/NP) (: -) ('' -))) (:ARG0/S))))",
        "tree_rules": [
            ":ARG2/VP",
            ":ARG1/VB"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1/E - \n\t :time/S - \n\t :manner/E -)",
        "graph_rules": {
            "say-01": [
                ":ARG1/E",
                ":time/S",
                ":manner/E"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:time/S) (: -) ('' -) (:mod/PRN) (: -) (:op2/S) (: -) ('' -)))",
        "tree_rules": [
            ":time/S",
            ":ARG1/E",
            ":manner/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/S - \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op1/S",
                ":op2/S"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:op1/S) (: -) (CC xxx) (:op2/S) (: -)))",
        "tree_rules": [
            ":op1/S",
            ":op2/S"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/PRP$ - \n\t :ARG2-of/ADJP - \n\t :ARG1-of/E -)",
        "graph_rules": {
            "look-01": [
                ":ARG0/PRP$",
                ":ARG2-of/ADJP",
                ":ARG1-of/E"
            ]
        },
        "head": "look-01",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S (NP (:ARG0/PRP$) (NN xxx)) (VP (VBD -) (:ARG2-of/ADJP) (, -) (:ARG1-of/SBAR)) (. -)))",
        "tree_rules": [
            ":ARG0/PRP$",
            ":ARG2-of/ADJP",
            ":ARG1-of/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP -)",
        "graph_rules": {
            "have-03": [
                ":ARG0/NP",
                ":ARG1/NP"
            ]
        },
        "head": "have-03",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG0/NP) (VP (VB xxx) (:ARG1/NP)) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG0/NP) (:op2/VP) (. -)))",
        "tree_rules": [
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG0/NP) (:op2/VP) ('' -)))",
        "tree_rules": [
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG0/NP) (:op2/VP) (. -)))",
        "tree_rules": [
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1/NP - \n\t :ARG1-of/NP -)",
        "graph_rules": {
            "wait-01": [
                ":ARG1/NP",
                ":ARG1-of/NP"
            ]
        },
        "head": "wait-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/NP) (VP (VB xxx) (:ARG1-of/NP)) (. -)))",
        "tree_rules": [
            ":ARG1-of/NP",
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/VP -)",
        "graph_rules": {
            "possible-01": [
                ":ARG1/VP"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (MD xxx) (:ARG1/VP)) (. -)))",
        "tree_rules": [
            ":ARG1/VP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :mod/PP - \n\t :mod -)",
        "graph_rules": {
            "man": [
                ":mod/PP",
                ":mod"
            ]
        },
        "head": "man",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (FRAG (:mod/PP) (NP (:mod/JJ) (NN xxx) (, -) ('' -))))",
        "tree_rules": [
            ":mod/JJ",
            ":mod/PP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/PP - \n\t :ARG2/NP -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/PP",
                ":ARG2/NP"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:ARG1/PP))))",
        "tree_rules": [
            ":ARG2/NP",
            ":ARG1/PP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :mod/E -)",
        "graph_rules": {
            "fear-01": [
                ":ARG0/NP",
                ":mod/E"
            ]
        },
        "head": "fear-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (S (:ARG0/NP) (VP (VB -) (ADJP (JJ xxx)))) (, -) (NP (EX -)) (VP (VBD -) (ADVP (DT -) (NN -)) (PP (IN -) (NP (DT -)))) (. -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":mod/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/VP"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG0/NP) (:ARG2/VP) (. -)))",
        "tree_rules": [
            ":ARG2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :degree/RBR - \n\t :time/NP-TMP -)",
        "graph_rules": {
            "fear-01": [
                ":ARG0/NP",
                ":degree/RBR",
                ":time/NP-TMP"
            ]
        },
        "head": "fear-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG0/NP) (VP (MD -) (VP (VB -) (ADJP (:mod/RB) (:degree/RBR) (JJ xxx)) (:time/NP-TMP))) (: -) ('' -)))",
        "tree_rules": [
            ":degree/RBR",
            ":time/NP-TMP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/SBAR - \n\t :mod/ADVP -)",
        "graph_rules": {
            "feel-01": [
                ":ARG0/NP",
                ":ARG1/SBAR",
                ":mod/ADVP"
            ]
        },
        "head": "feel-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:mod/ADVP) (:ARG0/NP) (VP (VB xxx) (:ARG1/SBAR)) (. -)))",
        "tree_rules": [
            ":ARG1/SBAR",
            ":mod/ADVP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG0/NP) (:op2/VP) (. -)))",
        "tree_rules": [
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/JJ -)",
        "graph_rules": {
            "man": [
                ":mod/JJ"
            ]
        },
        "head": "man",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (FRAG ('' -) (NP (:mod/JJ) (NN xxx) (, -) ('' -))))",
        "tree_rules": [
            ":mod/JJ"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0 - \n\t :ARG1/VP -)",
        "graph_rules": {
            "say-01": [
                ":ARG0",
                ":ARG1/VP"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (S (:ARG0/NP) (VP (VB xxx))) (, -) ('' -) (:ARG0/NP) (:ARG1/VP) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1/VP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/VP"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (S (CC xxx) (:ARG0/NP) (:ARG2/VP)) (: -) ('' -) (:quant/PRN) (: -) (:ARG1/S) (: -) ('' -)))",
        "tree_rules": [
            ":ARG2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/JJ -)",
        "graph_rules": {
            "man": [
                ":mod/JJ"
            ]
        },
        "head": "man",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (FRAG ('' -) (NP (:mod/JJ) (NN xxx) (, -) ('' -))))",
        "tree_rules": [
            ":mod/JJ"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (S (:ARG0/NP) (VP (VB xxx) (, -) ('' -) (:ARG1/S) (SBAR (IN -) (S (NP (PRP -)) (VP (VBZ -) (:mod/ADVP) (:ARG1/NP)))))) (: -) (: -) (S (:ARG2/NP-TMP) (:op3/NP)) (: -) ('' -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/VP"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG0/NP) (:ARG2/VP) (. -)))",
        "tree_rules": [
            ":ARG2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/ADJP - \n\t :ARG2/S - \n\t :ARG1-of/E -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/ADJP",
                ":ARG2/S",
                ":ARG1-of/E"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (SQ (:ARG0/NP) (VP (VB xxx) (:ARG2/S))) ('' -) (NP (DT -)) (:ARG1-of/VP) ('' -)))",
        "tree_rules": [
            ":ARG2/S",
            ":ARG0/NP",
            ":ARG1/ADJP",
            ":ARG1-of/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP -)",
        "graph_rules": {
            "know-01": [
                ":ARG0/NP"
            ]
        },
        "head": "know-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (PP ('' -) (NP (INTJ (UH -)))) (, -) (S (:ARG0/NP) (VP (VB xxx))) (: -) ('' -)))",
        "tree_rules": [
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/PP - \n\t :ARG1-of/JJ - \n\t :condition/SBAR -)",
        "graph_rules": {
            "look-01": [
                ":ARG1/PP",
                ":ARG1-of/JJ",
                ":condition/SBAR"
            ]
        },
        "head": "look-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:condition/SBAR) (, -) (NP (PRP -)) (VP (VB -) (ADJP (:ARG1-of/JJ) (S (VP (TO -) (VP (VB xxx) (:ARG1/PP)))))) (. -)))",
        "tree_rules": [
            ":ARG1/PP",
            ":ARG1-of/JJ",
            ":condition/SBAR"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/PP - \n\t :location/NP -)",
        "graph_rules": {
            "bloom-01": [
                ":ARG0/PP",
                ":location/NP"
            ]
        },
        "head": "bloom-01",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S (:location/NP) (VP (VB -) (NP (NP (SYM -)) (: -) (NP (NP (NN xxx)) (:ARG0/PP)) ('' -)))))",
        "tree_rules": [
            ":ARG0/PP",
            ":location/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP -)",
        "graph_rules": {
            "know-01": [
                ":ARG0/NP"
            ]
        },
        "head": "know-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (PP ('' -) (NP (INTJ (UH -)))) (, -) (S (:ARG0/NP) (VP (VB xxx))) (: -) ('' -)))",
        "tree_rules": [
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/WHADJP -)",
        "graph_rules": {
            "remember-01": [
                ":ARG0/NP",
                ":ARG1/WHADJP"
            ]
        },
        "head": "remember-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (: -) (: -) (SBAR (:ARG1/WHADJP) (:ARG1/S))) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1/WHADJP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP -)",
        "graph_rules": {
            "know-01": [
                ":ARG0/NP"
            ]
        },
        "head": "know-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (PP ('' -) (NP (INTJ (UH -)))) (, -) (S (:ARG0/NP) (VP (VB xxx))) (: -) ('' -)))",
        "tree_rules": [
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/SBAR -)",
        "graph_rules": {
            "and": [
                ":op2/SBAR"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "list",
            "inPP": false,
            "number": "plural"
        },
        "tree": "(ROOT (NP ('' -) (CC xxx) (:time/NP) (. -)))",
        "tree_rules": [
            ":op2/SBAR"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :ARG1/VP - \n\t :ARG1-of/E -)",
        "graph_rules": {
            "possible-01": [
                ":polarity/RB",
                ":ARG1/VP",
                ":ARG1-of/E"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:location/SBAR) (VP (VB -) (:mod/ADJP) (SBAR (IN -) (S (:poss/NP) (VP (MD xxx) (:polarity/RB) (:ARG1/VP))))) (. -)))",
        "tree_rules": [
            ":polarity/RB",
            ":ARG1/VP",
            ":ARG1-of/E"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :quant/NP - \n\t :beneficiary/PP - \n\t :poss/E - \n\t :ARG1-of/E -)",
        "graph_rules": {
            "star": [
                ":quant/NP",
                ":beneficiary/PP",
                ":poss/E",
                ":ARG1-of/E"
            ]
        },
        "head": "star",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S (NP (PRP$ -) (NN xxx)) (:mod/VP) (. -)))",
        "tree_rules": [
            ":quant/NP",
            ":beneficiary/PP",
            ":poss/E",
            ":ARG1-of/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (S (CC xxx) (ADVP (RB -)) (:ARG0/NP) (:op2/VP)) (: -) (:ARG0-of/S) (. -)))",
        "tree_rules": [
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/S -)",
        "graph_rules": {
            "and": [
                ":op1/S"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (, -) (PP (IN -)) (, -) (:op1/S) (: -) ('' -)))",
        "tree_rules": [
            ":op1/S"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :mod/ADVP -)",
        "graph_rules": {
            "laugh-01": [
                ":ARG0/NP",
                ":mod/ADVP"
            ]
        },
        "head": "laugh-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:mod/ADVP)) (. -)))",
        "tree_rules": [
            ":mod/ADVP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "love-01": [
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "love-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:ARG1/S)) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/E - \n\t :ARG1/NP -)",
        "graph_rules": {
            "present-01": [
                ":ARG0/E",
                ":ARG1/NP"
            ]
        },
        "head": "present-01",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": "(ROOT (S ('' -) (:ARG1/NP) (VP (VB -) (NP (PRP$ -) (JJ xxx))) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG0/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/ADVP -)",
        "graph_rules": {
            "that": [
                ":mod/ADVP"
            ]
        },
        "head": "that",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "demonstrative",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (FRAG (:mod/ADVP) (NP (DT xxx)) (. -)))",
        "tree_rules": [
            ":mod/ADVP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "try-01": [
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "try-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/NP) (VP (VB -) (NP (:ARG0/NP) (VP (VB xxx) (:ARG1/S)))) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "present continuous",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG2/CC -)",
        "graph_rules": {
            "answer-01": [
                ":ARG0/NP",
                ":ARG2/CC"
            ]
        },
        "head": "answer-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (S (:ARG1/S) (, -) ('' -) (:ARG0/NP) (VP (VB xxx))) (, -) ('' -) (:ARG2/CC) (S (NP (PRP -)) (VP (VBP -) (:polarity/RB) (:ARG2/NP))) (. -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":ARG2/CC"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/PP -)",
        "graph_rules": {
            "guide-01": [
                ":ARG0/NP",
                ":ARG1/PP"
            ]
        },
        "head": "guide-01",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "plural"
        },
        "tree": "(ROOT (S (:ARG1/PP) (, -) (:ARG0/NP) (VP (VB -) (NP (NN xxx))) (. -)))",
        "tree_rules": [
            ":ARG1/PP",
            ":ARG0/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/VP"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:domain/NP) (:ARG2/VP) (. -)))",
        "tree_rules": [
            ":ARG2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :ARG1-of/E -)",
        "graph_rules": {
            "have-03": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":ARG1-of/E"
            ]
        },
        "head": "have-03",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (NP (:ARG0/NP) (:polarity/:) (VP (:mod/PRN) (MD -) (VP (VB xxx) (:ARG1/NP) (:ARG2/SBAR))) (: -)) (VP (: -) ('' -))))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG0/NP",
            ":ARG1-of/E"
        ],
        "verb_info": {
            "tense": "simple future",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "try-01": [
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "try-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG1/NP) (VP (VB -) (NP (:ARG0/NP) (VP (VB xxx) (:ARG1/S)))) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "present continuous",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :location/NP -)",
        "graph_rules": {
            "live-01": [
                ":ARG0/NP",
                ":location/NP"
            ]
        },
        "head": "live-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:quant/NP) (ADVP (IN -)) (:ARG0/NP) (VP (MD -) (VP (VB -) (VP (VB xxx)))) (. -)))",
        "tree_rules": [
            ":location/NP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :location/E -)",
        "graph_rules": {
            "laugh-01": [
                ":ARG0/NP",
                ":location/E"
            ]
        },
        "head": "laugh-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:quant/PP) (:ARG0/NP) (VP (MD -) (VP (VB -) (VP (VB xxx)))) (. -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":location/E"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/E -)",
        "graph_rules": {
            "and": [
                ":op2/E"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (ADVP (IN -)) (:ARG1/NP) (:time/VP) (. -) ('' -)))",
        "tree_rules": [
            ":op2/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG0/NP) (:op2/VP) (. -)))",
        "tree_rules": [
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/ADJP -)",
        "graph_rules": {
            "and": [
                ":op2/ADJP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (S (CC xxx) (ADVP (WRB -)) (:ARG1/NP) (:time/VP)) (:ARG1-of/PRN) (:ARG0/S) (. -)))",
        "tree_rules": [
            ":op2/ADJP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(h / have-rel-role-91 \n\t :ARG0/NP - \n\t :ARG1/E - \n\t :ARG2 (f / friend) \n\t :time/ADVP -)",
        "graph_rules": {
            "have-rel-role-91": [
                ":ARG0/NP",
                ":ARG1/E",
                ":time/ADVP"
            ]
        },
        "head": "have-rel-role-91/friend",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S (:ARG0/NP) (VP (MD -) (:time/ADVP) (VP (VB -) (NP (PRP$ -) (NN xxx)))) (. -)))",
        "tree_rules": [
            ":time/ADVP",
            ":ARG0/NP",
            ":ARG1/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NN -)",
        "graph_rules": {
            "want-01": [
                ":ARG0/NP",
                ":ARG1/NN"
            ]
        },
        "head": "want-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (MD -) (VP (VB xxx) (S (VP (TO -) (VP (:ARG1/NN) (:accompanier/PP)))))) (. -)))",
        "tree_rules": [
            ":ARG1/NN",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple future",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/S - \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op1/S",
                ":op2/S"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:op1/S) (: -) (CC -) (:op2/S) (. -)))",
        "tree_rules": [
            ":op1/S",
            ":op2/S"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/SBAR - \n\t :mod/ADJP -)",
        "graph_rules": {
            "trick-01": [
                ":ARG0/NP",
                ":ARG1/SBAR",
                ":mod/ADJP"
            ]
        },
        "head": "trick-01",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S (NP (PRP -)) (VP (MD -) (VP (VB -) (NP (DT -) (:mod/ADJP) (NN xxx) (:ARG1/SBAR) ('' -))))))",
        "tree_rules": [
            ":ARG0/NP",
            ":mod/ADJP",
            ":ARG1/SBAR"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG0/NP) (:op2/VP) (. -)))",
        "tree_rules": [
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG0/NP) (:op2/VP) (. -)))",
        "tree_rules": [
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/S"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1-of/S) (:polarity/:) (: -) (SINV (:ARG1/S) (, -) ('' -) (VP (VB xxx)) (:ARG0/NP)) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :ARG0/NP - \n\t :ARG1/NP -)",
        "graph_rules": {
            "leave-15": [
                ":polarity/RB",
                ":ARG0/NP",
                ":ARG1/NP"
            ]
        },
        "head": "leave-15",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG0/NP) (VP (MD -) (:polarity/RB) (VP (VB xxx) (:ARG1/NP))) (, -) ('' -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":polarity/RB",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx)) (. -)))",
        "tree_rules": [
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/E -)",
        "graph_rules": {
            "look-02": [
                ":ARG0/NP",
                ":ARG1/E"
            ]
        },
        "head": "look-02",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG0/NP) (VP (MD -) (VP (VB xxx) (:ARG2/SBAR))) (. -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":ARG1/E"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/E - \n\t :degree/NP -)",
        "graph_rules": {
            "look-02": [
                ":ARG0/NP",
                ":ARG1/E",
                ":degree/NP"
            ]
        },
        "head": "look-02",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (MD -) (VP (VB xxx) (PP (:degree/NP) (IN -) (:ARG2/SBAR)))) (. -)))",
        "tree_rules": [
            ":degree/NP",
            ":ARG0/NP",
            ":ARG1/E"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :ARG1/E - \n\t :purpose/S -)",
        "graph_rules": {
            "come-01": [
                ":polarity/RB",
                ":ARG1/E",
                ":purpose/S"
            ]
        },
        "head": "come-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (VP (VB -) (:polarity/RB) (VP (VB xxx) (:purpose/S))) (. -)))",
        "tree_rules": [
            ":purpose/S",
            ":polarity/RB",
            ":ARG1/E"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/PRT - \n\t :ARG1/NP - \n\t :ARG2/SBAR -)",
        "graph_rules": {
            "worth-02": [
                ":polarity/PRT",
                ":ARG1/NP",
                ":ARG2/SBAR"
            ]
        },
        "head": "worth-02",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": "(ROOT (FRAG (:ARG1/NP) (VP (VB -) (:polarity/PRT) (NP (NP (JJ xxx)) (:ARG2/SBAR)) ('' -))))",
        "tree_rules": [
            ":ARG2/SBAR",
            ":polarity/PRT",
            ":ARG1/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :ARG0/NP - \n\t :ARG1/NP -)",
        "graph_rules": {
            "leave-15": [
                ":polarity/RB",
                ":ARG0/NP",
                ":ARG1/NP"
            ]
        },
        "head": "leave-15",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG0/NP) (VP (MD -) (:polarity/RB) (VP (VB xxx) (:ARG1/NP))) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":polarity/RB",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/VP"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG1/NP) (:ARG2/VP) (. -)))",
        "tree_rules": [
            ":ARG2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/E - \n\t :ARG2/NP -)",
        "graph_rules": {
            "tell-01": [
                ":ARG0/NP",
                ":ARG1/E",
                ":ARG2/NP"
            ]
        },
        "head": "tell-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (S (:ARG0/NP) (VP (VB xxx) (:ARG2/NP))) (: -) (S (NP (PRN (: -) (NP (PRP -)))) (VP (VBZ -) (:mod/ADVP) (:ARG0/PP))) (. -)))",
        "tree_rules": [
            ":ARG2/NP",
            ":ARG0/NP",
            ":ARG1/E"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/VP -)",
        "graph_rules": {
            "obligate-01": [
                ":ARG1/VP"
            ]
        },
        "head": "obligate-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (MD xxx) (:polarity/RB) (:ARG1/VP)) (. -)))",
        "tree_rules": [
            ":ARG1/VP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :mod/VP -)",
        "graph_rules": {
            "snake": [
                ":mod/VP"
            ]
        },
        "head": "snake",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "plural"
        },
        "tree": "(ROOT (S (NP (NN xxx)) (: -) (: -) (NP (PRP -)) (:mod/VP) (. -)))",
        "tree_rules": [
            ":mod/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1/VP -)",
        "graph_rules": {
            "possible-01": [
                ":ARG1/VP"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (MD xxx) (:ARG1/VP))))",
        "tree_rules": [
            ":ARG1/VP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :ARG0/NP - \n\t :ARG1/NP -)",
        "graph_rules": {
            "leave-15": [
                ":polarity/RB",
                ":ARG0/NP",
                ":ARG1/NP"
            ]
        },
        "head": "leave-15",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG0/NP) (VP (MD -) (:polarity/RB) (VP (VB xxx) (:ARG1/NP))) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":polarity/RB",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/VP"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (S (CC xxx) (:ARG1/NP) (:ARG2/VP)) (: -) ('' -) (S (NP (PRP -)) (VP (VBZ -) (:ARG1/ADJP) (:ARG1/SBAR))) (. -) ('' -)))",
        "tree_rules": [
            ":ARG2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :ARG0/NP - \n\t :ARG1/S - \n\t :time/NP-TMP -)",
        "graph_rules": {
            "see-01": [
                ":polarity/RB",
                ":ARG0/NP",
                ":ARG1/S",
                ":time/NP-TMP"
            ]
        },
        "head": "see-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:time/NP-TMP) (:ARG0/NP) (VP (VB -) (:polarity/RB) (VP (VB xxx) (:ARG1/S))) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":polarity/RB",
            ":time/NP-TMP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :source/PP - \n\t :manner/PP -)",
        "graph_rules": {
            "get-away-08": [
                ":ARG0/NP",
                ":source/PP",
                ":manner/PP"
            ]
        },
        "head": "get-away-08",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (ADVP (RB xxx)) (:source/PP) (:manner/PP)) (. -)))",
        "tree_rules": [
            ":source/PP",
            ":manner/PP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/PP - \n\t :time/VP -)",
        "graph_rules": {
            "succeed-01": [
                ":ARG0/NP",
                ":ARG1/PP",
                ":time/VP"
            ]
        },
        "head": "succeed-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (SBAR (WHADVP (WRB -)) (S (:ARG0/NP) (VP (VB xxx) (:ARG1/PP)))) (:ARG0/NP) (:time/VP) (. -)))",
        "tree_rules": [
            ":ARG1/PP",
            ":ARG0/NP",
            ":time/VP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/PRN - \n\t :ARG2/PP - \n\t :manner/ADVP -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/PRN",
                ":ARG2/PP",
                ":manner/ADVP"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (S (:ARG0/NP) (VP (VB xxx) (:ARG2/PP) (:manner/ADVP))) (: -) ('' -) (:ARG1/PRN) (. -)))",
        "tree_rules": [
            ":ARG2/PP",
            ":manner/ADVP",
            ":ARG0/NP",
            ":ARG1/PRN"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :location/VP -)",
        "graph_rules": {
            "you": [
                ":location/VP"
            ]
        },
        "head": "you",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "pronoun",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S (NP (PRP xxx)) (:location/VP) (: -) ('' -)))",
        "tree_rules": [
            ":location/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG0/NP) (:op2/VP) (. -)))",
        "tree_rules": [
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/VP"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG1/NP) (:ARG2/VP) (. -)))",
        "tree_rules": [
            ":ARG2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1/PP - \n\t :ARG1-of/ADJP -)",
        "graph_rules": {
            "come-01": [
                ":ARG1/PP",
                ":ARG1-of/ADJP"
            ]
        },
        "head": "come-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (NP (PRP -)) (VP (VB -) (:ARG1-of/ADJP) (S (VP (TO -) (VP (VB xxx))))) (. -)))",
        "tree_rules": [
            ":ARG1/PP",
            ":ARG1-of/ADJP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP -)",
        "graph_rules": {
            "suffer-01": [
                ":ARG0/NP"
            ]
        },
        "head": "suffer-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (MD -) (VP (VB xxx))) (. -)))",
        "tree_rules": [
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple future",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/E - \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op1/E",
                ":op2/S"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1-of/S) (: -) (CC xxx) (:op2/S) (: -) ('' -)))",
        "tree_rules": [
            ":op2/S",
            ":op1/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/NP"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:ARG1/NP)) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/RB -)",
        "graph_rules": {
            "understand-01": [
                ":ARG0/NP",
                ":ARG1/RB"
            ]
        },
        "head": "understand-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (S (:ARG0/NP) (VP (VB xxx))) (: -) (S (NP (PRP -)) (VP (VBZ -) (ADJP (:degree/RB) (:ARG1/RB)))) (. -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":ARG1/RB"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :ARG1/VP -)",
        "graph_rules": {
            "possible-01": [
                ":polarity/RB",
                ":ARG1/VP"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (MD xxx) (:polarity/RB) (:ARG1/VP)) (. -)))",
        "tree_rules": [
            ":polarity/RB",
            ":ARG1/VP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :degree/RB -)",
        "graph_rules": {
            "heavy": [
                ":degree/RB"
            ]
        },
        "head": "heavy",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (NP (PRP -)) (VP (VB -) (ADJP (:degree/RB) (JJ xxx))) (. -) ('' -)))",
        "tree_rules": [
            ":degree/RB"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/NP"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:ARG1/NP)) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG2/E -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/E"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (S (CC xxx) (:ARG1/NP) (VP (MD -) (VP (VB -)))) (IN -) (:ARG1-of/S) (. -)))",
        "tree_rules": [
            ":ARG2/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/E - \n\t :ARG0/PP -)",
        "graph_rules": {
            "sad-02": [
                ":polarity/E",
                ":ARG0/PP"
            ]
        },
        "head": "sad-02",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": "(ROOT (S (NP (EX -)) (VP (VB -) (NP (NP (NN -) (JJ xxx)) (:ARG0/PP) ('' -)))))",
        "tree_rules": [
            ":ARG0/PP",
            ":polarity/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/NP"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:ARG1/NP)) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/NP - \n\t :degree/NP -)",
        "graph_rules": {
            "discourage-01": [
                ":ARG1/NP",
                ":degree/NP"
            ]
        },
        "head": "discourage-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/NP) (VP (VB -) (VP (:degree/NP) (VB xxx))) (. -)))",
        "tree_rules": [
            ":degree/NP",
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "passive"
        }
    },
    {
        "graph": "(XXX \n\t :ARG2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/VP"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (S (CC xxx) (:ARG0/NP) (:ARG2/VP)) (: -) ('' -) (PRN (S (NP (PRP -)) (VP (VBP -)))) (, -) (:ARG1/S) (. -)))",
        "tree_rules": [
            ":ARG2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/PP -)",
        "graph_rules": {
            "look-01": [
                ":ARG0/NP",
                ":ARG1/PP"
            ]
        },
        "head": "look-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (, -) (:mod/ADVP) (, -) (VP (MD -) (VP (VB xxx) (:ARG1/PP))) (. -)))",
        "tree_rules": [
            ":ARG1/PP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :domain/VP - \n\t :mod/PDT -)",
        "graph_rules": {
            "star": [
                ":domain/VP",
                ":mod/PDT"
            ]
        },
        "head": "star",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "plural"
        },
        "tree": "(ROOT (S (NP (:mod/PDT) (DT -) (NN xxx)) (:domain/VP) (. -)))",
        "tree_rules": [
            ":mod/PDT",
            ":domain/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :purpose/PP - \n\t :direction/RP -)",
        "graph_rules": {
            "pour-01": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":purpose/PP",
                ":direction/RP"
            ]
        },
        "head": "pour-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (MD -) (VP (VB xxx) (PP (:direction/RP) (:ARG1/NP))))))",
        "tree_rules": [
            ":purpose/PP",
            ":direction/RP",
            ":ARG1/NP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple future",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/NP"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:ARG1/NP)) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :degree/RB -)",
        "graph_rules": {
            "amuse-01": [
                ":ARG0/NP",
                ":degree/RB"
            ]
        },
        "head": "amuse-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S ('' -) (:ARG0/NP) (VP (MD -) (VP (VB -) (ADJP (:degree/RB) (JJ xxx)))) (. -)))",
        "tree_rules": [
            ":degree/RB",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple future",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/S - \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op1/S",
                ":op2/S"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:op1/S) (, -) (CC xxx) (:op2/S) (: -) ('' -)))",
        "tree_rules": [
            ":op1/S",
            ":op2/S"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG0/NP) (:degree/ADVP) (:op2/VP) (: -)))",
        "tree_rules": [
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :location/RB -)",
        "graph_rules": {
            "it": [
                ":location/RB"
            ]
        },
        "head": "it",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "pronoun",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S ('' -) (NP (:location/RB) (PRP xxx)) (VP (VBZ -)) (. -)))",
        "tree_rules": [
            ":location/RB"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG1/NP) (:op2/VP) (. -)))",
        "tree_rules": [
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/S - \n\t :time/RB - \n\t :mod/ADVP -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/S",
                ":time/RB",
                ":mod/ADVP"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:time/RB) (S (:ARG0/NP) (VP (VB xxx) (, -) (:mod/ADVP))) (: -) ('' -) (:ARG1/S) (: -)))",
        "tree_rules": [
            ":mod/ADVP",
            ":ARG0/NP",
            ":time/RB",
            ":ARG1/S"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG2/PP -)",
        "graph_rules": {
            "responsible-03": [
                ":ARG0/NP",
                ":ARG2/PP"
            ]
        },
        "head": "responsible-03",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB -) (ADJP (JJ xxx) (:ARG2/PP))) (. -)))",
        "tree_rules": [
            ":ARG2/PP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG1/NP) (:op2/VP) (. -)))",
        "tree_rules": [
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :purpose/S -)",
        "graph_rules": {
            "have-03": [
                ":ARG0/NP",
                ":ARG1/NP",
                ":purpose/S"
            ]
        },
        "head": "have-03",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB xxx) (:ARG1/NP))))",
        "tree_rules": [
            ":purpose/S",
            ":ARG1/NP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/NP - \n\t :ARG1-of/E -)",
        "graph_rules": {
            "sit-down-02": [
                ":ARG1/NP",
                ":ARG1-of/E"
            ]
        },
        "head": "sit-down-02",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/NP) (:degree/ADVP) (VP (VB xxx) (PRT (RP xxx)) (, -) (:ARG1/SBAR)) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG1-of/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :mod/VP - \n\t :time/ADVP -)",
        "graph_rules": {
            "that": [
                ":mod/VP",
                ":time/ADVP"
            ]
        },
        "head": "that",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": "(ROOT (S ('' -) (NP (EX -)) (:time/ADVP) (: -) (: -) (NP (WDT xxx)) (:mod/VP) (: -) ('' -)))",
        "tree_rules": [
            ":time/ADVP",
            ":mod/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :snt1/S - \n\t :snt2/S -)",
        "graph_rules": {
            "multi-sentence": [
                ":snt1/S",
                ":snt2/S"
            ]
        },
        "head": "multi-sentence",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:snt1/S) (: -) (:snt2/S) (. -)))",
        "tree_rules": [
            ":snt1/S",
            ":snt2/S"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1/NP -)",
        "graph_rules": {
            "step-01": [
                ":ARG1/NP"
            ]
        },
        "head": "step-01",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S (:ARG1/NP) (VP (VB -) (NP (CD -) (NN xxx))) (. -)))",
        "tree_rules": [
            ":ARG1/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1/VP - \n\t :polarity/RB -)",
        "graph_rules": {
            "possible-01": [
                ":ARG1/VP",
                ":polarity/RB"
            ]
        },
        "head": "possible-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/NP) (VP (MD xxx) (:polarity/RB) (:ARG1/VP)) (. -)))",
        "tree_rules": [
            ":polarity/RB",
            ":ARG1/VP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/NP - \n\t :ARG2/NP -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG1/NP",
                ":ARG2/NP"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": "(ROOT (S (NP (EX -)) (VP (VB -) (NP (:ARG1/NP) (PP (CC xxx) (:ARG2/NP))) (:ARG2/PP)) (. -)))",
        "tree_rules": [
            ":ARG2/NP",
            ":ARG1/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1/NP - \n\t :duration/PP - \n\t :manner/E -)",
        "graph_rules": {
            "remain-01": [
                ":ARG1/NP",
                ":duration/PP",
                ":manner/E"
            ]
        },
        "head": "remain-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/NP) (VP (VB xxx) (ADJP (JJ -)) (:duration/PP)) (. -)))",
        "tree_rules": [
            ":duration/PP",
            ":ARG1/NP",
            ":manner/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :polarity/RB -)",
        "graph_rules": {
            "cry-out-03": [
                ":ARG0/NP",
                ":polarity/RB"
            ]
        },
        "head": "cry-out-03",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB -) (:polarity/RB) (VP (VB xxx) (PRT (RP xxx)))) (. -)))",
        "tree_rules": [
            ":polarity/RB",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/NP - \n\t :manner/E -)",
        "graph_rules": {
            "fall-01": [
                ":ARG1/NP",
                ":manner/E"
            ]
        },
        "head": "fall-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/NP) (VP (VB xxx) (PP (IN -) (ADVP (RB -))) (:compared-to/SBAR)) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":manner/E"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :mod/DT - \n\t :ARG1-of/E -)",
        "graph_rules": {
            "sound-02": [
                ":polarity/RB",
                ":mod/DT",
                ":ARG1-of/E"
            ]
        },
        "head": "sound-02",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": true,
            "number": "singular"
        },
        "tree": "(ROOT (S (NP (EX -)) (VP (VB -) (:polarity/RB) (PP (:mod/RB) (NP (:mod/DT) (NN xxx))) (, -) (:ARG0/SBAR)) (. -)))",
        "tree_rules": [
            ":mod/DT",
            ":polarity/RB",
            ":ARG1-of/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/NP -)",
        "graph_rules": {
            "chapter": [
                ":mod/NP"
            ]
        },
        "head": "chapter",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (NP (NP (NN xxx)) (:mod/NP) (. -)))",
        "tree_rules": [
            ":mod/NP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP - \n\t :time/ADVP -)",
        "graph_rules": {
            "and": [
                ":op2/VP",
                ":time/ADVP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:time/ADVP) (:ARG1/NP) (:op2/VP) (: -)))",
        "tree_rules": [
            ":time/ADVP",
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/E - \n\t :ARG0/NP - \n\t :ARG1/NP - \n\t :time/E - \n\t :time -)",
        "graph_rules": {
            "tell-01": [
                ":polarity/E",
                ":ARG0/NP",
                ":ARG1/NP",
                ":time/E",
                ":time"
            ]
        },
        "head": "tell-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG0/NP) (VP (VB -) (ADVP (RB -)) (VP (:time/ADVP) (VB xxx) (:ARG1/NP))) (. -)))",
        "tree_rules": [
            ":time/ADVP",
            ":ARG1/NP",
            ":ARG0/NP",
            ":time/E",
            ":polarity/E"
        ],
        "verb_info": {
            "tense": "present perfect",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/S - \n\t :ARG1/NP - \n\t :mod/RB -)",
        "graph_rules": {
            "content-01": [
                ":ARG0/S",
                ":ARG1/NP",
                ":mod/RB"
            ]
        },
        "head": "content-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/NP) (VP (VB -) (ADJP (:mod/RB) (JJ xxx) (:ARG0/S))) (. -)))",
        "tree_rules": [
            ":mod/RB",
            ":ARG0/S",
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/S - \n\t :ARG2/S -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG1/S",
                ":ARG2/S"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (S (:ARG1/S) (, -) (CC xxx) (:ARG2/S)) (: -) ('' -) (:ARG1/S) (. -) ('' -)))",
        "tree_rules": [
            ":ARG1/S",
            ":ARG2/S"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1/NP - \n\t :time/ADVP - \n\t :degree/NP -)",
        "graph_rules": {
            "comfort-01": [
                ":ARG1/NP",
                ":time/ADVP",
                ":degree/NP"
            ]
        },
        "head": "comfort-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:time/ADVP) (:ARG1/NP) (VP (VB -) (VP (VB xxx) (:degree/NP))) (. -)))",
        "tree_rules": [
            ":degree/NP",
            ":time/ADVP",
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "passive"
        }
    },
    {
        "graph": "(XXX \n\t :ARG1/NP -)",
        "graph_rules": {
            "say-01": [
                ":ARG1/NP"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (NP (NP (NP (DT -)) (SBAR (S (VP (VB -) (S (VP (TO -) (VP (VB xxx))))) (:polarity/:)))) (: -) (:ARG1/NP) (. -)))",
        "tree_rules": [
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/VP"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG0/NP) (:ARG2/VP) (. -)))",
        "tree_rules": [
            ":ARG2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/NP - \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op1/NP",
                ":op2/S"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:polarity/S) (: -) (CC xxx) (:op2/S) (. -)))",
        "tree_rules": [
            ":op1/NP",
            ":op2/S"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/VP"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (S (CC xxx) (NP (EX -)) (:ARG2/VP)) (: -) (:ARG0-of/S) (. -)))",
        "tree_rules": [
            ":ARG2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1/S - \n\t :time/ADVP -)",
        "graph_rules": {
            "keep-02": [
                ":ARG1/S",
                ":time/ADVP"
            ]
        },
        "head": "keep-02",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (RB -) (:time/ADVP) (:ARG0/NP) (VP (VB xxx) (:ARG1/S) (: -) (SBAR (:mod/WHNP) (:location/S))) (. -)))",
        "tree_rules": [
            ":ARG1/S",
            ":time/ADVP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/E - \n\t :ARG2/PP - \n\t :time/PP -)",
        "graph_rules": {
            "say-01": [
                ":ARG0/NP",
                ":ARG1/E",
                ":ARG2/PP",
                ":time/PP"
            ]
        },
        "head": "say-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:time/PP) (:ARG0/NP) (VP (VP (VB xxx) (:ARG2/PP)) (: -) (:ARG1-of/VP) (:ARG2/PP)) (. -)))",
        "tree_rules": [
            ":ARG2/PP",
            ":time/PP",
            ":ARG0/NP",
            ":ARG1/E"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/S - \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op1/S",
                ":op2/S"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:op1/S) (, -) (CC xxx) (:op2/S) (: -) ('' -)))",
        "tree_rules": [
            ":op1/S",
            ":op2/S"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1/NP - \n\t :time/RB -)",
        "graph_rules": {
            "happy-01": [
                ":ARG1/NP",
                ":time/RB"
            ]
        },
        "head": "happy-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:time/RB) (:ARG1/NP) (VP (VB -) (ADJP (JJ xxx))) (. -)))",
        "tree_rules": [
            ":time/RB",
            ":ARG1/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (NP (EX -)) (:op2/VP) (. -)))",
        "tree_rules": [
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG2/S -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG2/S"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG2/S) (: -) ('' -) (PP (IN -) (S (S (NP (:op1/NP) (:time/CC) (NP (:op2/JJ) (:op1/CD))) (VP (VBZ -) (ADJP (ADJP (JJ -)) (: -) (ADJP (VBN -))))) (, -) (:ARG1/CC) (:mod/S))) (. -)))",
        "tree_rules": [
            ":ARG2/S"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/S - \n\t :op2/E - \n\t :time/PP -)",
        "graph_rules": {
            "or": [
                ":op1/S",
                ":op2/E",
                ":time/PP"
            ]
        },
        "head": "or",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:op1/S) (, -) (CC xxx) (:ARG0/S) (: -) ('' -)))",
        "tree_rules": [
            ":time/PP",
            ":op1/S",
            ":op2/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:time/ADVP) (:ARG1/NP) (:op2/VP) (: -)))",
        "tree_rules": [
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/JJ - \n\t :time/ADVP - \n\t :location/ADVP -)",
        "graph_rules": {
            "mystery": [
                ":mod/JJ",
                ":time/ADVP",
                ":location/ADVP"
            ]
        },
        "head": "mystery",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S (:location/ADVP) (, -) (:time/ADVP) (, -) (VP (VB -) (NP (DT -) (:mod/JJ) (NN xxx))) (. -)))",
        "tree_rules": [
            ":mod/JJ",
            ":location/ADVP",
            ":time/ADVP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/E - \n\t :ARG1/PP - \n\t :direction/PRT -)",
        "graph_rules": {
            "look-01": [
                ":ARG0/E",
                ":ARG1/PP",
                ":direction/PRT"
            ]
        },
        "head": "look-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (VP (VB xxx) (:direction/PRT) (:ARG1/PP)) (. -)))",
        "tree_rules": [
            ":direction/PRT",
            ":ARG1/PP",
            ":ARG0/E"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/E - \n\t :ARG1/CC - \n\t :ARG2/E -)",
        "graph_rules": {
            "ask-01": [
                ":ARG0/E",
                ":ARG1/CC",
                ":ARG2/E"
            ]
        },
        "head": "ask-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (SQ (VP (VB xxx) (:op2/NP)) (. -)))",
        "tree_rules": [
            ":ARG1/CC",
            ":ARG2/E",
            ":ARG0/E"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/NP -)",
        "graph_rules": {
            "eat-01": [
                ":ARG0/NP",
                ":ARG1/NP"
            ]
        },
        "head": "eat-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (VP (VB -) (SBAR (S (:ARG0/NP) (VP (VB xxx) (:ARG1/NP))))) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (:ARG0/NP) (:op2/VP) (: -)))",
        "tree_rules": [
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (NP (DT -) (ADJP (JJ -))) (:polarity/:) (ADVP (RB -)) (:op2/VP) (. -)))",
        "tree_rules": [
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1/JJ - \n\t :ARG2/S -)",
        "graph_rules": {
            "contrast-01": [
                ":ARG1/JJ",
                ":ARG2/S"
            ]
        },
        "head": "contrast-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:ARG1/S) (, -) (CC xxx) (:ARG2/S) (. -)))",
        "tree_rules": [
            ":ARG1/JJ",
            ":ARG2/S"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VP - \n\t :op2/VP - \n\t :location/ADVP -)",
        "graph_rules": {
            "and": [
                ":op1/VP",
                ":op2/VP",
                ":location/ADVP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (NP (PRP -)) (VP (VB -) (:location/ADVP) (SBAR (IN -) (S (:ARG1/NP) (VP (:op1/VP) (, -) (CC xxx) (:op2/VP))))) (. -)))",
        "tree_rules": [
            ":op1/VP",
            ":op2/VP",
            ":location/ADVP"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1/PP - \n\t :manner/ADVP - \n\t :purpose/E -)",
        "graph_rules": {
            "look-01": [
                ":ARG0/NP",
                ":ARG1/PP",
                ":manner/ADVP",
                ":purpose/E"
            ]
        },
        "head": "look-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (S (VP (VB xxx) (:ARG1/PP) (SBAR (:manner/ADVP) (IN -) (:ARG1/S)))) (:ARG0/NP) (:condition/VP) (. -)))",
        "tree_rules": [
            ":ARG0/NP",
            ":manner/ADVP",
            ":ARG1/PP",
            ":purpose/E"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2/VP"
            ]
        },
        "head": "and",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (CC xxx) (, -) (:condition/SBAR) (:op2/VP) (. -)))",
        "tree_rules": [
            ":op2/VP"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG1/E - \n\t :duration/PP - \n\t :location/IN -)",
        "graph_rules": {
            "wait-01": [
                ":ARG1/E",
                ":duration/PP",
                ":location/IN"
            ]
        },
        "head": "wait-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (VP (VB xxx) (:duration/PP) (, -) (ADVP (RB -)) (PP (:location/IN) (:op1/NP))) (. -)))",
        "tree_rules": [
            ":location/IN",
            ":duration/PP",
            ":ARG1/E"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ARG0/NP - \n\t :ARG1 - \n\t :condition/SBAR -)",
        "graph_rules": {
            "know-01": [
                ":ARG0/NP",
                ":ARG1",
                ":condition/SBAR"
            ]
        },
        "head": "know-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (:time/RB) (, -) (:condition/SBAR) (, -) (:ARG0/NP) (VP (MD -) (VP (VB xxx) (SBAR (WHNP (WP -)) (S (NP (PRP -)) (VP (VBZ -)))))) (. -)))",
        "tree_rules": [
            ":condition/SBAR",
            ":ARG0/NP"
        ],
        "verb_info": {
            "tense": "simple future",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polite/VB - \n\t :ARG0/E - \n\t :ARG1/NP - \n\t :condition/SBAR -)",
        "graph_rules": {
            "comfort-01": [
                ":polite/VB",
                ":ARG0/E",
                ":ARG1/NP",
                ":condition/SBAR"
            ]
        },
        "head": "comfort-01",
        "name": ":root/ROOT",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "(ROOT (S (:condition/SBAR) (, -) (VP (:polite/VB) (S (NP (NN xxx)) (:ARG1/NP))) (. -)))",
        "tree_rules": [
            ":ARG1/NP",
            ":polite/VB",
            ":condition/SBAR",
            ":ARG0/E"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ARG0/E - \n\t :ARG1/NP - \n\t :ARG2/NP -)",
        "graph_rules": {
            "send-01": [
                ":ARG0/E",
                ":ARG1/NP",
                ":ARG2/NP"
            ]
        },
        "head": "send-01",
        "name": ":root/ROOT",
        "noun_info": {},
        "tree": "(ROOT (S (VP (VB xxx) (S (:ARG2/NP) (:ARG1/NP)) (:ARG1/SBAR)) (. -)))",
        "tree_rules": [
            ":ARG2/NP",
            ":ARG1/NP",
            ":ARG0/E"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    }
]