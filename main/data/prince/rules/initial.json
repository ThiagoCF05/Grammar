[
    {
        "graph": "(XXX \n\t :mod/NP -)",
        "graph_rules": {
            "chapter": [
                ":mod"
            ]
        },
        "head": "chapter",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "XXX-NN :mod",
        "tree_rules": [
            ":mod"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/PP - \n\t :arg1/NP - \n\t :arg2/PP - \n\t :time/NP - \n\t :mod/ADVP - \n\t :time -)",
        "graph_rules": {
            "reveal-01": [
                ":arg0",
                ":arg1",
                ":arg2",
                ":time",
                ":mod",
                ":time"
            ]
        },
        "head": "reveal-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":poss :time :arg1 was XXX-VB :arg2",
        "tree_rules": [
            ":arg0",
            ":time",
            ":time",
            ":mod",
            ":time",
            ":arg2",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S - \n\t :manner/ADVP - \n\t :conj-as-if/PP - \n\t :arg2-of/S -)",
        "graph_rules": {
            "demand-01": [
                ":arg0",
                ":arg1",
                ":manner",
                ":conj-as-if",
                ":arg2-of"
            ]
        },
        "head": "demand-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":manner , :conj-as-if , :arg0 XXX-VB :polarity",
        "tree_rules": [
            ":arg2-of",
            ":manner",
            ":manner",
            ":conj-as-if",
            ":arg0",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "sheep",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "a XXX-NN ,",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/LS - \n\t :arg1/VP -)",
        "graph_rules": {
            "answer-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "answer-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB , :arg1 :arg1",
        "tree_rules": [
            ":arg0",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :mod/ADVP - \n\t :arg0-of/VP -)",
        "graph_rules": {
            "flower": [
                ":mod",
                ":arg0-of"
            ]
        },
        "head": "flower",
        "name": ":root",
        "noun_info": {},
        "tree": ":mod XXX-NNS that :arg0-of",
        "tree_rules": [
            ":mod",
            ":arg0-of"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/ADVP - \n\t :arg0-of/VP -)",
        "graph_rules": {
            "flower": [
                ":mod",
                ":arg0-of"
            ]
        },
        "head": "flower",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "plural"
        },
        "tree": "yes , :mod XXX-NN that :arg0-of",
        "tree_rules": [
            ":mod",
            ":arg0-of"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :arg2/X - \n\t :arg1-of/NP -)",
        "graph_rules": {
            "have-purpose-91": [
                ":arg1",
                ":arg2",
                ":arg1-of"
            ]
        },
        "head": "have-purpose-91",
        "name": ":root",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": "XXX-RB the :arg1 are they",
        "tree_rules": [
            ":arg2",
            ":arg1-of",
            ":arg1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :polarity/RB -)",
        "graph_rules": {
            "know-01": [
                ":arg0",
                ":polarity"
            ]
        },
        "head": "know-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 :polarity :polarity XXX-VB",
        "tree_rules": [
            ":polarity",
            ":polarity",
            ":arg0"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S - \n\t :time/PP -)",
        "graph_rules": {
            "try-01": [
                ":arg0",
                ":arg1",
                ":time"
            ]
        },
        "head": "try-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":time :arg0 was :arg1-of XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":time",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/ADJP - \n\t :arg1/ADJP -)",
        "graph_rules": {
            "cause-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "cause-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg2 was :quant :arg1 , for it was becoming :arg0 XXX-IN :arg1",
        "tree_rules": [
            ":arg0",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/VP -)",
        "graph_rules": {
            "and": [
                ":op1"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :op1 :arg1-of",
        "tree_rules": [
            ":op1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NNS - \n\t :arg2/WHNP -)",
        "graph_rules": {
            "use-01": [
                ":arg1",
                ":arg2"
            ]
        },
        "head": "use-01",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "the :arg1 :arg2 XXX-NN are they",
        "tree_rules": [
            ":arg2",
            ":arg1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/ADVP - \n\t :arg0/NP - \n\t :arg1/VP - \n\t :time/RB -)",
        "graph_rules": {
            "let-01": [
                ":polarity",
                ":arg0",
                ":arg1",
                ":time"
            ]
        },
        "head": "let-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 :polarity XXX-VB :arg1",
        "tree_rules": [
            ":time",
            ":arg1",
            ":arg0",
            ":polarity"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/PP - \n\t :arg1/NP -)",
        "graph_rules": {
            "upset-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "upset-01",
        "name": ":root",
        "noun_info": {},
        "tree": "as for me , :arg1 was XXX-VB :arg0",
        "tree_rules": [
            ":arg0",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/S -)",
        "graph_rules": {
            "and": [
                ":op1"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :op1 :domain",
        "tree_rules": [
            ":op1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP - \n\t :purpose/PP - \n\t :mod/ADVP -)",
        "graph_rules": {
            "have-03": [
                ":arg0",
                ":arg1",
                ":purpose",
                ":mod"
            ]
        },
        "head": "have-03",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1 :mod :purpose",
        "tree_rules": [
            ":arg1",
            ":mod",
            ":purpose",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "oh",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-UH",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1-of/E -)",
        "graph_rules": {
            "moment": [
                ":arg1-of"
            ]
        },
        "head": "moment",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "there was a XXX-NN :arg2",
        "tree_rules": [
            ":arg1-of"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S - \n\t :arg2/NP - \n\t :time/ADVP - \n\t :manner/IN - \n\t :direction/PP -)",
        "graph_rules": {
            "flash-01": [
                ":arg0",
                ":arg1",
                ":arg2",
                ":time",
                ":manner",
                ":direction"
            ]
        },
        "head": "flash-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":time :arg0 XXX-VB :direction :direction , :manner :mod :arg1",
        "tree_rules": [
            ":manner",
            ":manner",
            ":direction",
            ":direction",
            ":time",
            ":arg0",
            ":arg2",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1-of/JJ - \n\t :domain/NP -)",
        "graph_rules": {
            "creature": [
                ":arg1-of",
                ":domain"
            ]
        },
        "head": "creature",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "plural"
        },
        "tree": ":domain are :arg1-of XXX-NN",
        "tree_rules": [
            ":arg1-of",
            ":domain"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :domain/NP -)",
        "graph_rules": {
            "naive": [
                ":domain"
            ]
        },
        "head": "naive",
        "name": ":root",
        "noun_info": {},
        "tree": ":domain are XXX-JJ",
        "tree_rules": [
            ":domain"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/SBAR -)",
        "graph_rules": {
            "believe-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "believe-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB that :domain",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :polarity/RB -)",
        "graph_rules": {
            "answer-01": [
                ":arg0",
                ":polarity"
            ]
        },
        "head": "answer-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 :polarity :polarity XXX-VB",
        "tree_rules": [
            ":polarity",
            ":polarity",
            ":arg0"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/FW - \n\t :arg1/S - \n\t :arg2 - \n\t :time/ADVP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1",
                ":arg2",
                ":time"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":time :mod :time :arg0 was XXX-VB to myself :arg1",
        "tree_rules": [
            ":time",
            ":arg0",
            ":time",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP - \n\t :mod/ADVP -)",
        "graph_rules": {
            "disturb-01": [
                ":arg0",
                ":arg1",
                ":mod"
            ]
        },
        "head": "disturb-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":mod :arg0 XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":mod",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/SBAR -)",
        "graph_rules": {
            "and": [
                ":op1"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {
            "form": "list",
            "inPP": false,
            "number": "plural"
        },
        "tree": "XXX-CC :arg0",
        "tree_rules": [
            ":op1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/INTJ -)",
        "graph_rules": {
            "no": [
                ":mod"
            ]
        },
        "head": "no",
        "name": ":root",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": ":mod , XXX-DT",
        "tree_rules": [
            ":mod"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP -)",
        "graph_rules": {
            "cry-01": [
                ":arg0"
            ]
        },
        "head": "cry-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB",
        "tree_rules": [
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :quant/. -)",
        "graph_rules": {
            "no": [
                ":quant"
            ]
        },
        "head": "no",
        "name": ":root",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": "no , XXX-DT no :quant",
        "tree_rules": [
            ":quant"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :arg0/NP - \n\t :arg1/NP -)",
        "graph_rules": {
            "believe-01": [
                ":polarity",
                ":arg0",
                ":arg1"
            ]
        },
        "head": "believe-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 :polarity :polarity XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":polarity",
            ":polarity",
            ":arg0"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP - \n\t :arg2/NP -)",
        "graph_rules": {
            "answer-01": [
                ":arg0",
                ":arg1",
                ":arg2"
            ]
        },
        "head": "answer-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1 :ord :arg2",
        "tree_rules": [
            ":arg2",
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "see-01": [
                ":polarity",
                ":arg0",
                ":arg1"
            ]
        },
        "head": "see-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":polarity :polarity :arg0 XXX-VB :arg1 :arg0-of",
        "tree_rules": [
            ":arg0",
            ":polarity",
            ":polarity",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP -)",
        "graph_rules": {
            "stare-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "stare-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :mod",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0-of/. -)",
        "graph_rules": {
            "matter": [
                ":arg0-of"
            ]
        },
        "head": "matter",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "plural"
        },
        "tree": "XXX-NN :arg0-of :arg1 :arg0-of",
        "tree_rules": [
            ":arg0-of",
            ":arg0-of"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/PP - \n\t :location/NP -)",
        "graph_rules": {
            "look-01": [
                ":arg0",
                ":arg1",
                ":location"
            ]
        },
        "head": "look-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1 :location , :arg0 , :arg0-of",
        "tree_rules": [
            ":arg1",
            ":location",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1-of/IN -)",
        "graph_rules": {
            "talk-01": [
                ":arg0",
                ":arg1-of"
            ]
        },
        "head": "talk-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :mod :arg1-of :arg2",
        "tree_rules": [
            ":arg1-of",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP - \n\t :degree/NP -)",
        "graph_rules": {
            "shame-01": [
                ":arg0",
                ":arg1",
                ":degree"
            ]
        },
        "head": "shame-01",
        "name": ":root",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": ":arg0 made :arg1 :degree XXX-JJ",
        "tree_rules": [
            ":degree",
            ":arg1",
            ":arg0"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :arg2",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg2/NP -)",
        "graph_rules": {
            "confuse-01": [
                ":arg0",
                ":arg2"
            ]
        },
        "head": "confuse-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg2",
        "tree_rules": [
            ":arg2",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :domain/NP - \n\t :degree/RB - \n\t :arg1-of/ADVP -)",
        "graph_rules": {
            "angry": [
                ":domain",
                ":degree",
                ":arg1-of"
            ]
        },
        "head": "angry",
        "name": ":root",
        "noun_info": {},
        "tree": ":domain was :arg1-of :degree XXX-JJ",
        "tree_rules": [
            ":degree",
            ":arg1-of",
            ":domain"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP - \n\t :location/PP -)",
        "graph_rules": {
            "toss-01": [
                ":arg0",
                ":arg1",
                ":location"
            ]
        },
        "head": "toss-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1 :location",
        "tree_rules": [
            ":arg1",
            ":location",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP -)",
        "graph_rules": {
            "know-02": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "know-02",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/ADVP - \n\t :arg0/NP - \n\t :arg1/NP - \n\t :time/E -)",
        "graph_rules": {
            "smell-01": [
                ":polarity",
                ":arg0",
                ":arg1",
                ":time"
            ]
        },
        "head": "smell-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 has :polarity XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":polarity",
            ":arg0",
            ":time"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/ADVP - \n\t :arg0/NP - \n\t :arg1/PP - \n\t :time/E -)",
        "graph_rules": {
            "look-01": [
                ":polarity",
                ":arg0",
                ":arg1",
                ":time"
            ]
        },
        "head": "look-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 has :polarity XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":polarity",
            ":arg0",
            ":time"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/ADVP - \n\t :arg0/NP - \n\t :arg1/NP - \n\t :time/E -)",
        "graph_rules": {
            "love-01": [
                ":polarity",
                ":arg0",
                ":arg1",
                ":time"
            ]
        },
        "head": "love-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 has :polarity XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":polarity",
            ":arg0",
            ":time"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/E - \n\t :arg0/NP - \n\t :arg1/NP - \n\t :time/ADVP - \n\t :time - \n\t :arg2-of/PRT -)",
        "graph_rules": {
            "do-02": [
                ":polarity",
                ":arg0",
                ":arg1",
                ":time",
                ":time",
                ":arg2-of"
            ]
        },
        "head": "do-02",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 has :time XXX-VB :arg1 but :arg1",
        "tree_rules": [
            ":arg2-of",
            ":time",
            ":time",
            ":arg1",
            ":time",
            ":arg2-of",
            ":arg0",
            ":polarity"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg2/. -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC he is :polarity :op1 :domain :op2 :arg2",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "amr-unknown",
        "name": ":root",
        "noun_info": {},
        "tree": "a what XXX-.",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "mushroom",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "a XXX-NN",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP - \n\t :duration/PP -)",
        "graph_rules": {
            "grow-03": [
                ":arg0",
                ":arg1",
                ":duration"
            ]
        },
        "head": "grow-03",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 have been XXX-VB :arg1 :duration",
        "tree_rules": [
            ":arg1",
            ":duration",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP - \n\t :duration/PP - \n\t :arg1-of/VB -)",
        "graph_rules": {
            "eat-01": [
                ":arg0",
                ":arg1",
                ":duration",
                ":arg1-of"
            ]
        },
        "head": "eat-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":duration :arg0 :arg1-of been XXX-VB :arg1-of",
        "tree_rules": [
            ":arg1",
            ":arg1-of",
            ":arg1-of",
            ":duration",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/DT -)",
        "graph_rules": {
            "and": [
                ":op1"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC is it :polarity :op1 matter :arg1 :arg0",
        "tree_rules": [
            ":op1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :domain/NP -)",
        "graph_rules": {
            "important": [
                ":polarity",
                ":domain"
            ]
        },
        "head": "important",
        "name": ":root",
        "noun_info": {},
        "tree": "is :domain :polarity XXX-JJ",
        "tree_rules": [
            ":domain",
            ":polarity",
            ":domain"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :arg0/NP - \n\t :arg1/NP -)",
        "graph_rules": {
            "have-03": [
                ":polarity",
                ":arg0",
                ":arg1"
            ]
        },
        "head": "have-03",
        "name": ":root",
        "noun_info": {
            "form": "",
            "inPP": true,
            "number": ""
        },
        "tree": "is :arg0 :polarity of :arg1 :compared-to XXX-DT :arg1-of :arg1-of :part :compared-to",
        "tree_rules": [
            ":arg1",
            ":polarity",
            ":arg0"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/FRAG -)",
        "graph_rules": {
            "and": [
                ":op1"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :condition",
        "tree_rules": [
            ":op1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/SBAR -)",
        "graph_rules": {
            "think-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "think-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/VP -)",
        "graph_rules": {
            "possible-01": [
                ":arg1"
            ]
        },
        "head": "possible-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-MD :arg1",
        "tree_rules": [
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/VP -)",
        "graph_rules": {
            "and": [
                ":op1"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :op1",
        "tree_rules": [
            ":op1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :arg1/VP -)",
        "graph_rules": {
            "possible-01": [
                ":polarity",
                ":arg1"
            ]
        },
        "head": "possible-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-MD :polarity :arg1",
        "tree_rules": [
            ":polarity",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/S - \n\t :arg1/NP -)",
        "graph_rules": {
            "choke-up-04": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "choke-up-04",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 were XXX-VB :poss :arg0",
        "tree_rules": [
            ":arg0",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/NP -)",
        "graph_rules": {
            "fall-04": [
                ":arg1"
            ]
        },
        "head": "fall-04",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 had XXX-VB",
        "tree_rules": [
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/VP -)",
        "graph_rules": {
            "let-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "let-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 had XXX-VB :arg1 :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/NP - \n\t :op2/NP - \n\t :op3/NP - \n\t :op4/NP - \n\t :time/NP -)",
        "graph_rules": {
            "or": [
                ":op1",
                ":op2",
                ":op3",
                ":op4",
                ":time"
            ]
        },
        "head": "or",
        "name": ":root",
        "noun_info": {
            "form": "list",
            "inPP": false,
            "number": "plural"
        },
        "tree": ":mod :time now was :op1 , :op2 , XXX-CC :op3 , or :op4",
        "tree_rules": [
            ":op1",
            ":op2",
            ":op3",
            ":op4",
            ":time"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VP - \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 :op1 , XXX-CC :op2",
        "tree_rules": [
            ":op1",
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/PP - \n\t :arg2/PP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1",
                ":arg2"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg2 :arg1",
        "tree_rules": [
            ":arg2",
            ":arg0",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/E - \n\t :arg2/PRP$ -)",
        "graph_rules": {
            "draw-01": [
                ":arg0",
                ":arg1",
                ":arg2"
            ]
        },
        "head": "draw-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 will XXX-VB :arg2-of",
        "tree_rules": [
            ":arg2",
            ":arg0",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple future",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP - \n\t :arg2/NP -)",
        "graph_rules": {
            "draw-01": [
                ":arg0",
                ":arg1",
                ":arg2"
            ]
        },
        "head": "draw-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 will XXX-VB :arg2 :arg1",
        "tree_rules": [
            ":arg2",
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple future",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP -)",
        "graph_rules": {
            "do-02": [
                ":arg0"
            ]
        },
        "head": "do-02",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-MD",
        "tree_rules": [
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :arg0/NP - \n\t :arg1/WHNP -)",
        "graph_rules": {
            "know-01": [
                ":polarity",
                ":arg0",
                ":arg1"
            ]
        },
        "head": "know-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 :polarity :polarity XXX-VB :arg1 :arg1-of",
        "tree_rules": [
            ":arg1",
            ":polarity",
            ":polarity",
            ":arg0"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/CC -)",
        "graph_rules": {
            "feel-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "feel-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :op2",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :arg0/NP - \n\t :arg1/CC -)",
        "graph_rules": {
            "know-01": [
                ":polarity",
                ":arg0",
                ":arg1"
            ]
        },
        "head": "know-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 :polarity :polarity XXX-VB :op1 :manner-of",
        "tree_rules": [
            ":arg1",
            ":polarity",
            ":polarity",
            ":arg0"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :mod/JJ - \n\t :domain/NP -)",
        "graph_rules": {
            "place": [
                ":mod",
                ":domain"
            ]
        },
        "head": "place",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": true,
            "number": "singular"
        },
        "tree": ":domain is :degree a :mod XXX-NN , :domain",
        "tree_rules": [
            ":mod",
            ":domain",
            ":domain"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/NP -)",
        "graph_rules": {
            "chapter": [
                ":mod"
            ]
        },
        "head": "chapter",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "XXX-NN :mod",
        "tree_rules": [
            ":mod"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S - \n\t :time/ADVP -)",
        "graph_rules": {
            "learn-01": [
                ":arg0",
                ":arg1",
                ":time"
            ]
        },
        "head": "learn-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 :time XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0",
            ":time"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :degree/RB - \n\t :time/ADVP - \n\t :location/PP -)",
        "graph_rules": {
            "simple-02": [
                ":arg1",
                ":degree",
                ":time",
                ":location"
            ]
        },
        "head": "simple-02",
        "name": ":root",
        "noun_info": {},
        "tree": ":location :arg1 had :time been :degree XXX-JJ",
        "tree_rules": [
            ":degree",
            ":time",
            ":location",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :snt1/VB - \n\t :snt2/S - \n\t :snt3/S -)",
        "graph_rules": {
            "multi-sentence": [
                ":snt1",
                ":snt2",
                ":snt3"
            ]
        },
        "head": "multi-sentence",
        "name": ":root",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": ":arg0 :snt1 XXX-RB :quant :arg1 :consist-of :snt2 :snt3",
        "tree_rules": [
            ":snt1",
            ":snt2",
            ":snt3"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/S - \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": ":op1 , XXX-CC :op2",
        "tree_rules": [
            ":op1",
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/CC - \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {
            "form": "",
            "inPP": true,
            "number": ""
        },
        "tree": ":op1 :time , :source :source :arg1-of :source :mod :source where , :arg2 XXX-CC :op2 :arg1",
        "tree_rules": [
            ":op2",
            ":op1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/PP -)",
        "graph_rules": {
            "possible-01": [
                ":arg1"
            ]
        },
        "head": "possible-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":domain XXX-MD , you :mod",
        "tree_rules": [
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/VP - \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 :time :op1 , XXX-CC :op2",
        "tree_rules": [
            ":op1",
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/MD - \n\t :time/IN -)",
        "graph_rules": {
            "feel-01": [
                ":arg0",
                ":arg1",
                ":time"
            ]
        },
        "head": "feel-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg0 :arg1-of :arg2",
        "tree_rules": [
            ":time",
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/VB -)",
        "graph_rules": {
            "contrast-01": [
                ":arg1"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg1 :polarity",
        "tree_rules": [
            ":arg1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP - \n\t :manner/PP -)",
        "graph_rules": {
            "choose-01": [
                ":arg0",
                ":arg1",
                ":manner"
            ]
        },
        "head": "choose-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1 :manner",
        "tree_rules": [
            ":arg1",
            ":manner",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP - \n\t :manner/PP -)",
        "graph_rules": {
            "adjust-01": [
                ":arg0",
                ":arg1",
                ":manner"
            ]
        },
        "head": "adjust-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1 :manner",
        "tree_rules": [
            ":arg1",
            ":manner",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "wish-01": [
                ":polarity",
                ":arg0",
                ":arg1"
            ]
        },
        "head": "wish-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 :polarity :polarity XXX-VB :arg1 :mod :arg1-of , :arg1-of :arg2",
        "tree_rules": [
            ":arg1",
            ":polarity",
            ":polarity",
            ":arg0"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "wish-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "wish-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":degree was :mod :manner that :arg0 XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "yes",
        "name": ":root",
        "noun_info": {},
        "tree": "oh , XXX-UH",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :arg2/NN -)",
        "graph_rules": {
            "resemble-01": [
                ":arg1",
                ":arg2"
            ]
        },
        "head": "resemble-01",
        "name": ":root",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": ":arg1 was XXX-DT :mod :arg2",
        "tree_rules": [
            ":arg2",
            ":arg1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VP -)",
        "graph_rules": {
            "and": [
                ":op1"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg2-of :op1",
        "tree_rules": [
            ":op1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1 - \n\t :manner/ADVP - \n\t :time/NP-TMP - \n\t :time - \n\t :time -)",
        "graph_rules": {
            "show-01": [
                ":arg0",
                ":arg1",
                ":manner",
                ":time",
                ":time",
                ":time"
            ]
        },
        "head": "show-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":time :time , :mod :time :time , :arg0 :manner XXX-VB :manner",
        "tree_rules": [
            ":time",
            ":time",
            ":manner",
            ":time",
            ":time",
            ":arg0",
            ":manner"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/VP - \n\t :op2/VP - \n\t :time/IN -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2",
                ":time"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC , :time :op1 , :arg0 :op1",
        "tree_rules": [
            ":time",
            ":op2",
            ":op1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :degree/ADVP -)",
        "graph_rules": {
            "awake-03": [
                ":arg1",
                ":degree"
            ]
        },
        "head": "awake-03",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 am :degree XXX-RB",
        "tree_rules": [
            ":degree",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP - \n\t :arg2/SBAR -)",
        "graph_rules": {
            "beg-01": [
                ":arg0",
                ":arg1",
                ":arg2"
            ]
        },
        "head": "beg-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg2",
        "tree_rules": [
            ":arg1",
            ":arg2",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity - \n\t :arg1/NP - \n\t :mod/ADVP -)",
        "graph_rules": {
            "arrange-01": [
                ":polarity",
                ":arg1",
                ":mod"
            ]
        },
        "head": "arrange-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 are :mod :mod XXX-VB",
        "tree_rules": [
            ":mod",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg2/MD -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :arg1",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :degree/WRB -)",
        "graph_rules": {
            "beautiful-02": [
                ":arg1",
                ":degree"
            ]
        },
        "head": "beautiful-02",
        "name": ":root",
        "noun_info": {},
        "tree": ":degree XXX-JJ :arg1 are",
        "tree_rules": [
            ":degree",
            ":arg1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/ADJP - \n\t :manner/ADVP -)",
        "graph_rules": {
            "respond-01": [
                ":arg0",
                ":arg1",
                ":manner"
            ]
        },
        "head": "respond-01",
        "name": ":root",
        "noun_info": {},
        "tree": "am :polarity :arg1 :arg0 XXX-VB , :manner",
        "tree_rules": [
            ":arg1",
            ":manner",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg1 :op2",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/VP -)",
        "graph_rules": {
            "possible-01": [
                ":arg1"
            ]
        },
        "head": "possible-01",
        "name": ":root",
        "noun_info": {},
        "tree": "the :mod :arg0 XXX-MD :arg1 :arg2 :op2 she was :degree",
        "tree_rules": [
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S - \n\t :time/ADVP -)",
        "graph_rules": {
            "add-01": [
                ":arg0",
                ":arg1",
                ":time"
            ]
        },
        "head": "add-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , :arg0 XXX-VB :quant :time",
        "tree_rules": [
            ":time",
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/S -)",
        "graph_rules": {
            "and": [
                ":op1"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :op1 :arg1",
        "tree_rules": [
            ":op1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP - \n\t :arg1-of/ADVP -)",
        "graph_rules": {
            "tend-01": [
                ":arg0",
                ":arg1",
                ":arg1-of"
            ]
        },
        "head": "tend-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1-of , :arg0 XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":arg1-of",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S - \n\t :mod/ADVP - \n\t :arg1-of/RB -)",
        "graph_rules": {
            "begin-01": [
                ":arg0",
                ":arg1",
                ":mod",
                ":arg1-of"
            ]
        },
        "head": "begin-01",
        "name": ":root",
        "noun_info": {},
        "tree": "so , :mod , :arg0 XXX-VB :degree :arg1-of :arg1",
        "tree_rules": [
            ":arg1-of",
            ":arg1",
            ":mod",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S - \n\t :arg2/PP - \n\t :time/NP-TMP - \n\t :arg0-of/PP - \n\t :time -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1",
                ":arg2",
                ":time",
                ":arg0-of",
                ":time"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":time , :arg0-of , :time :time , :arg0 XXX-VB :arg2 :arg1",
        "tree_rules": [
            ":time",
            ":time",
            ":arg2",
            ":time",
            ":arg0-of",
            ":arg0",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "object-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "object-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , :arg0 XXX-VB",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC , :mod , :arg0 :op2",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg2/NP - \n\t :manner/ADVP -)",
        "graph_rules": {
            "reply-01": [
                ":arg0",
                ":arg2",
                ":manner"
            ]
        },
        "head": "reply-01",
        "name": ":root",
        "noun_info": {},
        "tree": "i am :polarity :arg2 , :arg0 XXX-VB , :manner",
        "tree_rules": [
            ":arg2",
            ":manner",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polite/VB - \n\t :arg0/NP - \n\t :arg1/E -)",
        "graph_rules": {
            "excuse-01": [
                ":polite",
                ":arg0",
                ":arg1"
            ]
        },
        "head": "excuse-01",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": ":polite XXX-NN :arg0",
        "tree_rules": [
            ":arg0",
            ":polite",
            ":arg1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/CC -)",
        "graph_rules": {
            "go-on-25": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "go-on-25",
        "name": ":root",
        "noun_info": {},
        "tree": "i am :polarity :degree :arg1 , :arg0 XXX-VB on , :arg1 :arg2",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/LS - \n\t :arg1/SBAR -)",
        "graph_rules": {
            "suppose-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "suppose-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/VP - \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": ":domain :op1 , XXX-CC :op2 , :domain :mod",
        "tree_rules": [
            ":op1",
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/FW - \n\t :arg1/S -)",
        "graph_rules": {
            "want-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "want-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":time :arg0 XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :degree/NP - \n\t :location/SBAR -)",
        "graph_rules": {
            "cold-01": [
                ":degree",
                ":location"
            ]
        },
        "head": "cold-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":degree is :degree XXX-JJ :location",
        "tree_rules": [
            ":degree",
            ":location",
            ":degree"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg3-of/VP -)",
        "graph_rules": {
            "location": [
                ":arg3-of"
            ]
        },
        "head": "location",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": true,
            "number": "singular"
        },
        "tree": "in the XXX-NN :arg1 :arg3-of",
        "tree_rules": [
            ":arg3-of"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :arg2",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :time-of/PP -)",
        "graph_rules": {
            "come-01": [
                ":arg1",
                ":time-of"
            ]
        },
        "head": "come-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 had XXX-VB :time-of",
        "tree_rules": [
            ":time-of",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :arg1/VP -)",
        "graph_rules": {
            "possible-01": [
                ":polarity",
                ":arg1"
            ]
        },
        "head": "possible-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-MD :polarity :arg1",
        "tree_rules": [
            ":polarity",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :purpose/SBAR - \n\t :frequency/CC -)",
        "graph_rules": {
            "cough-01": [
                ":arg0",
                ":purpose",
                ":frequency"
            ]
        },
        "head": "cough-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1-of , :arg0 XXX-VB :op1 :frequency :op2 times , :purpose",
        "tree_rules": [
            ":frequency",
            ":frequency",
            ":purpose",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "screen",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "the XXX-NN",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/PP - \n\t :time/SBAR -)",
        "graph_rules": {
            "look-01": [
                ":arg0",
                ":arg1",
                ":time"
            ]
        },
        "head": "look-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 was just going to XXX-VB :arg1 :time",
        "tree_rules": [
            ":arg1",
            ":time",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP - \n\t :time/ADVP - \n\t :degree/MD - \n\t :purpose/ADVP -)",
        "graph_rules": {
            "force-02": [
                ":arg0",
                ":arg1",
                ":time",
                ":degree",
                ":purpose"
            ]
        },
        "head": "force-02",
        "name": ":root",
        "noun_info": {},
        "tree": ":time :arg0 XXX-VB :arg1 :purpose",
        "tree_rules": [
            ":degree",
            ":degree",
            ":arg1",
            ":purpose",
            ":time",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :arg2/S - \n\t :time/ADVP - \n\t :arg1-of/WHNP - \n\t :concession/NP -)",
        "graph_rules": {
            "come-04": [
                ":arg1",
                ":arg2",
                ":time",
                ":arg1-of",
                ":concession"
            ]
        },
        "head": "come-04",
        "name": ":root",
        "noun_info": {},
        "tree": "so :arg1 :arg1-of :time XXX-VB :arg2",
        "tree_rules": [
            ":arg1-of",
            ":concession",
            ":time",
            ":concession",
            ":arg2",
            ":time",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :arg2/NP - \n\t :arg0-of/S -)",
        "graph_rules": {
            "serious-01": [
                ":arg1",
                ":arg2",
                ":arg0-of"
            ]
        },
        "head": "serious-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 had taken XXX-RB :arg2 , and :arg0-of",
        "tree_rules": [
            ":arg0-of",
            ":arg2",
            ":arg1",
            ":arg0-of"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/MD - \n\t :arg2/PP - \n\t :time/NP-TMP -)",
        "graph_rules": {
            "confide-01": [
                ":arg0",
                ":arg1",
                ":arg2",
                ":time"
            ]
        },
        "head": "confide-01",
        "name": ":root",
        "noun_info": {},
        "tree": "i :arg1 :arg1 , :arg0 XXX-VB :arg2 :time",
        "tree_rules": [
            ":arg1",
            ":arg2",
            ":time",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/S -)",
        "graph_rules": {
            "recommend-01": [
                ":arg1"
            ]
        },
        "head": "recommend-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 :time XXX-MD :arg1",
        "tree_rules": [
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/CC -)",
        "graph_rules": {
            "recommend-01": [
                ":arg1"
            ]
        },
        "head": "recommend-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-MD :manner :op2",
        "tree_rules": [
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP -)",
        "graph_rules": {
            "perfume-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "perfume-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-JJ :mod :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :arg2",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/VP -)",
        "graph_rules": {
            "recommend-01": [
                ":arg1"
            ]
        },
        "head": "recommend-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-MD :mod :arg1",
        "tree_rules": [
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/VP -)",
        "graph_rules": {
            "and": [
                ":op1"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :op1 :arg1",
        "tree_rules": [
            ":op1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/CC -)",
        "graph_rules": {
            "recommend-01": [
                ":arg1"
            ]
        },
        "head": "recommend-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-MD :op1",
        "tree_rules": [
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/CC - \n\t :arg2/NP -)",
        "graph_rules": {
            "cast-01": [
                ":arg0",
                ":arg1",
                ":arg2"
            ]
        },
        "head": "cast-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1-of :op2 :arg2",
        "tree_rules": [
            ":arg1",
            ":arg2",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/S -)",
        "graph_rules": {
            "recommend-01": [
                ":arg1"
            ]
        },
        "head": "recommend-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-MD :arg1",
        "tree_rules": [
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/S -)",
        "graph_rules": {
            "recommend-01": [
                ":arg1"
            ]
        },
        "head": "recommend-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-MD :arg1",
        "tree_rules": [
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/. - \n\t :arg1/NP - \n\t :degree/RB -)",
        "graph_rules": {
            "consistent-01": [
                ":polarity",
                ":arg1",
                ":degree"
            ]
        },
        "head": "consistent-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 are :degree XXX-JJ :polarity",
        "tree_rules": [
            ":degree",
            ":arg1",
            ":polarity"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :domain :arg2",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/NP -)",
        "graph_rules": {
            "chapter": [
                ":mod"
            ]
        },
        "head": "chapter",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "XXX-NN :mod",
        "tree_rules": [
            ":mod"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/SBAR -)",
        "graph_rules": {
            "believe-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "believe-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP - \n\t :arg1-of/JJ - \n\t :time/PP -)",
        "graph_rules": {
            "order-03": [
                ":arg0",
                ":arg1",
                ":arg1-of",
                ":time"
            ]
        },
        "head": "order-03",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": true,
            "number": "singular"
        },
        "tree": ":time :arg0 put :arg1 :time :arg1-of XXX-NN",
        "tree_rules": [
            ":arg1-of",
            ":time",
            ":arg1",
            ":time",
            ":arg0"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP - \n\t :manner/ADVP -)",
        "graph_rules": {
            "clean-out-03": [
                ":arg0",
                ":arg1",
                ":manner"
            ]
        },
        "head": "clean-out-03",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 :manner XXX-VB out :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0",
            ":manner"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/S - \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": ":op1 XXX-CC :op2",
        "tree_rules": [
            ":op1",
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP - \n\t :mod/ADVP -)",
        "graph_rules": {
            "have-03": [
                ":arg0",
                ":arg1",
                ":mod"
            ]
        },
        "head": "have-03",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 :mod XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0",
            ":mod"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg2/SBAR -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC , :arg2 , :arg0 :polarity :arg1",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP - \n\t :mod/ADVP -)",
        "graph_rules": {
            "clean-out-03": [
                ":arg0",
                ":arg1",
                ":mod"
            ]
        },
        "head": "clean-out-03",
        "name": ":root",
        "noun_info": {},
        "tree": "so :arg0 XXX-VB out :arg1 , :mod",
        "tree_rules": [
            ":arg1",
            ":mod",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :condition/SBAR - \n\t :manner/ADVP - \n\t :arg1-of/ADVP -)",
        "graph_rules": {
            "burn-01": [
                ":arg1",
                ":condition",
                ":manner",
                ":arg1-of"
            ]
        },
        "head": "burn-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":condition , :arg1 XXX-VB :arg1-of and :manner , :manner :arg1-of",
        "tree_rules": [
            ":arg1-of",
            ":arg1",
            ":manner",
            ":condition",
            ":manner"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/JJ - \n\t :arg1-of/IN -)",
        "graph_rules": {
            "erupt-01": [
                ":arg1",
                ":arg1-of"
            ]
        },
        "head": "erupt-01",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "plural"
        },
        "tree": ":arg1 XXX-NN are :arg1-of :arg2",
        "tree_rules": [
            ":arg1",
            ":arg1-of"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :degree/RB - \n\t :compared-to/S - \n\t :domain/NP - \n\t :location/PP - \n\t :arg1-of/ADVP -)",
        "graph_rules": {
            "small": [
                ":degree",
                ":compared-to",
                ":domain",
                ":location",
                ":arg1-of"
            ]
        },
        "head": "small",
        "name": ":root",
        "noun_info": {},
        "tree": ":location :domain are :arg1-of :degree :degree XXX-JJ :compared-to",
        "tree_rules": [
            ":degree",
            ":compared-to",
            ":arg1-of",
            ":location",
            ":domain"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/PP -)",
        "graph_rules": {
            "cause-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "cause-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 is XXX-WRB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/PP - \n\t :mod/ADVP - \n\t :direction/PRT -)",
        "graph_rules": {
            "pull-01": [
                ":arg0",
                ":arg1",
                ":mod",
                ":direction"
            ]
        },
        "head": "pull-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 :mod XXX-VB :direction , :ord :arg0-of",
        "tree_rules": [
            ":arg1",
            ":direction",
            ":arg0",
            ":mod"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/SBAR -)",
        "graph_rules": {
            "believe-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "believe-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :time :domain :arg2",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/SBAR - \n\t :time/CC -)",
        "graph_rules": {
            "realize-01": [
                ":arg0",
                ":arg1",
                ":time"
            ]
        },
        "head": "realize-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":time :ord :op2 , :arg0 XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":time",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/ADVP - \n\t :arg2/PP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1",
                ":arg2"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , :arg0 XXX-VB :arg2",
        "tree_rules": [
            ":arg2",
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg2/NP -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :polarity",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/ADVP - \n\t :mod/ADVP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1",
                ":mod"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , :arg0 XXX-VB :mod",
        "tree_rules": [
            ":mod",
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP -)",
        "graph_rules": {
            "cough-01": [
                ":arg0"
            ]
        },
        "head": "cough-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB",
        "tree_rules": [
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg2/IN -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg1 was :polarity :arg2 :arg0",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S - \n\t :arg2/PP - \n\t :time/PP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1",
                ":arg2",
                ":time"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , :arg0 XXX-VB :arg2 , :time",
        "tree_rules": [
            ":arg2",
            ":time",
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP - \n\t :arg2/PRP$ -)",
        "graph_rules": {
            "ask-02": [
                ":arg0",
                ":arg1",
                ":arg2"
            ]
        },
        "head": "ask-02",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1",
        "tree_rules": [
            ":arg2",
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0 - \n\t :arg1/S -)",
        "graph_rules": {
            "try-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "try-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-VB :arg1",
        "tree_rules": [
            ":arg1"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/PP - \n\t :arg1/NP -)",
        "graph_rules": {
            "surprise-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "surprise-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 was XXX-VB :arg0",
        "tree_rules": [
            ":arg0",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :arg2/NP -)",
        "graph_rules": {
            "stand-01": [
                ":arg1",
                ":arg2"
            ]
        },
        "head": "stand-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 XXX-VB :arg2 :arg1-of , :arg1 :arg1-of",
        "tree_rules": [
            ":arg2",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :arg0/NP - \n\t :arg1/NP -)",
        "graph_rules": {
            "understand-01": [
                ":polarity",
                ":arg0",
                ":arg1"
            ]
        },
        "head": "understand-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 :polarity :polarity XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":polarity",
            ":polarity",
            ":arg0"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S - \n\t :arg2/PP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1",
                ":arg2"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , :arg0 XXX-VB :arg2",
        "tree_rules": [
            ":arg2",
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/PRP$ - \n\t :arg2/SBAR -)",
        "graph_rules": {
            "fault-01": [
                ":arg1",
                ":arg2"
            ]
        },
        "head": "fault-01",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "it is :arg1 XXX-NN :arg2",
        "tree_rules": [
            ":arg1",
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/DT - \n\t :domain/NP -)",
        "graph_rules": {
            "important": [
                ":polarity",
                ":domain"
            ]
        },
        "head": "important",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": true,
            "number": "singular"
        },
        "tree": ":domain is of :polarity XXX-NN",
        "tree_rules": [
            ":polarity",
            ":domain"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/ADJP -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :compared-to",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VB - \n\t :op2/E -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": ":op1 XXX-TO be :arg1 :domain",
        "tree_rules": [
            ":op1",
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP - \n\t :polarity/RB - \n\t :time/ADVP -)",
        "graph_rules": {
            "want-01": [
                ":arg0",
                ":arg1",
                ":polarity",
                ":time"
            ]
        },
        "head": "want-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 :polarity :polarity XXX-VB :arg1 :time",
        "tree_rules": [
            ":arg1",
            ":time",
            ":polarity",
            ":polarity",
            ":arg0"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg2/NP -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {
            "form": "list",
            "inPP": false,
            "number": "plural"
        },
        "tree": "XXX-CC :arg2",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :domain/NP -)",
        "graph_rules": {
            "flower": [
                ":domain"
            ]
        },
        "head": "flower",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": ":domain am :domain XXX-NN",
        "tree_rules": [
            ":domain",
            ":domain"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/NP -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {
            "form": "list",
            "inPP": false,
            "number": "plural"
        },
        "tree": "XXX-CC :arg2",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/MD -)",
        "graph_rules": {
            "have-concession-91": [
                ":arg2"
            ]
        },
        "head": "have-concession-91",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-RB , :arg1 :arg2",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/SBAR -)",
        "graph_rules": {
            "seem-01": [
                ":arg1"
            ]
        },
        "head": "seem-01",
        "name": ":root",
        "noun_info": {},
        "tree": "it XXX-VB :arg1",
        "tree_rules": [
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/. - \n\t :arg1/NP - \n\t :condition/IN -)",
        "graph_rules": {
            "call-on-05": [
                ":arg0",
                ":arg1",
                ":condition"
            ]
        },
        "head": "call-on-05",
        "name": ":root",
        "noun_info": {},
        "tree": "and :condition :op2 who will :condition XXX-IN :arg1 :arg0",
        "tree_rules": [
            ":arg1",
            ":condition",
            ":condition",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/LS - \n\t :arg1/NP -)",
        "graph_rules": {
            "have-03": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "have-03",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP - \n\t :manner/ADVP -)",
        "graph_rules": {
            "show-01": [
                ":arg0",
                ":arg1",
                ":manner"
            ]
        },
        "head": "show-01",
        "name": ":root",
        "noun_info": {},
        "tree": "and , :manner , :arg0 XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":manner",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/PRN - \n\t :time/ADVP -)",
        "graph_rules": {
            "add-01": [
                ":arg0",
                ":arg1",
                ":time"
            ]
        },
        "head": "add-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":time :arg0 XXX-VB :arg1",
        "tree_rules": [
            ":time",
            ":arg0",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "decide-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "decide-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 have XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "present perfect",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/S - \n\t :time/NP -)",
        "graph_rules": {
            "go-02": [
                ":arg0",
                ":time"
            ]
        },
        "head": "go-02",
        "name": ":root",
        "noun_info": {},
        "tree": ":time :arg0",
        "tree_rules": [
            ":time",
            ":arg0"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "want-01": [
                ":polarity",
                ":arg0",
                ":arg1"
            ]
        },
        "head": "want-01",
        "name": ":root",
        "noun_info": {},
        "tree": "for :arg0 :polarity :polarity XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":polarity",
            ":polarity",
            ":arg0"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NN - \n\t :degree/JJ -)",
        "graph_rules": {
            "pride-01": [
                ":arg0",
                ":degree"
            ]
        },
        "head": "pride-01",
        "name": ":root",
        "noun_info": {
            "form": "",
            "inPP": true,
            "number": ""
        },
        "tree": ":domain was :degree a XXX-JJ :arg0",
        "tree_rules": [
            ":arg0",
            ":degree"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/NP -)",
        "graph_rules": {
            "chapter": [
                ":mod"
            ]
        },
        "head": "chapter",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "XXX-NN :mod",
        "tree_rules": [
            ":mod"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "find-out-03": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "find-out-03",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg2/PP - \n\t :mod/ADVP - \n\t :purpose/SBAR -)",
        "graph_rules": {
            "begin-01": [
                ":arg0",
                ":arg2",
                ":mod",
                ":purpose"
            ]
        },
        "head": "begin-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB , :mod , :arg2 , :purpose",
        "tree_rules": [
            ":mod",
            ":arg2",
            ":purpose",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :arg2/PP -)",
        "graph_rules": {
            "seat-01": [
                ":arg1",
                ":arg2"
            ]
        },
        "head": "seat-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1-of , :arg1 was XXX-VB :arg2",
        "tree_rules": [
            ":arg2",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "ah",
        "name": ":root",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": "XXX-RB",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP - \n\t :time/SBAR -)",
        "graph_rules": {
            "exclaim-01": [
                ":arg0",
                ":arg1",
                ":time"
            ]
        },
        "head": "exclaim-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":location-of , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":time",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/MD - \n\t :arg2 -)",
        "graph_rules": {
            "ask-01": [
                ":arg0",
                ":arg1",
                ":arg2"
            ]
        },
        "head": "ask-01",
        "name": ":root",
        "noun_info": {},
        "tree": "and :arg0 XXX-VB himself :manner :arg1 :arg0 :arg1 :condition :manner",
        "tree_rules": [
            ":arg0",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/SBAR - \n\t :polarity/RB -)",
        "graph_rules": {
            "know-01": [
                ":arg0",
                ":arg1",
                ":polarity"
            ]
        },
        "head": "know-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 :polarity :polarity XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":polarity",
            ":polarity",
            ":arg0"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/VP -)",
        "graph_rules": {
            "opine-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "opine-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-TO :arg0 , :domain :arg1",
        "tree_rules": [
            ":arg0",
            ":arg1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":purpose , XXX-VB :arg0 a king :arg2 :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/VB - \n\t :op2/VB - \n\t :concession/CC -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2",
                ":concession"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": ":concession :concession :arg2 was :op1 XXX-CC :op2 :extent :arg1",
        "tree_rules": [
            ":op1",
            ":op2",
            ":concession",
            ":concession"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/S - \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": ":op1 , XXX-CC :op2",
        "tree_rules": [
            ":op1",
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/ADJP - \n\t :arg2/PP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1",
                ":arg2"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": "it is :arg1 :arg1 , :arg0 XXX-VB :arg2",
        "tree_rules": [
            ":arg1",
            ":arg2",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S - \n\t :arg2/NP -)",
        "graph_rules": {
            "forbid-01": [
                ":arg0",
                ":arg1",
                ":arg2"
            ]
        },
        "head": "forbid-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-FW :arg1",
        "tree_rules": [
            ":arg2",
            ":arg1",
            ":arg0"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :arg1/VP -)",
        "graph_rules": {
            "possible-01": [
                ":polarity",
                ":arg1"
            ]
        },
        "head": "possible-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-MD :polarity :arg1",
        "tree_rules": [
            ":polarity",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg2/MD - \n\t :manner/ADJP -)",
        "graph_rules": {
            "reply-01": [
                ":arg0",
                ":arg2",
                ":manner"
            ]
        },
        "head": "reply-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , XXX-VB :arg0",
        "tree_rules": [
            ":arg2",
            ":manner",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/S - \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": ":op1 , XXX-CC :op2",
        "tree_rules": [
            ":op1",
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/ADVP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , :mod , :arg0 XXX-VB",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP - \n\t :arg2/PP -)",
        "graph_rules": {
            "order-01": [
                ":arg0",
                ":arg1",
                ":arg2"
            ]
        },
        "head": "order-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-NN :arg1 :arg2",
        "tree_rules": [
            ":arg1",
            ":arg2",
            ":arg0"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/VP - \n\t :time/IN -)",
        "graph_rules": {
            "pass-03": [
                ":arg1",
                ":time"
            ]
        },
        "head": "pass-03",
        "name": ":root",
        "noun_info": {
            "form": "pronoun",
            "inPP": false,
            "number": "singular"
        },
        "tree": "XXX-PRP :arg1",
        "tree_rules": [
            ":time",
            ":arg1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/PP -)",
        "graph_rules": {
            "curious-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "curious-01",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": true,
            "number": "singular"
        },
        "tree": ":arg0 are objects of XXX-NN",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1 - \n\t :time/NP -)",
        "graph_rules": {
            "come-01": [
                ":arg1",
                ":time"
            ]
        },
        "head": "come-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-VB , :time",
        "tree_rules": [
            ":time"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0 - \n\t :mod/ADVP -)",
        "graph_rules": {
            "yawn-01": [
                ":arg0",
                ":mod"
            ]
        },
        "head": "yawn-01",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "XXX-NN :mod",
        "tree_rules": [
            ":mod"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/NP -)",
        "graph_rules": {
            "order-01": [
                ":arg2"
            ]
        },
        "head": "order-01",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": ":arg2 is an XXX-NN",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/ADVP - \n\t :arg1/NP -)",
        "graph_rules": {
            "frighten-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "frighten-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1",
        "tree_rules": [
            ":arg0",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/MD -)",
        "graph_rules": {
            "murmur-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "murmur-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":time XXX-VB :arg0 , :time :arg1-of",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "hum",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-NN",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/VP - \n\t :arg2/CC - \n\t :mod/NP -)",
        "graph_rules": {
            "order-01": [
                ":arg0",
                ":arg1",
                ":arg2",
                ":mod"
            ]
        },
        "head": "order-01",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": ":mod :op2 :arg0 XXX-NN :frequency",
        "tree_rules": [
            ":arg1",
            ":arg2",
            ":arg0",
            ":mod"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VP - \n\t :op2/VB -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 :op1 , XXX-CC :arg1",
        "tree_rules": [
            ":op2",
            ":op1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/SBAR - \n\t :mod/ADVP -)",
        "graph_rules": {
            "insist-01": [
                ":arg0",
                ":arg1",
                ":mod"
            ]
        },
        "head": "insist-01",
        "name": ":root",
        "noun_info": {},
        "tree": "for what :arg0 :mod XXX-VB upon was :arg1",
        "tree_rules": [
            ":arg0",
            ":mod",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP - \n\t :polarity/DT -)",
        "graph_rules": {
            "tolerate-01": [
                ":arg0",
                ":arg1",
                ":polarity"
            ]
        },
        "head": "tolerate-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1",
        "tree_rules": [
            ":polarity",
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :mod/JJ - \n\t :domain/NP -)",
        "graph_rules": {
            "monarch": [
                ":mod",
                ":domain"
            ]
        },
        "head": "monarch",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": ":domain was an :mod XXX-NN",
        "tree_rules": [
            ":mod",
            ":domain"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/VP -)",
        "graph_rules": {
            "have-concession-91": [
                ":arg1"
            ]
        },
        "head": "have-concession-91",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC , :arg1-of :arg0 , :arg0 :arg1",
        "tree_rules": [
            ":arg1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/SBAR - \n\t :arg0-of/PP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1",
                ":arg0-of"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": "if i ordered a general , :arg0 would XXX-VB , :condition-of , :arg1 , and :condition-of",
        "tree_rules": [
            ":arg0-of",
            ":arg1",
            ":arg0",
            ":arg0-of"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/PRP$ -)",
        "graph_rules": {
            "fault-01": [
                ":arg1"
            ]
        },
        "head": "fault-01",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "it would be :arg1 XXX-NN",
        "tree_rules": [
            ":arg1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VP - \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg2 , :arg0 :op1 , XXX-CC :manner :op2",
        "tree_rules": [
            ":op1",
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP -)",
        "graph_rules": {
            "wonder-01": [
                ":arg0"
            ]
        },
        "head": "wonder-01",
        "name": ":root",
        "noun_info": {},
        "tree": "but :arg0 was XXX-VB",
        "tree_rules": [
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :domain/NP -)",
        "graph_rules": {
            "tiny": [
                ":domain"
            ]
        },
        "head": "tiny",
        "name": ":root",
        "noun_info": {},
        "tree": ":domain was XXX-JJ",
        "tree_rules": [
            ":domain"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/VP -)",
        "graph_rules": {
            "possible-01": [
                ":arg1"
            ]
        },
        "head": "possible-01",
        "name": ":root",
        "noun_info": {},
        "tree": "over what XXX-MD :arg0 :arg1 :arg1",
        "tree_rules": [
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/VP - \n\t :arg2/S -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1",
                ":arg2"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg2 , :arg0 XXX-VB to him , i :arg1",
        "tree_rules": [
            ":arg0",
            ":arg2",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "hasten-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "hasten-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg2 , :arg0 XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/VP - \n\t :arg2/WHPP -)",
        "graph_rules": {
            "say-01": [
                ":arg1",
                ":arg2"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg2 :arg2 XXX-VB you :arg1 :arg1",
        "tree_rules": [
            ":arg1",
            ":arg2"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/PP - \n\t :arg1-of/PP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1",
                ":arg1-of"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , XXX-VB :arg0 , :arg1-of",
        "tree_rules": [
            ":arg0",
            ":arg1-of",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/NP -)",
        "graph_rules": {
            "over": [
                ":op1"
            ]
        },
        "head": "over",
        "name": ":root",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": "XXX-IN :op1",
        "tree_rules": [
            ":op1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg0-of/SBAR -)",
        "graph_rules": {
            "gesture-01": [
                ":arg0",
                ":arg0-of"
            ]
        },
        "head": "gesture-01",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": ":arg0 made a XXX-NN , :arg0-of",
        "tree_rules": [
            ":arg0-of",
            ":arg0"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg2/IN -)",
        "graph_rules": {
            "answer-01": [
                ":arg0",
                ":arg2"
            ]
        },
        "head": "answer-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg2 :mod , :arg0 XXX-VB",
        "tree_rules": [
            ":arg2",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/SBAR - \n\t :op2/ADJP -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": ":op1 :domain was XXX-RB :op2",
        "tree_rules": [
            ":op2",
            ":op1"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP -)",
        "graph_rules": {
            "obey-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "obey-01",
        "name": ":root",
        "noun_info": {},
        "tree": "and :arg0 XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , :arg0 XXX-VB",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :manner/ADVP -)",
        "graph_rules": {
            "obey-01": [
                ":arg0",
                ":manner"
            ]
        },
        "head": "obey-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :manner",
        "tree_rules": [
            ":manner",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :arg0/NP - \n\t :arg1/NP -)",
        "graph_rules": {
            "permit-01": [
                ":polarity",
                ":arg0",
                ":arg1"
            ]
        },
        "head": "permit-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 :polarity :polarity XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":polarity",
            ":polarity",
            ":arg0"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NN - \n\t :arg1/NP -)",
        "graph_rules": {
            "marvel-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "marvel-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 was a thing for the :mod :arg0 to XXX-VB at",
        "tree_rules": [
            ":arg0",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/S - \n\t :condition/SBAR -)",
        "graph_rules": {
            "possible-01": [
                ":arg1",
                ":condition"
            ]
        },
        "head": "possible-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":condition , :arg0 would :arg1-of been XXX-JJ :arg1",
        "tree_rules": [
            ":arg1",
            ":condition"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0 - \n\t :arg1/NP - \n\t :arg2/SBAR -)",
        "graph_rules": {
            "order-01": [
                ":arg0",
                ":arg1",
                ":arg2"
            ]
        },
        "head": "order-01",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "XXX-NN :arg2",
        "tree_rules": [
            ":arg1",
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/E - \n\t :op2/NP -)",
        "graph_rules": {
            "or": [
                ":op1",
                ":op2"
            ]
        },
        "head": "or",
        "name": ":root",
        "noun_info": {
            "form": "list",
            "inPP": false,
            "number": "plural"
        },
        "tree": ":arg2 , XXX-CC :op2",
        "tree_rules": [
            ":op2",
            ":op1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/ADVP - \n\t :arg1-of/ADVP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1",
                ":arg1-of"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , XXX-VB :arg0 :arg1-of",
        "tree_rules": [
            ":arg0",
            ":arg1-of",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "exact",
        "name": ":root",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": "XXX-RB",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/JJ -)",
        "graph_rules": {
            "go-on-25": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "go-on-25",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg2 , :arg0 XXX-VB on",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :arg2/PP - \n\t :mod/ADVP -)",
        "graph_rules": {
            "rest-02": [
                ":arg1",
                ":arg2",
                ":mod"
            ]
        },
        "head": "rest-02",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1-of :arg1 XXX-VB :mod :arg2",
        "tree_rules": [
            ":arg1",
            ":mod",
            ":arg2"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1 - \n\t :condition/SBAR -)",
        "graph_rules": {
            "rise-up-03": [
                ":arg0",
                ":arg1",
                ":condition"
            ]
        },
        "head": "rise-up-03",
        "name": ":root",
        "noun_info": {},
        "tree": ":condition , they would XXX-VB up :arg0-of",
        "tree_rules": [
            ":arg0",
            ":condition"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1 - \n\t :arg2/S - \n\t :arg1-of/IN -)",
        "graph_rules": {
            "right-05": [
                ":arg1",
                ":arg2",
                ":arg1-of"
            ]
        },
        "head": "right-05",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": ":arg0 have the XXX-NN :arg2",
        "tree_rules": [
            ":arg1-of",
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP -)",
        "graph_rules": {
            "have-03": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "have-03",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 shall XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg2/NP -)",
        "graph_rules": {
            "command-02": [
                ":arg0",
                ":arg2"
            ]
        },
        "head": "command-02",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 shall XXX-VB :arg2",
        "tree_rules": [
            ":arg2",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC , :arg0 , :arg1 :arg2",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/SBAR -)",
        "graph_rules": {
            "inquire-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "inquire-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 :arg1 be :arg2 XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "hum",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-NN",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "hum",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-NN",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "hum",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-NN",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :arg2/PP -)",
        "graph_rules": {
            "be-temporally-at-91": [
                ":arg1",
                ":arg2"
            ]
        },
        "head": "be-temporally-at-91",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 XXX-MD be :arg2 about :op1",
        "tree_rules": [
            ":arg2",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "see-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "see-01",
        "name": ":root",
        "noun_info": {},
        "tree": "and :arg0 will XXX-VB :degree :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple future",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP -)",
        "graph_rules": {
            "yawn-01": [
                ":arg0"
            ]
        },
        "head": "yawn-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB",
        "tree_rules": [
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/VB -)",
        "graph_rules": {
            "regret-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "regret-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 was XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC then , too , :arg1 :op2",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/ADJP - \n\t :arg2/NP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1",
                ":arg2"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": "i have :polarity :arg1 , :arg0 XXX-VB :arg1 :arg2",
        "tree_rules": [
            ":arg1",
            ":arg2",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/VP -)",
        "graph_rules": {
            "cause-01": [
                ":arg1"
            ]
        },
        "head": "cause-01",
        "name": ":root",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": "XXX-IN :arg0 :arg1",
        "tree_rules": [
            ":arg1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/SBAR -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":polarity XXX-VB :arg0 , who :arg0-of",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :arg0 -)",
        "graph_rules": {
            "go-02": [
                ":polarity",
                ":arg0"
            ]
        },
        "head": "go-02",
        "name": ":root",
        "noun_info": {},
        "tree": "do :polarity XXX-VB",
        "tree_rules": [
            ":polarity"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/DT -)",
        "graph_rules": {
            "make-02": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "make-02",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 will XXX-VB :arg0 :arg2",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple future",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :topic/. -)",
        "graph_rules": {
            "minister": [
                ":topic"
            ]
        },
        "head": "minister",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "XXX-NN :topic :topic",
        "tree_rules": [
            ":topic",
            ":topic"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :topic/VP -)",
        "graph_rules": {
            "minister": [
                ":topic"
            ]
        },
        "head": "minister",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "XXX-NN :topic",
        "tree_rules": [
            ":topic"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :location/NP - \n\t :arg1-of/S -)",
        "graph_rules": {
            "nobody": [
                ":location",
                ":arg1-of"
            ]
        },
        "head": "nobody",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "but :location is XXX-NN :location :arg1-of",
        "tree_rules": [
            ":location",
            ":arg1-of",
            ":location"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S - \n\t :arg2/PP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1",
                ":arg2"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , :arg0 XXX-VB :arg2",
        "tree_rules": [
            ":arg2",
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :arg0/NP - \n\t :arg1/PP - \n\t :arg1-of/JJ -)",
        "graph_rules": {
            "tour-01": [
                ":polarity",
                ":arg0",
                ":arg1",
                ":arg1-of"
            ]
        },
        "head": "tour-01",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": ":arg0 have :polarity yet :polarity a :arg1-of XXX-NN :arg1",
        "tree_rules": [
            ":arg1-of",
            ":arg1",
            ":polarity",
            ":polarity",
            ":arg0"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :domain/NP - \n\t :degree/RB -)",
        "graph_rules": {
            "old": [
                ":domain",
                ":degree"
            ]
        },
        "head": "old",
        "name": ":root",
        "noun_info": {},
        "tree": ":domain am :degree XXX-JJ",
        "tree_rules": [
            ":degree",
            ":domain"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/DT - \n\t :purpose/NP - \n\t :location/NP -)",
        "graph_rules": {
            "room": [
                ":polarity",
                ":purpose",
                ":location"
            ]
        },
        "head": "room",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": ":location is :polarity XXX-NN :location :purpose :purpose",
        "tree_rules": [
            ":polarity",
            ":location",
            ":purpose",
            ":purpose",
            ":location"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/S - \n\t :arg1 -)",
        "graph_rules": {
            "tire-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "tire-01",
        "name": ":root",
        "noun_info": {},
        "tree": "and it XXX-VB :arg0",
        "tree_rules": [
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :location/PP - \n\t :mod/PP -)",
        "graph_rules": {
            "nobody": [
                ":location",
                ":mod"
            ]
        },
        "head": "nobody",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": ":location , :arg2 , there was XXX-NN :mod",
        "tree_rules": [
            ":mod",
            ":location"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg2/NP -)",
        "graph_rules": {
            "answer-01": [
                ":arg0",
                ":arg2"
            ]
        },
        "head": "answer-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 shall :arg1 :arg2 , :arg0 XXX-VB",
        "tree_rules": [
            ":arg0",
            ":arg2"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :domain/NP - \n\t :mod/ADJP -)",
        "graph_rules": {
            "thing": [
                ":domain",
                ":mod"
            ]
        },
        "head": "thing",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": ":domain is the :mod XXX-NN :compared-to",
        "tree_rules": [
            ":mod",
            ":domain"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :degree/RBR - \n\t :domain/NP - \n\t :compared-to/SBAR -)",
        "graph_rules": {
            "difficult": [
                ":degree",
                ":domain",
                ":compared-to"
            ]
        },
        "head": "difficult",
        "name": ":root",
        "noun_info": {},
        "tree": ":domain is :degree :degree XXX-JJ :domain",
        "tree_rules": [
            ":compared-to",
            ":degree",
            ":domain",
            ":domain"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :domain/NP - \n\t :condition/SBAR - \n\t :arg1-of/NP -)",
        "graph_rules": {
            "wise": [
                ":domain",
                ":condition",
                ":arg1-of"
            ]
        },
        "head": "wise",
        "name": ":root",
        "noun_info": {},
        "tree": ":condition , then you are XXX-RB :arg1-of",
        "tree_rules": [
            ":domain",
            ":arg1-of",
            ":condition"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/INTJ -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , XXX-VB :arg0 , :concession :arg1",
        "tree_rules": [
            ":arg0",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S - \n\t :polarity/RB -)",
        "graph_rules": {
            "need-01": [
                ":arg0",
                ":arg1",
                ":polarity"
            ]
        },
        "head": "need-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 :polarity :polarity XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":polarity",
            ":polarity",
            ":arg0"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "hum",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-NN",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP -)",
        "graph_rules": {
            "have-03": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "have-03",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/LS - \n\t :arg1/NP - \n\t :time/PP -)",
        "graph_rules": {
            "hear-01": [
                ":arg0",
                ":arg1",
                ":time"
            ]
        },
        "head": "hear-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1 :time",
        "tree_rules": [
            ":arg1",
            ":time",
            ":arg0"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/VP -)",
        "graph_rules": {
            "possible-01": [
                ":arg1"
            ]
        },
        "head": "possible-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-MD :arg1",
        "tree_rules": [
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP - \n\t :arg3/PP - \n\t :frequency/PP -)",
        "graph_rules": {
            "condemn-01": [
                ":arg0",
                ":arg1",
                ":arg3",
                ":frequency"
            ]
        },
        "head": "condemn-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":frequency :arg0 will XXX-VB :arg1 :arg3",
        "tree_rules": [
            ":arg1",
            ":arg3",
            ":frequency",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple future",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP -)",
        "graph_rules": {
            "depend-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "depend-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-RB :arg0 will depend :poss :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP - \n\t :frequency/PP - \n\t :arg1-of/IN -)",
        "graph_rules": {
            "pardon-01": [
                ":arg0",
                ":arg1",
                ":frequency",
                ":arg1-of"
            ]
        },
        "head": "pardon-01",
        "name": ":root",
        "noun_info": {},
        "tree": "but :arg0 will XXX-NN :arg1",
        "tree_rules": [
            ":frequency",
            ":arg1-of",
            ":frequency",
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :mod/RB - \n\t :domain/NP - \n\t :arg1-of/SBAR -)",
        "graph_rules": {
            "one": [
                ":mod",
                ":domain",
                ":arg1-of"
            ]
        },
        "head": "one",
        "name": ":root",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": ":domain is the :mod XXX-CD :arg1-of",
        "tree_rules": [
            ":mod",
            ":arg1-of",
            ":domain"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/SBAR -)",
        "graph_rules": {
            "reply-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "reply-01",
        "name": ":root",
        "noun_info": {},
        "tree": "i , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/SBAR - \n\t :time/ADVP -)",
        "graph_rules": {
            "think-01": [
                ":arg0",
                ":arg1",
                ":time"
            ]
        },
        "head": "think-01",
        "name": ":root",
        "noun_info": {},
        "tree": "and :time :arg0 XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":time",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/ADVP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/DT - \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "wish-01": [
                ":polarity",
                ":arg0",
                ":arg1"
            ]
        },
        "head": "wish-01",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "but :arg0 , :arg0-of , had :polarity XXX-NN :arg1",
        "tree_rules": [
            ":polarity",
            ":polarity",
            ":arg1",
            ":arg0"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/VP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":condition :arg1 , :arg0 XXX-VB , he :arg1",
        "tree_rules": [
            ":arg0",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/JJ -)",
        "graph_rules": {
            "exemplify-01": [
                ":arg0"
            ]
        },
        "head": "exemplify-01",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": true,
            "number": "singular"
        },
        "tree": ":arg0 should be :arg0 , for XXX-NN , :arg1",
        "tree_rules": [
            ":arg0"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/SBAR - \n\t :arg2/PP -)",
        "graph_rules": {
            "seem-01": [
                ":arg1",
                ":arg2"
            ]
        },
        "head": "seem-01",
        "name": ":root",
        "noun_info": {},
        "tree": "it XXX-VB :arg2",
        "tree_rules": [
            ":arg1",
            ":arg2"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP - \n\t :time/ADVP -)",
        "graph_rules": {
            "take-01": [
                ":arg0",
                ":arg1",
                ":time"
            ]
        },
        "head": "take-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":time , :arg0-of , :arg0 XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":time",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S - \n\t :manner/ADVP -)",
        "graph_rules": {
            "call-07": [
                ":arg0",
                ":arg1",
                ":manner"
            ]
        },
        "head": "call-07",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , :arg0 XXX-VB :manner , :manner",
        "tree_rules": [
            ":manner",
            ":manner",
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP -)",
        "graph_rules": {
            "have-03": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "have-03",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S - \n\t :arg2 - \n\t :time/SBAR -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1",
                ":arg2",
                ":time"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , :arg0 XXX-VB :domain , :time",
        "tree_rules": [
            ":time",
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :mod/NP -)",
        "graph_rules": {
            "chapter": [
                ":mod"
            ]
        },
        "head": "chapter",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "XXX-NN :mod",
        "tree_rules": [
            ":mod"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP -)",
        "graph_rules": {
            "inhabit-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "inhabit-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 was XXX-VB :ord :arg0",
        "tree_rules": [
            ":arg0",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "ah",
        "name": ":root",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": "XXX-RB",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "ah",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-RB",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/VP -)",
        "graph_rules": {
            "opine-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "opine-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-IN , :mod , :domain :arg1",
        "tree_rules": [
            ":arg0",
            ":arg1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NN -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1-of , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :mod/NN - \n\t :domain/NP - \n\t :arg1-of/SBAR -)",
        "graph_rules": {
            "hat": [
                ":mod",
                ":domain",
                ":arg1-of"
            ]
        },
        "head": "hat",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": ":domain is :domain :mod XXX-NN :arg1-of",
        "tree_rules": [
            ":domain",
            ":mod",
            ":arg1-of",
            ":domain"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "reply-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "reply-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , :arg0 XXX-VB",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :path/NP - \n\t :arg2-of/ADVP - \n\t :time/ADVP -)",
        "graph_rules": {
            "pass-03": [
                ":arg1",
                ":path",
                ":arg2-of",
                ":time"
            ]
        },
        "head": "pass-03",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg2-of , :arg1 :time XXX-VB :path",
        "tree_rules": [
            ":time",
            ":path",
            ":arg2-of",
            ":arg1",
            ":time"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP - \n\t :arg2/E - \n\t :time/ADVP -)",
        "graph_rules": {
            "direct-01": [
                ":arg0",
                ":arg1",
                ":arg2",
                ":time"
            ]
        },
        "head": "direct-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":manner :part-of , :arg0 :time XXX-VB :arg1",
        "tree_rules": [
            ":time",
            ":arg1",
            ":arg0",
            ":arg2"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP -)",
        "graph_rules": {
            "clap-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "clap-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP - \n\t :subevent-of/PP -)",
        "graph_rules": {
            "raise-01": [
                ":arg0",
                ":arg1",
                ":subevent-of"
            ]
        },
        "head": "raise-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1 :subevent-of",
        "tree_rules": [
            ":arg1",
            ":subevent-of",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/ADJP - \n\t :arg2 -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1",
                ":arg2"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 , :arg0 XXX-VB to himself",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S - \n\t :mod/IN -)",
        "graph_rules": {
            "begin-01": [
                ":arg0",
                ":arg1",
                ":mod"
            ]
        },
        "head": "begin-01",
        "name": ":root",
        "noun_info": {},
        "tree": "and :arg0 XXX-VB again :arg1",
        "tree_rules": [
            ":mod",
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP - \n\t :mod/PP - \n\t :subevent-of/NP -)",
        "graph_rules": {
            "raise-01": [
                ":arg0",
                ":arg1",
                ":mod",
                ":subevent-of"
            ]
        },
        "head": "raise-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1 :instrument :subevent-of",
        "tree_rules": [
            ":mod",
            ":subevent-of",
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/PP - \n\t :time/IN -)",
        "graph_rules": {
            "tire-01": [
                ":arg0",
                ":arg1",
                ":time"
            ]
        },
        "head": "tire-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":time :duration :arg0 :duration XXX-JJ :arg1",
        "tree_rules": [
            ":time",
            ":arg1",
            ":arg0"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/SQ -)",
        "graph_rules": {
            "ask-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "ask-01",
        "name": ":root",
        "noun_info": {},
        "tree": "and what :arg1 :arg1 :arg0 XXX-VB",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg2/NP - \n\t :polarity/RB -)",
        "graph_rules": {
            "hear-01": [
                ":arg0",
                ":arg2",
                ":polarity"
            ]
        },
        "head": "hear-01",
        "name": ":root",
        "noun_info": {},
        "tree": "but :arg0 :polarity :polarity XXX-VB :arg2",
        "tree_rules": [
            ":arg2",
            ":polarity",
            ":polarity",
            ":arg0"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/E - \n\t :arg0/NP - \n\t :arg1/NP - \n\t :time/ADVP -)",
        "graph_rules": {
            "hear-01": [
                ":polarity",
                ":arg0",
                ":arg1",
                ":time"
            ]
        },
        "head": "hear-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 :time XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0",
            ":time",
            ":polarity"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/VP - \n\t :arg2/. -)",
        "graph_rules": {
            "mean-01": [
                ":arg1",
                ":arg2"
            ]
        },
        "head": "mean-01",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "what does that XXX-NN ' :arg1 :arg2",
        "tree_rules": [
            ":arg1",
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/VB - \n\t :arg2/SBAR -)",
        "graph_rules": {
            "mean-01": [
                ":arg1",
                ":arg2"
            ]
        },
        "head": "mean-01",
        "name": ":root",
        "noun_info": {},
        "tree": "to :arg1 XXX-VB :arg2",
        "tree_rules": [
            ":arg2",
            ":arg1"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {
            "form": "list",
            "inPP": false,
            "number": "plural"
        },
        "tree": "XXX-CC :domain :arg2",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0 - \n\t :arg1/DT - \n\t :arg2/NP -)",
        "graph_rules": {
            "kind-01": [
                ":arg0",
                ":arg1",
                ":arg2"
            ]
        },
        "head": "kind-01",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "do :arg2 :arg1 XXX-NN",
        "tree_rules": [
            ":arg1",
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/E - \n\t :manner/JJ -)",
        "graph_rules": {
            "admire-01": [
                ":arg0",
                ":arg1",
                ":manner"
            ]
        },
        "head": "admire-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-VB :arg0",
        "tree_rules": [
            ":manner",
            ":arg0",
            ":arg1"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :op2",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/ADJP - \n\t :arg2 - \n\t :time/SBAR -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1",
                ":arg2",
                ":time"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":domain , :arg0 XXX-VB :domain , :time",
        "tree_rules": [
            ":arg1",
            ":time",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :mod/NP -)",
        "graph_rules": {
            "chapter": [
                ":mod"
            ]
        },
        "head": "chapter",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "XXX-NN :mod",
        "tree_rules": [
            ":mod"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/IN - \n\t :arg1/NP -)",
        "graph_rules": {
            "inhabit-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "inhabit-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 was XXX-VB :arg0 :arg0-of",
        "tree_rules": [
            ":arg0",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/PP - \n\t :arg2/S -)",
        "graph_rules": {
            "have-concession-91": [
                ":arg1",
                ":arg2"
            ]
        },
        "head": "have-concession-91",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg2 , XXX-CC :degree",
        "tree_rules": [
            ":arg1",
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg2/S - \n\t :manner/IN -)",
        "graph_rules": {
            "reply-01": [
                ":arg0",
                ":arg2",
                ":manner"
            ]
        },
        "head": "reply-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg2 , XXX-VB :arg0-of , :manner :arg0",
        "tree_rules": [
            ":manner",
            ":manner",
            ":arg0",
            ":arg2"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/WHADVP -)",
        "graph_rules": {
            "demand-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "demand-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 :arg1 :arg0 XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg2/ADVP -)",
        "graph_rules": {
            "reply-01": [
                ":arg0",
                ":arg2"
            ]
        },
        "head": "reply-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , XXX-VB :arg0-of",
        "tree_rules": [
            ":arg2",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "confess-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "confess-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , :arg0-of XXX-VB , :arg0-of",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/PP -)",
        "graph_rules": {
            "shame-01": [
                ":arg0"
            ]
        },
        "head": "shame-01",
        "name": ":root",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": "XXX-JJ :arg0",
        "tree_rules": [
            ":arg0"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/PP - \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0-of :arg0 , XXX-CC :op2",
        "tree_rules": [
            ":op1",
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :op2",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/ADJP - \n\t :arg2 - \n\t :time/SBAR -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1",
                ":arg2",
                ":time"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":domain , :arg0 XXX-VB :domain , :time",
        "tree_rules": [
            ":arg1",
            ":time",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :mod/NP -)",
        "graph_rules": {
            "chapter": [
                ":mod"
            ]
        },
        "head": "chapter",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "XXX-NN :mod",
        "tree_rules": [
            ":mod"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP -)",
        "graph_rules": {
            "belong-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "belong-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :ord :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :degree/ADVP - \n\t :arg0-of/IN -)",
        "graph_rules": {
            "occupy-01": [
                ":arg1",
                ":degree",
                ":arg0-of"
            ]
        },
        "head": "occupy-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 was :degree XXX-VB :arg0-of :arg1",
        "tree_rules": [
            ":arg0-of",
            ":degree",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NN - \n\t :arg2/PP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1",
                ":arg2"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1-of , :arg0 XXX-VB :arg2",
        "tree_rules": [
            ":arg1",
            ":arg2",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/NP -)",
        "graph_rules": {
            "go-out-18": [
                ":arg1"
            ]
        },
        "head": "go-out-18",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 has XXX-VB out",
        "tree_rules": [
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/CC - \n\t :arg2/NP -)",
        "graph_rules": {
            "equal-01": [
                ":arg1",
                ":arg2"
            ]
        },
        "head": "equal-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":op1 :arg1 :op2 XXX-VB :arg2",
        "tree_rules": [
            ":arg1",
            ":arg2"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/CC - \n\t :arg2/NP -)",
        "graph_rules": {
            "equal-01": [
                ":arg1",
                ":arg2"
            ]
        },
        "head": "equal-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":op1 :arg1 :op2 XXX-VB :arg2",
        "tree_rules": [
            ":arg1",
            ":arg2"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/CC - \n\t :arg2/NP -)",
        "graph_rules": {
            "equal-01": [
                ":arg1",
                ":arg2"
            ]
        },
        "head": "equal-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":op1 :arg1 :op2 XXX-VB :arg2",
        "tree_rules": [
            ":arg1",
            ":arg2"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1-of/JJ -)",
        "graph_rules": {
            "morning": [
                ":arg1-of"
            ]
        },
        "head": "morning",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": ":arg1-of XXX-NN",
        "tree_rules": [
            ":arg1-of"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/CC - \n\t :arg2/NP -)",
        "graph_rules": {
            "equal-01": [
                ":arg1",
                ":arg2"
            ]
        },
        "head": "equal-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":op2 XXX-VB :arg2 two",
        "tree_rules": [
            ":arg1",
            ":arg2"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/CC - \n\t :arg2/S -)",
        "graph_rules": {
            "equal-01": [
                ":arg1",
                ":arg2"
            ]
        },
        "head": "equal-01",
        "name": ":root",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": "XXX-CD :arg2",
        "tree_rules": [
            ":arg1",
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP - \n\t :polarity/RB -)",
        "graph_rules": {
            "have-03": [
                ":arg0",
                ":arg1",
                ":polarity"
            ]
        },
        "head": "have-03",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :polarity :arg1",
        "tree_rules": [
            ":polarity",
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/CC - \n\t :arg2/S -)",
        "graph_rules": {
            "equal-01": [
                ":arg1",
                ":arg2"
            ]
        },
        "head": "equal-01",
        "name": ":root",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": "XXX-CD :arg2",
        "tree_rules": [
            ":arg1",
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "phew",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "XXX-NN",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/S - \n\t :arg2/ADJP -)",
        "graph_rules": {
            "equal-01": [
                ":arg1",
                ":arg2"
            ]
        },
        "head": "equal-01",
        "name": ":root",
        "noun_info": {},
        "tree": "then :arg2 XXX-VB :arg1 two thousand , seven hundred thirty one",
        "tree_rules": [
            ":arg1",
            ":arg2"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "eh",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-UH",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :arg2/NP - \n\t :mod/ADVP -)",
        "graph_rules": {
            "be-located-at-91": [
                ":arg1",
                ":arg2",
                ":mod"
            ]
        },
        "head": "be-located-at-91",
        "name": ":root",
        "noun_info": {},
        "tree": "are :arg1 :mod :arg2",
        "tree_rules": [
            ":arg1",
            ":mod",
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/PRN - \n\t :op2/MD -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": "five hundred XXX-CC :op1 :arg1",
        "tree_rules": [
            ":op1",
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :arg2/S -)",
        "graph_rules": {
            "obligate-01": [
                ":arg1",
                ":arg2"
            ]
        },
        "head": "obligate-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 XXX-VB :arg1 :arg2",
        "tree_rules": [
            ":arg2",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/PP - \n\t :arg1/NP -)",
        "graph_rules": {
            "concern-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "concern-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 am XXX-VB :arg0",
        "tree_rules": [
            ":arg0",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1 - \n\t :arg2/PP - \n\t :polarity/RB -)",
        "graph_rules": {
            "amuse-01": [
                ":arg0",
                ":arg1",
                ":arg2",
                ":polarity"
            ]
        },
        "head": "amuse-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 :polarity :polarity XXX-VB myself :arg2",
        "tree_rules": [
            ":arg2",
            ":polarity",
            ":polarity",
            ":arg0"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :arg2/CC -)",
        "graph_rules": {
            "equal-01": [
                ":arg1",
                ":arg2"
            ]
        },
        "head": "equal-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":op1 :arg2 :op2 XXX-VB :arg1",
        "tree_rules": [
            ":arg2",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP -)",
        "graph_rules": {
            "raise-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "raise-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :arg1-of/VB - \n\t :time/SBAR -)",
        "graph_rules": {
            "disturb-01": [
                ":arg1",
                ":arg1-of",
                ":time"
            ]
        },
        "head": "disturb-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":duration :arg1-of been XXX-VB :arg1-of",
        "tree_rules": [
            ":arg1",
            ":time",
            ":arg1-of",
            ":arg1-of"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/IN - \n\t :arg2/RB -)",
        "graph_rules": {
            "be-temporally-at-91": [
                ":arg1",
                ":arg2"
            ]
        },
        "head": "be-temporally-at-91",
        "name": ":root",
        "noun_info": {},
        "tree": ":ord was :quant , XXX-WRB :time-of :arg3",
        "tree_rules": [
            ":arg2",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/VB - \n\t :op1 -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op1"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {
            "form": "list",
            "inPP": false,
            "number": "plural"
        },
        "tree": ":arg0 :op1 :arg1 , XXX-CC :arg0",
        "tree_rules": [
            ":op1",
            ":op1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP - \n\t :time/RB - \n\t :domain/E -)",
        "graph_rules": {
            "disturb-01": [
                ":arg0",
                ":arg1",
                ":time",
                ":domain"
            ]
        },
        "head": "disturb-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":ord , :quant :time , :arg1 was XXX-VB :ord :arg0",
        "tree_rules": [
            ":time",
            ":arg0",
            ":arg1",
            ":domain"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :degree/VB -)",
        "graph_rules": {
            "exercise-02": [
                ":arg0",
                ":degree"
            ]
        },
        "head": "exercise-02",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": ":arg0 :polarity :polarity :degree :degree XXX-NN",
        "tree_rules": [
            ":degree",
            ":degree",
            ":arg0"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP - \n\t :polarity/DT -)",
        "graph_rules": {
            "have-03": [
                ":arg0",
                ":arg1",
                ":polarity"
            ]
        },
        "head": "have-03",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1",
        "tree_rules": [
            ":polarity",
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :ord/. - \n\t :domain/VP -)",
        "graph_rules": {
            "disturb-01": [
                ":ord",
                ":domain"
            ]
        },
        "head": "disturb-01",
        "name": ":root",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": ":ord XXX-RB , :domain :domain :ord",
        "tree_rules": [
            ":domain",
            ":domain",
            ":ord",
            ":ord"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 was XXX-VB , then , :arg1",
        "tree_rules": [
            ":arg0",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :quant/NP -)",
        "graph_rules": {
            "amr-unknown": [
                ":quant"
            ]
        },
        "head": "amr-unknown",
        "name": ":root",
        "noun_info": {},
        "tree": ":quant XXX-.",
        "tree_rules": [
            ":quant"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/SBAR - \n\t :manner/ADVP -)",
        "graph_rules": {
            "realize-01": [
                ":arg0",
                ":arg1",
                ":manner"
            ]
        },
        "head": "realize-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 :manner XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0",
            ":manner"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":quant :op1 :arg1 , :arg0 XXX-VB , :arg1-of",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "fly",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "plural"
        },
        "tree": "XXX-NN",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/INTJ -)",
        "graph_rules": {
            "no": [
                ":mod"
            ]
        },
        "head": "no",
        "name": ":root",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": ":mod , XXX-DT",
        "tree_rules": [
            ":mod"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/NP - \n\t :arg0-of/ADJP -)",
        "graph_rules": {
            "object": [
                ":mod",
                ":arg0-of"
            ]
        },
        "head": "object",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "plural"
        },
        "tree": ":mod :arg0-of XXX-NN",
        "tree_rules": [
            ":arg0-of",
            ":mod"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "bee",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "plural"
        },
        "tree": "XXX-NN",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/INTJ -)",
        "graph_rules": {
            "no": [
                ":mod"
            ]
        },
        "head": "no",
        "name": ":root",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": ":mod , XXX-DT",
        "tree_rules": [
            ":mod"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/VP -)",
        "graph_rules": {
            "cause-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "cause-01",
        "name": ":root",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": ":arg0 XXX-WDT :consist-of :manner",
        "tree_rules": [
            ":arg0",
            ":arg1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/PP - \n\t :arg1/PP -)",
        "graph_rules": {
            "concern-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "concern-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , i am XXX-VB :arg0",
        "tree_rules": [
            ":arg0",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/DT - \n\t :purpose/VP - \n\t :duration/IN -)",
        "graph_rules": {
            "time": [
                ":polarity",
                ":purpose",
                ":duration"
            ]
        },
        "head": "time",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "there is :polarity XXX-NN :duration :manner",
        "tree_rules": [
            ":polarity",
            ":duration",
            ":purpose",
            ":duration"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "ah",
        "name": ":root",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": "XXX-RB",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg2/NP -)",
        "graph_rules": {
            "mean-01": [
                ":arg0",
                ":arg2"
            ]
        },
        "head": "mean-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg2",
        "tree_rules": [
            ":arg2",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "that-is-it-00",
        "name": ":root",
        "noun_info": {
            "form": "demonstrative",
            "inPP": false,
            "number": "singular"
        },
        "tree": "yes , XXX-DT 's it",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "star",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "plural"
        },
        "tree": "the XXX-NN",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VB -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg1 :arg3",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/NP -)",
        "graph_rules": {
            "have-quant-91": [
                ":arg2"
            ]
        },
        "head": "have-quant-91",
        "name": ":root",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": "five hundred and one million , six hundred twenty :arg2 XXX-CD one",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/E - \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "i am XXX-VB :arg0 :op2",
        "tree_rules": [
            ":op2",
            ":op1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VB -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg1 :arg3",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/. - \n\t :arg3/PP -)",
        "graph_rules": {
            "do-02": [
                ":arg0",
                ":arg1",
                ":arg3"
            ]
        },
        "head": "do-02",
        "name": ":root",
        "noun_info": {},
        "tree": "what do :arg0 XXX-VB :arg3 :arg1",
        "tree_rules": [
            ":arg3",
            ":arg0",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "yes",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-UH",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "nothing",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "XXX-NN",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/LS - \n\t :arg1/NP -)",
        "graph_rules": {
            "own-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "own-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP -)",
        "graph_rules": {
            "own-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "own-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "yes",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-UH",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :arg2",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/JJ - \n\t :arg2/VB -)",
        "graph_rules": {
            "contrast-01": [
                ":arg1",
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":polarity , they :arg2 XXX-RP",
        "tree_rules": [
            ":arg1",
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1-of/ADJP - \n\t :domain/NP -)",
        "graph_rules": {
            "matter": [
                ":arg1-of",
                ":domain"
            ]
        },
        "head": "matter",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": ":domain is :domain :arg1-of XXX-NN",
        "tree_rules": [
            ":domain",
            ":arg1-of",
            ":domain"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VB -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg1 :arg0 :arg1",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "cause-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "cause-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VB -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg1 :arg0 :arg1",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/SBAR - \n\t :condition/SBAR -)",
        "graph_rules": {
            "possible-01": [
                ":arg1",
                ":condition"
            ]
        },
        "head": "possible-01",
        "name": ":root",
        "noun_info": {},
        "tree": "it makes it XXX-JJ :arg1 , :condition",
        "tree_rules": [
            ":arg1",
            ":condition"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/E - \n\t :arg2 -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1",
                ":arg2"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":mod :arg0 , :arg0 XXX-VB :arg2",
        "tree_rules": [
            ":arg0",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/SBAR - \n\t :manner/. -)",
        "graph_rules": {
            "possible-01": [
                ":arg1",
                ":manner"
            ]
        },
        "head": "possible-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":manner is it XXX-JJ :arg0 :manner",
        "tree_rules": [
            ":arg1",
            ":manner",
            ":manner"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg2/SQ - \n\t :manner/ADVP -)",
        "graph_rules": {
            "retort-01": [
                ":arg0",
                ":arg2",
                ":manner"
            ]
        },
        "head": "retort-01",
        "name": ":root",
        "noun_info": {},
        "tree": "to whom :arg2 :arg1 :arg0 XXX-VB , :manner",
        "tree_rules": [
            ":arg2",
            ":manner",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :polarity/RB -)",
        "graph_rules": {
            "know-01": [
                ":arg0",
                ":polarity"
            ]
        },
        "head": "know-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 :polarity :polarity XXX-VB",
        "tree_rules": [
            ":polarity",
            ":polarity",
            ":arg0"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/NP -)",
        "graph_rules": {
            "belong-01": [
                ":arg1"
            ]
        },
        "head": "belong-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-IN :arg1",
        "tree_rules": [
            ":arg1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/PP - \n\t :arg1-of/IN -)",
        "graph_rules": {
            "belong-01": [
                ":arg0",
                ":arg1",
                ":arg1-of"
            ]
        },
        "head": "belong-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1 , :arg1-of :arg0",
        "tree_rules": [
            ":arg1-of",
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :domain/IN - \n\t :arg1-of/VP -)",
        "graph_rules": {
            "all": [
                ":domain",
                ":arg1-of"
            ]
        },
        "head": "all",
        "name": ":root",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": "is :domain XXX-DT that :arg1-of",
        "tree_rules": [
            ":arg1-of",
            ":domain"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "certain",
        "name": ":root",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": "XXX-RB",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0 - \n\t :arg1/VP - \n\t :condition/NP -)",
        "graph_rules": {
            "belong-01": [
                ":arg0",
                ":arg1",
                ":condition"
            ]
        },
        "head": "belong-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-WRB :condition , :condition :arg1",
        "tree_rules": [
            ":condition",
            ":condition",
            ":arg1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0 - \n\t :arg1/VP - \n\t :condition/S -)",
        "graph_rules": {
            "belong-01": [
                ":arg0",
                ":arg1",
                ":condition"
            ]
        },
        "head": "belong-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-WRB :condition , it :arg1",
        "tree_rules": [
            ":condition",
            ":arg1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/NP - \n\t :op2/E - \n\t :condition/SBAR -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2",
                ":condition"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": ":condition , :arg1 take XXX-RP :op1 it is yours",
        "tree_rules": [
            ":op1",
            ":condition",
            ":op2"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/S - \n\t :arg1/E - \n\t :arg1-of/PP -)",
        "graph_rules": {
            "cause-01": [
                ":arg0",
                ":arg1",
                ":arg1-of"
            ]
        },
        "head": "cause-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-RB :arg1-of i :arg1",
        "tree_rules": [
            ":arg1-of",
            ":arg0",
            ":arg1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/SQ -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC what :op2 :arg1",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg2/S -)",
        "graph_rules": {
            "reply-01": [
                ":arg0",
                ":arg2"
            ]
        },
        "head": "reply-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg2 , XXX-VB :arg0",
        "tree_rules": [
            ":arg2",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/VP - \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 :op1 XXX-CC :op2",
        "tree_rules": [
            ":op1",
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :domain/NP -)",
        "graph_rules": {
            "difficult": [
                ":domain"
            ]
        },
        "head": "difficult",
        "name": ":root",
        "noun_info": {},
        "tree": ":domain is XXX-JJ",
        "tree_rules": [
            ":domain"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :domain :arg2",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :mod/ADVP - \n\t :polarity/RB -)",
        "graph_rules": {
            "satisfy-01": [
                ":arg1",
                ":mod",
                ":polarity"
            ]
        },
        "head": "satisfy-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 was :mod :polarity XXX-JJ",
        "tree_rules": [
            ":polarity",
            ":mod",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/MD -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":condition , :arg0 XXX-VB , i :op2",
        "tree_rules": [
            ":arg0",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/CC - \n\t :condition/SBAR -)",
        "graph_rules": {
            "possible-01": [
                ":arg1",
                ":condition"
            ]
        },
        "head": "possible-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":condition , i XXX-MD :op2",
        "tree_rules": [
            ":arg1",
            ":condition"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg2/MD -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :arg1",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "no",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-DT",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/MD -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :arg1",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/IN - \n\t :arg2/. -)",
        "graph_rules": {
            "mean-01": [
                ":arg1",
                ":arg2"
            ]
        },
        "head": "mean-01",
        "name": ":root",
        "noun_info": {},
        "tree": "whatever does :arg1 XXX-VB :arg2",
        "tree_rules": [
            ":arg1",
            ":arg2"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/IN - \n\t :arg2/S -)",
        "graph_rules": {
            "mean-01": [
                ":arg1",
                ":arg2"
            ]
        },
        "head": "mean-01",
        "name": ":root",
        "noun_info": {},
        "tree": "that XXX-VB :arg1 :arg2",
        "tree_rules": [
            ":arg1",
            ":arg2"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/CC - \n\t :time/ADVP -)",
        "graph_rules": {
            "and": [
                ":op2",
                ":time"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :time :op2",
        "tree_rules": [
            ":op2",
            ":time"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {
            "form": "list",
            "inPP": false,
            "number": "plural"
        },
        "tree": "XXX-CC :domain :op2",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "think-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "think-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :domain/NP - \n\t :degree/RB -)",
        "graph_rules": {
            "poetry": [
                ":domain",
                ":degree"
            ]
        },
        "head": "poetry",
        "name": ":root",
        "noun_info": {},
        "tree": ":domain is :degree XXX-JJ",
        "tree_rules": [
            ":degree",
            ":domain"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :domain :arg2",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP -)",
        "graph_rules": {
            "have-03": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "have-03",
        "name": ":root",
        "noun_info": {},
        "tree": ":poss :topic , :arg0 XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S - \n\t :arg2/NP - \n\t :arg3/NP -)",
        "graph_rules": {
            "continue-02": [
                ":arg0",
                ":arg1",
                ":arg2",
                ":arg3"
            ]
        },
        "head": "continue-02",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , :arg0 XXX-VB :arg3 :arg3",
        "tree_rules": [
            ":arg3",
            ":arg2",
            ":arg3",
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/S - \n\t :arg1/NP -)",
        "graph_rules": {
            "cause-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "cause-01",
        "name": ":root",
        "noun_info": {
            "form": "",
            "inPP": true,
            "number": ""
        },
        "tree": ":op1 , :arg1 it is of :arg1 to :op2 , XXX-WDT :arg0",
        "tree_rules": [
            ":arg0",
            ":arg1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/PP -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg1 are :arg2 :arg0",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/S - \n\t :arg2/S -)",
        "graph_rules": {
            "contrast-01": [
                ":arg1",
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , XXX-CC :arg2",
        "tree_rules": [
            ":arg1",
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :op2",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/ADJP - \n\t :arg1-of/ADVP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1",
                ":arg1-of"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":domain , :arg0 XXX-VB :arg1-of , :arg0-of",
        "tree_rules": [
            ":arg1",
            ":arg1-of",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :mod/NP -)",
        "graph_rules": {
            "chapter": [
                ":mod"
            ]
        },
        "head": "chapter",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "XXX-NN :mod",
        "tree_rules": [
            ":mod"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :degree/RB - \n\t :domain/NP -)",
        "graph_rules": {
            "strange": [
                ":degree",
                ":domain"
            ]
        },
        "head": "strange",
        "name": ":root",
        "noun_info": {},
        "tree": ":domain was :degree XXX-JJ",
        "tree_rules": [
            ":degree",
            ":domain"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :compared-to/PP - \n\t :degree/E - \n\t :domain/NP -)",
        "graph_rules": {
            "small": [
                ":compared-to",
                ":degree",
                ":domain"
            ]
        },
        "head": "small",
        "name": ":root",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": ":domain was the XXX-JJS :compared-to",
        "tree_rules": [
            ":compared-to",
            ":domain",
            ":degree"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :arg1/NP -)",
        "graph_rules": {
            "possible-01": [
                ":polarity",
                ":arg1"
            ]
        },
        "head": "possible-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 was :polarity XXX-JJ :op2",
        "tree_rules": [
            ":arg1",
            ":polarity"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/S -)",
        "graph_rules": {
            "have-concession-91": [
                ":arg1"
            ]
        },
        "head": "have-concession-91",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg1 :arg1",
        "tree_rules": [
            ":arg1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/ADJP -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :domain is :polarity :arg2",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/VP -)",
        "graph_rules": {
            "cause-01": [
                ":arg0"
            ]
        },
        "head": "cause-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-IN :mod :arg1 :arg0",
        "tree_rules": [
            ":arg0"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0 - \n\t :arg1/NP - \n\t :arg1-of/IN -)",
        "graph_rules": {
            "light-04": [
                ":arg0",
                ":arg1",
                ":arg1-of"
            ]
        },
        "head": "light-04",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "plural"
        },
        "tree": "when he XXX-NN :arg1 , it is :arg1-of if :arg2",
        "tree_rules": [
            ":arg1",
            ":arg1-of"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/CC - \n\t :arg2/S - \n\t :time/SBAR -)",
        "graph_rules": {
            "send-02": [
                ":arg0",
                ":arg1",
                ":arg2",
                ":time"
            ]
        },
        "head": "send-02",
        "name": ":root",
        "noun_info": {},
        "tree": ":time , :arg0 XXX-VB :op2 :arg2",
        "tree_rules": [
            ":arg1",
            ":arg2",
            ":time",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1-of/JJ - \n\t :domain/NP -)",
        "graph_rules": {
            "occupation": [
                ":arg1-of",
                ":domain"
            ]
        },
        "head": "occupation",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": ":domain is :domain :arg1-of XXX-NN",
        "tree_rules": [
            ":domain",
            ":arg1-of",
            ":domain"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/IN -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :op2 :arg0 , it :arg1",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1-of/JJ -)",
        "graph_rules": {
            "morning": [
                ":arg1-of"
            ]
        },
        "head": "morning",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": ":arg1-of XXX-NN",
        "tree_rules": [
            ":arg1-of"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/. - \n\t :arg1/VP -)",
        "graph_rules": {
            "cause-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "cause-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-WRB have :arg0 :mod :arg1 :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/E - \n\t :arg2/S -)",
        "graph_rules": {
            "reply-01": [
                ":arg0",
                ":arg2"
            ]
        },
        "head": "reply-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg2 , XXX-VB :arg1",
        "tree_rules": [
            ":arg2",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1-of/NP -)",
        "graph_rules": {
            "morning": [
                ":arg1-of"
            ]
        },
        "head": "morning",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1-of XXX-NN",
        "tree_rules": [
            ":arg1-of"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/. -)",
        "graph_rules": {
            "order-01": [
                ":arg2"
            ]
        },
        "head": "order-01",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "plural"
        },
        "tree": "what are the XXX-NN :arg2",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP -)",
        "graph_rules": {
            "order-01": [
                ":arg2"
            ]
        },
        "head": "order-01",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "plural"
        },
        "tree": "the XXX-NN :arg2",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1-of/JJ -)",
        "graph_rules": {
            "evening": [
                ":arg1-of"
            ]
        },
        "head": "evening",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": ":arg1-of XXX-NN",
        "tree_rules": [
            ":arg1-of"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :op2",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/WHADVP -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg1 :arg0",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/E - \n\t :arg2/S -)",
        "graph_rules": {
            "reply-01": [
                ":arg0",
                ":arg2"
            ]
        },
        "head": "reply-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg2 , XXX-VB :arg1",
        "tree_rules": [
            ":arg2",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :domain/VP -)",
        "graph_rules": {
            "order": [
                ":domain"
            ]
        },
        "head": "order",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "plural"
        },
        "tree": "XXX-NN :domain",
        "tree_rules": [
            ":domain"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1-of/JJ -)",
        "graph_rules": {
            "morning": [
                ":arg1-of"
            ]
        },
        "head": "morning",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": ":arg1-of XXX-NN",
        "tree_rules": [
            ":arg1-of"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :op2",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP - \n\t :arg2/PP - \n\t :time/ADVP -)",
        "graph_rules": {
            "mop-01": [
                ":arg0",
                ":arg1",
                ":arg2",
                ":time"
            ]
        },
        "head": "mop-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":time :arg0 XXX-VB :arg1 :arg2",
        "tree_rules": [
            ":arg1",
            ":arg2",
            ":time",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP -)",
        "graph_rules": {
            "follow-02": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "follow-02",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :time/PP -)",
        "graph_rules": {
            "reasonable-02": [
                ":arg1",
                ":time"
            ]
        },
        "head": "reasonable-02",
        "name": ":root",
        "noun_info": {},
        "tree": ":time :arg1 was XXX-JJ",
        "tree_rules": [
            ":time",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/S - \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": ":op1 , XXX-CC :op2",
        "tree_rules": [
            ":op1",
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/CC -)",
        "graph_rules": {
            "have-03": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "have-03",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :op1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {
            "form": "list",
            "inPP": false,
            "number": "plural"
        },
        "tree": "XXX-CC :op2",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/E - \n\t :arg1/S -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :domain/NP -)",
        "graph_rules": {
            "tragedy": [
                ":domain"
            ]
        },
        "head": "tragedy",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": ":domain is the XXX-NN",
        "tree_rules": [
            ":domain"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/S - \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": ":op1 XXX-CC :op2",
        "tree_rules": [
            ":op1",
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/NP - \n\t :op2/S - \n\t :time/FRAG -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2",
                ":time"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": ":time :arg1 :time makes :arg3 , XXX-CC :op2",
        "tree_rules": [
            ":op1",
            ":time",
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :arg2/CC - \n\t :frequency/DT -)",
        "graph_rules": {
            "obligate-01": [
                ":arg1",
                ":arg2",
                ":frequency"
            ]
        },
        "head": "obligate-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg2 :arg1 XXX-VB :op1 :arg2 :op2",
        "tree_rules": [
            ":frequency",
            ":frequency",
            ":arg2",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :degree/RB - \n\t :domain/. -)",
        "graph_rules": {
            "funny": [
                ":degree",
                ":domain"
            ]
        },
        "head": "funny",
        "name": ":root",
        "noun_info": {},
        "tree": ":domain is :degree XXX-JJ :domain",
        "tree_rules": [
            ":degree",
            ":domain",
            ":domain"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :arg2/NP - \n\t :mod/RB - \n\t :location/SBAR -)",
        "graph_rules": {
            "last-01": [
                ":arg1",
                ":arg2",
                ":mod",
                ":location"
            ]
        },
        "head": "last-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 XXX-VB :arg2 , here :location",
        "tree_rules": [
            ":mod",
            ":arg2",
            ":location",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/E - \n\t :arg1/ADJP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":domain is :polarity :arg1 :degree :arg0-of XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/NP-TMP - \n\t :duration-of/VP -)",
        "graph_rules": {
            "pass-03": [
                ":arg1",
                ":duration-of"
            ]
        },
        "head": "pass-03",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-IN :duration-of :duration-of",
        "tree_rules": [
            ":arg1",
            ":duration-of",
            ":duration-of"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :quant c \n\t :unit (m / month))",
        "graph_rules": {},
        "head": "temporal-quantity",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "XXX-DT XXX-NN",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :unit (m / month) \n\t :quant c)",
        "graph_rules": {},
        "head": "temporal-quantity",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "yes , XXX-DT XXX-NN",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :unit (m / minute) \n\t :quant c)",
        "graph_rules": {},
        "head": "temporal-quantity",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "plural"
        },
        "tree": "XXX-CD XXX-NN",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :unit (d / day) \n\t :quant c)",
        "graph_rules": {},
        "head": "temporal-quantity",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "plural"
        },
        "tree": "XXX-CD XXX-NN",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1-of/JJ -)",
        "graph_rules": {
            "evening": [
                ":arg1-of"
            ]
        },
        "head": "evening",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": ":arg1-of XXX-NN",
        "tree_rules": [
            ":arg1-of"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :op2",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S - \n\t :time/SBAR -)",
        "graph_rules": {
            "feel-01": [
                ":arg0",
                ":arg1",
                ":time"
            ]
        },
        "head": "feel-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":time , he XXX-VB :arg1-of :arg1",
        "tree_rules": [
            ":arg0",
            ":arg1",
            ":time"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/S - \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": ":op1 XXX-CC :op2",
        "tree_rules": [
            ":op1",
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/MD -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":mod , :arg0 XXX-VB , i :arg1",
        "tree_rules": [
            ":arg0",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/VP -)",
        "graph_rules": {
            "cause-01": [
                ":arg0"
            ]
        },
        "head": "cause-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-IN it :arg0",
        "tree_rules": [
            ":arg0"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/PP -)",
        "graph_rules": {
            "go-on-25": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "go-on-25",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1 :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/VP - \n\t :purpose/TO -)",
        "graph_rules": {
            "need-01": [
                ":arg0",
                ":arg1",
                ":purpose"
            ]
        },
        "head": "need-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":time , :arg0 XXX-VB :mod :arg1",
        "tree_rules": [
            ":purpose",
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :time/SBAR - \n\t :arg0-of/RB -)",
        "graph_rules": {
            "walk-01": [
                ":arg0",
                ":time",
                ":arg0-of"
            ]
        },
        "head": "walk-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":time , :arg0 will XXX-VB and :arg1",
        "tree_rules": [
            ":time",
            ":arg0",
            ":arg0-of"
        ],
        "verb_info": {
            "tense": "simple future",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/VP - \n\t :time/PP -)",
        "graph_rules": {
            "love-01": [
                ":arg0",
                ":arg1",
                ":time"
            ]
        },
        "head": "love-01",
        "name": ":root",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": ":quant :mod :arg0 XXX-NN :time :arg1",
        "tree_rules": [
            ":time",
            ":arg0",
            ":arg1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1-of/NP -)",
        "graph_rules": {
            "morning": [
                ":arg1-of"
            ]
        },
        "head": "morning",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1-of XXX-NN",
        "tree_rules": [
            ":arg1-of"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :op2",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/PRN - \n\t :arg2 - \n\t :time/SBAR -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1",
                ":arg2",
                ":time"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":mod :arg1 , XXX-VB :arg0 :domain , :time",
        "tree_rules": [
            ":arg1",
            ":arg0",
            ":time"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/IN -)",
        "graph_rules": {
            "possible-01": [
                ":arg1"
            ]
        },
        "head": "possible-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-RB that is :arg1 :arg0",
        "tree_rules": [
            ":arg1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VP - \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 :op1 , XXX-CC :op2 :mod :arg2",
        "tree_rules": [
            ":op1",
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/ADJP -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :domain is :mod :arg2",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :poss/PP - \n\t :beneficiary/PP - \n\t :polarity/DT -)",
        "graph_rules": {
            "room": [
                ":poss",
                ":beneficiary",
                ":polarity"
            ]
        },
        "head": "room",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "there is :polarity XXX-NN :poss :beneficiary",
        "tree_rules": [
            ":polarity",
            ":poss",
            ":beneficiary"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :arg0/NP - \n\t :arg2/NP -)",
        "graph_rules": {
            "dare-01": [
                ":polarity",
                ":arg0",
                ":arg2"
            ]
        },
        "head": "dare-01",
        "name": ":root",
        "noun_info": {},
        "tree": "what :arg0 :polarity :polarity XXX-VB :arg2 was :frequency :arg3",
        "tree_rules": [
            ":arg2",
            ":polarity",
            ":polarity",
            ":arg0"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :mod/NP -)",
        "graph_rules": {
            "chapter": [
                ":mod"
            ]
        },
        "head": "chapter",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "XXX-NN :mod",
        "tree_rules": [
            ":mod"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :domain/E - \n\t :quant/JJ -)",
        "graph_rules": {
            "large": [
                ":domain",
                ":quant"
            ]
        },
        "head": "large",
        "name": ":root",
        "noun_info": {},
        "tree": ":op2 was :ord XXX-JJR :ord",
        "tree_rules": [
            ":quant",
            ":domain"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/PP - \n\t :arg1/NP -)",
        "graph_rules": {
            "inhabit-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "inhabit-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 was XXX-VB :arg0",
        "tree_rules": [
            ":arg0",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/INTJ - \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": ":op1 , :op2 XXX-.",
        "tree_rules": [
            ":op1",
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VP - \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 :op1 XXX-CC :op2",
        "tree_rules": [
            ":op1",
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/E - \n\t :op2/VB - \n\t :time/ADVP -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2",
                ":time"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 had :time :op2 :quant XXX-CC :mod :arg1",
        "tree_rules": [
            ":op2",
            ":time",
            ":op1"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/SQ - \n\t :arg2/PP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1",
                ":arg2"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": "where :arg1 :arg3 :arg0 XXX-VB :arg2",
        "tree_rules": [
            ":arg1",
            ":arg2",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/. -)",
        "graph_rules": {
            "do-02": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "do-02",
        "name": ":root",
        "noun_info": {},
        "tree": "what are :arg0 XXX-VB :arg1",
        "tree_rules": [
            ":arg0",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S - \n\t :arg2/PP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1",
                ":arg2"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , :arg0 XXX-VB :arg2",
        "tree_rules": [
            ":arg2",
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :domain/NP - \n\t :arg0-of/SBAR -)",
        "graph_rules": {
            "scholar": [
                ":domain",
                ":arg0-of"
            ]
        },
        "head": "scholar",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": ":domain is a XXX-NN :arg0-of",
        "tree_rules": [
            ":arg0-of",
            ":domain"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0-of/NP - \n\t :time/ADVP -)",
        "graph_rules": {
            "man": [
                ":arg0-of",
                ":time"
            ]
        },
        "head": "man",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": ":arg0-of :time is a XXX-NN :arg0-of",
        "tree_rules": [
            ":arg0-of",
            ":arg0-of",
            ":time"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/NP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :poss",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , :arg0 XXX-VB",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP -)",
        "graph_rules": {
            "have-03": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "have-03",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-VB :arg0 :arg1",
        "tree_rules": [
            ":arg0",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/MD -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "ah",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-RB",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP -)",
        "graph_rules": {
            "disappoint-01": [
                ":arg1"
            ]
        },
        "head": "disappoint-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 was XXX-VB",
        "tree_rules": [
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP -)",
        "graph_rules": {
            "have-03": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "have-03",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-VB :arg0 :arg1",
        "tree_rules": [
            ":arg0",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/MD -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/CC -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {
            "form": "list",
            "inPP": false,
            "number": "plural"
        },
        "tree": "XXX-CC :op3",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :arg1/VP - \n\t :mod/ADVP -)",
        "graph_rules": {
            "possible-01": [
                ":polarity",
                ":arg1",
                ":mod"
            ]
        },
        "head": "possible-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-MD :polarity :arg1",
        "tree_rules": [
            ":mod",
            ":polarity",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {
            "form": "list",
            "inPP": false,
            "number": "plural"
        },
        "tree": "XXX-CC :domain :arg2",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/ADVP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , :arg0 XXX-VB",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :arg0/NP - \n\t :arg1/JJ -)",
        "graph_rules": {
            "have-03": [
                ":polarity",
                ":arg0",
                ":arg1"
            ]
        },
        "head": "have-03",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :polarity :arg0-of",
        "tree_rules": [
            ":arg1",
            ":polarity",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :domain/NP - \n\t :arg0-of/VB -)",
        "graph_rules": {
            "person": [
                ":domain",
                ":arg0-of"
            ]
        },
        "head": "person",
        "name": ":root",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": ":domain is :polarity :domain who :arg0-of XXX-RP :purpose",
        "tree_rules": [
            ":arg0-of",
            ":domain",
            ":domain"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :domain/NP - \n\t :degree/RB -)",
        "graph_rules": {
            "important": [
                ":domain",
                ":degree"
            ]
        },
        "head": "important",
        "name": ":root",
        "noun_info": {},
        "tree": ":domain is :degree :degree XXX-JJ :arg1-of",
        "tree_rules": [
            ":degree",
            ":domain"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :arg0/NP - \n\t :arg1/NP -)",
        "graph_rules": {
            "leave-11": [
                ":polarity",
                ":arg0",
                ":arg1"
            ]
        },
        "head": "leave-11",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 :polarity :polarity XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":polarity",
            ":polarity",
            ":arg0"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :arg2",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/S - \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": ":op1 , XXX-CC :op2",
        "tree_rules": [
            ":op1",
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/NP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :condition :arg1-of :condition",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1-of/WHADVP -)",
        "graph_rules": {
            "that": [
                ":arg1-of"
            ]
        },
        "head": "that",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1-of is XXX-IN :arg0",
        "tree_rules": [
            ":arg1-of"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/SBAR -)",
        "graph_rules": {
            "cause-01": [
                ":arg1"
            ]
        },
        "head": "cause-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-IN :arg0 :condition-of",
        "tree_rules": [
            ":arg1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/SQ -)",
        "graph_rules": {
            "ask-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "ask-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1-of :arg1 :arg0 XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg2/RB - \n\t :arg0-of/IN -)",
        "graph_rules": {
            "see-01": [
                ":arg0",
                ":arg2",
                ":arg0-of"
            ]
        },
        "head": "see-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0-of :arg0 XXX-VB :arg2",
        "tree_rules": [
            ":arg0-of",
            ":arg0",
            ":arg2"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , XXX-VB :arg0",
        "tree_rules": [
            ":arg0",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/NP -)",
        "graph_rules": {
            "possible-01": [
                ":arg1"
            ]
        },
        "head": "possible-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 is XXX-JJ",
        "tree_rules": [
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :time/SBAR - \n\t :time -)",
        "graph_rules": {
            "order-01": [
                ":arg1",
                ":time",
                ":time"
            ]
        },
        "head": "order-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":time , :time , :arg1 is XXX-VB :arg1-of",
        "tree_rules": [
            ":time",
            ":time",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :purpose/S -)",
        "graph_rules": {
            "go-02": [
                ":arg0",
                ":purpose"
            ]
        },
        "head": "go-02",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :purpose",
        "tree_rules": [
            ":purpose",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "no",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-DT",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :degree/RB -)",
        "graph_rules": {
            "complicate-01": [
                ":arg1",
                ":degree"
            ]
        },
        "head": "complicate-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 would be :degree XXX-VB",
        "tree_rules": [
            ":degree",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :arg2",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/VP -)",
        "graph_rules": {
            "exemplify-01": [
                ":arg0"
            ]
        },
        "head": "exemplify-01",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": true,
            "number": "singular"
        },
        "tree": "for XXX-NN , :condition :arg1 , :arg0 :arg0",
        "tree_rules": [
            ":arg0"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :arg3/PP - \n\t :manner/ADVP -)",
        "graph_rules": {
            "stir-02": [
                ":arg1",
                ":arg3",
                ":manner"
            ]
        },
        "head": "stir-02",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 was :manner XXX-VB :arg3",
        "tree_rules": [
            ":arg3",
            ":manner",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {
            "form": "list",
            "inPP": false,
            "number": "plural"
        },
        "tree": "XXX-CC :arg1 you :arg2 :extent",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0-of/VP - \n\t :domain/NP -)",
        "graph_rules": {
            "person": [
                ":arg0-of",
                ":domain"
            ]
        },
        "head": "person",
        "name": ":root",
        "noun_info": {},
        "tree": ":domain :arg0-of XXX-.",
        "tree_rules": [
            ":domain",
            ":arg0-of"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP - \n\t :beneficiary/PP -)",
        "graph_rules": {
            "describe-01": [
                ":arg0",
                ":arg1",
                ":beneficiary"
            ]
        },
        "head": "describe-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 :source-of XXX-VB :arg1 :beneficiary",
        "tree_rules": [
            ":arg1",
            ":beneficiary",
            ":arg0"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC , :op1 , :arg0 :op2",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/E - \n\t :direction/PRT - \n\t :time/ADVP - \n\t :instrument/PP -)",
        "graph_rules": {
            "put-01": [
                ":arg1",
                ":direction",
                ":time",
                ":instrument"
            ]
        },
        "head": "put-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1-of are XXX-VB :direction :time :instrument",
        "tree_rules": [
            ":direction",
            ":time",
            ":instrument",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :time/IN - \n\t :time -)",
        "graph_rules": {
            "wait-01": [
                ":arg1",
                ":time",
                ":time"
            ]
        },
        "head": "wait-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 XXX-VB :time :op1",
        "tree_rules": [
            ":time",
            ":time",
            ":time",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :domain/NP - \n\t :degree/RB -)",
        "graph_rules": {
            "small": [
                ":domain",
                ":degree"
            ]
        },
        "head": "small",
        "name": ":root",
        "noun_info": {},
        "tree": ":domain is :mod :degree XXX-JJ",
        "tree_rules": [
            ":degree",
            ":domain"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP -)",
        "graph_rules": {
            "have-03": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "have-03",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/S - \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": ":op1 XXX-CC :op2",
        "tree_rules": [
            ":op1",
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :time :arg2",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP - \n\t :mod/RB -)",
        "graph_rules": {
            "have-03": [
                ":arg0",
                ":arg1",
                ":mod"
            ]
        },
        "head": "have-03",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1",
        "tree_rules": [
            ":mod",
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/JJ -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":polarity , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1-of/WHADVP -)",
        "graph_rules": {
            "that": [
                ":arg1-of"
            ]
        },
        "head": "that",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1-of is XXX-IN :arg0",
        "tree_rules": [
            ":arg1-of"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , XXX-VB :arg0",
        "tree_rules": [
            ":arg0",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/VP - \n\t :arg2/. -)",
        "graph_rules": {
            "mean-01": [
                ":arg1",
                ":arg2"
            ]
        },
        "head": "mean-01",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "what does that XXX-NN :arg1 :arg2",
        "tree_rules": [
            ":arg1",
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 , XXX-VB :domain , are :arg1 , :arg1-of :arg2 , are :degree :arg0-of :arg0-of :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :arg2/ADJP - \n\t :time/ADVP - \n\t :polarity/E -)",
        "graph_rules": {
            "become-01": [
                ":arg1",
                ":arg2",
                ":time",
                ":polarity"
            ]
        },
        "head": "become-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 :time XXX-VB :mod :arg2",
        "tree_rules": [
            ":arg2",
            ":arg1",
            ":time",
            ":polarity"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/PRP$ - \n\t :arg1-of/IN -)",
        "graph_rules": {
            "change-01": [
                ":arg0",
                ":arg1",
                ":arg1-of"
            ]
        },
        "head": "change-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":degree is :degree :arg1-of :arg1-of :arg0 XXX-VB :arg2-of",
        "tree_rules": [
            ":arg1-of",
            ":arg1",
            ":arg0",
            ":arg1-of"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1 - \n\t :arg2/PP - \n\t :arg1-of/IN -)",
        "graph_rules": {
            "empty-01": [
                ":arg0",
                ":arg1",
                ":arg2",
                ":arg1-of"
            ]
        },
        "head": "empty-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":degree is :degree :arg1-of :arg1-of :arg0 XXX-VB :poss",
        "tree_rules": [
            ":arg1-of",
            ":arg2",
            ":arg0",
            ":arg1-of"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/PP -)",
        "graph_rules": {
            "write-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "write-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg2/CC -)",
        "graph_rules": {
            "interrupt-01": [
                ":arg0",
                ":arg2"
            ]
        },
        "head": "interrupt-01",
        "name": ":root",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": ":arg2 :arg1 :arg0 XXX-JJ",
        "tree_rules": [
            ":arg0",
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/VP - \n\t :arg2/. -)",
        "graph_rules": {
            "mean-01": [
                ":arg1",
                ":arg2"
            ]
        },
        "head": "mean-01",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "what does that XXX-NN :arg1 :arg2",
        "tree_rules": [
            ":arg1",
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :domain/PP -)",
        "graph_rules": {
            "mountain": [
                ":domain"
            ]
        },
        "head": "mountain",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": ":domain is the XXX-NN",
        "tree_rules": [
            ":domain"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :polarity/RB -)",
        "graph_rules": {
            "change-01": [
                ":arg1",
                ":polarity"
            ]
        },
        "head": "change-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 :polarity :polarity XXX-VB",
        "tree_rules": [
            ":polarity",
            ":polarity",
            ":arg1"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/CC -)",
        "graph_rules": {
            "repeat-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "repeat-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 :arg2 :arg1 XXX-VB :arg0 , :time he :op1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :arg2/E -)",
        "graph_rules": {
            "mean-01": [
                ":arg1",
                ":arg2"
            ]
        },
        "head": "mean-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 XXX-VB , ' which :arg1-of '",
        "tree_rules": [
            ":arg1",
            ":arg2"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :arg1-of/IN -)",
        "graph_rules": {
            "endanger-01": [
                ":arg1",
                ":arg1-of"
            ]
        },
        "head": "endanger-01",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": true,
            "number": "singular"
        },
        "tree": "is :arg1 in XXX-NN :arg1-of :arg0",
        "tree_rules": [
            ":arg1-of",
            ":arg1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :domain/PRP -)",
        "graph_rules": {
            "certain": [
                ":domain"
            ]
        },
        "head": "certain",
        "name": ":root",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": "XXX-RB :domain is",
        "tree_rules": [
            ":domain"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/CC - \n\t :arg2 -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1",
                ":arg2"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":op1 , :arg0 XXX-VB :arg2-of , :arg1 :op2",
        "tree_rules": [
            ":arg0",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :domain/NP - \n\t :mod/PP - \n\t :ord/JJ - \n\t :poss/PRP$ -)",
        "graph_rules": {
            "moment": [
                ":domain",
                ":mod",
                ":ord",
                ":poss"
            ]
        },
        "head": "moment",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": ":domain was :poss :ord XXX-NN :mod",
        "tree_rules": [
            ":poss",
            ":ord",
            ":mod",
            ":domain"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :arg2",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "ask-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "ask-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":domain :arg1 would :arg0 :arg1 :arg0 XXX-VB",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg2/E -)",
        "graph_rules": {
            "reply-01": [
                ":arg0",
                ":arg2"
            ]
        },
        "head": "reply-01",
        "name": ":root",
        "noun_info": {},
        "tree": "the planet earth , XXX-VB :arg0",
        "tree_rules": [
            ":arg0",
            ":arg2"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP -)",
        "graph_rules": {
            "have-03": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "have-03",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/E -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :op1",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/NP -)",
        "graph_rules": {
            "chapter": [
                ":mod"
            ]
        },
        "head": "chapter",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "XXX-NN :mod",
        "tree_rules": [
            ":mod"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :ord/JJ - \n\t :domain/E - \n\t :arg1-of/RB -)",
        "graph_rules": {
            "planet": [
                ":ord",
                ":domain",
                ":arg1-of"
            ]
        },
        "head": "planet",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": ":arg1-of then the :ord XXX-NN was the earth",
        "tree_rules": [
            ":ord",
            ":arg1-of",
            ":domain"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/JJ - \n\t :domain/NP -)",
        "graph_rules": {
            "planet": [
                ":mod",
                ":domain"
            ]
        },
        "head": "planet",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": ":domain is :polarity :mod an :mod XXX-NN",
        "tree_rules": [
            ":mod",
            ":domain"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP - \n\t :condition/S -)",
        "graph_rules": {
            "make-01": [
                ":arg0",
                ":arg1",
                ":condition"
            ]
        },
        "head": "make-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":condition , :arg0 would XXX-VB :arg1",
        "tree_rules": [
            ":condition",
            ":arg1",
            ":condition",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/NP -)",
        "graph_rules": {
            "regulate-01": [
                ":arg1"
            ]
        },
        "head": "regulate-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 would be XXX-VB :arg1-of :arg2",
        "tree_rules": [
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/PRT - \n\t :purpose/S - \n\t :time/ADVP -)",
        "graph_rules": {
            "go-02": [
                ":arg0",
                ":purpose",
                ":time"
            ]
        },
        "head": "go-02",
        "name": ":root",
        "noun_info": {},
        "tree": ":op1 , these would XXX-VB :arg0 :purpose",
        "tree_rules": [
            ":time",
            ":arg0",
            ":purpose"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/NP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :time would :arg0 :polarity",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :domain/NP -)",
        "graph_rules": {
            "magnificent": [
                ":domain"
            ]
        },
        "head": "magnificent",
        "name": ":root",
        "noun_info": {},
        "tree": ":domain would be XXX-JJ",
        "tree_rules": [
            ":domain"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :mod/NP -)",
        "graph_rules": {
            "chapter": [
                ":mod"
            ]
        },
        "head": "chapter",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "XXX-NN :mod",
        "tree_rules": [
            ":mod"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0 - \n\t :arg1/IN - \n\t :time/SBAR - \n\t :degree/NP - \n\t :frequency/NP -)",
        "graph_rules": {
            "wander-01": [
                ":arg0",
                ":arg1",
                ":time",
                ":degree",
                ":frequency"
            ]
        },
        "head": "wander-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":time , :frequency :frequency XXX-VB :degree :arg1 :op1",
        "tree_rules": [
            ":arg1",
            ":frequency",
            ":degree",
            ":time",
            ":frequency"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/WHNP - \n\t :degree/RB -)",
        "graph_rules": {
            "honest-01": [
                ":arg0",
                ":arg1",
                ":degree"
            ]
        },
        "head": "honest-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 have :polarity been :degree XXX-JJ in :arg1 :arg1-of",
        "tree_rules": [
            ":arg1",
            ":degree",
            ":arg0"
        ],
        "verb_info": {
            "tense": "present perfect",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :op2",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP -)",
        "graph_rules": {
            "occupy-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "occupy-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/VP -)",
        "graph_rules": {
            "possible-01": [
                ":arg1"
            ]
        },
        "head": "possible-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 XXX-MD :arg1",
        "tree_rules": [
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :arg0/NP - \n\t :arg1/NP - \n\t :time/SBAR - \n\t :arg1-of/S -)",
        "graph_rules": {
            "believe-01": [
                ":polarity",
                ":arg0",
                ":arg1",
                ":time",
                ":arg1-of"
            ]
        },
        "head": "believe-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 , :arg1-of , will :polarity XXX-VB :arg1 :time",
        "tree_rules": [
            ":arg1",
            ":time",
            ":polarity",
            ":arg0",
            ":arg1-of"
        ],
        "verb_info": {
            "tense": "simple future",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/SBAR -)",
        "graph_rules": {
            "imagine-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "imagine-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/ADJP -)",
        "graph_rules": {
            "fancy-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "fancy-01",
        "name": ":root",
        "noun_info": {},
        "tree": "they XXX-JJ :arg0 :compared-to",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/VP - \n\t :arg2 -)",
        "graph_rules": {
            "recommend-01": [
                ":arg1",
                ":arg2"
            ]
        },
        "head": "recommend-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-MD :arg1",
        "tree_rules": [
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/S - \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": ":op1 , XXX-CC :op2",
        "tree_rules": [
            ":op1",
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg2",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/S - \n\t :arg2/PP - \n\t :arg1-of/S -)",
        "graph_rules": {
            "trust-01": [
                ":arg0",
                ":arg2",
                ":arg1-of"
            ]
        },
        "head": "trust-01",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": ":arg0 , :arg1-of , XXX-NN :arg2",
        "tree_rules": [
            ":arg2",
            ":arg0",
            ":arg1-of"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/S - \n\t :arg1/NP - \n\t :degree/ADVP - \n\t :time/SBAR -)",
        "graph_rules": {
            "surprise-01": [
                ":arg0",
                ":arg1",
                ":degree",
                ":time"
            ]
        },
        "head": "surprise-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":time , he was :degree XXX-JJ :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0",
            ":degree",
            ":time"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NN - \n\t :manner/ADVP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1",
                ":manner"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1-of , XXX-VB :arg0 :manner",
        "tree_rules": [
            ":arg1",
            ":arg0",
            ":manner"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/ADVP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "ah",
        "name": ":root",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": "XXX-RB",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/VP - \n\t :location/PP -)",
        "graph_rules": {
            "person": [
                ":polarity",
                ":location"
            ]
        },
        "head": "person",
        "name": ":root",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": "then XXX-EX :polarity",
        "tree_rules": [
            ":location",
            ":polarity"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :domain/NP -)",
        "graph_rules": {
            "desert": [
                ":domain"
            ]
        },
        "head": "desert",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": ":domain is the XXX-NN",
        "tree_rules": [
            ":domain"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/DT - \n\t :location/PP -)",
        "graph_rules": {
            "person": [
                ":polarity",
                ":location"
            ]
        },
        "head": "person",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "plural"
        },
        "tree": "there are :polarity XXX-NN :location",
        "tree_rules": [
            ":polarity",
            ":location"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/VP - \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 :op1 , XXX-CC :op2",
        "tree_rules": [
            ":op1",
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/ADVP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": "i :arg1 , :arg0 XXX-VB , :arg1 :location :purpose :arg0 :purpose",
        "tree_rules": [
            ":arg0",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0 - \n\t :arg1/PP -)",
        "graph_rules": {
            "look-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "look-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-VB :arg1",
        "tree_rules": [
            ":arg1"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/E - \n\t :arg2/RB -)",
        "graph_rules": {
            "be-located-at-91": [
                ":arg1",
                ":arg2"
            ]
        },
        "head": "be-located-at-91",
        "name": ":root",
        "noun_info": {
            "form": "pronoun",
            "inPP": false,
            "number": "singular"
        },
        "tree": "XXX-PRP is :mod :arg2 :direction :op1",
        "tree_rules": [
            ":arg2",
            ":arg1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/RB -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :direction :arg2 :direction :domain is :degree",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , :arg0 XXX-VB",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/. - \n\t :arg1/NP - \n\t :arg2/ADVP -)",
        "graph_rules": {
            "bring-01": [
                ":arg0",
                ":arg1",
                ":arg2"
            ]
        },
        "head": "bring-01",
        "name": ":root",
        "noun_info": {},
        "tree": "what has XXX-VB :arg1 :arg2 :arg0",
        "tree_rules": [
            ":arg1",
            ":arg2",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/VB -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :domain :op2",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VB - \n\t :op2/WHADVP -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": ":op2 :arg1 :arg2 :arg0 :op1 XXX-RP :arg1 :mod",
        "tree_rules": [
            ":op2",
            ":op1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :domain/NP - \n\t :degree/NP -)",
        "graph_rules": {
            "lonely": [
                ":domain",
                ":degree"
            ]
        },
        "head": "lonely",
        "name": ":root",
        "noun_info": {},
        "tree": ":domain is :degree XXX-JJ :domain :arg2",
        "tree_rules": [
            ":domain",
            ":degree",
            ":domain"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/ADJP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":domain , :arg0 XXX-VB",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/PP - \n\t :arg1-of/PP -)",
        "graph_rules": {
            "gaze-01": [
                ":arg0",
                ":arg1",
                ":arg1-of"
            ]
        },
        "head": "gaze-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1 :arg1-of",
        "tree_rules": [
            ":arg1",
            ":arg1-of",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S - \n\t :time/PP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1",
                ":time"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , :arg0 XXX-VB :time",
        "tree_rules": [
            ":time",
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(t / thick-03 \n\t :arg1/NP - \n\t :degree (m / more \n\t\t :polarity/DT -) \n\t :compared-to/PP -)",
        "graph_rules": {
            "more": [
                ":polarity"
            ],
            "thick-03": [
                ":arg1",
                ":compared-to"
            ]
        },
        "head": "thick-03/more",
        "name": ":root",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": ":arg1 are :polarity XXX-JJR :compared-to",
        "tree_rules": [
            ":polarity",
            ":compared-to",
            ":arg1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/CC -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg2 , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP -)",
        "graph_rules": {
            "smile-01": [
                ":arg0"
            ]
        },
        "head": "smile-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB",
        "tree_rules": [
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :degree/RB -)",
        "graph_rules": {
            "powerful-02": [
                ":arg1",
                ":degree"
            ]
        },
        "head": "powerful-02",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 are :polarity :degree XXX-JJ",
        "tree_rules": [
            ":degree",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :arg0/NP - \n\t :arg1/NP - \n\t :mod/ADVP -)",
        "graph_rules": {
            "have-03": [
                ":polarity",
                ":arg0",
                ":arg1",
                ":mod"
            ]
        },
        "head": "have-03",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :polarity :mod :arg1",
        "tree_rules": [
            ":polarity",
            ":mod",
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :arg1/FRAG - \n\t :mod/VP -)",
        "graph_rules": {
            "possible-01": [
                ":polarity",
                ":arg1",
                ":mod"
            ]
        },
        "head": "possible-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-MD :polarity :mod",
        "tree_rules": [
            ":arg1",
            ":polarity",
            ":mod"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/MD -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1 - \n\t :arg2/NP - \n\t :manner/IN -)",
        "graph_rules": {
            "twine-01": [
                ":arg0",
                ":arg1",
                ":arg2",
                ":manner"
            ]
        },
        "head": "twine-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB himself :consist-of :arg2 , :manner :arg2",
        "tree_rules": [
            ":arg2",
            ":manner",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S - \n\t :mod/ADVP -)",
        "graph_rules": {
            "speak-01": [
                ":arg0",
                ":arg1",
                ":mod"
            ]
        },
        "head": "speak-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , :arg0 XXX-VB :mod",
        "tree_rules": [
            ":mod",
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg2/NP -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg1 :op2 , :arg2 :op2",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :polarity/VB -)",
        "graph_rules": {
            "reply-01": [
                ":arg0",
                ":polarity"
            ]
        },
        "head": "reply-01",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": ":arg0 :polarity :polarity XXX-NN",
        "tree_rules": [
            ":polarity",
            ":polarity",
            ":arg0"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/VP - \n\t :condition/SBAR -)",
        "graph_rules": {
            "possible-01": [
                ":arg1",
                ":condition"
            ]
        },
        "head": "possible-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-MD :arg1",
        "tree_rules": [
            ":condition",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "oh",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-UH",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg2/SQ -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :purpose :arg2 :purpose",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :domain :op2",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/NP -)",
        "graph_rules": {
            "chapter": [
                ":mod"
            ]
        },
        "head": "chapter",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "XXX-NN :mod",
        "tree_rules": [
            ":mod"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VP - \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 :op1 XXX-CC :op2",
        "tree_rules": [
            ":op1",
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0-of/DT - \n\t :mod/PP - \n\t :domain/NP -)",
        "graph_rules": {
            "flower": [
                ":arg0-of",
                ":mod",
                ":domain"
            ]
        },
        "head": "flower",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": ":domain was :arg0-of XXX-NN :mod",
        "tree_rules": [
            ":arg0-of",
            ":mod",
            ":domain"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NN -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1-of , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NN -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1-of , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/WHADVP - \n\t :manner/ADVP -)",
        "graph_rules": {
            "ask-01": [
                ":arg0",
                ":arg1",
                ":manner"
            ]
        },
        "head": "ask-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 :arg1 :arg2 :arg0 XXX-VB , :manner",
        "tree_rules": [
            ":arg1",
            ":manner",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :frequency/ADVP - \n\t :arg0/NP - \n\t :arg1/NP -)",
        "graph_rules": {
            "see-01": [
                ":frequency",
                ":arg0",
                ":arg1"
            ]
        },
        "head": "see-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 had :frequency XXX-VB :arg1",
        "tree_rules": [
            ":frequency",
            ":arg1",
            ":frequency",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/PP -)",
        "graph_rules": {
            "think-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "think-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB there are :op1 :quant :op2 :arg1 :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP - \n\t :time/RB -)",
        "graph_rules": {
            "see-01": [
                ":arg0",
                ":arg1",
                ":time"
            ]
        },
        "head": "see-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1 , :op1 :time",
        "tree_rules": [
            ":time",
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg1-of :time :arg2",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP-TMP - \n\t :direction/ADVP -)",
        "graph_rules": {
            "blow-01": [
                ":arg0",
                ":arg1",
                ":direction"
            ]
        },
        "head": "blow-01",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "plural"
        },
        "tree": ":arg0 XXX-NN :arg1",
        "tree_rules": [
            ":direction",
            ":arg1",
            ":arg0"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VB - \n\t :op2/SBAR -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {
            "form": "list",
            "inPP": false,
            "number": "plural"
        },
        "tree": ":arg0 :op1 :arg1 , XXX-CC :op2",
        "tree_rules": [
            ":op2",
            ":op1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/ADVP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/ADVP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :mod/NP -)",
        "graph_rules": {
            "chapter": [
                ":mod"
            ]
        },
        "head": "chapter",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "XXX-NN :mod",
        "tree_rules": [
            ":mod"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP - \n\t :time/IN -)",
        "graph_rules": {
            "climb-01": [
                ":arg0",
                ":arg1",
                ":time"
            ]
        },
        "head": "climb-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":time :op1 , :arg0 XXX-VB :arg1",
        "tree_rules": [
            ":time",
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :quant/CD - \n\t :domain/NP - \n\t :arg1-of/SBAR -)",
        "graph_rules": {
            "volcano": [
                ":quant",
                ":domain",
                ":arg1-of"
            ]
        },
        "head": "volcano",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "plural"
        },
        "tree": ":domain were the :quant XXX-NN , :arg1-of",
        "tree_rules": [
            ":quant",
            ":arg1-of",
            ":domain"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :op2",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/VP - \n\t :arg2 -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1",
                ":arg2"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":source :compared-to :arg1-of , :arg0 XXX-VB to himself , i :arg1",
        "tree_rules": [
            ":arg0",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :arg2",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NN - \n\t :manner/ADVP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1",
                ":manner"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1-of , :arg0 XXX-VB :manner",
        "tree_rules": [
            ":arg1",
            ":manner",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/SBAR - \n\t :arg1/NP-TMP -)",
        "graph_rules": {
            "answer-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "answer-01",
        "name": ":root",
        "noun_info": {},
        "tree": "good morning :arg1-of :arg1 , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0 - \n\t :arg1/E - \n\t :arg2/NN -)",
        "graph_rules": {
            "have-rel-role-91": [
                ":arg0",
                ":arg1",
                ":arg2"
            ]
        },
        "head": "have-rel-role-91",
        "name": ":root",
        "noun_info": {
            "form": "possessive pronoun",
            "inPP": false,
            "number": "singular"
        },
        "tree": "be XXX-PRP$ :arg2",
        "tree_rules": [
            ":arg2",
            ":arg1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/RB -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": "i am :degree :arg1 , :arg0 XXX-VB",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/SBAR - \n\t :arg2/ADVP -)",
        "graph_rules": {
            "answer-01": [
                ":arg0",
                ":arg2"
            ]
        },
        "head": "answer-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":domain am all :mod , XXX-VB :arg0",
        "tree_rules": [
            ":arg2",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/ADJP - \n\t :op2/VP - \n\t :op3/CC -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2",
                ":op3"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 is :op1 , XXX-CC :op2 , and :op1 :op3 :op2",
        "tree_rules": [
            ":op2",
            ":op3",
            ":op1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :op2",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/WHNP -)",
        "graph_rules": {
            "repeat-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "repeat-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1 :arg1-of",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP - \n\t :location/PP -)",
        "graph_rules": {
            "have-03": [
                ":arg0",
                ":arg1",
                ":location"
            ]
        },
        "head": "have-03",
        "name": ":root",
        "noun_info": {},
        "tree": ":location :arg0 XXX-VB :arg1 :time",
        "tree_rules": [
            ":arg1",
            ":location",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :mod/NP -)",
        "graph_rules": {
            "chapter": [
                ":mod"
            ]
        },
        "head": "chapter",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "XXX-NN :mod",
        "tree_rules": [
            ":mod"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC it :arg2",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :op2",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NN -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1-of , :arg0 XXX-VB",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :arg2/IN -)",
        "graph_rules": {
            "stand-01": [
                ":arg1",
                ":arg2"
            ]
        },
        "head": "stand-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 was XXX-VB :arg2 :location-of",
        "tree_rules": [
            ":arg2",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NN -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1-of , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/PP -)",
        "graph_rules": {
            "gaze-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "gaze-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/PP -)",
        "graph_rules": {
            "look-02": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "look-02",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 :mod XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , :arg0 XXX-VB",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg1 :op2",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/SBAR - \n\t :arg2 -)",
        "graph_rules": {
            "tell-01": [
                ":arg0",
                ":arg1",
                ":arg2"
            ]
        },
        "head": "tell-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 had XXX-VB :poss :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/PP -)",
        "graph_rules": {
            "and": [
                ":op1"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :quant , :mod :arg1-of , :location",
        "tree_rules": [
            ":op1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/CC - \n\t :arg2 -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1",
                ":arg2"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":op1 , :arg0 XXX-VB to himself , :condition",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP - \n\t :arg1-of/IN -)",
        "graph_rules": {
            "and": [
                ":op2",
                ":arg1-of"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC i :op2 :arg0",
        "tree_rules": [
            ":op2",
            ":arg1-of"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :arg0/CC - \n\t :arg1/NP -)",
        "graph_rules": {
            "make-02": [
                ":polarity",
                ":arg0",
                ":arg1"
            ]
        },
        "head": "make-02",
        "name": ":root",
        "noun_info": {},
        "tree": ":quant that :polarity :polarity XXX-VB :domain :arg1",
        "tree_rules": [
            ":arg0",
            ":arg1",
            ":polarity",
            ":polarity"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/CC -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg1 :op2",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/NP -)",
        "graph_rules": {
            "chapter": [
                ":mod"
            ]
        },
        "head": "chapter",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "XXX-NN :mod",
        "tree_rules": [
            ":mod"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :time/ADVP -)",
        "graph_rules": {
            "appear-01": [
                ":arg1",
                ":time"
            ]
        },
        "head": "appear-01",
        "name": ":root",
        "noun_info": {},
        "tree": "it was :time that :arg1 XXX-VB",
        "tree_rules": [
            ":arg1",
            ":time"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NN -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1-of , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg2/ADVP - \n\t :manner/ADVP - \n\t :concession/VP -)",
        "graph_rules": {
            "respond-01": [
                ":arg0",
                ":arg2",
                ":manner",
                ":concession"
            ]
        },
        "head": "respond-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1-of :arg2 , :arg0 XXX-VB :manner , :concession :time :time he :concession",
        "tree_rules": [
            ":concession",
            ":manner",
            ":arg0",
            ":arg2",
            ":concession"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 :location , :arg0 XXX-VB , :location :op1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/CC -)",
        "graph_rules": {
            "propose-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "propose-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":op1 :arg1 :op2 , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity - \n\t :arg1/NP - \n\t :mod/RB -)",
        "graph_rules": {
            "happy-01": [
                ":polarity",
                ":arg1",
                ":mod"
            ]
        },
        "head": "happy-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 am :mod XXX-JJ",
        "tree_rules": [
            ":mod",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/MD -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , :arg0 XXX-VB",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :polarity/RB -)",
        "graph_rules": {
            "tame-01": [
                ":arg1",
                ":polarity"
            ]
        },
        "head": "tame-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 am :polarity XXX-VB",
        "tree_rules": [
            ":polarity",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "ah",
        "name": ":root",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": "XXX-RB",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":polite , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg2/S -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC , :time :op1 , :arg2 :arg1 :arg2",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/. -)",
        "graph_rules": {
            "look-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "look-01",
        "name": ":root",
        "noun_info": {},
        "tree": "what is it that :arg0 are XXX-VB for :arg1",
        "tree_rules": [
            ":arg0",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/VP - \n\t :arg2/. -)",
        "graph_rules": {
            "mean-01": [
                ":arg1",
                ":arg2"
            ]
        },
        "head": "mean-01",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "what does that XXX-NN :arg1 :arg2",
        "tree_rules": [
            ":arg1",
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/ADVP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/VB - \n\t :op2/NP -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {
            "form": "list",
            "inPP": false,
            "number": "plural"
        },
        "tree": ":arg0 :op1 :arg1 , XXX-CC :op2",
        "tree_rules": [
            ":op2",
            ":op1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :degree/RB -)",
        "graph_rules": {
            "disturb-01": [
                ":arg0",
                ":degree"
            ]
        },
        "head": "disturb-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 is :degree XXX-JJ",
        "tree_rules": [
            ":degree",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP - \n\t :mod/ADVP -)",
        "graph_rules": {
            "raise-03": [
                ":arg0",
                ":arg1",
                ":mod"
            ]
        },
        "head": "raise-03",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 :mod XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0",
            ":mod"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/PRP$ - \n\t :mod/JJ -)",
        "graph_rules": {
            "interest-01": [
                ":arg0",
                ":arg1",
                ":mod"
            ]
        },
        "head": "interest-01",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "plural"
        },
        "tree": ":arg0 are :arg1 :mod XXX-NN",
        "tree_rules": [
            ":arg1",
            ":mod",
            ":arg0"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/PP -)",
        "graph_rules": {
            "look-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "look-01",
        "name": ":root",
        "noun_info": {},
        "tree": "are :arg0 XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/ADVP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/IN -)",
        "graph_rules": {
            "look-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "look-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 am XXX-VB :arg1 :arg2",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/VP - \n\t :arg2/. -)",
        "graph_rules": {
            "mean-01": [
                ":arg1",
                ":arg2"
            ]
        },
        "head": "mean-01",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "what does that XXX-NN :arg1 :arg2",
        "tree_rules": [
            ":arg1",
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :arg2/S -)",
        "graph_rules": {
            "mean-01": [
                ":arg1",
                ":arg2"
            ]
        },
        "head": "mean-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 XXX-VB :arg2",
        "tree_rules": [
            ":arg2",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/NP -)",
        "graph_rules": {
            "establish-01": [
                ":arg1"
            ]
        },
        "head": "establish-01",
        "name": ":root",
        "noun_info": {},
        "tree": "' to XXX-VB :arg1",
        "tree_rules": [
            ":arg1"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":mod :arg1 , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP -)",
        "graph_rules": {
            "opine-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "opine-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-TO :arg0 , :domain are :mod :mod",
        "tree_rules": [
            ":arg0",
            ":arg1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :op2",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC you , :arg0 , :op2",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/E -)",
        "graph_rules": {
            "opine-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "opine-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-TO :arg0 , :domain :mod",
        "tree_rules": [
            ":arg0",
            ":arg1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :condition :arg0 , then :arg0 :arg2",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/VP -)",
        "graph_rules": {
            "opine-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "opine-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-TO :arg0 , :domain :arg1",
        "tree_rules": [
            ":arg0",
            ":arg1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "opine-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "opine-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-TO :arg0 , :arg1",
        "tree_rules": [
            ":arg0",
            ":arg1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "flower",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "there is a XXX-NN",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/LS - \n\t :arg1/VP -)",
        "graph_rules": {
            "think-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "think-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg0 :arg1",
        "tree_rules": [
            ":arg0",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/ADVP - \n\t :arg1/PP - \n\t :location/NP -)",
        "graph_rules": {
            "see-01": [
                ":arg0",
                ":arg1",
                ":location"
            ]
        },
        "head": "see-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":location :arg0 XXX-VB :mod",
        "tree_rules": [
            ":arg1",
            ":arg0",
            ":location"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/CC -)",
        "graph_rules": {
            "seem-01": [
                ":arg1"
            ]
        },
        "head": "seem-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 XXX-VB :op1 , :arg1 :op2",
        "tree_rules": [
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg2/NP -)",
        "graph_rules": {
            "be-located-at-91": [
                ":arg2"
            ]
        },
        "head": "be-located-at-91",
        "name": ":root",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": "XXX-IN :arg2",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "yes",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-UH",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0-of/NP - \n\t :location/PP -)",
        "graph_rules": {
            "person": [
                ":arg0-of",
                ":location"
            ]
        },
        "head": "person",
        "name": ":root",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": "are XXX-EX :arg0-of :location",
        "tree_rules": [
            ":arg0-of",
            ":location"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "no",
        "name": ":root",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": "XXX-DT",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/VP -)",
        "graph_rules": {
            "ah-01": [
                ":arg1"
            ]
        },
        "head": "ah-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-RB , :arg0 :arg1",
        "tree_rules": [
            ":arg1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "chicken",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "plural"
        },
        "tree": "are there XXX-NN",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "no",
        "name": ":root",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": "XXX-DT",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "sigh-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "sigh-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg1 :arg2",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , :arg0 XXX-VB",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/ADJP - \n\t :op2/ADJP -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , XXX-CC :arg1",
        "tree_rules": [
            ":op1",
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/PP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC , :op2 , :arg1 :arg1",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :condition :arg0 , it :arg2",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP -)",
        "graph_rules": {
            "know-04": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "know-04",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 shall XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP - \n\t :arg4/IN - \n\t :arg5/ADVP - \n\t :manner/S -)",
        "graph_rules": {
            "send-03": [
                ":arg0",
                ":arg1",
                ":arg4",
                ":arg5",
                ":manner"
            ]
        },
        "head": "send-03",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :manner",
        "tree_rules": [
            ":arg4",
            ":arg5",
            ":arg1",
            ":manner",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/MD - \n\t :arg1/IN - \n\t :arg2/NP - \n\t :arg1-of/IN -)",
        "graph_rules": {
            "call-03": [
                ":arg0",
                ":arg1",
                ":arg2",
                ":arg1-of"
            ]
        },
        "head": "call-03",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 :arg0 XXX-VB :arg2 , :arg1-of :arg2 , :arg1 :arg2",
        "tree_rules": [
            ":arg1-of",
            ":arg1",
            ":arg2",
            ":arg0"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/S - \n\t :op3/UCP -)",
        "graph_rules": {
            "and": [
                ":op2",
                ":op3"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :time :op2",
        "tree_rules": [
            ":op3",
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP - \n\t :polarity/RB -)",
        "graph_rules": {
            "eat-01": [
                ":arg0",
                ":arg1",
                ":polarity"
            ]
        },
        "head": "eat-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 :polarity :polarity XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":polarity",
            ":polarity",
            ":arg0"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/PP - \n\t :arg1/NP - \n\t :polarity/DT -)",
        "graph_rules": {
            "use-01": [
                ":arg0",
                ":arg1",
                ":polarity"
            ]
        },
        "head": "use-01",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": true,
            "number": "singular"
        },
        "tree": ":arg1 is of :polarity XXX-NN :arg0",
        "tree_rules": [
            ":polarity",
            ":arg0",
            ":arg1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/ADVP - \n\t :arg2/PP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1",
                ":arg2"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 have :arg1 to XXX-VB :arg2",
        "tree_rules": [
            ":arg2",
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :op2",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :arg2",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0 - \n\t :arg1/ADJP -)",
        "graph_rules": {
            "think-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "think-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-VB :degree :arg1",
        "tree_rules": [
            ":arg1"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP - \n\t :arg2/NP - \n\t :direction/S -)",
        "graph_rules": {
            "bring-01": [
                ":arg0",
                ":arg1",
                ":arg2",
                ":direction"
            ]
        },
        "head": "bring-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 will XXX-VB :direction",
        "tree_rules": [
            ":arg1",
            ":arg2",
            ":direction",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple future",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :op2",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/PP - \n\t :arg1-of/PP -)",
        "graph_rules": {
            "gaze-01": [
                ":arg0",
                ":arg1",
                ":arg1-of"
            ]
        },
        "head": "gaze-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1 , :arg1-of",
        "tree_rules": [
            ":arg1",
            ":arg1-of",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg2/S -)",
        "graph_rules": {
            "reply-01": [
                ":arg0",
                ":arg2"
            ]
        },
        "head": "reply-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg2 , :arg0 XXX-VB",
        "tree_rules": [
            ":arg2",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg2/SBAR -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {
            "form": "list",
            "inPP": false,
            "number": "plural"
        },
        "tree": "XXX-CC :arg0",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/CC -)",
        "graph_rules": {
            "obligate-01": [
                ":arg2"
            ]
        },
        "head": "obligate-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0-of , :arg2 :op2",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP - \n\t :polarity/DT -)",
        "graph_rules": {
            "have-03": [
                ":arg0",
                ":arg1",
                ":polarity"
            ]
        },
        "head": "have-03",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1",
        "tree_rules": [
            ":polarity",
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP - \n\t :location/PP -)",
        "graph_rules": {
            "buy-01": [
                ":arg0",
                ":arg1",
                ":location"
            ]
        },
        "head": "buy-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1 :time :arg1-of",
        "tree_rules": [
            ":location",
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg2/MD -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC there is :location :location :location :arg1 , and :arg0-of :arg1",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP - \n\t :condition/IN -)",
        "graph_rules": {
            "tame-01": [
                ":arg0",
                ":arg1",
                ":condition"
            ]
        },
        "head": "tame-01",
        "name": ":root",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": ":condition :arg0 :condition :arg2 , XXX-JJ :arg1",
        "tree_rules": [
            ":arg1",
            ":condition",
            ":condition",
            ":arg0"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg2/MD -)",
        "graph_rules": {
            "reply-01": [
                ":arg0",
                ":arg2"
            ]
        },
        "head": "reply-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg2 , XXX-VB :arg0",
        "tree_rules": [
            ":arg2",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/PRP - \n\t :time/IN - \n\t :location/IN - \n\t :direction/PRT - \n\t :example/PRN -)",
        "graph_rules": {
            "sit-down-02": [
                ":arg1",
                ":time",
                ":location",
                ":direction",
                ":example"
            ]
        },
        "head": "sit-down-02",
        "name": ":root",
        "noun_info": {},
        "tree": ":time :arg1 will XXX-VB :direction :direction :unit :example :time :location",
        "tree_rules": [
            ":time",
            ":arg1",
            ":location",
            ":direction",
            ":time",
            ":direction",
            ":example"
        ],
        "verb_info": {
            "tense": "simple future",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/S - \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": ":op1 , XXX-CC :op2",
        "tree_rules": [
            ":op1",
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/PP - \n\t :arg2/NP -)",
        "graph_rules": {
            "source-01": [
                ":arg1",
                ":arg2"
            ]
        },
        "head": "source-01",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": ":arg2 are the XXX-NN :arg1",
        "tree_rules": [
            ":arg1",
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg1 :arg2",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :direction/ADVP - \n\t :time/NP -)",
        "graph_rules": {
            "come-01": [
                ":arg1",
                ":direction",
                ":time"
            ]
        },
        "head": "come-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 XXX-VB :direction",
        "tree_rules": [
            ":time",
            ":direction",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/ADJP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": "it would have been :arg1 :arg1 , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S - \n\t :condition/S - \n\t :time/RB -)",
        "graph_rules": {
            "begin-01": [
                ":arg0",
                ":arg1",
                ":condition",
                ":time"
            ]
        },
        "head": "begin-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":condition , :time :time :arg0 shall XXX-VB :arg1",
        "tree_rules": [
            ":condition",
            ":time",
            ":arg1",
            ":arg0",
            ":condition",
            ":time"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/CC - \n\t :time/NP -)",
        "graph_rules": {
            "feel-01": [
                ":arg0",
                ":arg1",
                ":time"
            ]
        },
        "head": "feel-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 shall XXX-VB :time",
        "tree_rules": [
            ":arg1",
            ":time",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/VB - \n\t :op2/VB - \n\t :time/PP - \n\t :time -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2",
                ":time",
                ":time"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": ":time , :arg1 shall :time be :op1 XXX-CC :op2 :direction",
        "tree_rules": [
            ":op1",
            ":op2",
            ":time",
            ":time"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/ADJP - \n\t :arg2/NP -)",
        "graph_rules": {
            "show-01": [
                ":arg0",
                ":arg1",
                ":arg2"
            ]
        },
        "head": "show-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 shall XXX-VB :arg2 :degree",
        "tree_rules": [
            ":arg1",
            ":arg2",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :condition , :arg0 :arg2",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :arg2/VP -)",
        "graph_rules": {
            "obligate-01": [
                ":arg1",
                ":arg2"
            ]
        },
        "head": "obligate-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 XXX-MD :arg2",
        "tree_rules": [
            ":arg2",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1-of/PRP$ - \n\t :arg0-of/PP -)",
        "graph_rules": {
            "rite": [
                ":arg1-of",
                ":arg0-of"
            ]
        },
        "head": "rite",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": ":arg0 is a XXX-NN , :arg0-of , :arg0-of",
        "tree_rules": [
            ":arg0-of",
            ":arg1-of"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg2/PP - \n\t :frequency/DT -)",
        "graph_rules": {
            "dance-01": [
                ":arg0",
                ":arg2",
                ":frequency"
            ]
        },
        "head": "dance-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg4 :arg0 XXX-VB :arg2",
        "tree_rules": [
            ":frequency",
            ":arg2",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/VP -)",
        "graph_rules": {
            "cause-01": [
                ":arg1"
            ]
        },
        "head": "cause-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-RB :domain :arg1 :domain",
        "tree_rules": [
            ":arg1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP -)",
        "graph_rules": {
            "possible-01": [
                ":arg1"
            ]
        },
        "head": "possible-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-MD :extent",
        "tree_rules": [
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg2/S -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :condition , :arg1 , and :arg2",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/VP -)",
        "graph_rules": {
            "cause-01": [
                ":arg1"
            ]
        },
        "head": "cause-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-IN :arg0 :arg1",
        "tree_rules": [
            ":arg1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/ADJP -)",
        "graph_rules": {
            "and": [
                ":op1"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :time-of :time :time-of :op2",
        "tree_rules": [
            ":op1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/S - \n\t :arg2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":arg1",
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 XXX-CC you :arg2",
        "tree_rules": [
            ":arg2",
            ":arg1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/ADJP - \n\t :arg2/NP - \n\t :mod/ADVP -)",
        "graph_rules": {
            "do-02": [
                ":arg0",
                ":arg1",
                ":arg2",
                ":mod"
            ]
        },
        "head": "do-02",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 has XXX-VB :arg2 :arg1 :mod",
        "tree_rules": [
            ":arg2",
            ":arg1",
            ":mod",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , XXX-VB :arg0 :arg1-of of :arg0",
        "tree_rules": [
            ":arg0",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/VP -)",
        "graph_rules": {
            "and": [
                ":op1"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :time :arg0 :op1 :op2",
        "tree_rules": [
            ":op1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S - \n\t :time/ADVP -)",
        "graph_rules": {
            "understand-01": [
                ":arg0",
                ":arg1",
                ":time"
            ]
        },
        "head": "understand-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 will XXX-VB :time :domain :arg1",
        "tree_rules": [
            ":arg1",
            ":time",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple future",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/S - \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": ":op1 , XXX-CC :op2",
        "tree_rules": [
            ":op1",
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :direction/ADVP - \n\t :purpose/S -)",
        "graph_rules": {
            "go-02": [
                ":arg0",
                ":direction",
                ":purpose"
            ]
        },
        "head": "go-02",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :direction , :purpose",
        "tree_rules": [
            ":direction",
            ":purpose",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/IN -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , :arg0 XXX-VB",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :domain/NP - \n\t :time/PP -)",
        "graph_rules": {
            "nothing": [
                ":domain",
                ":time"
            ]
        },
        "head": "nothing",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": ":time are XXX-NN",
        "tree_rules": [
            ":time",
            ":domain",
            ":time"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/S - \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": ":op1 , XXX-CC :op2",
        "tree_rules": [
            ":op1",
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :arg2/NP - \n\t :time/SBAR -)",
        "graph_rules": {
            "resemble-01": [
                ":arg1",
                ":arg2",
                ":time"
            ]
        },
        "head": "resemble-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 are XXX-IN :arg2 :time",
        "tree_rules": [
            ":arg2",
            ":time",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :domain/NP - \n\t :arg1-of/IN - \n\t :mod/ADVP -)",
        "graph_rules": {
            "fox": [
                ":domain",
                ":arg1-of",
                ":mod"
            ]
        },
        "head": "fox",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": ":domain was :mod :domain XXX-NN :arg1-of :quant",
        "tree_rules": [
            ":domain",
            ":arg1-of",
            ":mod",
            ":domain"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :arg2 , and :arg1",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VP -)",
        "graph_rules": {
            "and": [
                ":op1"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg1 :op1",
        "tree_rules": [
            ":op1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/CC -)",
        "graph_rules": {
            "go-on-25": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "go-on-25",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , :arg1 :arg2 , :arg0 XXX-VB on",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :arg1/VP -)",
        "graph_rules": {
            "possible-01": [
                ":polarity",
                ":arg1"
            ]
        },
        "head": "possible-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 XXX-MD :polarity :arg1",
        "tree_rules": [
            ":polarity",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/SBAR - \n\t :arg1-of/IN -)",
        "graph_rules": {
            "think-01": [
                ":arg0",
                ":arg1",
                ":arg1-of"
            ]
        },
        "head": "think-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1-of , :arg0 would XXX-VB :arg1 the rose :arg1-of :arg0-of",
        "tree_rules": [
            ":arg1",
            ":arg1-of",
            ":arg0",
            ":arg1-of"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/S -)",
        "graph_rules": {
            "cause-01": [
                ":arg0"
            ]
        },
        "head": "cause-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-IN :arg0",
        "tree_rules": [
            ":arg0"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VP -)",
        "graph_rules": {
            "and": [
                ":op1"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :op1",
        "tree_rules": [
            ":op1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/ADVP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , :arg0 XXX-VB",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/ADVP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/VP -)",
        "graph_rules": {
            "and": [
                ":op1"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {
            "form": "list",
            "inPP": false,
            "number": "plural"
        },
        "tree": "XXX-CC :time :op1",
        "tree_rules": [
            ":op1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/TO - \n\t :purpose/S -)",
        "graph_rules": {
            "repeat-01": [
                ":arg0",
                ":arg1",
                ":purpose"
            ]
        },
        "head": "repeat-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 is :mod is :instrument :arg1 :instrument , :arg0 XXX-VB , :arg1-of",
        "tree_rules": [
            ":arg0",
            ":arg1",
            ":purpose"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1-of/SBAR - \n\t :arg0-of/SBAR -)",
        "graph_rules": {
            "time": [
                ":arg1-of",
                ":arg0-of"
            ]
        },
        "head": "time",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "it is the XXX-NN :arg1-of",
        "tree_rules": [
            ":arg0-of",
            ":arg1-of"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S - \n\t :purpose/RB -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1",
                ":purpose"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 XXX-VB :arg0 , :purpose :arg1-of",
        "tree_rules": [
            ":arg0",
            ":purpose",
            ":purpose",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg2/MD -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {
            "form": "list",
            "inPP": false,
            "number": "plural"
        },
        "tree": "XXX-CC :arg1",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :arg2/ADJP -)",
        "graph_rules": {
            "become-01": [
                ":arg1",
                ":arg2"
            ]
        },
        "head": "become-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 XXX-VB :arg2",
        "tree_rules": [
            ":arg2",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/PP -)",
        "graph_rules": {
            "responsible-03": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "responsible-03",
        "name": ":root",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": ":arg0 are XXX-JJ :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/ADJP - \n\t :purpose/S -)",
        "graph_rules": {
            "repeat-01": [
                ":arg0",
                ":arg1",
                ":purpose"
            ]
        },
        "head": "repeat-01",
        "name": ":root",
        "noun_info": {},
        "tree": "i am :arg1 , :arg0 XXX-VB , :arg1-of",
        "tree_rules": [
            ":purpose",
            ":arg0",
            ":purpose",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :mod/NP -)",
        "graph_rules": {
            "chapter": [
                ":mod"
            ]
        },
        "head": "chapter",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "XXX-NN :mod",
        "tree_rules": [
            ":mod"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NN -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1-of , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NN -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1-of , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NN -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 :arg1 :arg2 :arg0-of XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP - \n\t :arg5/PRT -)",
        "graph_rules": {
            "send-03": [
                ":arg0",
                ":arg1",
                ":arg5"
            ]
        },
        "head": "send-03",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg5 :arg1",
        "tree_rules": [
            ":arg5",
            ":arg5",
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :mod :op2",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/. -)",
        "graph_rules": {
            "look-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "look-01",
        "name": ":root",
        "noun_info": {},
        "tree": "what are :arg0 XXX-VB for :arg1",
        "tree_rules": [
            ":arg0",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :ord :mod",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":domain , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :domain/NP -)",
        "graph_rules": {
            "exchange-01": [
                ":domain"
            ]
        },
        "head": "exchange-01",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": ":domain is an XXX-NN",
        "tree_rules": [
            ":domain"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/VB -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":time , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :op2",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/ADJP - \n\t :op2/S -)",
        "graph_rules": {
            "or": [
                ":op1",
                ":op2"
            ]
        },
        "head": "or",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 , XXX-CC :op2",
        "tree_rules": [
            ":op1",
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , :arg0 XXX-VB",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :mod/NP -)",
        "graph_rules": {
            "chapter": [
                ":mod"
            ]
        },
        "head": "chapter",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "XXX-NN :mod",
        "tree_rules": [
            ":mod"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NN -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1-of , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NN -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1-of , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/E - \n\t :arg1/NP -)",
        "graph_rules": {
            "sell-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "sell-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":domain was :arg0-of who XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/VB - \n\t :arg1/VB -)",
        "graph_rules": {
            "cause-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "cause-01",
        "name": ":root",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": ":arg1 , and :arg1 would :arg1 :arg1 XXX-IN :arg1 :arg1",
        "tree_rules": [
            ":arg0",
            ":arg1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/SQ -)",
        "graph_rules": {
            "ask-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "ask-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1-of :arg1 :arg0 XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/E - \n\t :arg1/IN -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 :arg1 XXX-VB :arg0-of",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/IN - \n\t :arg1/VB -)",
        "graph_rules": {
            "make-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "make-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1-of :arg1 been XXX-VB :arg0 :arg1-of",
        "tree_rules": [
            ":arg0",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/DT - \n\t :instrument/PP -)",
        "graph_rules": {
            "save-03": [
                ":arg0",
                ":arg1",
                ":instrument"
            ]
        },
        "head": "save-03",
        "name": ":root",
        "noun_info": {},
        "tree": ":instrument , :arg0 XXX-VB :arg1 :arg1",
        "tree_rules": [
            ":arg1",
            ":instrument",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/SQ -)",
        "graph_rules": {
            "and": [
                ":op1"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC what :op1 :arg1",
        "tree_rules": [
            ":op1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/ADVP - \n\t :arg1/NP -)",
        "graph_rules": {
            "do-02": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "do-02",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 :arg0 XXX-VB",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S - \n\t :arg2 -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1",
                ":arg2"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": "as for me , XXX-VB :arg0 :destination :arg1 :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :mod/NP -)",
        "graph_rules": {
            "chapter": [
                ":mod"
            ]
        },
        "head": "chapter",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "XXX-NN :mod",
        "tree_rules": [
            ":mod"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VB - \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , XXX-CC :op2",
        "tree_rules": [
            ":op1",
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "ah",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-RB ,",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/TO - \n\t :arg2/NP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1",
                ":arg2"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1 :arg2 , :op1 :op1 :op2 :concession-of :op3",
        "tree_rules": [
            ":arg1",
            ":arg2",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S - \n\t :arg2/PP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1",
                ":arg2"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 :arg0 XXX-VB :arg2",
        "tree_rules": [
            ":arg2",
            ":arg0",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NN - \n\t :arg2/NP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1",
                ":arg2"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 :mod :arg2 :domain that has :arg1 to XXX-VB :arg1",
        "tree_rules": [
            ":arg2",
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/S -)",
        "graph_rules": {
            "cause-01": [
                ":arg0"
            ]
        },
        "head": "cause-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-IN :arg1 am :time :arg0",
        "tree_rules": [
            ":arg0"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/S - \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": ":op1 , XXX-CC :op2 :concession , :concession if :arg1",
        "tree_rules": [
            ":op1",
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/S - \n\t :arg1/LS - \n\t :degree/RB -)",
        "graph_rules": {
            "glad-02": [
                ":arg0",
                ":arg1",
                ":degree"
            ]
        },
        "head": "glad-02",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , :arg0-of , am :degree XXX-JJ :arg0 :arg0",
        "tree_rules": [
            ":degree",
            ":arg0",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/PP - \n\t :polarity/DT -)",
        "graph_rules": {
            "possible-01": [
                ":arg1",
                ":polarity"
            ]
        },
        "head": "possible-01",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": ":arg0 has :polarity XXX-NN :arg1 ,",
        "tree_rules": [
            ":polarity",
            ":arg1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg2 -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg2"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB to myself",
        "tree_rules": [
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/JJ - \n\t :op2/ADJP - \n\t :time/ADVP -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2",
                ":time"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 :time :time been XXX-CC :op2",
        "tree_rules": [
            ":op1",
            ":op2",
            ":time",
            ":time"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/SBAR - \n\t :mod/ADVP -)",
        "graph_rules": {
            "need-01": [
                ":arg0",
                ":arg1",
                ":mod"
            ]
        },
        "head": "need-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 XXX-VB",
        "tree_rules": [
            ":mod",
            ":arg0",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg2/CC -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :op2 i am :arg2 , :mod",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/PP -)",
        "graph_rules": {
            "look-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "look-01",
        "name": ":root",
        "noun_info": {},
        "tree": "let :arg0 XXX-VB :arg1",
        "tree_rules": [
            ":arg0",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/PP -)",
        "graph_rules": {
            "gesture-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "gesture-01",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": ":arg0 made a XXX-NN :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :domain/S -)",
        "graph_rules": {
            "absurd": [
                ":domain"
            ]
        },
        "head": "absurd",
        "name": ":root",
        "noun_info": {},
        "tree": "it is XXX-JJ :domain",
        "tree_rules": [
            ":domain",
            ":domain"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/VP -)",
        "graph_rules": {
            "have-concession-91": [
                ":arg1"
            ]
        },
        "head": "have-concession-91",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC nevertheless :arg0 :arg1",
        "tree_rules": [
            ":arg1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/S - \n\t :op2/S - \n\t :time/SBAR -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2",
                ":time"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": ":op1 , XXX-CC :op2",
        "tree_rules": [
            ":time",
            ":op1",
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/S - \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": ":op1 , XXX-CC :op2",
        "tree_rules": [
            ":op1",
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :arg4/PP - \n\t :manner/S -)",
        "graph_rules": {
            "come-01": [
                ":arg1",
                ":arg4",
                ":manner"
            ]
        },
        "head": "come-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 XXX-VB :manner :arg0",
        "tree_rules": [
            ":arg4",
            ":arg4",
            ":manner",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP -)",
        "graph_rules": {
            "demand-01": [
                ":arg0"
            ]
        },
        "head": "demand-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB",
        "tree_rules": [
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :arg2",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/MD - \n\t :arg2/PP - \n\t :mod/ADVP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1",
                ":arg2",
                ":mod"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 :mod XXX-VB :arg2 :arg1",
        "tree_rules": [
            ":arg1",
            ":mod",
            ":arg2",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP - \n\t :polarity/RB - \n\t :concession-of/S -)",
        "graph_rules": {
            "understand-01": [
                ":arg0",
                ":arg1",
                ":polarity",
                ":concession-of"
            ]
        },
        "head": "understand-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 :polarity :polarity XXX-VB :arg1 , :concession-of :concession-of",
        "tree_rules": [
            ":arg1",
            ":polarity",
            ":polarity",
            ":arg0",
            ":concession-of",
            ":concession-of"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/TO - \n\t :degree/S -)",
        "graph_rules": {
            "know-01": [
                ":arg0",
                ":arg1",
                ":degree"
            ]
        },
        "head": "know-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :degree :degree :polarity",
        "tree_rules": [
            ":degree",
            ":arg1",
            ":degree",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/NP -)",
        "graph_rules": {
            "tire-01": [
                ":arg1"
            ]
        },
        "head": "tire-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 was XXX-VB",
        "tree_rules": [
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/NP -)",
        "graph_rules": {
            "sit-down-02": [
                ":arg1"
            ]
        },
        "head": "sit-down-02",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 XXX-VB down",
        "tree_rules": [
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :location/ADVP -)",
        "graph_rules": {
            "sit-down-02": [
                ":arg1",
                ":location"
            ]
        },
        "head": "sit-down-02",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 XXX-VB :location :location :op1",
        "tree_rules": [
            ":location",
            ":location",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC , :time :op1 , :op2 :arg1",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/ADVP - \n\t :arg2/PP -)",
        "graph_rules": {
            "reply-01": [
                ":arg0",
                ":arg2"
            ]
        },
        "head": "reply-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB , :domain",
        "tree_rules": [
            ":arg2",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC , :manner , :arg0 :op2",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "add-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "add-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , :arg0 XXX-VB",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg1 :op2",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP - \n\t :time/ADVP -)",
        "graph_rules": {
            "love-01": [
                ":arg0",
                ":arg1",
                ":time"
            ]
        },
        "head": "love-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 have :time XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":time",
            ":arg0"
        ],
        "verb_info": {
            "tense": "present perfect",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/E - \n\t :op2/VP - \n\t :op3/VP -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2",
                ":op3"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 XXX-VB :location :location :location , :op2 , :op3",
        "tree_rules": [
            ":op2",
            ":op3",
            ":op1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/IN - \n\t :op2/VP - \n\t :concession/NP -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2",
                ":concession"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": ":concession throbs , XXX-CC :op2",
        "tree_rules": [
            ":concession",
            ":op1",
            ":op2",
            ":concession"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/SBAR -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 XXX-VB :arg0 , is that :location :arg0",
        "tree_rules": [
            ":arg0",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP -)",
        "graph_rules": {
            "astonish-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "astonish-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 was XXX-VB :manner :arg0",
        "tree_rules": [
            ":arg0",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/S - \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": ":op1 , XXX-CC :op2",
        "tree_rules": [
            ":op1",
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VP - \n\t :op2/ADVP -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-TO :op1 , no one :arg1 :arg1",
        "tree_rules": [
            ":op1",
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :arg2",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP - \n\t :location/PP -)",
        "graph_rules": {
            "hide-01": [
                ":arg0",
                ":arg1",
                ":location"
            ]
        },
        "head": "hide-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 was XXX-VB :arg1 :location",
        "tree_rules": [
            ":arg1",
            ":location",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "yes",
        "name": ":root",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": "XXX-UH ,",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg2/PP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg2"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg2",
        "tree_rules": [
            ":arg2",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , :arg0 XXX-VB , :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/VP - \n\t :op2/VP - \n\t :time/SBAR -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2",
                ":time"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": ":time , :arg0 :op1 XXX-CC :op2",
        "tree_rules": [
            ":op1",
            ":op2",
            ":time"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/CC -)",
        "graph_rules": {
            "feel-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "feel-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :op1 , :arg1 :op2",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/SBAR - \n\t :arg2/PP -)",
        "graph_rules": {
            "seem-01": [
                ":arg1",
                ":arg2"
            ]
        },
        "head": "seem-01",
        "name": ":root",
        "noun_info": {},
        "tree": "it XXX-VB :arg2 :arg1",
        "tree_rules": [
            ":arg2",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/ADJP - \n\t :arg2/PP - \n\t :mod/ADVP -)",
        "graph_rules": {
            "seem-01": [
                ":arg1",
                ":arg2",
                ":mod"
            ]
        },
        "head": "seem-01",
        "name": ":root",
        "noun_info": {},
        "tree": "it XXX-VB :arg2 , :mod , that there was :arg1 :location",
        "tree_rules": [
            ":arg1",
            ":arg2",
            ":mod"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/E - \n\t :arg1-of/VP -)",
        "graph_rules": {
            "see-01": [
                ":arg1",
                ":arg1-of"
            ]
        },
        "head": "see-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-WP :mod :arg1-of",
        "tree_rules": [
            ":arg1-of",
            ":arg1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/FW - \n\t :arg1/NP - \n\t :arg2 - \n\t :time/SBAR - \n\t :mod/FRAG -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1",
                ":arg2",
                ":time",
                ":mod"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":time XXX-VB :location , :mod :op1 , :concession :concession :arg0-of",
        "tree_rules": [
            ":arg0",
            ":arg1",
            ":time",
            ":mod",
            ":time"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :op2",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP -)",
        "graph_rules": {
            "feel-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "feel-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :conj-as-if",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC , :time :time , :arg0 :op2",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/NP -)",
        "graph_rules": {
            "chapter": [
                ":mod"
            ]
        },
        "head": "chapter",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "XXX-NN :mod",
        "tree_rules": [
            ":mod"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/PP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 , XXX-VB :arg0 :manner , :arg1 :polarity :polarity :arg1-of",
        "tree_rules": [
            ":arg0",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/S - \n\t :op2/VP - \n\t :op3/VP - \n\t :time/ADVP -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2",
                ":op3",
                ":time"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {
            "form": "list",
            "inPP": false,
            "number": "plural"
        },
        "tree": ":op1 , XXX-CC :op3",
        "tree_rules": [
            ":time",
            ":op2",
            ":op3",
            ":op1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :op2 :arg1",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg4-of/SBAR - \n\t :arg1-of/VP -)",
        "graph_rules": {
            "well": [
                ":arg4-of",
                ":arg1-of"
            ]
        },
        "head": "well",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "the XXX-NN :arg4-of :arg1-of",
        "tree_rules": [
            ":arg4-of",
            ":arg1-of"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1-of/SBAR - \n\t :mod/JJ - \n\t :domain/NP -)",
        "graph_rules": {
            "hole": [
                ":arg1-of",
                ":mod",
                ":domain"
            ]
        },
        "head": "hole",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "plural"
        },
        "tree": ":domain are :mod XXX-NN :arg1-of",
        "tree_rules": [
            ":mod",
            ":arg1-of",
            ":domain"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :arg2/E -)",
        "graph_rules": {
            "resemble-01": [
                ":arg1",
                ":arg2"
            ]
        },
        "head": "resemble-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":mod was XXX-IN :arg1",
        "tree_rules": [
            ":arg1",
            ":arg2"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg2/CC -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :location was :op1 :location , :arg2 :arg1",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :domain/NP -)",
        "graph_rules": {
            "strange": [
                ":domain"
            ]
        },
        "head": "strange",
        "name": ":root",
        "noun_info": {},
        "tree": ":domain is XXX-JJ ,",
        "tree_rules": [
            ":domain"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg2/PP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg2"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg2",
        "tree_rules": [
            ":arg2",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :arg2/NP -)",
        "graph_rules": {
            "ready-02": [
                ":arg1",
                ":arg2"
            ]
        },
        "head": "ready-02",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 is XXX-JJ :example :arg2 :op3",
        "tree_rules": [
            ":arg2",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/VP - \n\t :op2/VP - \n\t :op3/VP -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2",
                ":op3"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 :op1 , :op2 , XXX-CC :op3",
        "tree_rules": [
            ":op1",
            ":op2",
            ":op3"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :op2",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VP - \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 :op1 , XXX-CC :op2",
        "tree_rules": [
            ":op1",
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/PP - \n\t :polarity/RB -)",
        "graph_rules": {
            "want-01": [
                ":arg0",
                ":arg1",
                ":polarity"
            ]
        },
        "head": "want-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 :polarity :polarity XXX-VB :arg0 :arg1 :instrument",
        "tree_rules": [
            ":arg1",
            ":polarity",
            ":polarity",
            ":arg0"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0 - \n\t :arg1/NP - \n\t :arg2/PP -)",
        "graph_rules": {
            "leave-02": [
                ":arg0",
                ":arg1",
                ":arg2"
            ]
        },
        "head": "leave-02",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-VB :arg1",
        "tree_rules": [
            ":arg2",
            ":arg1"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP -)",
        "graph_rules": {
            "say-01": [
                ":arg0"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB",
        "tree_rules": [
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :domain/NP - \n\t :degree/RB - \n\t :compared-to/PP -)",
        "graph_rules": {
            "heavy": [
                ":domain",
                ":degree",
                ":compared-to"
            ]
        },
        "head": "heavy",
        "name": ":root",
        "noun_info": {},
        "tree": ":domain is :degree XXX-JJ :compared-to",
        "tree_rules": [
            ":degree",
            ":compared-to",
            ":domain"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/VP - \n\t :op1 -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op1"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 :op1 XXX-CC :op1 :op1 , :op2 was , :arg1-of :arg1-of",
        "tree_rules": [
            ":op1",
            ":op1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/PP - \n\t :op2/MD -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , XXX-CC :arg1",
        "tree_rules": [
            ":op1",
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0 - \n\t :arg1/E - \n\t :arg2/NP - \n\t :purpose/PP -)",
        "graph_rules": {
            "give-01": [
                ":arg0",
                ":arg1",
                ":arg2",
                ":purpose"
            ]
        },
        "head": "give-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-VB :arg2 :quant",
        "tree_rules": [
            ":purpose",
            ":arg2",
            ":arg1"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :op2",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP - \n\t :arg4/PP -)",
        "graph_rules": {
            "raise-01": [
                ":arg0",
                ":arg1",
                ":arg4"
            ]
        },
        "head": "raise-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1 :arg4",
        "tree_rules": [
            ":arg1",
            ":arg4",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :degree/IN - \n\t :compared-to/IN -)",
        "graph_rules": {
            "sweet-04": [
                ":arg1",
                ":degree",
                ":compared-to"
            ]
        },
        "head": "sweet-04",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 was :degree XXX-JJ :compared-to :arg1-of",
        "tree_rules": [
            ":compared-to",
            ":degree",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :arg2/NN - \n\t :mod/ADVP - \n\t :polarity/JJ -)",
        "graph_rules": {
            "resemble-01": [
                ":arg1",
                ":arg2",
                ":mod",
                ":polarity"
            ]
        },
        "head": "resemble-01",
        "name": ":root",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": ":arg1 was :mod XXX-DT :polarity :arg2 :arg2-of",
        "tree_rules": [
            ":polarity",
            ":arg2",
            ":mod",
            ":arg1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :arg2/PP -)",
        "graph_rules": {
            "good-04": [
                ":arg1",
                ":arg2"
            ]
        },
        "head": "good-04",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 was XXX-JJ :arg2 , :arg1-of :arg2",
        "tree_rules": [
            ":arg2",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/PRT - \n\t :arg1/NP - \n\t :manner/ADVP - \n\t :time/WHADVP -)",
        "graph_rules": {
            "make-up-07": [
                ":arg0",
                ":arg1",
                ":manner",
                ":time"
            ]
        },
        "head": "make-up-07",
        "name": ":root",
        "noun_info": {},
        "tree": ":time i was :time , :op1 of :arg0 , :op2 of :poss , :op3 , :poss to XXX-VB :arg0 , :manner , :arg1 :arg1-of",
        "tree_rules": [
            ":arg0",
            ":manner",
            ":time",
            ":time",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/CC -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg0 , :op1 :op2",
        "tree_rules": [
            ":arg0",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP - \n\t :polarity/RB -)",
        "graph_rules": {
            "find-01": [
                ":arg0",
                ":arg1",
                ":polarity"
            ]
        },
        "head": "find-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 :polarity :polarity XXX-VB :arg1 ,",
        "tree_rules": [
            ":arg1",
            ":polarity",
            ":polarity",
            ":arg0"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP -)",
        "graph_rules": {
            "reply-01": [
                ":arg0"
            ]
        },
        "head": "reply-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB",
        "tree_rules": [
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg2/MD -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "and XXX-RB :arg1 :arg1",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP -)",
        "graph_rules": {
            "true-01": [
                ":arg1"
            ]
        },
        "head": "true-01",
        "name": ":root",
        "noun_info": {},
        "tree": "yes , :arg1 is XXX-JJ ,",
        "tree_rules": [
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP -)",
        "graph_rules": {
            "say-01": [
                ":arg0"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB",
        "tree_rules": [
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :op2 :arg2",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/VP -)",
        "graph_rules": {
            "recommend-01": [
                ":arg1"
            ]
        },
        "head": "recommend-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-MD :arg1",
        "tree_rules": [
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NN -)",
        "graph_rules": {
            "drink-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "drink-01",
        "name": ":root",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": ":arg0 had XXX-JJ the :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1-of/ADVP -)",
        "graph_rules": {
            "breathe-01": [
                ":arg0",
                ":arg1-of"
            ]
        },
        "head": "breathe-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1-of",
        "tree_rules": [
            ":arg1-of",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/VP - \n\t :arg2/E - \n\t :time/IN -)",
        "graph_rules": {
            "resemble-01": [
                ":arg1",
                ":arg2",
                ":time"
            ]
        },
        "head": "resemble-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-IN :arg1 :poss :arg1",
        "tree_rules": [
            ":time",
            ":arg1",
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/SBAR -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :op2",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/. - \n\t :arg1/NP - \n\t :arg2/NP - \n\t :time/ADVP -)",
        "graph_rules": {
            "bring-01": [
                ":arg0",
                ":arg1",
                ":arg2",
                ":time"
            ]
        },
        "head": "bring-01",
        "name": ":root",
        "noun_info": {},
        "tree": "what XXX-VB :arg1 :arg0",
        "tree_rules": [
            ":time",
            ":arg2",
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/MD - \n\t :manner/ADVP - \n\t :time/SBAR -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1",
                ":manner",
                ":time"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg2 , XXX-VB :arg0 , :manner , :time :frequency :mod",
        "tree_rules": [
            ":arg1",
            ":arg0",
            ":manner",
            ":time"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1-of/VP - \n\t :domain/. -)",
        "graph_rules": {
            "thing": [
                ":arg1-of",
                ":domain"
            ]
        },
        "head": "thing",
        "name": ":root",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": "XXX-WDT :arg1-of :domain",
        "tree_rules": [
            ":arg1-of",
            ":domain"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2-of/NP -)",
        "graph_rules": {
            "thing": [
                ":arg2-of"
            ]
        },
        "head": "thing",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg2-of XXX-VB :arg2-of",
        "tree_rules": [
            ":arg2-of",
            ":arg2-of"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/PP -)",
        "graph_rules": {
            "responsible-03": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "responsible-03",
        "name": ":root",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": ":arg0 am XXX-JJ :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/PRP$ - \n\t :arg2/PP -)",
        "graph_rules": {
            "take-01": [
                ":arg0",
                ":arg1",
                ":arg2"
            ]
        },
        "head": "take-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1-of :arg2",
        "tree_rules": [
            ":arg1",
            ":arg2",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/VB - \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {
            "form": "list",
            "inPP": false,
            "number": "plural"
        },
        "tree": ":arg0 :op1 :arg1 over , XXX-CC :op2 :arg0 they :arg1",
        "tree_rules": [
            ":op2",
            ":op1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "oh",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-UH",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/PP - \n\t :degree/RB -)",
        "graph_rules": {
            "pride-01": [
                ":arg0",
                ":arg1",
                ":degree"
            ]
        },
        "head": "pride-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 had been :degree XXX-JJ :arg1",
        "tree_rules": [
            ":degree",
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/VP - \n\t :op2/RB -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": ":poss :part-of :arg0 :op1 XXX-CC they are :degree :op2",
        "tree_rules": [
            ":op2",
            ":op1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :op2",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :arg0/NP -)",
        "graph_rules": {
            "fair-01": [
                ":polarity",
                ":arg0"
            ]
        },
        "head": "fair-01",
        "name": ":root",
        "noun_info": {},
        "tree": "you are :polarity XXX-JJ , :arg0 ,",
        "tree_rules": [
            ":polarity",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP -)",
        "graph_rules": {
            "say-01": [
                ":arg0"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB",
        "tree_rules": [
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/SBAR -)",
        "graph_rules": {
            "know-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "know-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 do n't XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/PP - \n\t :instrument/VB - \n\t :time/ADVP -)",
        "graph_rules": {
            "sketch-01": [
                ":arg0",
                ":arg1",
                ":instrument",
                ":time"
            ]
        },
        "head": "sketch-01",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "so :time :arg0 :instrument a :instrument XXX-NN :arg1",
        "tree_rules": [
            ":instrument",
            ":arg1",
            ":instrument",
            ":time",
            ":arg0"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :time :arg1 :op2",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/E -)",
        "graph_rules": {
            "plan-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "plan-01",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "plural"
        },
        "tree": ":arg0 have XXX-NN :arg1-of ,",
        "tree_rules": [
            ":arg0",
            ":arg1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP -)",
        "graph_rules": {
            "say-01": [
                ":arg0"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB",
        "tree_rules": [
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/VP -)",
        "graph_rules": {
            "have-concession-91": [
                ":arg1"
            ]
        },
        "head": "have-concession-91",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :arg1",
        "tree_rules": [
            ":arg1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S - \n\t :arg2/S - \n\t :arg1-of/FRAG -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1",
                ":arg2",
                ":arg1-of"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg2 , :arg1-of :arg1 :arg1",
        "tree_rules": [
            ":arg2",
            ":arg1-of",
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :time/NP - \n\t :poss/PRP$ -)",
        "graph_rules": {
            "anniversary": [
                ":time",
                ":poss"
            ]
        },
        "head": "anniversary",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": ":time will be :poss XXX-NN",
        "tree_rules": [
            ":poss",
            ":time"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S - \n\t :time/ADVP - \n\t :time -)",
        "graph_rules": {
            "go-23": [
                ":arg0",
                ":arg1",
                ":time",
                ":time"
            ]
        },
        "head": "go-23",
        "name": ":root",
        "noun_info": {},
        "tree": ":time , :time :op1 , :arg0 XXX-VB :arg4 :arg1",
        "tree_rules": [
            ":time",
            ":arg0",
            ":time",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg1 :op2",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :frequency",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/NP -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg2 , XXX-RB , :arg0 :polarity :arg1",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :arg4/PP - \n\t :direction/IN -)",
        "graph_rules": {
            "go-02": [
                ":arg1",
                ":arg4",
                ":direction"
            ]
        },
        "head": "go-02",
        "name": ":root",
        "noun_info": {
            "form": "possessive pronoun",
            "inPP": true,
            "number": "singular"
        },
        "tree": ":arg1 were :direction the XXX-PRP$ :direction :arg4",
        "tree_rules": [
            ":direction",
            ":direction",
            ":arg4",
            ":arg1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :mod/ADVP -)",
        "graph_rules": {
            "flush-03": [
                ":arg1",
                ":mod"
            ]
        },
        "head": "flush-03",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 XXX-VB :mod",
        "tree_rules": [
            ":mod",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :manner :arg0",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :mod/RBR -)",
        "graph_rules": {
            "flush-03": [
                ":arg1",
                ":mod"
            ]
        },
        "head": "flush-03",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 XXX-VB :frequency :mod",
        "tree_rules": [
            ":mod",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/S - \n\t :arg2/S -)",
        "graph_rules": {
            "contrast-01": [
                ":arg1",
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 XXX-CC :arg2",
        "tree_rules": [
            ":arg1",
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX)",
        "graph_rules": {},
        "head": "ah",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-RB ,",
        "tree_rules": [],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/PP - \n\t :arg2/NP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1",
                ":arg2"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1",
        "tree_rules": [
            ":arg2",
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :arg2",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/PRP - \n\t :arg2/VP - \n\t :time/RB -)",
        "graph_rules": {
            "obligate-01": [
                ":arg1",
                ":arg2",
                ":time"
            ]
        },
        "head": "obligate-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":time :arg1 XXX-MD :arg2",
        "tree_rules": [
            ":time",
            ":arg1",
            ":arg2"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :arg2/VP -)",
        "graph_rules": {
            "obligate-01": [
                ":arg1",
                ":arg2"
            ]
        },
        "head": "obligate-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 XXX-MD :arg2",
        "tree_rules": [
            ":arg2",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :arg2/PP - \n\t :location/ADVP -)",
        "graph_rules": {
            "wait-01": [
                ":arg1",
                ":arg2",
                ":location"
            ]
        },
        "head": "wait-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 will be XXX-VB :arg2 :location",
        "tree_rules": [
            ":arg2",
            ":location",
            ":arg1"
        ],
        "verb_info": {
            "tense": "future continuous",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1 - \n\t :direction/PRT - \n\t :time/NP -)",
        "graph_rules": {
            "come-01": [
                ":arg1",
                ":direction",
                ":time"
            ]
        },
        "head": "come-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-VB :direction :time",
        "tree_rules": [
            ":direction",
            ":time"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/VP -)",
        "graph_rules": {
            "have-concession-91": [
                ":arg1"
            ]
        },
        "head": "have-concession-91",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg1 :arg1",
        "tree_rules": [
            ":arg1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP -)",
        "graph_rules": {
            "remember-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "remember-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg2/PP - \n\t :condition/IN -)",
        "graph_rules": {
            "risk-01": [
                ":arg0",
                ":arg2",
                ":condition"
            ]
        },
        "head": "risk-01",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": ":arg0 runs the XXX-NN :arg2",
        "tree_rules": [
            ":condition",
            ":condition",
            ":arg2",
            ":arg0"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/NP -)",
        "graph_rules": {
            "chapter": [
                ":mod"
            ]
        },
        "head": "chapter",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "XXX-NN :mod",
        "tree_rules": [
            ":mod"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/JJ - \n\t :consist-of/IN - \n\t :arg1-of/VB - \n\t :location/SBAR -)",
        "graph_rules": {
            "wall": [
                ":mod",
                ":consist-of",
                ":arg1-of",
                ":location"
            ]
        },
        "head": "wall",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": true,
            "number": "singular"
        },
        "tree": ":location :arg1-of :consist-of an :mod :consist-of XXX-NN",
        "tree_rules": [
            ":location",
            ":mod",
            ":consist-of",
            ":consist-of",
            ":arg1-of",
            ":location"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/RB - \n\t :time/ADVP -)",
        "graph_rules": {
            "see-01": [
                ":arg0",
                ":arg1",
                ":time"
            ]
        },
        "head": "see-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":direction , i XXX-VB :location :arg1 , :arg0-of :arg1",
        "tree_rules": [
            ":time",
            ":arg0",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :op2 :arg1",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :domain/NP - \n\t :mod/JJ -)",
        "graph_rules": {
            "spot": [
                ":domain",
                ":mod"
            ]
        },
        "head": "spot",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": ":domain is :polarity the :mod XXX-NN",
        "tree_rules": [
            ":mod",
            ":domain"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1 - \n\t :arg2/VP - \n\t :arg0-of/IN -)",
        "graph_rules": {
            "obligate-01": [
                ":arg0",
                ":arg1",
                ":arg2",
                ":arg0-of"
            ]
        },
        "head": "obligate-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-MD :arg2 , yes",
        "tree_rules": [
            ":arg0-of",
            ":arg2",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/S - \n\t :arg2/NP -)",
        "graph_rules": {
            "contrast-01": [
                ":arg1",
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , XXX-CC :domain",
        "tree_rules": [
            ":arg2",
            ":arg1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP -)",
        "graph_rules": {
            "continue-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "continue-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1 :direction :op1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/VB - \n\t :op2/VB - \n\t :time/PP -)",
        "graph_rules": {
            "or": [
                ":op1",
                ":op2",
                ":time"
            ]
        },
        "head": "or",
        "name": ":root",
        "noun_info": {},
        "tree": ":time :polarity :op1 XXX-CC :op2 :arg1",
        "tree_rules": [
            ":op1",
            ":op2",
            ":time"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": ":arg0 , XXX-RB , :arg2",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/SBAR -)",
        "graph_rules": {
            "see-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "see-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 will XXX-VB :arg1 , :location",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple future",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP -)",
        "graph_rules": {
            "have-03": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "have-03",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1 :arg1-of :arg2",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :location-of/NP - \n\t :time/NP-TMP -)",
        "graph_rules": {
            "there": [
                ":location-of",
                ":time"
            ]
        },
        "head": "there",
        "name": ":root",
        "noun_info": {},
        "tree": ":location-of :location-of be XXX-RB :time",
        "tree_rules": [
            ":time",
            ":location-of",
            ":location-of"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S - \n\t :mod/ADVP - \n\t :time/IN -)",
        "graph_rules": {
            "speak-01": [
                ":arg0",
                ":arg1",
                ":mod",
                ":time"
            ]
        },
        "head": "speak-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":time :op1 :arg0 XXX-VB :mod :arg1",
        "tree_rules": [
            ":time",
            ":mod",
            ":arg0",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/SBAR -)",
        "graph_rules": {
            "sure-02": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "sure-02",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 are XXX-JJ :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :arg2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":arg1",
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":op1 XXX-CC :mod i :arg2",
        "tree_rules": [
            ":arg1",
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "want-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "want-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/S - \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": ":op1 XXX-CC :op2",
        "tree_rules": [
            ":op1",
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1-of/WHNP - \n\t :arg2-of/S - \n\t :location/ADVP - \n\t :arg0-of/S -)",
        "graph_rules": {
            "snake": [
                ":arg1-of",
                ":arg2-of",
                ":location",
                ":arg0-of"
            ]
        },
        "head": "snake",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": true,
            "number": "plural"
        },
        "tree": ":location , :arg0-of , was one of :arg2-of :arg1-of XXX-NN :arg1-of :arg2-of",
        "tree_rules": [
            ":location",
            ":arg2-of",
            ":arg1-of",
            ":arg1-of",
            ":arg2-of",
            ":location",
            ":arg0-of"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :arg2/NP -)",
        "graph_rules": {
            "contrast-01": [
                ":arg1",
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-RB as :arg0 i made :arg1 :arg2",
        "tree_rules": [
            ":arg2",
            ":arg1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/CC -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC , :arg0 , :arg0 :op1",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :snt1/VB - \n\t :snt2/NP -)",
        "graph_rules": {
            "multi-sentence": [
                ":snt1",
                ":snt2"
            ]
        },
        "head": "multi-sentence",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": ":arg0 :snt1 the XXX-NN :mod :location :snt1 :time :arg1-of",
        "tree_rules": [
            ":snt1",
            ":snt1",
            ":snt2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :arg2/. -)",
        "graph_rules": {
            "mean-01": [
                ":arg1",
                ":arg2"
            ]
        },
        "head": "mean-01",
        "name": ":root",
        "noun_info": {},
        "tree": "what does :arg1 XXX-VB :arg2",
        "tree_rules": [
            ":arg1",
            ":arg2"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP -)",
        "graph_rules": {
            "demand-01": [
                ":arg0"
            ]
        },
        "head": "demand-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB",
        "tree_rules": [
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg2/PP - \n\t :purpose/. -)",
        "graph_rules": {
            "talk-01": [
                ":arg0",
                ":arg2",
                ":purpose"
            ]
        },
        "head": "talk-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":purpose are :arg0 XXX-VB :arg2 :purpose",
        "tree_rules": [
            ":arg2",
            ":arg0",
            ":purpose",
            ":purpose"
        ],
        "verb_info": {
            "tense": "present continuous",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP -)",
        "graph_rules": {
            "loosen-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "loosen-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 :arg1-of XXX-VB :arg1 :arg1-of",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/VP - \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 :op1 , XXX-CC :op2",
        "tree_rules": [
            ":op1",
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP - \n\t :time/ADVP -)",
        "graph_rules": {
            "and": [
                ":op2",
                ":time"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :time :arg1 :op2",
        "tree_rules": [
            ":time",
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VP - \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 :op1 , XXX-CC :op2",
        "tree_rules": [
            ":op1",
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP -)",
        "graph_rules": {
            "feel-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "feel-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1 :arg1-of",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/VP - \n\t :time/RB -)",
        "graph_rules": {
            "possible-01": [
                ":arg1",
                ":time"
            ]
        },
        "head": "possible-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":time :arg0 XXX-MD :arg1",
        "tree_rules": [
            ":time",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/PP - \n\t :manner/. -)",
        "graph_rules": {
            "know-01": [
                ":arg0",
                ":arg1",
                ":manner"
            ]
        },
        "head": "know-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":manner do :arg0 XXX-VB :arg1 :manner",
        "tree_rules": [
            ":arg1",
            ":arg0",
            ":manner",
            ":manner"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :purpose/S - \n\t :mod/ADVP -)",
        "graph_rules": {
            "come-01": [
                ":arg1",
                ":purpose",
                ":mod"
            ]
        },
        "head": "come-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 was :mod XXX-VB :purpose",
        "tree_rules": [
            ":purpose",
            ":mod",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/VB - \n\t :arg2/NP -)",
        "graph_rules": {
            "contrast-01": [
                ":arg1",
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {
            "form": "list",
            "inPP": true,
            "number": "plural"
        },
        "tree": ":arg0 :arg1 :arg1 to :arg1 , XXX-CC :arg2 :arg0",
        "tree_rules": [
            ":arg2",
            ":arg1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S - \n\t :arg1-of/ADVP -)",
        "graph_rules": {
            "realize-01": [
                ":arg0",
                ":arg1",
                ":arg1-of"
            ]
        },
        "head": "realize-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1-of :arg1-of :arg1",
        "tree_rules": [
            ":arg1-of",
            ":arg1",
            ":arg1-of",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/S - \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": ":op1 XXX-CC :op2",
        "tree_rules": [
            ":op1",
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/E - \n\t :arg2-of/VP - \n\t :arg1-of/IN -)",
        "graph_rules": {
            "look-01": [
                ":arg0",
                ":arg2-of",
                ":arg1-of"
            ]
        },
        "head": "look-01",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": ":arg2-of XXX-NN :arg2-of",
        "tree_rules": [
            ":arg2-of",
            ":arg1-of",
            ":arg2-of",
            ":arg0"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP -)",
        "graph_rules": {
            "have-03": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "have-03",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :op2",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :op2",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :op2",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :arg1-of/NP -)",
        "graph_rules": {
            "wait-01": [
                ":arg1",
                ":arg1-of"
            ]
        },
        "head": "wait-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 XXX-VB :arg1-of",
        "tree_rules": [
            ":arg1-of",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/VP -)",
        "graph_rules": {
            "possible-01": [
                ":arg1"
            ]
        },
        "head": "possible-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-MD :arg1",
        "tree_rules": [
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :mod/JJ - \n\t :mod -)",
        "graph_rules": {
            "man": [
                ":mod",
                ":mod"
            ]
        },
        "head": "man",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": ":mod :mod XXX-NN ,",
        "tree_rules": [
            ":mod",
            ":mod"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/LS - \n\t :arg1/VP - \n\t :arg2/PP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1",
                ":arg2"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg2 :arg1",
        "tree_rules": [
            ":arg2",
            ":arg0",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :mod/VP -)",
        "graph_rules": {
            "fear-01": [
                ":arg0",
                ":mod"
            ]
        },
        "head": "fear-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 was XXX-JJ , there :mod",
        "tree_rules": [
            ":arg0",
            ":mod"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :arg2",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :degree/RBR - \n\t :time/MD -)",
        "graph_rules": {
            "fear-01": [
                ":arg0",
                ":degree",
                ":time"
            ]
        },
        "head": "fear-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 :time be :mod :degree XXX-JJ :time",
        "tree_rules": [
            ":degree",
            ":time",
            ":time",
            ":arg0"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/SBAR - \n\t :mod/RB -)",
        "graph_rules": {
            "feel-01": [
                ":arg0",
                ":arg1",
                ":mod"
            ]
        },
        "head": "feel-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":frequency :mod :arg0 XXX-VB :arg1",
        "tree_rules": [
            ":mod",
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :op2",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :arg2/NP - \n\t :beneficiary/PP -)",
        "graph_rules": {
            "resemble-01": [
                ":arg1",
                ":arg2",
                ":beneficiary"
            ]
        },
        "head": "resemble-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":beneficiary , :arg1 was XXX-IN :arg2",
        "tree_rules": [
            ":arg2",
            ":beneficiary",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :mod/JJ -)",
        "graph_rules": {
            "man": [
                ":mod"
            ]
        },
        "head": "man",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": ":mod XXX-NN ,",
        "tree_rules": [
            ":mod"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0 - \n\t :arg1/VP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": "i XXX-VB , :arg0 :arg1",
        "tree_rules": [
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :arg2 :duration :arg1",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/JJ -)",
        "graph_rules": {
            "man": [
                ":mod"
            ]
        },
        "head": "man",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": ":mod XXX-NN ,",
        "tree_rules": [
            ":mod"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB , :arg1 that it is :mod :arg1 :arg2 :op3",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :arg2",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/VP - \n\t :arg2/PP - \n\t :arg1-of/ADVP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1",
                ":arg2",
                ":arg1-of"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg2 , :arg1-of the :arg1",
        "tree_rules": [
            ":arg2",
            ":arg1-of",
            ":arg0",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP -)",
        "graph_rules": {
            "know-01": [
                ":arg0"
            ]
        },
        "head": "know-01",
        "name": ":root",
        "noun_info": {},
        "tree": "yes , :arg0 XXX-VB",
        "tree_rules": [
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :arg2/S - \n\t :mod/RB -)",
        "graph_rules": {
            "resemble-01": [
                ":arg1",
                ":arg2",
                ":mod"
            ]
        },
        "head": "resemble-01",
        "name": ":root",
        "noun_info": {},
        "tree": "it is :mod XXX-IN :arg2",
        "tree_rules": [
            ":arg1",
            ":mod",
            ":arg2"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :arg1-of/JJ - \n\t :condition/SBAR -)",
        "graph_rules": {
            "look-01": [
                ":arg1",
                ":arg1-of",
                ":condition"
            ]
        },
        "head": "look-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":condition , it is :arg1-of to XXX-VB :time :arg1",
        "tree_rules": [
            ":arg1",
            ":arg1-of",
            ":condition"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/PP - \n\t :location/NP -)",
        "graph_rules": {
            "bloom-01": [
                ":arg0",
                ":location"
            ]
        },
        "head": "bloom-01",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": ":location are a XXX-NN :arg0",
        "tree_rules": [
            ":arg0",
            ":location"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP -)",
        "graph_rules": {
            "know-01": [
                ":arg0"
            ]
        },
        "head": "know-01",
        "name": ":root",
        "noun_info": {},
        "tree": "yes , :arg0 XXX-VB",
        "tree_rules": [
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :arg2/S - \n\t :mod/RB -)",
        "graph_rules": {
            "resemble-01": [
                ":arg1",
                ":arg2",
                ":mod"
            ]
        },
        "head": "resemble-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 is :mod XXX-IN :arg2",
        "tree_rules": [
            ":mod",
            ":arg2",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/CC - \n\t :arg1/IN -)",
        "graph_rules": {
            "cause-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "cause-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-IN :arg1-of was :arg1 :arg2",
        "tree_rules": [
            ":arg0",
            ":arg1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/JJ -)",
        "graph_rules": {
            "remember-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "remember-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :degree :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP -)",
        "graph_rules": {
            "know-01": [
                ":arg0"
            ]
        },
        "head": "know-01",
        "name": ":root",
        "noun_info": {},
        "tree": "yes , :arg0 XXX-VB",
        "tree_rules": [
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/SBAR -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {
            "form": "list",
            "inPP": false,
            "number": "plural"
        },
        "tree": "XXX-CC :time",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :arg2/NP -)",
        "graph_rules": {
            "resemble-01": [
                ":arg1",
                ":arg2"
            ]
        },
        "head": "resemble-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 is :degree , XXX-IN :arg2",
        "tree_rules": [
            ":arg2",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :quant/NP - \n\t :beneficiary/PP - \n\t :poss/PRP$ - \n\t :arg1-of/IN -)",
        "graph_rules": {
            "star": [
                ":quant",
                ":beneficiary",
                ":poss",
                ":arg1-of"
            ]
        },
        "head": "star",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": ":poss XXX-NN :mod",
        "tree_rules": [
            ":poss",
            ":arg1-of",
            ":quant",
            ":beneficiary"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC so :arg0 :op2 :arg2",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/S -)",
        "graph_rules": {
            "and": [
                ":op1"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC , besides , :arg3",
        "tree_rules": [
            ":op1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :mod/ADVP -)",
        "graph_rules": {
            "laugh-01": [
                ":arg0",
                ":mod"
            ]
        },
        "head": "laugh-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :mod",
        "tree_rules": [
            ":mod",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/LS - \n\t :arg1/S -)",
        "graph_rules": {
            "love-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "love-01",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": ":arg0 XXX-NN :arg1",
        "tree_rules": [
            ":arg0",
            ":arg1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/PRP$ - \n\t :arg1/NP -)",
        "graph_rules": {
            "present-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "present-01",
        "name": ":root",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": ":arg1 is :arg0 XXX-JJ",
        "tree_rules": [
            ":arg0",
            ":arg1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/ADVP -)",
        "graph_rules": {
            "that": [
                ":mod"
            ]
        },
        "head": "that",
        "name": ":root",
        "noun_info": {
            "form": "demonstrative",
            "inPP": false,
            "number": "singular"
        },
        "tree": ":mod XXX-DT",
        "tree_rules": [
            ":mod"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :arg2/NP -)",
        "graph_rules": {
            "resemble-01": [
                ":arg1",
                ":arg2"
            ]
        },
        "head": "resemble-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 will be XXX-IN :arg2",
        "tree_rules": [
            ":arg2",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple future",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "try-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "try-01",
        "name": ":root",
        "noun_info": {},
        "tree": "what are :arg0 XXX-VB :arg1 :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg2/CC -)",
        "graph_rules": {
            "answer-01": [
                ":arg0",
                ":arg2"
            ]
        },
        "head": "answer-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , :arg0 XXX-VB , :arg2 they are :polarity :arg2",
        "tree_rules": [
            ":arg0",
            ":arg2"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP -)",
        "graph_rules": {
            "guide-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "guide-01",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "plural"
        },
        "tree": ":arg0-of :arg1 , :arg0 are XXX-NN",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/RB - \n\t :arg1/PP -)",
        "graph_rules": {
            "opine-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "opine-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-IN :mod :domain are :mod :arg1",
        "tree_rules": [
            ":arg0",
            ":arg1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/VP -)",
        "graph_rules": {
            "opine-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "opine-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-IN :arg0 , :domain :arg1",
        "tree_rules": [
            ":arg0",
            ":arg1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/VP -)",
        "graph_rules": {
            "opine-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "opine-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-IN :arg0 :domain :arg1",
        "tree_rules": [
            ":arg0",
            ":arg1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :domain :arg2",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP - \n\t :arg1-of/IN -)",
        "graph_rules": {
            "have-03": [
                ":arg0",
                ":arg1",
                ":arg1-of"
            ]
        },
        "head": "have-03",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 :mod will XXX-VB :arg1 :arg1-of :arg2",
        "tree_rules": [
            ":arg1-of",
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple future",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "try-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "try-01",
        "name": ":root",
        "noun_info": {},
        "tree": "what are :arg0 XXX-VB :arg1 :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :location/IN -)",
        "graph_rules": {
            "live-01": [
                ":arg0",
                ":location"
            ]
        },
        "head": "live-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":location :quant of :arg0 XXX-MD :arg1-of",
        "tree_rules": [
            ":location",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :location/IN -)",
        "graph_rules": {
            "laugh-01": [
                ":arg0",
                ":location"
            ]
        },
        "head": "laugh-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":location :quant :arg0 shall be XXX-VB",
        "tree_rules": [
            ":location",
            ":location",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/IN -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC so :arg1 will be :op2 if :time",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :op2",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/ADJP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :time :arg1 :time :arg1-of :arg1",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/PRP$ - \n\t :arg2/VP - \n\t :time/ADVP -)",
        "graph_rules": {
            "have-rel-role-91": [
                ":arg0",
                ":arg1",
                ":arg2",
                ":time"
            ]
        },
        "head": "have-rel-role-91",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-MD :time :arg2",
        "tree_rules": [
            ":arg1",
            ":time",
            ":arg2",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NN -)",
        "graph_rules": {
            "want-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "want-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 will XXX-VB to :arg1 :accompanier",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple future",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/VP - \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :op1 and :op2 :arg1",
        "tree_rules": [
            ":op1",
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/SBAR - \n\t :mod/ADJP -)",
        "graph_rules": {
            "trick-01": [
                ":arg0",
                ":arg1",
                ":mod"
            ]
        },
        "head": "trick-01",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": ":degree will be a :mod XXX-NN :arg1",
        "tree_rules": [
            ":arg0",
            ":mod",
            ":arg1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :op2",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/E -)",
        "graph_rules": {
            "resemble-01": [
                ":arg1"
            ]
        },
        "head": "resemble-01",
        "name": ":root",
        "noun_info": {},
        "tree": "it will be XXX-IN if , :arg1 , :arg0 :arg2",
        "tree_rules": [
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple future",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :op2",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":time :time , XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :arg0/NP - \n\t :arg1/NP -)",
        "graph_rules": {
            "leave-15": [
                ":polarity",
                ":arg0",
                ":arg1"
            ]
        },
        "head": "leave-15",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 shall :polarity XXX-VB :arg1 ,",
        "tree_rules": [
            ":arg1",
            ":polarity",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP -)",
        "graph_rules": {
            "say-01": [
                ":arg0"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB",
        "tree_rules": [
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/IN -)",
        "graph_rules": {
            "look-02": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "look-02",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 shall XXX-VB as :arg1 :arg2",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/IN - \n\t :degree/PP -)",
        "graph_rules": {
            "look-02": [
                ":arg0",
                ":arg1",
                ":degree"
            ]
        },
        "head": "look-02",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 shall XXX-VB :degree",
        "tree_rules": [
            ":arg1",
            ":degree",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :arg2/NP -)",
        "graph_rules": {
            "resemble-01": [
                ":arg1",
                ":arg2"
            ]
        },
        "head": "resemble-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 is XXX-IN :arg2",
        "tree_rules": [
            ":arg2",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :arg1 - \n\t :purpose/S -)",
        "graph_rules": {
            "come-01": [
                ":polarity",
                ":arg1",
                ":purpose"
            ]
        },
        "head": "come-01",
        "name": ":root",
        "noun_info": {},
        "tree": "do :polarity XXX-VB :purpose",
        "tree_rules": [
            ":purpose",
            ":polarity"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/PRT - \n\t :arg1/NP - \n\t :arg2/SBAR -)",
        "graph_rules": {
            "worth-02": [
                ":polarity",
                ":arg1",
                ":arg2"
            ]
        },
        "head": "worth-02",
        "name": ":root",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": ":arg1 is :polarity XXX-JJ :arg2",
        "tree_rules": [
            ":arg2",
            ":polarity",
            ":arg1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :arg0/NP - \n\t :arg1/NP -)",
        "graph_rules": {
            "leave-15": [
                ":polarity",
                ":arg0",
                ":arg1"
            ]
        },
        "head": "leave-15",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 shall :polarity XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":polarity",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg1 :arg2",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/IN - \n\t :arg2/NP -)",
        "graph_rules": {
            "tell-01": [
                ":arg0",
                ":arg1",
                ":arg2"
            ]
        },
        "head": "tell-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg2 it is :mod :arg0",
        "tree_rules": [
            ":arg2",
            ":arg0",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/VP -)",
        "graph_rules": {
            "obligate-01": [
                ":arg1"
            ]
        },
        "head": "obligate-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-MD :polarity :arg1",
        "tree_rules": [
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :mod/VP -)",
        "graph_rules": {
            "snake": [
                ":mod"
            ]
        },
        "head": "snake",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "plural"
        },
        "tree": "XXX-NN they :mod",
        "tree_rules": [
            ":mod"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/VP -)",
        "graph_rules": {
            "possible-01": [
                ":arg1"
            ]
        },
        "head": "possible-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-MD :arg1",
        "tree_rules": [
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :arg0/NP - \n\t :arg1/NP -)",
        "graph_rules": {
            "leave-15": [
                ":polarity",
                ":arg0",
                ":arg1"
            ]
        },
        "head": "leave-15",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 shall :polarity XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":polarity",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg1 :arg2 it is :arg1 :arg1",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :arg0/NP - \n\t :arg1/S - \n\t :time/NP-TMP -)",
        "graph_rules": {
            "see-01": [
                ":polarity",
                ":arg0",
                ":arg1",
                ":time"
            ]
        },
        "head": "see-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":time :arg0 :polarity :polarity XXX-VB :arg1",
        "tree_rules": [
            ":time",
            ":arg1",
            ":polarity",
            ":polarity",
            ":time",
            ":arg0"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :source/PP - \n\t :manner/IN -)",
        "graph_rules": {
            "get-away-08": [
                ":arg0",
                ":source",
                ":manner"
            ]
        },
        "head": "get-away-08",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB away :source :manner :polarity",
        "tree_rules": [
            ":manner",
            ":manner",
            ":source",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/PP - \n\t :time/VP -)",
        "graph_rules": {
            "succeed-01": [
                ":arg0",
                ":arg1",
                ":time"
            ]
        },
        "head": "succeed-01",
        "name": ":root",
        "noun_info": {},
        "tree": "when :arg0 XXX-VB :arg1 he :time",
        "tree_rules": [
            ":arg1",
            ":arg0",
            ":time"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/PP - \n\t :arg2/PP - \n\t :manner/FRAG -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1",
                ":arg2",
                ":manner"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg2 :arg1",
        "tree_rules": [
            ":manner",
            ":arg2",
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :location/VP -)",
        "graph_rules": {
            "you": [
                ":location"
            ]
        },
        "head": "you",
        "name": ":root",
        "noun_info": {
            "form": "pronoun",
            "inPP": false,
            "number": "singular"
        },
        "tree": "XXX-PRP :location",
        "tree_rules": [
            ":location"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :op2",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg1 :arg2",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/PP - \n\t :arg1-of/ADJP -)",
        "graph_rules": {
            "come-01": [
                ":arg1",
                ":arg1-of"
            ]
        },
        "head": "come-01",
        "name": ":root",
        "noun_info": {},
        "tree": "it was :arg1-of to XXX-VB",
        "tree_rules": [
            ":arg1",
            ":arg1-of"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP -)",
        "graph_rules": {
            "suffer-01": [
                ":arg0"
            ]
        },
        "head": "suffer-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 will XXX-VB",
        "tree_rules": [
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple future",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/IN - \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1-of XXX-CC :op2",
        "tree_rules": [
            ":op1",
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/RB -)",
        "graph_rules": {
            "understand-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "understand-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB it is :degree :arg1",
        "tree_rules": [
            ":arg0",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :arg1/VP -)",
        "graph_rules": {
            "possible-01": [
                ":polarity",
                ":arg1"
            ]
        },
        "head": "possible-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-MD :polarity :arg1",
        "tree_rules": [
            ":polarity",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :degree/NP -)",
        "graph_rules": {
            "heavy": [
                ":degree"
            ]
        },
        "head": "heavy",
        "name": ":root",
        "noun_info": {},
        "tree": ":degree is :degree XXX-JJ",
        "tree_rules": [
            ":degree",
            ":degree"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg2/IN -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {
            "form": "list",
            "inPP": false,
            "number": "plural"
        },
        "tree": "XXX-CC :arg1",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/IN - \n\t :arg0/NP -)",
        "graph_rules": {
            "sad-02": [
                ":polarity",
                ":arg0"
            ]
        },
        "head": "sad-02",
        "name": ":root",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": "there is :polarity XXX-JJ :polarity :arg0",
        "tree_rules": [
            ":polarity",
            ":polarity",
            ":arg0"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :degree/NP -)",
        "graph_rules": {
            "discourage-01": [
                ":arg1",
                ":degree"
            ]
        },
        "head": "discourage-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 was :degree XXX-VB",
        "tree_rules": [
            ":degree",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :arg2 you know , :arg1",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/PP -)",
        "graph_rules": {
            "look-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "look-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 , :mod , shall XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :domain/VP - \n\t :mod/DT -)",
        "graph_rules": {
            "star": [
                ":domain",
                ":mod"
            ]
        },
        "head": "star",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "plural"
        },
        "tree": ":mod the XXX-NN :domain",
        "tree_rules": [
            ":mod",
            ":domain",
            ":domain"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP - \n\t :purpose/PP - \n\t :direction/RP -)",
        "graph_rules": {
            "pour-01": [
                ":arg0",
                ":arg1",
                ":purpose",
                ":direction"
            ]
        },
        "head": "pour-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 will XXX-VB :direction :arg1",
        "tree_rules": [
            ":purpose",
            ":direction",
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple future",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :degree/RB -)",
        "graph_rules": {
            "amuse-01": [
                ":arg0",
                ":degree"
            ]
        },
        "head": "amuse-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 will be :degree XXX-JJ",
        "tree_rules": [
            ":degree",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple future",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/S - \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": ":op1 , XXX-CC :op2",
        "tree_rules": [
            ":op1",
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :degree :op2",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :location/RB -)",
        "graph_rules": {
            "it": [
                ":location"
            ]
        },
        "head": "it",
        "name": ":root",
        "noun_info": {
            "form": "pronoun",
            "inPP": false,
            "number": "singular"
        },
        "tree": ":location XXX-PRP is",
        "tree_rules": [
            ":location"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0 - \n\t :arg1/S -)",
        "graph_rules": {
            "allow-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "allow-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-VB :arg1",
        "tree_rules": [
            ":arg1"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg1 :op2",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/S - \n\t :time/ADVP - \n\t :mod/ADVP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1",
                ":time",
                ":mod"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":time :arg0 XXX-VB , :mod :arg1",
        "tree_rules": [
            ":mod",
            ":time",
            ":arg0",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg2/PP -)",
        "graph_rules": {
            "responsible-03": [
                ":arg0",
                ":arg2"
            ]
        },
        "head": "responsible-03",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 am XXX-JJ :arg2",
        "tree_rules": [
            ":arg2",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg1 :op2",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :degree/RB - \n\t :domain/. -)",
        "graph_rules": {
            "naive": [
                ":degree",
                ":domain"
            ]
        },
        "head": "naive",
        "name": ":root",
        "noun_info": {},
        "tree": ":domain is :degree XXX-JJ :domain",
        "tree_rules": [
            ":degree",
            ":domain",
            ":domain"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP - \n\t :purpose/PP -)",
        "graph_rules": {
            "have-03": [
                ":arg0",
                ":arg1",
                ":purpose"
            ]
        },
        "head": "have-03",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1",
        "tree_rules": [
            ":purpose",
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :arg1-of/SBAR -)",
        "graph_rules": {
            "sit-down-02": [
                ":arg1",
                ":arg1-of"
            ]
        },
        "head": "sit-down-02",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 :degree XXX-VB :arg1-of , :arg1-of",
        "tree_rules": [
            ":arg1-of",
            ":arg1-of",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :mod/VP - \n\t :time/ADVP -)",
        "graph_rules": {
            "that": [
                ":mod",
                ":time"
            ]
        },
        "head": "that",
        "name": ":root",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": "there :time XXX-WDT :mod",
        "tree_rules": [
            ":time",
            ":mod"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :snt1/VP - \n\t :snt2/S -)",
        "graph_rules": {
            "multi-sentence": [
                ":snt1",
                ":snt2"
            ]
        },
        "head": "multi-sentence",
        "name": ":root",
        "noun_info": {},
        "tree": ":snt1 XXX-RB :snt1 :snt2",
        "tree_rules": [
            ":snt1",
            ":snt1",
            ":snt2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP -)",
        "graph_rules": {
            "step-01": [
                ":arg1"
            ]
        },
        "head": "step-01",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": ":arg1 took one XXX-NN",
        "tree_rules": [
            ":arg1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/VP - \n\t :polarity/RB -)",
        "graph_rules": {
            "possible-01": [
                ":arg1",
                ":polarity"
            ]
        },
        "head": "possible-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 XXX-MD :polarity :arg1",
        "tree_rules": [
            ":polarity",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :arg2/NP -)",
        "graph_rules": {
            "contrast-01": [
                ":arg1",
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": "there was :arg1 XXX-CC :arg2 :arg2",
        "tree_rules": [
            ":arg2",
            ":arg1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :duration/PP - \n\t :manner/ADJP -)",
        "graph_rules": {
            "remain-01": [
                ":arg1",
                ":duration",
                ":manner"
            ]
        },
        "head": "remain-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 XXX-VB :manner :duration",
        "tree_rules": [
            ":manner",
            ":duration",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :polarity/RB -)",
        "graph_rules": {
            "cry-out-03": [
                ":arg0",
                ":polarity"
            ]
        },
        "head": "cry-out-03",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 :polarity :polarity XXX-VB out",
        "tree_rules": [
            ":polarity",
            ":polarity",
            ":arg0"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :manner/ADVP -)",
        "graph_rules": {
            "fall-01": [
                ":arg1",
                ":manner"
            ]
        },
        "head": "fall-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 XXX-VB :degree :manner :compared-to",
        "tree_rules": [
            ":manner",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polarity/RB - \n\t :mod/DT - \n\t :arg1-of/IN -)",
        "graph_rules": {
            "sound-02": [
                ":polarity",
                ":mod",
                ":arg1-of"
            ]
        },
        "head": "sound-02",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": true,
            "number": "singular"
        },
        "tree": "there was :polarity :mod :mod XXX-NN , :arg1-of :arg0",
        "tree_rules": [
            ":mod",
            ":arg1-of",
            ":polarity"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/NP -)",
        "graph_rules": {
            "chapter": [
                ":mod"
            ]
        },
        "head": "chapter",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": "XXX-NN :mod",
        "tree_rules": [
            ":mod"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP - \n\t :time/ADVP -)",
        "graph_rules": {
            "and": [
                ":op2",
                ":time"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :time :arg1 :op2",
        "tree_rules": [
            ":time",
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/E - \n\t :arg0/NP - \n\t :arg1/NP - \n\t :time/ADVP - \n\t :time -)",
        "graph_rules": {
            "tell-01": [
                ":polarity",
                ":arg0",
                ":arg1",
                ":time",
                ":time"
            ]
        },
        "head": "tell-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 have :time :time XXX-VB :arg1",
        "tree_rules": [
            ":time",
            ":arg1",
            ":time",
            ":arg0",
            ":polarity"
        ],
        "verb_info": {
            "tense": "present perfect",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/S - \n\t :arg1/NP - \n\t :mod/RB -)",
        "graph_rules": {
            "content-01": [
                ":arg0",
                ":arg1",
                ":mod"
            ]
        },
        "head": "content-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 were :mod XXX-JJ :arg0",
        "tree_rules": [
            ":mod",
            ":arg0",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/S - \n\t :arg2/S -)",
        "graph_rules": {
            "contrast-01": [
                ":arg1",
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , XXX-CC :arg2 :arg1",
        "tree_rules": [
            ":arg1",
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :time/ADVP - \n\t :degree/NP -)",
        "graph_rules": {
            "comfort-01": [
                ":arg1",
                ":time",
                ":degree"
            ]
        },
        "head": "comfort-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":time :arg1 is XXX-VB :degree",
        "tree_rules": [
            ":degree",
            ":time",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/ADVP -)",
        "graph_rules": {
            "say-01": [
                ":arg1"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": "that is to XXX-VB :polarity",
        "tree_rules": [
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg2/VP -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :arg2",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/NP - \n\t :op2/NP -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": ":polarity XXX-CC :time :time :arg0",
        "tree_rules": [
            ":op1",
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :arg2/NP -)",
        "graph_rules": {
            "resemble-01": [
                ":arg1",
                ":arg2"
            ]
        },
        "head": "resemble-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 is XXX-IN :quant :arg2",
        "tree_rules": [
            ":arg2",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg2/NP -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC there is :arg2 :time",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :polarity/E - \n\t :time/ADVP - \n\t :arg1/S -)",
        "graph_rules": {
            "possible-01": [
                ":polarity",
                ":time",
                ":arg1"
            ]
        },
        "head": "possible-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 will :time have been XXX-JJ :arg1",
        "tree_rules": [
            ":arg1",
            ":time",
            ":polarity"
        ],
        "verb_info": {
            "tense": "future perfect",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/VP - \n\t :time/ADVP -)",
        "graph_rules": {
            "keep-02": [
                ":arg1",
                ":time"
            ]
        },
        "head": "keep-02",
        "name": ":root",
        "noun_info": {},
        "tree": ":time :arg0 XXX-VB :arg1 :arg1 :mod",
        "tree_rules": [
            ":arg1",
            ":time"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/VP -)",
        "graph_rules": {
            "possible-01": [
                ":arg1"
            ]
        },
        "head": "possible-01",
        "name": ":root",
        "noun_info": {
            "form": "",
            "inPP": false,
            "number": ""
        },
        "tree": "XXX-RB the :arg0 :arg1",
        "tree_rules": [
            ":arg1"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/. - \n\t :arg2 - \n\t :time/PP -)",
        "graph_rules": {
            "say-01": [
                ":arg0",
                ":arg1",
                ":arg2",
                ":time"
            ]
        },
        "head": "say-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":time :arg0 XXX-VB to myself :arg1-of :arg2 :arg1",
        "tree_rules": [
            ":time",
            ":arg0",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op1/S - \n\t :op2/S -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": ":op1 , XXX-CC :op2",
        "tree_rules": [
            ":op1",
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1/NP - \n\t :time/ADVP -)",
        "graph_rules": {
            "happy-01": [
                ":arg1",
                ":time"
            ]
        },
        "head": "happy-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":time :arg1 am XXX-JJ",
        "tree_rules": [
            ":time",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC there :op2",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg2/S -)",
        "graph_rules": {
            "contrast-01": [
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg2 at :mod , :arg1 :mod",
        "tree_rules": [
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/S - \n\t :op2/S - \n\t :time/IN -)",
        "graph_rules": {
            "or": [
                ":op1",
                ":op2",
                ":time"
            ]
        },
        "head": "or",
        "name": ":root",
        "noun_info": {},
        "tree": ":op1 , XXX-CC :op2",
        "tree_rules": [
            ":time",
            ":time",
            ":op1",
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :time :arg1 :op2",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :mod/JJ - \n\t :time/ADVP - \n\t :location/ADVP -)",
        "graph_rules": {
            "mystery": [
                ":mod",
                ":time",
                ":location"
            ]
        },
        "head": "mystery",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": ":location , :time , is a :mod XXX-NN",
        "tree_rules": [
            ":mod",
            ":location",
            ":time"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0 - \n\t :arg1/NP - \n\t :direction/PRT -)",
        "graph_rules": {
            "look-01": [
                ":arg0",
                ":arg1",
                ":direction"
            ]
        },
        "head": "look-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-VB :direction :direction :arg1",
        "tree_rules": [
            ":direction",
            ":arg1",
            ":direction"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/CC - \n\t :arg2 -)",
        "graph_rules": {
            "ask-01": [
                ":arg0",
                ":arg1",
                ":arg2"
            ]
        },
        "head": "ask-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-VB :arg0",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/S - \n\t :arg1/NP -)",
        "graph_rules": {
            "eat-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "eat-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg0 XXX-VB :arg1",
        "tree_rules": [
            ":arg1",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple past",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :arg0 :op2",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op2/NP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC :op2",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/NP -)",
        "graph_rules": {
            "opine-01": [
                ":arg0",
                ":arg1"
            ]
        },
        "head": "opine-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":domain is , XXX-TO :arg0 , :arg1",
        "tree_rules": [
            ":arg0",
            ":arg1"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg1/S - \n\t :arg2/S -)",
        "graph_rules": {
            "contrast-01": [
                ":arg1",
                ":arg2"
            ]
        },
        "head": "contrast-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":arg1 , XXX-CC :arg2",
        "tree_rules": [
            ":arg1",
            ":arg2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :op1/VP - \n\t :op2/VP - \n\t :location/ADVP -)",
        "graph_rules": {
            "and": [
                ":op1",
                ":op2",
                ":location"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "it is :location that :arg1 :op1 , XXX-CC :op2",
        "tree_rules": [
            ":op1",
            ":op2",
            ":location"
        ],
        "verb_info": {
            "tense": "simple present",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1/PP - \n\t :manner/ADVP - \n\t :purpose/S -)",
        "graph_rules": {
            "look-01": [
                ":arg0",
                ":arg1",
                ":manner",
                ":purpose"
            ]
        },
        "head": "look-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-VB :arg1 :manner that :purpose :arg0 :condition",
        "tree_rules": [
            ":arg0",
            ":manner",
            ":purpose",
            ":arg1"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :op2/VP -)",
        "graph_rules": {
            "and": [
                ":op2"
            ]
        },
        "head": "and",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-CC , :condition :op2",
        "tree_rules": [
            ":op2"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg1 - \n\t :duration/PP - \n\t :location/IN -)",
        "graph_rules": {
            "wait-01": [
                ":arg1",
                ":duration",
                ":location"
            ]
        },
        "head": "wait-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-VB :duration , :manner :location :op1",
        "tree_rules": [
            ":location",
            ":duration"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :arg0/NP - \n\t :arg1 - \n\t :condition/SBAR -)",
        "graph_rules": {
            "know-01": [
                ":arg0",
                ":arg1",
                ":condition"
            ]
        },
        "head": "know-01",
        "name": ":root",
        "noun_info": {},
        "tree": ":time , :condition , :arg0 will XXX-VB who he is",
        "tree_rules": [
            ":condition",
            ":arg0"
        ],
        "verb_info": {
            "tense": "simple future",
            "voice": "active"
        }
    },
    {
        "graph": "(XXX \n\t :polite/VB - \n\t :arg0 - \n\t :arg1/NP - \n\t :condition/SBAR -)",
        "graph_rules": {
            "comfort-01": [
                ":polite",
                ":arg0",
                ":arg1",
                ":condition"
            ]
        },
        "head": "comfort-01",
        "name": ":root",
        "noun_info": {
            "form": "description",
            "inPP": false,
            "number": "singular"
        },
        "tree": ":condition , :polite XXX-NN :arg1",
        "tree_rules": [
            ":arg1",
            ":polite",
            ":condition"
        ],
        "verb_info": {}
    },
    {
        "graph": "(XXX \n\t :arg0 - \n\t :arg1/NP - \n\t :arg2/NP -)",
        "graph_rules": {
            "send-01": [
                ":arg0",
                ":arg1",
                ":arg2"
            ]
        },
        "head": "send-01",
        "name": ":root",
        "noun_info": {},
        "tree": "XXX-VB :arg2 :arg1 :arg1",
        "tree_rules": [
            ":arg2",
            ":arg1"
        ],
        "verb_info": {
            "tense": "infinitive",
            "voice": "active"
        }
    }
]