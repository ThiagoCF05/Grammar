# AMR release; corpus: lpp; section: training; number of AMRs: 1274 (generated on Fri Mar 4, 2016 at 21:03:52)

#
# ::snt chapter 7 .
#
#
(c / chapter~e.0 
	 :mod 7~e.1)

#
# ::snt on the fifth day -- again , as always , it was thanks to the sheep -- the secret of the little prince 's life was revealed to me .
#
#
(r / reveal-01~e.26 
	 :arg0 (s / sheep~e.15 
		 :arg1-of (t / thank-01~e.12)) 
	 :arg1 (s2 / secret~e.18 
		 :poss~e.0 (l / life~e.24 
			 :poss~e.23 (p / prince~e.22 
				 :mod (l2 / little~e.21)))) 
	 :arg2 (i / i~e.28) 
	 :time~e.7 (d / day~e.3 
		 :ord~e.2 (o / ordinal-entity~e.2 
			 :value 5~e.2)) 
	 :mod (a / again~e.5) 
	 :time~e.7 (a2 / always~e.8))

#
# ::snt abruptly , without anything to lead up to it , and as if the question had been born of long and silent meditation on his problem , he demanded : " a sheep -- if it eats little bushes , does it eat flowers , too ? "
#
#
(d / demand-01~e.28 
	 :arg0 (h / he~e.27) 
	 :arg1 (e / eat-01~e.42 
		 :arg0 (s / sheep~e.32) 
		 :arg1 (f / flower~e.43 
			 :mod (t / too~e.45)) 
		 :condition~e.34 (e2 / eat-01~e.36 
			 :arg0 coref 
			 :arg1 (b / bush~e.38 
				 :mod (l / little~e.37)))) 
	 :manner~e.2 (a / abrupt~e.0) 
	 :conj-as-if~e.12 (b2 / bear-02~e.17 
		 :arg0 (m / meditate-01~e.22 
			 :arg1 (p / problem~e.25 
				 :poss~e.24 coref) 
			 :arg1-of (l3 / long-03~e.19) 
			 :manner (s2 / silent~e.21)) 
		 :arg1 (t2 / thing~e.14 
			 :arg1-of~e.15 (q / question-01~e.14))) 
	 :arg2-of~e.4 (l2 / lead-up-05~e.5 
		 :polarity -~e.40 
		 :arg1 (a2 / anything~e.3)))

#
# ::snt " a sheep , "
#
#
(s / sheep~e.2)

#
# ::snt i answered , " eats anything it finds in its reach . "
#
#
(a / answer-01~e.1 
	 :arg0 (i / i~e.0) 
	 :arg1 (e / eat-01~e.4 
		 :arg1 (a2 / anything~e.5 
			 :arg1-of (f / find-01~e.7 
				 :arg0 (i2 / it~e.9) 
				 :location~e.8 (r / reach-03~e.10 
					 :arg0 coref)))))

#
# ::snt " even flowers that have thorns ? "
#
#
(f / flower~e.2 
	 :mode~e.3 interrogative~e.6 
	 :mod (e / even~e.1) 
	 :arg0-of (h / have-03~e.4 
		 :arg1 (t / thorn~e.5)))

#
# ::snt " yes , even flowers that have thorns . "
#
#
(f / flower~e.4 
	 :mod (e / even~e.3) 
	 :arg0-of (h / have-03~e.6 
		 :arg1 (t / thorn~e.7)))

#
# ::snt " then the thorns -- what use are they ? "
#
#
(h / have-purpose-91~e.1 
	 :arg1 (t / thorn~e.3) 
	 :arg2 (a / amr-unknown~e.5) 
	 :arg1-of (h2 / have-condition-91~e.6))

#
# ::snt i did not know .
#
#
(k / know-01~e.3 
	 :arg0 (i / i~e.0) 
	 :polarity~e.2 -~e.1)

#
# ::snt at that moment i was very busy trying to unscrew a bolt that had got stuck in my engine .
#
#
(t / try-01~e.7 
	 :arg0 (i / i~e.3 
		 :arg1-of (b2 / busy-01~e.6 
			 :degree (v / very~e.5))) 
	 :arg1 (u / unscrew-01~e.9 
		 :arg0 coref 
		 :arg1 (b / bolt~e.11 
			 :arg1-of~e.12 (s / stick-01~e.15 
				 :arg2 (e / engine~e.18 
					 :poss~e.17 coref)))) 
	 :time~e.0 (m / moment~e.2 
		 :mod (t2 / that~e.1)))

#
# ::snt i was very much worried , for it was becoming clear to me that the breakdown of my plane was extremely serious .
#
#
(c2 / cause-01~e.13 
	 :arg0 (c / clear-06~e.10 
		 :arg1 (s / serious-02~e.21 
			 :arg1 (b / break-down-12~e.15 
				 :arg1 (p / plane~e.18 
					 :poss~e.17 (i / i~e.0))) 
			 :degree (e / extreme~e.20)) 
		 :arg2 (i / i~e.0)) 
	 :arg1 (w / worry-01~e.4 
		 :arg1 coref 
		 :quant (m / much~e.3 
			 :degree (v / very~e.2))))

#
# ::snt and i had so little drinking - water left that i had to fear for the worst .
#
#
(a / and~e.0 
	 :op1 (h / have-03~e.2 
		 :arg0 (i / i~e.1) 
		 :arg1 (w / water~e.7 
			 :purpose~e.12 (d / drink-01~e.5) 
			 :mod (l / little~e.4 
				 :degree (s / so~e.3)) 
			 :arg1-of~e.9 (l2 / leave-17~e.8)) 
		 :arg0-of (o / obligate-01~e.14 
			 :arg1 coref 
			 :arg2 (f / fear-01~e.13 
				 :arg0 coref 
				 :arg1 (b / bad-07~e.16 
					 :degree (m / most~e.16))))))

#
# ::snt " the thorns - - what use are they ? "
#
#
(u / use-01~e.6 
	 :arg1 (t / thorn~e.2) 
	 :arg2 (a / amr-unknown~e.5))

#
# ::snt the little prince never let go of a question , once he had asked it .
#
#
(l / let-01~e.4 
	 :polarity~e.3 -~e.3 
	 :arg0 (p / prince~e.2 
		 :mod (l2 / little~e.1)) 
	 :arg1 (g / go-01~e.5 
		 :arg1 (t / thing~e.8 
			 :arg1-of~e.12 (q / question-01~e.8 
				 :arg0 coref))) 
	 :time (o / once~e.10 
		 :op1 (a / ask-01~e.13 
			 :arg0 coref 
			 :arg1 coref)))

#
# ::snt as for me , i was upset over that bolt .
#
#
(u / upset-01~e.6 
	 :arg0 (b / bolt~e.9 
		 :mod (t / that~e.8)) 
	 :arg1 (i / i~e.4))

#
# ::snt and i answered with the first thing that came into my head : " the thorns are of no use at all .
#
#
(a / and~e.0 
	 :op1 (a2 / answer-01~e.2 
		 :arg0 (i / i~e.1) 
		 :arg2 (t / thing~e.6 
			 :ord~e.3 (o / ordinal-entity~e.5 
				 :value 1) 
			 :arg1-of (c / come-01~e.8 
				 :arg4~e.9 (h / head~e.11 
					 :part-of~e.10 coref)) 
			 :domain~e.21 (u / use-01~e.19 
				 :polarity~e.18 -~e.18 
				 :arg1 (t2 / thorn~e.15) 
				 :arg2 (a3 / anything~e.17)))))

#
# ::snt flowers have thorns just for spite ! "
#
#
(h / have-03~e.1 
	 :arg0 (f / flower~e.0) 
	 :arg1 (t / thorn~e.2) 
	 :purpose~e.4 (s / spite~e.5) 
	 :mod (j / just~e.3))

#
# ::snt " oh ! "
#
#
(o / oh~e.1 
	 :mode~e.2 expressive~e.2)

#
# ::snt there was a moment of complete silence .
#
#
(m / moment~e.3 
	 :arg1-of (c / compose-01~e.5 
		 :arg2 (s / silent~e.6 
			 :arg1-of (c2 / complete-02~e.5))))

#
# ::snt then the little prince flashed back at me , with a kind of resentfulness : " i do n't believe you !
#
#
(f / flash-01~e.4 
	 :arg0 (p / prince~e.3 
		 :mod (l / little~e.2)) 
	 :arg1 (b / believe-01~e.19 
		 :polarity~e.18 -~e.17 
		 :arg0 coref 
		 :arg1 (i / i~e.16)) 
	 :arg2 (i / i~e.16) 
	 :time (t / then~e.0) 
	 :manner~e.9 (r / resent-01~e.13 
		 :arg0 coref 
		 :mod (k / kind~e.11)) 
	 :direction~e.6 (b2 / back~e.5))

#
# ::snt flowers are weak creatures .
#
#
(c / creature~e.3 
	 :arg1-of (w / weak-02~e.2) 
	 :domain (f / flower~e.0))

#
# ::snt they are na√Øve .
#
#
(n / naive~e.2 
	 :domain (t / they~e.0))

#
# ::snt they reassure themselves as best they can .
#
#
(r / reassure-01~e.1 
	 :arg0 (t / they~e.0) 
	 :arg1 coref 
	 :arg2-of (g / good-03~e.2 
		 :arg1 coref 
		 :degree (m / most~e.4) 
		 :compared-to~e.3 (p2 / possible-01~e.6 
			 :arg1 (r2 / reassure-01~e.1 
				 :arg0 coref 
				 :arg1 coref))))

#
# ::snt they believe that their thorns are terrible weapons ... "
#
#
(b2 / believe-01~e.1 
	 :arg0 (t / they~e.0) 
	 :arg1 (w / weapon~e.7 
		 :domain (t2 / thorn~e.4 
			 :poss~e.3 coref) 
		 :arg1-of (t3 / terrible-01~e.6)))

#
# ::snt i did not answer .
#
#
(a / answer-01~e.3 
	 :arg0 (i / i~e.0) 
	 :polarity~e.2 -~e.1)

#
# ::snt at that instant i was saying to myself : " if this bolt still will n't turn , i am going to knock it out with the hammer . "
#
#
(s / say-01~e.5 
	 :arg0 (i / i~e.3) 
	 :arg1 (k / knock-out-03~e.22 
		 :arg0 coref 
		 :arg1 (b / bolt~e.12 
			 :mod (t3 / this~e.11)) 
		 :arg2 (h / hammer~e.27) 
		 :condition~e.10 (t2 / turn-01~e.16 
			 :polarity~e.15 - 
			 :arg1 (b / bolt~e.12 
				 :mod (t3 / this~e.11)) 
			 :mod (s2 / still~e.13))) 
	 :arg2 coref 
	 :time~e.0 (i2 / instant~e.2 
		 :mod (t / that~e.1)))

#
# ::snt again the little prince disturbed my thoughts .
#
#
(d / disturb-01~e.4 
	 :arg0 (p / prince~e.3 
		 :mod (l / little~e.2)) 
	 :arg1 (t / think-01~e.6 
		 :arg0 (i / i~e.5)) 
	 :mod (a / again~e.0))

#
# ::snt " and you actually believe that the flowers - - "
#
#
(a / and~e.1 
	 :op1 (b / believe-01~e.4 
		 :arg0 (y / you~e.2) 
		 :arg1 (d / do-02~e.5 
			 :arg0 (f / flower~e.7)) 
		 :arg1-of (a2 / actual-02~e.3)))

#
# ::snt " oh , no ! "
#
#
(n / no~e.3 
	 :mod (o / oh~e.1 
		 :mode~e.4 expressive~e.4))

#
# ::snt i cried .
#
#
(c / cry-01~e.1 
	 :arg0 (i / i~e.0))

#
# ::snt " no , no no !
#
#
(n / no~e.3 
	 :quant 3~e.5)

#
# ::snt i do n't believe anything .
#
#
(b2 / believe-01~e.3 
	 :polarity~e.2 -~e.1 
	 :arg0 (i / i~e.0) 
	 :arg1 (a2 / anything~e.4))

#
# ::snt i answered you with the first thing that came into my head .
#
#
(a / answer-01~e.1 
	 :arg0 (i / i~e.0) 
	 :arg1 (y / you~e.2) 
	 :arg2 (t / thing~e.6 
		 :ord~e.3 (o / ordinal-entity~e.5 
			 :value 1) 
		 :arg1-of (c / come-01~e.8 
			 :arg4~e.9 (h / head~e.11 
				 :part-of~e.10 coref))))

#
# ::snt do n't you see - - i am very busy with matters of consequence ! "
#
#
(s / see-01~e.3 
	 :polarity~e.1 -~e.0 
	 :mode~e.14 interrogative 
	 :arg0 (y / you~e.2) 
	 :arg1 (b / busy-01~e.9 
		 :arg1 (i / i~e.6) 
		 :arg2 (m / matter~e.11 
			 :arg0-of~e.12 (h / have-03~e.14 
				 :arg1 (c3 / consequence~e.13))) 
		 :degree (v / very~e.8)))

#
# ::snt he stared at me , thunderstruck .
#
#
(s / stare-01~e.1 
	 :arg0 (h / he~e.0 
		 :mod (t / thunderstruck~e.5)) 
	 :arg1 (i / i~e.3))

#
# ::snt " matters of consequence ! "
#
#
(m / matter~e.1 
	 :arg0-of~e.2 (h / have-03~e.4 
		 :arg1 (c / consequence~e.3)))

#
# ::snt he looked at me there , with my hammer in my hand , my fingers black with engine - grease , bending down over an object which seemed to him extremely ugly ...
#
#
(l / look-01~e.1 
	 :arg0 (h / he~e.0) 
	 :arg1 (i / i~e.3 
		 :arg0-of~e.16 (b2 / bend-01~e.21 
			 :destination~e.23 (d / down~e.22) 
			 :location (o / object~e.25 
				 :mod (u / ugly~e.31 
					 :mod (s / seem-01~e.27 
						 :arg2 coref) 
					 :degree (e2 / extreme~e.30)))) 
		 :arg0-of~e.16 (h4 / have-03~e.7 
			 :arg1 (h2 / hammer~e.8 
				 :poss~e.7 coref) 
			 :location~e.9 (h3 / hand~e.11 
				 :part-of~e.10 coref)) 
		 :arg0-of~e.16 (h5 / have-03 
			 :arg1 (f / finger~e.14 
				 :part-of~e.13 coref 
				 :arg1-of (b / black-04~e.15 
					 :arg0 (g / grease~e.19 
						 :mod (e / engine~e.17)))))) 
	 :location~e.4 (t / there~e.4))

#
# ::snt " you talk just like the grown - ups ! "
#
#
(t2 / talk-01~e.2 
	 :arg0 (y / you~e.1) 
	 :arg1-of (r / resemble-01~e.4 
		 :arg2 (g2 / grown-up~e.6) 
		 :mod (j2 / just~e.3)))

#
# ::snt that made me a little ashamed .
#
#
(s / shame-01~e.5 
	 :arg0 (t / that~e.0) 
	 :arg1 (i / i~e.2) 
	 :degree (l / little~e.4))

#
# ::snt but he went on , relentlessly : " you mix everything up together ...
#
#
(c / contrast-01~e.0 
	 :arg2 (g / go-on-25~e.2 
		 :arg0 (h / he~e.1) 
		 :arg1 (m / mix-up-02~e.9 
			 :arg0 (y / you~e.8) 
			 :arg1 (e / everything~e.10) 
			 :arg3~e.11 (t / together~e.12)) 
		 :manner (r / relentless~e.5)))

#
# ::snt you confuse everything ... "
#
#
(c2 / confuse-01~e.1 
	 :arg0 (y2 / you~e.0) 
	 :arg2 (e2 / everything~e.2))

#
# ::snt he was really very angry .
#
#
(a / angry~e.4 
	 :domain (h / he~e.0) 
	 :degree (v / very~e.3) 
	 :arg1-of (r / real-04~e.2))

#
# ::snt he tossed his golden curls in the breeze .
#
#
(t / toss-01~e.1 
	 :arg0 (h / he~e.0) 
	 :arg1 (c / curl~e.4 
		 :poss~e.2 coref 
		 :mod (g / golden~e.3)) 
	 :location~e.5 (b / breeze~e.7))

#
# ::snt " i know a planet where there is a certain red - faced gentleman .
#
#
(k / know-02~e.2 
	 :arg0 (i / i~e.1) 
	 :arg1 (p / planet~e.4 
		 :location-of~e.5 (g2 / gentleman~e.13 
			 :mod (c / certain~e.9) 
			 :part~e.8 (f / face~e.12 
				 :arg1-of (r / red-02~e.10)))))

#
# ::snt he has never smelled a flower .
#
#
(s / smell-01~e.3 
	 :polarity~e.2 -~e.2 
	 :arg0 (h / he~e.0) 
	 :arg1 (f / flower~e.5) 
	 :time (e / ever~e.2))

#
# ::snt he has never looked at a star .
#
#
(l / look-01~e.3 
	 :polarity~e.2 -~e.2 
	 :arg0 (h / he~e.0) 
	 :arg1 (s / star~e.6) 
	 :time (e / ever~e.2))

#
# ::snt he has never loved any one .
#
#
(l2 / love-01~e.3 
	 :polarity~e.2 -~e.2 
	 :arg0 (h3 / he~e.0) 
	 :arg1 (a2 / anyone~e.4) 
	 :time (e / ever~e.2))

#
# ::snt he has never done anything in his life but add up figures .
#
#
(d / do-02~e.3 
	 :polarity~e.2 -~e.2 
	 :arg0 (h / he~e.0) 
	 :arg1 (a2 / anything~e.4) 
	 :time~e.5 (l / live-01~e.7 
		 :arg0 coref) 
	 :time~e.5 (e / ever~e.2) 
	 :arg2-of~e.6 (e2 / except-01~e.10 
		 :arg1 (a / add-up-04~e.9 
			 :arg0 coref 
			 :arg1 (f / figure~e.11))))

#
# ::snt and all day he says over and over , just like you : ' i am busy with matters of consequence ! ' and that makes him swell up with pride .
#
#
(m2 / multi-sentence~e.0 
	 :snt1 (a / and~e.6 
		 :op1 (s / say-01~e.4 
			 :arg0 (h / he~e.3) 
			 :arg1 (b / busy-01~e.16 
				 :arg1 coref 
				 :arg2 (m / matter~e.18 
					 :arg0-of~e.19 (h3 / have-03~e.21 
						 :arg1 (c2 / consequence~e.20)))) 
			 :time (d / day~e.2 
				 :mod (a2 / all~e.1)) 
			 :frequency (o / over-and-over~e.7) 
			 :manner~e.17 (r / resemble-01~e.10 
				 :arg2 (y / you~e.11) 
				 :mod (j / just~e.9)) 
			 :arg0-of (c3 / cause-01))) 
	 :snt2~e.28 (a3 / and~e.23 
		 :op1 (m3 / make-02~e.25 
			 :arg0 (t / that~e.24) 
			 :arg1 (s2 / swell-01~e.27 
				 :arg0 coref 
				 :arg1 (h2 / he~e.26) 
				 :manner~e.29 (p / pride-01~e.30 
					 :arg0 (h2 / he~e.26) 
					 :arg2 coref)))))

#
# ::snt but he is not a man - - he is a mushroom ! "
#
#
(c / contrast-01~e.0 
	 :arg2 (a / and~e.12 
		 :op1 (m / man~e.5 
			 :polarity~e.3 -~e.3 
			 :domain (h / he~e.8)) 
		 :op2 (m2 / mushroom~e.11 
			 :domain~e.10 (h / he~e.8))))

#
# ::snt " a what ? "
#
#
(a / amr-unknown~e.3)

#
# ::snt " a mushroom ! "
#
#
(m / mushroom~e.2)

#
# ::snt the little prince was now white with rage .
#
#
(w / white-03~e.5 
	 :arg1 (p / prince~e.2 
		 :mod (l / little~e.1)) 
	 :time (n / now~e.4) 
	 :arg1-of (c / cause-01 
		 :arg0 (e / enrage-01~e.7 
			 :arg1 coref)))

#
# ::snt " the flowers have been growing thorns for millions of years .
#
#
(g / grow-03~e.5 
	 :arg0 (f / flower~e.2) 
	 :arg1 (t / thorn~e.6) 
	 :duration~e.7 (m / multiple~e.8 
		 :op1 (t2 / temporal-quantity 
			 :quant 1000000~e.9 
			 :unit (y / year~e.10))))

#
# ::snt for millions of years the sheep have been eating them just the same .
#
#
(e / eat-01~e.8 
	 :arg0 (s / sheep~e.5) 
	 :arg1 (t / they~e.9) 
	 :duration~e.0 (m / multiple~e.1 
		 :op1 (t2 / temporal-quantity 
			 :quant 1000000~e.2 
			 :unit (y / year~e.3))) 
	 :arg1-of~e.12 (h / have-concession-91~e.6))

#
# ::snt and is it not a matter of consequence to try to understand why the flowers go to so much trouble to grow thorns which are never of any use to them ?
#
#
(a / and~e.0 
	 :op1 (h / have-03~e.4 
		 :polarity~e.3 -~e.3 
		 :arg0 (t / try-01~e.9 
			 :arg1 (u / understand-01~e.11 
				 :arg1 (t4 / thing~e.8 
					 :arg0-of~e.12 (c2 / cause-01~e.12 
						 :arg1 (e / endure-01~e.15 
							 :arg1 (f / flower~e.14) 
							 :arg2 (t2 / trouble~e.19 
								 :purpose~e.20 (g2 / grow-01~e.21 
									 :arg0 coref 
									 :arg1 (t3 / thorn~e.22 
										 :arg1-of (u2 / use-01~e.28 
											 :polarity~e.27 -~e.25 
											 :arg0 coref 
											 :time (e2 / ever~e.25)))) 
								 :quant (m / much~e.18 
									 :degree (s / so~e.17)))))))) 
		 :arg1 (c / consequence~e.7)))

#
# ::snt is the warfare between the sheep and the flowers not important ?
#
#
(i2 / important~e.10 
	 :polarity~e.9 -~e.9 
	 :domain~e.3 (w / war-01~e.2 
		 :arg0 (s / sheep~e.5) 
		 :arg1 (f / flower~e.8)))

#
# ::snt is this not of more consequence than a fat red - faced gentleman 's sums ?
#
#
(h / have-03~e.7 
	 :polarity~e.2 -~e.2 
	 :arg0 (t / this~e.1) 
	 :arg1 (c / consequence~e.5 
		 :compared-to~e.6 (s / sum~e.14 
			 :poss~e.13 (g / gentleman~e.12 
				 :arg1-of (f / fat-03~e.8) 
				 :part~e.7 (f2 / face~e.11 
					 :arg1-of (r / red-02~e.9)))) 
		 :degree (m2 / more~e.4)))

#
# ::snt and if i know - - i , myself - - one flower which is unique in the world , which grows nowhere but on my planet , but which one little sheep can destroy in a single bite some morning , without even noticing what he is doing - - oh !
#
#
(a / and~e.0 
	 :op1 (o / oh~e.51 
		 :mode~e.52 expressive~e.52 
		 :condition~e.1 (k / know-02~e.3 
			 :arg0 (i / i~e.8) 
			 :arg1 (f / flower~e.12 
				 :quant 1~e.11 
				 :mod (u / unique~e.15 
					 :location~e.16 (w / world~e.18)) 
				 :arg1-of (g / grow-01~e.21 
					 :location~e.16 (c / contrast-01~e.23 
						 :arg0 (n / nowhere~e.22) 
						 :arg1 (p / planet~e.26 
							 :poss~e.25 coref))) 
				 :arg1-of (d / destroy-01~e.34 
					 :arg0 (s / sheep~e.32 
						 :quant 1 
						 :mod (l / little~e.31) 
						 :arg0-of~e.42 (n2 / notice-01~e.44 
							 :polarity - 
							 :arg1 coref)) 
					 :arg2 (b / bite-01~e.38 
						 :quant 1~e.36 
						 :arg1-of (s3 / single-02~e.37)) 
					 :arg2-of~e.30 (c2 / contrast-01~e.28) 
					 :arg1-of (p2 / possible-01~e.33) 
					 :time (d2 / date-entity 
						 :dayperiod~e.43 (m / morning~e.40) 
						 :mod (s2 / some~e.39)))) 
			 :arg1-of (c2 / contrast-01~e.28))))

#
# ::snt you think that is not important ! "
#
#
(t / think-01~e.1 
	 :arg0 (y / you~e.0) 
	 :arg1 (t2 / that~e.2 
		 :mod (i / important~e.5 
			 :polarity~e.4 -~e.4)))

#
# ::snt his face turned from white to red as he continued : " if some one loves a flower , of which just one single blossom grows in all the millions and millions of stars , it is enough to make him happy just to look at the stars .
#
#
(t / turn-02~e.2 
	 :arg1 (f / face~e.1 
		 :part-of~e.0 (h / he~e.8)) 
	 :arg2 (r / red-02~e.6 
		 :arg1 coref) 
	 :arg3~e.3 (w / white-03~e.4 
		 :arg1 coref) 
	 :time~e.7 (c / continue-02~e.9 
		 :arg0 coref 
		 :arg1 (s3 / suffice-01~e.37 
			 :arg0 (l / love-01~e.15 
				 :arg0 (s / someone~e.13) 
				 :arg1 (f2 / flower~e.17 
					 :part~e.16 (b / blossom~e.24 
						 :quant 1~e.22 
						 :mod (j / just~e.21) 
						 :arg1-of (g / grow-01~e.25 
							 :location~e.26 (s2 / star~e.33 
								 :mod (a2 / all~e.27) 
								 :quant (m2 / multiple~e.29 
									 :op1 1000000~e.32))) 
						 :arg1-of (s4 / single-02~e.23)))) 
			 :arg1 (m / make-02~e.39 
				 :arg0 coref 
				 :arg1 (h2 / happy-01~e.41 
					 :arg1 (s / someone~e.13)) 
				 :arg1-of (c2 / cause-01 
					 :arg0 (l2 / look-01~e.44 
						 :arg0 coref 
						 :arg1 (s2 / star~e.33 
							 :mod (a2 / all~e.27) 
							 :quant (m2 / multiple~e.29 
								 :op1 1000000~e.32)) 
						 :mod (j2 / just~e.42)))) 
			 :condition~e.12 (l / love-01~e.15 
				 :arg0 (s / someone~e.13) 
				 :arg1 (f2 / flower~e.17 
					 :part~e.16 (b / blossom~e.24 
						 :quant 1~e.22 
						 :mod (j / just~e.21) 
						 :arg1-of (g / grow-01~e.25 
							 :location~e.26 (s2 / star~e.33 
								 :mod (a2 / all~e.27) 
								 :quant (m2 / multiple~e.29 
									 :op1 1000000~e.32))) 
						 :arg1-of (s4 / single-02~e.23)))))))

#
# ::snt he can say to himself , ' somewhere , my flower is there ... ' but if the sheep eats the flower , in one moment all his stars will be darkened ...
#
#
(p2 / possible-01~e.1 
	 :arg1 (s / say-01~e.2 
		 :arg0 (h / he~e.0) 
		 :arg1 (c / contrast-01~e.15 
			 :arg1 (b / be-located-at-91~e.4 
				 :arg1 (f2 / flower~e.10 
					 :poss~e.9 coref) 
				 :arg2 (t2 / there~e.12)) 
			 :arg2 (d / darken-01~e.31 
				 :arg1 (s4 / star~e.28 
					 :mod (a / all~e.26) 
					 :poss~e.27 coref) 
				 :condition~e.16 (e2 / eat-01~e.19 
					 :arg0 (s3 / sheep~e.18) 
					 :arg1 coref) 
				 :time (m / moment~e.25 
					 :quant 1~e.24))) 
		 :arg2 coref))

#
# ::snt and you think that is not important ! "
#
#
(a2 / and~e.0 
	 :op1 (t / think-01~e.2 
		 :arg0 (y / you~e.1) 
		 :arg1 (i / important~e.6 
			 :polarity~e.5 -~e.5 
			 :domain (t2 / that~e.3))))

#
# ::snt he could not say anything more .
#
#
(p / possible-01~e.1 
	 :polarity~e.2 -~e.2 
	 :arg1 (s / say-01~e.3 
		 :arg0 (h / he~e.0) 
		 :arg1 (a / anything~e.4 
			 :mod (m / more~e.5))))

#
# ::snt his words were choked by sobbing .
#
#
(c / choke-up-04~e.3 
	 :arg0 (s / sob-01~e.5) 
	 :arg1 (w / word~e.1 
		 :poss~e.0 (h / he~e.4)))

#
# ::snt the night had fallen .
#
#
(f / fall-04~e.3 
	 :arg1 (n / night~e.1))

#
# ::snt i had let my tools drop from my hands .
#
#
(l / let-01~e.2 
	 :arg0 (i / i~e.0) 
	 :arg1 (d / drop-01~e.5 
		 :arg1 (t / tool~e.4 
			 :poss~e.3 coref) 
		 :arg3~e.6 (h / hand~e.8 
			 :part-of~e.7 coref)))

#
# ::snt of what moment now was my hammer , my bolt , or thirst , or death ?
#
#
(o / or~e.11 
	 :op1 (h / hammer~e.6 
		 :poss~e.5 (i / i~e.5)) 
	 :op2 (b / bolt~e.9 
		 :poss~e.8 coref) 
	 :op3 (t / thirst-01~e.12 
		 :arg0 coref) 
	 :op4 (d / die-01~e.15 
		 :arg1 coref) 
	 :time (m / moment~e.2 
		 :mod (a / amr-unknown~e.1)))

#
# ::snt on one star , one planet , my planet , the earth , there was a little prince to be comforted .
#
#
(b / be-located-at-91~e.0 
	 :arg1 (p / prince~e.17 
		 :mod (l / little~e.16) 
		 :arg1-of (c / comfort-01~e.20 
			 :arg2-of~e.18 (o / obligate-01))) 
	 :arg2 (a / and 
		 :op1 (s / star~e.2 
			 :quant 1~e.1) 
		 :op2 (p2 / planet~e.5 
			 :quant 1~e.4) 
		 :op3 (p4 / planet 
			 :wiki~e.8 earth~e.11 
			 :name (n / name 
				 :op1 coref) 
			 :poss~e.7 (i / i~e.7))))

#
# ::snt i took him in my arms , and rocked him .
#
#
(a / and~e.7 
	 :op1 (t / take-01~e.1 
		 :arg0 (i / i~e.0) 
		 :arg1 (h / he~e.2) 
		 :arg3~e.9 (a2 / arm~e.5 
			 :part-of~e.4 coref)) 
	 :op2 (r / rock-01~e.8 
		 :arg0 coref 
		 :arg1 coref))

#
# ::snt i said to him : " the flower that you love is not in danger .
#
#
(s / say-01~e.1 
	 :arg0 (i / i~e.0) 
	 :arg1 (e / endanger-01~e.14 
		 :polarity~e.12 -~e.12 
		 :arg1 (f / flower~e.7 
			 :arg1-of (l / love-01~e.10 
				 :arg0 (h / he~e.3)))) 
	 :arg2 (h / he~e.3))

#
# ::snt i will draw you a muzzle for your sheep .
#
#
(d / draw-01~e.2 
	 :arg0 (i / i~e.0) 
	 :arg1 (t / thing~e.5 
		 :arg2-of~e.3 (m / muzzle-01~e.5 
			 :arg1 (s / sheep~e.8 
				 :poss~e.7 (y / you~e.7)))) 
	 :arg2 (y / you~e.7))

#
# ::snt i will draw you a railing to put around your flower .
#
#
(d2 / draw-01~e.2 
	 :arg0 (i / i~e.0) 
	 :arg1 (r / railing~e.5 
		 :arg1-of (p / put-01~e.7 
			 :arg2 (a / around~e.8 
				 :op1 (f / flower~e.10 
					 :poss~e.9 (y / you~e.3))))) 
	 :arg2 (y / you~e.3))

#
# ::snt i will - - "
#
#
(d / do-02~e.1 
	 :arg0 (i / i~e.0))

#
# ::snt i did not know what to say to him .
#
#
(k / know-01~e.3 
	 :polarity~e.2 -~e.1 
	 :arg0 (i / i~e.0) 
	 :arg1 (t / thing~e.4 
		 :arg1-of~e.6 (s / say-01~e.6 
			 :arg0 coref 
			 :arg2 (h / he~e.8))))

#
# ::snt i felt awkward and blundering .
#
#
(f / feel-01~e.1 
	 :arg0 (i / i~e.0) 
	 :arg1 (a / and~e.3 
		 :op1 (a2 / awkward~e.2) 
		 :op2 (b / blunder-01~e.4 
			 :arg0 coref)))

#
# ::snt i did not know how i could reach him , where i could overtake him and go on hand in hand with him once more .
#
#
(k / know-01~e.3 
	 :polarity~e.2 -~e.1 
	 :arg0 (i / i~e.0) 
	 :arg1 (a2 / and~e.15 
		 :op1 (m / manner~e.4 
			 :manner-of~e.4 (r / reach-02~e.7 
				 :arg0 coref 
				 :arg1 (h / he~e.8) 
				 :arg1-of (p / possible-01~e.6))) 
		 :op2 (l / location~e.5 
			 :location-of~e.10 (o / overtake-01~e.13 
				 :arg0 coref 
				 :arg1 coref 
				 :arg1-of (p2 / possible-01~e.12)) 
			 :location-of~e.10 (g / go-on-15~e.17 
				 :arg1 coref 
				 :mod (a3 / again~e.24 
					 :frequency~e.23 1) 
				 :manner~e.21 (a / accompany-01~e.17 
					 :arg0 coref 
					 :arg1 coref 
					 :manner (h2 / hand-in-hand~e.20))))))

#
# ::snt it is such a secret place , the land of tears .
#
#
(p / place~e.5 
	 :mod (s / secret~e.4 
		 :degree (s2 / such~e.2)) 
	 :domain~e.0 (l / land~e.8 
		 :location-of~e.9 (t / tear~e.10)))

#
# ::snt chapter 8 .
#
#
(c / chapter~e.0 
	 :mod 8~e.1)

#
# ::snt i soon learned to know this flower better .
#
#
(l / learn-01~e.2 
	 :arg0 (i / i~e.0) 
	 :arg1 (k / know-02~e.4 
		 :arg0 coref 
		 :arg1 (f / flower~e.6 
			 :mod (t / this~e.5)) 
		 :arg2-of~e.3 (g / good-03~e.7 
			 :arg1 coref 
			 :degree (m / more~e.7))) 
	 :time (s / soon~e.1))

#
# ::snt on the little prince 's planet the flowers had always been very simple .
#
#
(s / simple-02~e.12 
	 :arg1 (f / flower~e.7) 
	 :degree (v / very~e.11) 
	 :time (a / always~e.9) 
	 :location~e.0 (p / planet~e.5 
		 :poss~e.4 (p2 / prince~e.3 
			 :mod (l / little~e.2))))

#
# ::snt they had only one ring of petals ; they took up no room at all ; they were a trouble to nobody .
#
#
(m / multi-sentence~e.2 
	 :snt1 (h / have-03~e.1 
		 :arg0 (t / they~e.0) 
		 :arg1 (r / ring~e.4 
			 :quant 1~e.3 
			 :mod (o / only~e.2) 
			 :consist-of~e.5 (p / petal~e.6))) 
	 :snt2~e.10 (t2 / take-up-13~e.9 
		 :polarity~e.11 -~e.11 
		 :arg0 coref 
		 :arg1 (r2 / room~e.12) 
		 :degree (a / at-all~e.14)) 
	 :snt3~e.21 (t3 / trouble-01~e.19 
		 :polarity~e.11 coref 
		 :arg0 coref 
		 :arg1 (a2 / anybody~e.16)))

#
# ::snt one morning they would appear in the grass , and by night they would have faded peacefully away .
#
#
(a / and~e.9 
	 :op1 (a2 / appear-01~e.4 
		 :arg1 (t / they~e.2) 
		 :time~e.5 (d / date-entity 
			 :dayperiod~e.17 (m / morning~e.1) 
			 :mod (o / one~e.0)) 
		 :location~e.5 (g / grass~e.7)) 
	 :op2 (f / fade-01~e.15 
		 :arg1 coref 
		 :manner (p / peaceful~e.16) 
		 :time (b / by~e.10 
			 :op1 (n / night~e.11))))

#
# ::snt but one day , from a seed blown from no one knew where , a new flower had come up ; and the little prince had watched very closely over this small sprout which was not like any other small sprouts on his planet .
#
#
(a / and~e.21 
	 :op1 (c / contrast-01~e.0 
		 :arg2 (c2 / come-up-13~e.18 
			 :arg1 (f / flower~e.16 
				 :arg1-of (n / new-01~e.15) 
				 :source~e.4 (s / seed~e.6 
					 :arg1-of (b / blow-01~e.7 
						 :source~e.8 (a2 / amr-unknown~e.11)))) 
			 :time (d / day~e.2 
				 :mod (o / one~e.10)))) 
	 :op2 (w / watch-over-03~e.26 
		 :arg0 (p / prince~e.24 
			 :mod (l / little~e.23)) 
		 :arg1 (s2 / sprout~e.32 
			 :mod (s3 / small~e.31) 
			 :mod (t / this~e.30) 
			 :arg1-of (r / resemble-01~e.36 
				 :polarity~e.35 -~e.35 
				 :arg2 (s4 / sprout~e.40 
					 :mod (s5 / small~e.39) 
					 :mod (o2 / other~e.38 
						 :mod (a3 / any~e.37)) 
					 :location~e.41 (p2 / planet~e.43 
						 :poss~e.42 coref)))) 
		 :arg1-of (c3 / close-10~e.28 
			 :degree (v / very~e.27))))

#
# ::snt it might , you see , have been a new kind of baobab .
#
#
(p / possible-01~e.1 
	 :arg1 (b2 / baobab~e.12 
		 :mod (k / kind~e.10 
			 :arg1-of (n / new-01~e.9)) 
		 :domain~e.8 (i / it~e.0)))

#
# ::snt the shrub soon stopped growing , and began to get ready to produce a flower .
#
#
(a / and~e.6 
	 :op1 (s / stop-01~e.3 
		 :arg0 (s2 / shrub~e.1) 
		 :arg1 (g / grow-01~e.4 
			 :arg1 coref) 
		 :time (s3 / soon~e.2)) 
	 :op2 (b / begin-01~e.7 
		 :arg0 coref 
		 :arg1 (r / ready-01~e.10 
			 :arg0 coref 
			 :arg1 coref 
			 :arg2 (p / produce-01~e.12 
				 :arg0 coref 
				 :arg1 (f / flower~e.14)))))

#
# ::snt the little prince , who was present at the first appearance of a huge bud , felt at once that some sort of miraculous apparition must emerge from it .
#
#
(f / feel-01~e.16 
	 :arg0 (p / prince~e.2 
		 :mod (l / little~e.1) 
		 :arg1-of (p2 / present-02~e.6 
			 :arg2 (a / appear-01~e.10 
				 :arg1 (b / bud~e.14 
					 :mod (h / huge~e.13)) 
				 :ord~e.9 (o2 / ordinal-entity~e.12 
					 :value 1~e.12)))) 
	 :arg1 (o / obligate-01~e.25 
		 :arg2 (e / emerge-01~e.26 
			 :arg0 (t / thing~e.18 
				 :arg1-of~e.19 (a4 / appear-01~e.28 
					 :manner (m / miraculous~e.23)) 
				 :mod (s / sort~e.21)) 
			 :arg1 coref)) 
	 :time (a2 / at-once~e.7))

#
# ::snt but the flower was not satisfied to complete the preparations for her beauty in the shelter of her green chamber .
#
#
(c / contrast-01~e.0 
	 :arg1 (s / satisfy-01~e.5 
		 :polarity~e.4 -~e.4 
		 :arg0 (c2 / complete-01~e.7 
			 :arg0 (f / flower~e.2) 
			 :arg1 (p / prepare-02~e.9 
				 :arg0 coref 
				 :arg1 (b / beautiful-02~e.12 
					 :arg1 coref)) 
			 :location~e.13 (c3 / chamber~e.19 
				 :arg1-of (g / green-02~e.18) 
				 :poss~e.11 coref 
				 :arg2-of~e.17 (s2 / shelter-01~e.15))) 
		 :arg1 (f / flower~e.2)))

#
# ::snt she chose her colours with the greatest care .
#
#
(c / choose-01~e.1 
	 :arg0 (s / she~e.0) 
	 :arg1 (c2 / color~e.3 
		 :poss~e.2 coref) 
	 :manner~e.4 (c3 / care-04~e.7 
		 :degree (g / great~e.6 
			 :degree (m / most~e.6))))

#
# ::snt she adjusted her petals one by one .
#
#
(a / adjust-01~e.1 
	 :arg0 (s / she~e.0) 
	 :arg1 (p / petal~e.3 
		 :poss~e.2 coref) 
	 :manner~e.5 (o / one-by-one~e.4))

#
# ::snt she did not wish to go out into the world all rumpled , like the field poppies .
#
#
(w / wish-01~e.3 
	 :polarity~e.2 -~e.1 
	 :arg0 (s / she~e.0 
		 :arg1-of (r / rumple-02~e.11 
			 :mod (a / all~e.10)) 
		 :arg1-of (r2 / resemble-01~e.13 
			 :arg2 (p / poppy~e.16 
				 :mod (f / field~e.15)))) 
	 :arg1 (g / go-out-17~e.5 
		 :arg0 coref 
		 :destination~e.7 (w2 / world~e.9)))

#
# ::snt it was only in the full radiance of her beauty that she wished to appear .
#
#
(w / wish-01~e.12 
	 :arg0 (s / she~e.11) 
	 :arg1 (a / appear-01~e.14 
		 :arg1 coref 
		 :manner (r / radiate-01~e.6 
			 :arg0 coref 
			 :arg1 (b / beautiful-02~e.9 
				 :arg1 coref) 
			 :degree~e.0 (f2 / full~e.5) 
			 :mod (o / only~e.2))))

#
# ::snt oh , yes !
#
#
(y / yes~e.2)

#
# ::snt she was a coquettish creature !
#
#
(r / resemble-01~e.2 
	 :arg1 (s / she~e.0) 
	 :arg2 (c / creature~e.4 
		 :mod (c2 / coquet~e.3)))

#
# ::snt and her mysterious adornment lasted for days and days .
#
#
(a / and~e.0 
	 :op1 (l / last-01~e.4 
		 :arg1 (t / thing~e.3 
			 :arg2-of~e.1 (a2 / adorn-01~e.3 
				 :arg1 (s / she~e.1) 
				 :mod (m / mysterious~e.2))) 
		 :arg2 (m2 / multiple~e.6 
			 :op1 (t2 / temporal-quantity 
				 :quant 1 
				 :unit (d / day~e.8)))))

#
# ::snt then one morning , exactly at sunrise , she suddenly showed herself .
#
#
(s / show-01~e.10 
	 :arg0 (s2 / she~e.8) 
	 :arg1 coref 
	 :manner~e.11 (s3 / sudden~e.9) 
	 :time~e.5 (d / date-entity 
		 :dayperiod~e.5 (m / morning~e.2) 
		 :mod (o / one~e.1)) 
	 :time~e.5 (s4 / sunrise~e.6 
		 :mod (e / exact~e.4)) 
	 :time~e.5 (t / then~e.0))

#
# ::snt and , after working with all this painstaking precision , she yawned and said : " ah !
#
#
(a / and~e.0 
	 :op1 (y / yawn-01~e.11 
		 :arg0 (s2 / she~e.10)) 
	 :op2 (s / say-01~e.13 
		 :arg0 coref 
		 :arg1 (a2 / ah~e.16 
			 :mode~e.17 expressive~e.17)) 
	 :time (a3 / after~e.2 
		 :op1 (w / work-01~e.3 
			 :arg0 coref 
			 :manner~e.4 (p / precise~e.8 
				 :degree (p2 / painstaking~e.7) 
				 :mod (t / this~e.6) 
				 :mod (a4 / all~e.5)))))

#
# ::snt i am scarcely awake .
#
#
(a / awake-03~e.3 
	 :arg1 (i / i~e.0) 
	 :degree (s / scarce~e.2))

#
# ::snt i beg that you will excuse me .
#
#
(b2 / beg-01~e.1 
	 :arg0 (i / i~e.0) 
	 :arg1 (y2 / you~e.3) 
	 :arg2 (e2 / excuse-01~e.5 
		 :arg0 coref 
		 :arg1 coref))

#
# ::snt my petals are still all disarranged ... "
#
#
(a3 / arrange-01~e.5 
	 :polarity - 
	 :arg1 (p2 / petal~e.1 
		 :part-of~e.0 (i / i~e.0) 
		 :mod (a4 / all~e.4)) 
	 :mod (s4 / still~e.3))

#
# ::snt but the little prince could not restrain his admiration : " oh !
#
#
(c / contrast-01~e.0 
	 :arg2 (p2 / possible-01~e.4 
		 :polarity~e.5 -~e.5 
		 :arg1 (r / restrain-01~e.6 
			 :arg0 (p / prince~e.3 
				 :mod (l / little~e.2) 
				 :arg0-of (s / say-01~e.11 
					 :arg1 (o / oh~e.11 
						 :mode~e.12 expressive~e.12))) 
			 :arg1 (a / admire-01~e.8 
				 :arg0 coref))))

#
# ::snt how beautiful you are ! "
#
#
(b / beautiful-02~e.1 
	 :arg1 (y / you~e.2) 
	 :degree (s / so~e.0))

#
# ::snt " am i not ? " the flower responded , sweetly .
#
#
(r / respond-01~e.8 
	 :arg0 (f / flower~e.7) 
	 :arg1 (b / beautiful-02~e.3 
		 :polarity~e.3 -~e.2 
		 :arg1 coref) 
	 :manner (s / sweet-03~e.10))

#
# ::snt " and i was born at the same moment as the sun ... "
#
#
(a / and~e.1 
	 :op2 (b / bear-02~e.4 
		 :arg1 (i / i~e.2) 
		 :time~e.5 (m / moment~e.8 
			 :arg1-of (s / same-01~e.7 
				 :arg2 (s2 / sun~e.11)))))

#
# ::snt the little prince could guess easily enough that she was not any too modest - - but how moving - - and exciting - - she was !
#
#
(p / possible-01~e.3 
	 :arg1 (g / guess-01~e.4 
		 :arg0 (p2 / prince~e.2 
			 :mod (l / little~e.1)) 
		 :arg1 (c / contrast-01~e.16 
			 :arg1 (m / modest~e.13 
				 :polarity~e.10 -~e.10 
				 :domain (s / she~e.8) 
				 :degree (t / too~e.12)) 
			 :arg2 (a2 / and~e.21 
				 :op1 (m2 / move-05~e.18 
					 :arg0 coref 
					 :degree (s2 / so~e.17)) 
				 :op2 (e3 / excite-01~e.22 
					 :arg0 coref 
					 :degree (s3 / so~e.27)))) 
		 :arg1-of~e.7 (e / easy-05~e.5 
			 :mod (e2 / enough~e.6))))

#
# ::snt " i think it is time for breakfast , " she added an instant later .
#
#
(a / add-01~e.11 
	 :arg0 (s / she~e.10) 
	 :arg1 (t / think-01~e.2 
		 :arg0 coref 
		 :arg1 (t2 / time~e.5 
			 :purpose~e.6 (b / breakfast-01~e.7))) 
	 :time (l / late~e.14 
		 :degree (m / more~e.14 
			 :quant (i / instant~e.13))))

#
# ::snt " if you would have the kindness to think of my needs - - "
#
#
(t / think-01~e.8 
	 :mode~e.1 imperative~e.7 
	 :arg0 (y / you~e.2) 
	 :arg1 (t2 / thing~e.8 
		 :arg1-of~e.11 (n / need-01~e.11 
			 :arg0 (i / i~e.10))) 
	 :arg1-of (k2 / kind-01~e.6 
		 :arg0 coref 
		 :arg2 coref))

#
# ::snt and the little prince , completely abashed , went to look for a sprinkling - can of fresh water .
#
#
(a / and~e.0 
	 :op1 (g / go-05~e.8 
		 :arg0 (p / prince~e.3 
			 :mod (l2 / little~e.2) 
			 :arg1-of (a2 / abash-01~e.6 
				 :arg1-of (c3 / complete-02~e.5))) 
		 :arg1 (l / look-01~e.10 
			 :arg0 coref 
			 :arg1 (c / can~e.15 
				 :arg0-of~e.16 (s / sprinkle-01~e.13) 
				 :arg0-of~e.16 (c2 / contain-01 
					 :arg1 (w / water~e.18 
						 :arg1-of (f / fresh-04~e.17)))))))

#
# ::snt so , he tended the flower .
#
#
(t / tend-01~e.3 
	 :arg0 (h / he~e.2) 
	 :arg1 (f / flower~e.5) 
	 :arg1-of (c / cause-01~e.0))

#
# ::snt so , too , she began very quickly to torment him with her vanity - - which was , if the truth be known , a little difficult to deal with .
#
#
(b / begin-01~e.5 
	 :arg0 (s / she~e.4) 
	 :arg1 (t2 / torment-01~e.9 
		 :arg0 coref 
		 :arg1 (h / he~e.10) 
		 :arg2 (v2 / vanity~e.13 
			 :poss~e.12 coref 
			 :arg2-of~e.8 (d3 / deal-01~e.29 
				 :arg0 coref 
				 :mod (d / difficult~e.27 
					 :degree (l / little~e.26)) 
				 :condition~e.19 (k / know-01~e.23 
					 :arg1 (t3 / truth~e.21))))) 
	 :mod (t / too~e.2) 
	 :arg1-of (q / quick-02~e.7 
		 :degree (v / very~e.6)))

#
# ::snt one day , for instance , when she was speaking of her four thorns , she said to the little prince : " let the tigers come with their claws ! "
#
#
(s / say-01~e.16 
	 :arg0 (s2 / she~e.15) 
	 :arg1 (c / come-01~e.26 
		 :mode~e.30 imperative~e.23 
		 :arg1 (t / tiger~e.25) 
		 :accompanier~e.27 (c2 / claw~e.29 
			 :part-of~e.28 coref)) 
	 :arg2 (p / prince~e.20 
		 :mod (l / little~e.19)) 
	 :time~e.6 (d / day~e.1 
		 :mod (o / one~e.0)) 
	 :arg0-of (e / exemplify-01~e.4) 
	 :time~e.6 (s3 / speak-01~e.9 
		 :arg0 coref 
		 :arg1 (t2 / thorn~e.13 
			 :quant 4~e.12 
			 :part-of~e.11 coref)))

#
# ::snt " there are no tigers on my planet , " the little prince objected .
#
#
(o / object-01~e.13 
	 :arg0 (p / prince~e.12 
		 :mod (l / little~e.11)) 
	 :arg1 (t / tiger~e.4 
		 :polarity~e.3 -~e.3 
		 :location~e.5 (p2 / planet~e.7 
			 :poss~e.6 coref)))

#
# ::snt " and , anyway , tigers do not eat weeds . "
#
#
(a / and~e.1 
	 :op2 (e / eat-01~e.8 
		 :polarity~e.7 -~e.6 
		 :arg0 (t / tiger~e.5) 
		 :arg1 (w / weed~e.9) 
		 :mod (a2 / anyway~e.3)))

#
# ::snt " i am not a weed , " the flower replied , sweetly .
#
#
(r / reply-01~e.10 
	 :arg0 (f / flower~e.9) 
	 :arg2 (w / weed~e.5 
		 :polarity~e.3 -~e.3 
		 :domain~e.4 coref) 
	 :manner (s / sweet-03~e.12))

#
# ::snt " please excuse me ... "
#
#
(e / excuse-01~e.2 
	 :polite~e.1 +~e.1 
	 :arg0 (y / you~e.3) 
	 :arg1 (i / i~e.3))

#
# ::snt " i am not at all afraid of tigers , " she went on , " but i have a horror of drafts .
#
#
(g / go-on-25~e.12 
	 :arg0 (s / she~e.11) 
	 :arg1 (c / contrast-01~e.16 
		 :arg1 (f / fear-01~e.6 
			 :polarity~e.3 -~e.3 
			 :arg0 coref 
			 :arg1 (t / tiger~e.8) 
			 :degree (a / at-all~e.5)) 
		 :arg2 (a2 / abhor-01~e.20 
			 :arg0 coref 
			 :arg1 (d / draft~e.22))))

#
# ::snt i suppose you would n't have a screen for me ? "
#
#
(s / suppose-01~e.1 
	 :arg0 (i / i~e.0) 
	 :arg1 (h / have-03~e.5 
		 :polarity~e.4 - 
		 :mode~e.9 interrogative~e.10 
		 :arg0 (y / you~e.2) 
		 :arg1 (s2 / screen~e.7) 
		 :beneficiary~e.8 coref))

#
# ::snt " a horror of drafts - - that is bad luck , for a plant , " remarked the little prince , and added to himself , " this flower is a very complex creature ... "
#
#
(a / and~e.22 
	 :op1 (r / remark-01~e.17 
		 :arg0 (p / prince~e.20 
			 :mod (l / little~e.19)) 
		 :arg1 (l2 / luck~e.10 
			 :arg1-of (b / bad-07~e.9) 
			 :beneficiary~e.12 (p2 / plant~e.14) 
			 :domain~e.13 (a3 / abhor-01~e.2 
				 :arg1 (d / draft~e.4)))) 
	 :op2 (a2 / add-01~e.23 
		 :arg0 coref 
		 :arg1 (c3 / creature~e.34 
			 :mod (c2 / complex~e.33 
				 :degree (v / very~e.32)) 
			 :domain~e.31 (f / flower~e.29 
				 :mod (t / this~e.28))) 
		 :beneficiary~e.12 coref))

#
# ::snt " at night i want you to put me under a glass globe .
#
#
(w / want-01~e.4 
	 :arg0 (i / i~e.3) 
	 :arg1 (p / put-01~e.7 
		 :arg0 (y / you~e.5) 
		 :arg1 coref 
		 :arg2 (u / under~e.9 
			 :op1 (g / globe~e.12 
				 :consist-of (g2 / glass~e.11))) 
		 :time (d / date-entity 
			 :dayperiod~e.1 (n / night~e.2))))

#
# ::snt it is very cold where you live .
#
#
(c / cold-01~e.3 
	 :degree~e.0 (v / very~e.2) 
	 :location~e.4 (l / live-01~e.6 
		 :arg0 (y / you~e.5)))

#
# ::snt in the place i came from - - "
#
#
(l / location~e.2 
	 :arg3-of~e.5 (c / come-01~e.4 
		 :arg1 (i / i~e.3)))

#
# ::snt but she interrupted herself at that point .
#
#
(c / contrast-01~e.0 
	 :arg2 (i / interrupt-01~e.2 
		 :arg0 (s / she~e.1) 
		 :arg1 coref 
		 :time~e.4 (p / point~e.6 
			 :mod (t / that~e.5))))

#
# ::snt she had come in the form of a seed .
#
#
(c / come-01~e.2 
	 :arg1 (s / she~e.0) 
	 :time-of~e.5 (s2 / seed~e.8 
		 :domain~e.7 coref))

#
# ::snt she could not have known anything of any other worlds .
#
#
(p / possible-01~e.1 
	 :polarity~e.2 -~e.2 
	 :arg1 (k / know-01~e.4 
		 :arg0 (s / she~e.0) 
		 :arg1 (a / anything~e.5 
			 :topic~e.6 (w / world~e.9 
				 :mod (o / other~e.8 
					 :mod (a2 / any~e.7))))))

#
# ::snt embarassed over having let herself be caught on the verge of such a na√Øve untruth , she coughed two or three times , in order to put the little prince in the wrong .
#
#
(c / cough-01~e.17 
	 :arg0 (s / she~e.16 
		 :arg1-of (e / embarrass-01~e.0 
			 :arg0 (l2 / let-01~e.3 
				 :arg0 coref 
				 :arg1 (c2 / catch-03~e.4 
					 :arg1 coref 
					 :arg2 (v / verge-01~e.9 
						 :arg1 (t / truth~e.2 
							 :polarity - 
							 :mod (n / naive~e.6 
								 :degree (s2 / such~e.11)))))))) 
	 :purpose~e.25 (p / put-03~e.26 
		 :arg0 coref 
		 :arg1 (p2 / prince~e.29 
			 :mod (l / little~e.28)) 
		 :arg2 (w / wrong-04~e.32 
			 :arg1 coref)) 
	 :frequency~e.14 (o / or~e.19 
		 :op1 2~e.18 
		 :op2 3~e.20))

#
# ::snt " the screen ? "
#
#
(s / screen~e.2)

#
# ::snt " i was just going to look for it when you spoke to me ... "
#
#
(l3 / look-01~e.6 
	 :arg0 (i / i~e.1) 
	 :arg1 (i2 / it~e.8) 
	 :time~e.9 (s3 / speak-01~e.11 
		 :arg0 (y2 / you~e.10) 
		 :arg2 coref))

#
# ::snt then she forced her cough a little more so that he should suffer from remorse just the same .
#
#
(f / force-02~e.2 
	 :arg0 (s / she~e.1) 
	 :arg1 (c / cough-01~e.4 
		 :arg0 coref) 
	 :time (t / then~e.0) 
	 :degree~e.11 (m / more~e.7 
		 :degree (l / little~e.6)) 
	 :purpose~e.8 (s2 / suffer-01~e.12 
		 :arg0 (h / he~e.10) 
		 :arg1 (r / remorse~e.14) 
		 :arg1-of~e.17 (h2 / have-concession-91~e.15)))

#
# ::snt so the little prince , in spite of all the good will that was inseparable from his love , had soon come to doubt her .
#
#
(c / come-04~e.21 
	 :arg1 (p / prince~e.3 
		 :mod (l / little~e.2)) 
	 :arg2 (d / doubt-01~e.23 
		 :arg0 coref 
		 :arg1 (s3 / she~e.24)) 
	 :time~e.5 (s / soon~e.20) 
	 :arg1-of (c2 / cause-01~e.12) 
	 :concession~e.14 (w / will~e.11 
		 :arg1-of (g / good-02~e.10) 
		 :mod (a / all~e.8) 
		 :arg1-of (s2 / separate-01~e.15 
			 :arg2 (l2 / love-01~e.17 
				 :arg0 coref) 
			 :arg1-of~e.19 (p2 / possible-01~e.22 
				 :polarity -))))

#
# ::snt he had taken seriously words which were without importance , and it made him very unhappy .
#
#
(s / serious-01~e.3 
	 :arg1 (h / he~e.0) 
	 :arg2 (w / word-01~e.4 
		 :mod (i / important~e.8 
			 :polarity -)) 
	 :arg0-of~e.7 (m / make-02~e.12 
		 :arg1 (h2 / happy-01~e.15 
			 :polarity -~e.13 
			 :arg1 coref 
			 :degree (v / very~e.14))))

#
# ::snt " i ought not to have listened to her , " he confided to me one day . "
#
#
(c / confide-01~e.12 
	 :arg0 (h / he~e.11) 
	 :arg1 (r / recommend-01~e.2 
		 :arg1 (l / listen-01~e.6 
			 :arg0 coref 
			 :arg1 (s / she~e.8) 
			 :polarity~e.3 -~e.3) 
		 :arg2 coref) 
	 :arg2 (i / i~e.14) 
	 :time (d / day~e.16 
		 :mod (o / one~e.15)))

#
# ::snt one never ought to listen to the flowers .
#
#
(r / recommend-01~e.2 
	 :arg1 (l / listen-01~e.4 
		 :polarity~e.1 -~e.1 
		 :arg0 (o2 / one~e.0) 
		 :arg1 (f / flower~e.7) 
		 :time (e / ever~e.1)))

#
# ::snt one should simply look at them and breathe their fragrance .
#
#
(r / recommend-01~e.1 
	 :arg1 (a / and~e.6 
		 :op1 (l / look-01~e.3 
			 :arg0 (o2 / one~e.0) 
			 :arg1 (t / they~e.5) 
			 :manner (s / simple~e.2)) 
		 :op2 (b / breathe-01~e.7 
			 :arg0 coref 
			 :arg1 (f / fragrance~e.9 
				 :poss~e.8 coref))))

#
# ::snt mine perfumed all my planet .
#
#
(p / perfume-01~e.1 
	 :arg0 (t / thing~e.0 
		 :poss~e.3 (i / i~e.3)) 
	 :arg1 (p2 / planet~e.4 
		 :mod (a / all~e.2) 
		 :poss coref))

#
# ::snt but i did not know how to take pleasure in all her grace .
#
#
(c / contrast-01~e.0 
	 :arg2 (k / know-01~e.4 
		 :polarity~e.3 -~e.2 
		 :arg0 (i / i~e.1) 
		 :manner~e.5 (p2 / please-01~e.8 
			 :arg0 (g / grace~e.12 
				 :poss (s / she~e.11) 
				 :mod (a / all~e.10)) 
			 :arg1 coref)))

#
# ::snt this tale of claws , which disturbed me so much , should only have filled my heart with tenderness and pity . "
#
#
(r2 / recommend-01~e.11 
	 :arg1 (f / fill-01~e.14 
		 :arg0 (t2 / tale~e.1 
			 :topic~e.2 (c / claws~e.3) 
			 :arg0-of~e.17 (d / disturb-01~e.6 
				 :arg1 (i / i~e.7) 
				 :degree (m / much~e.9 
					 :degree (s / so~e.8))) 
			 :mod (t3 / this~e.0)) 
		 :arg1 (h / heart~e.16 
			 :part-of~e.15 coref) 
		 :arg2 (a / and~e.19 
			 :op1 (t / tender~e.18) 
			 :op2 (p / pity-01~e.20)) 
		 :mod (o / only~e.12)))

#
# ::snt and he continued his confidences : " the fact is that i did not know how to understand anything !
#
#
(a / and~e.0 
	 :op1 (c / continue-02~e.2 
		 :arg0 (h / he~e.1) 
		 :arg1 (c2 / confide-01~e.4 
			 :arg0 coref 
			 :arg1 (k / know-01~e.14 
				 :polarity~e.13 -~e.12 
				 :arg0 coref 
				 :arg1 (t / thing~e.16 
					 :manner-of~e.8 (u / understand-01~e.17 
						 :arg0 coref 
						 :arg1 (a2 / anything~e.18)))))))

#
# ::snt i ought to have judged by deeds and not by words .
#
#
(r2 / recommend-01~e.1 
	 :arg1 (a2 / and~e.7 
		 :op1 (j / judge-01~e.4 
			 :arg0 (i / i~e.0) 
			 :arg3~e.2 (d / do-02~e.3)) 
		 :op2 (j2 / judge-01~e.4 
			 :polarity~e.8 -~e.8 
			 :arg0 coref 
			 :arg3~e.6 (w / word~e.10))))

#
# ::snt she cast her fragrance and her radiance over me .
#
#
(c / cast-01~e.1 
	 :arg0 (s / she~e.0) 
	 :arg1 (a / and~e.4 
		 :op1 (f / fragrance~e.3 
			 :poss~e.5 coref) 
		 :op2 (t / thing~e.7 
			 :arg1-of~e.6 (r / radiate-01~e.6 
				 :arg0 coref))) 
	 :arg2 (i / i~e.8))

#
# ::snt i ought never to have run away from her ...
#
#
(r / recommend-01~e.1 
	 :arg1 (r2 / run-02~e.5 
		 :polarity~e.2 -~e.2 
		 :arg0 (i / i~e.0) 
		 :time (e / ever~e.2) 
		 :direction~e.7 (a2 / away~e.6 
			 :op1 (s / she~e.8))))

#
# ::snt i ought to have guessed all the affection that lay behind her poor little strategems .
#
#
(r / recommend-01~e.1 
	 :arg1 (g / guess-01~e.4 
		 :arg0 (i / i~e.0) 
		 :arg1 (a / affection~e.7 
			 :mod (a2 / all~e.5) 
			 :arg1-of~e.8 (l / lie-07~e.9 
				 :arg2 (b / behind~e.10 
					 :op1 (s / strategem~e.14 
						 :mod (l2 / little~e.13) 
						 :mod (p / poor~e.12) 
						 :poss (s2 / she~e.11)))))))

#
# ::snt flowers are so inconsistent !
#
#
(c / consistent-01~e.3 
	 :polarity -~e.4 
	 :arg1 (f / flower~e.0) 
	 :degree (s / so~e.2))

#
# ::snt but i was too young to know how to love her ... "
#
#
(c / contrast-01~e.0 
	 :arg2 (y / young~e.4 
		 :degree (t / too~e.3) 
		 :domain (i / i~e.1) 
		 :compared-to~e.5 (k / know-01~e.6 
			 :arg0 coref 
			 :arg1 (m / manner~e.7 
				 :manner-of~e.7 (l / love-01~e.9 
					 :arg0 coref 
					 :arg1 (s / she~e.10))))))

#
# ::snt chapter 9 .
#
#
(c / chapter~e.0 
	 :mod 9~e.1)

#
# ::snt i believe that for his escape he took advantage of the migration of a flock of wild birds .
#
#
(b / believe-01~e.1 
	 :arg0 (i / i~e.0) 
	 :arg1 (t / take-01~e.7 
		 :arg0 (h / he~e.6) 
		 :arg1 (a / advantage~e.8) 
		 :arg2 (m / migrate-01~e.11 
			 :arg0 (f / flock-02~e.14 
				 :arg0 (b2 / bird~e.17 
					 :mod (w / wild~e.16)))) 
		 :purpose~e.3 (e / escape-01~e.5 
			 :arg0 coref)))

#
# ::snt on the morning of his departure he put his planet in perfect order .
#
#
(o / order-03~e.12 
	 :arg0 (h / he~e.6) 
	 :arg1 (p2 / planet~e.9 
		 :poss~e.8 coref) 
	 :arg1-of (p / perfect-02~e.11) 
	 :time~e.10 (d2 / date-entity 
		 :dayperiod~e.0 (m / morning~e.2) 
		 :time-of~e.4 (d / depart-01~e.5 
			 :arg0 coref)))

#
# ::snt he carefully cleaned out his active volcanoes .
#
#
(c / clean-out-03~e.2 
	 :arg0 (h / he~e.0) 
	 :arg1 (v / volcano~e.6 
		 :poss~e.4 coref 
		 :arg0-of (a / activity-06~e.5)) 
	 :manner (c2 / careful~e.1))

#
# ::snt he possessed two active volcanoes ; and they were very convenient for heating his breakfast in the morning .
#
#
(a / and~e.6 
	 :op1 (p / possess-01~e.1 
		 :arg0 (h / he~e.0) 
		 :arg1 (v / volcano~e.4 
			 :quant 2~e.2 
			 :arg0-of (a2 / activity-06~e.3))) 
	 :op2 (c / convenient~e.10 
		 :degree (v2 / very~e.9) 
		 :purpose~e.11 (h2 / heat-01~e.12 
			 :arg1 (f / food~e.13 
				 :arg1-of (b2 / breakfast-01~e.14 
					 :arg0 coref)) 
			 :arg2 coref 
			 :time~e.15 (d / date-entity 
				 :dayperiod (m / morning~e.17))) 
		 :domain coref))

#
# ::snt he also had one volcano that was extinct .
#
#
(h / have-03~e.2 
	 :arg0 (h2 / he~e.0) 
	 :arg1 (v / volcano~e.4 
		 :mod (e / extinct~e.7) 
		 :quant 1~e.3) 
	 :mod (a / also~e.1))

#
# ::snt but , as he said , " one never knows ! "
#
#
(c / contrast-01~e.0 
	 :arg2 (s / say-01~e.4 
		 :arg0 (h / he~e.3) 
		 :arg1 (k / know-01~e.9 
			 :polarity~e.8 -~e.8 
			 :arg0 (o / one~e.7))))

#
# ::snt so he cleaned out the extinct volcano , too .
#
#
(c / clean-out-03~e.2 
	 :arg0 (h / he~e.1) 
	 :arg1 (v / volcano~e.6 
		 :mod (e / extinct~e.5)) 
	 :mod (t / too~e.8))

#
# ::snt if they are well cleaned out , volcanoes burn slowly and steadily , without any eruptions .
#
#
(b / burn-01~e.8 
	 :arg1 (v / volcano~e.7 
		 :arg1-of (e2 / erupt-01~e.15 
			 :polarity~e.14 -)) 
	 :condition~e.0 (c / clean-out-03~e.4 
		 :arg1 coref 
		 :degree (w / well~e.3)) 
	 :manner~e.13 (s3 / steady~e.11) 
	 :arg1-of (s / slow-05~e.9))

#
# ::snt volcanic eruptions are like fires in a chimney .
#
#
(e / erupt-01~e.1 
	 :arg1 (v / volcano~e.0) 
	 :arg1-of (r / resemble-01~e.3 
		 :arg2 (f / fire~e.4 
			 :location~e.5 (c / chimney~e.7))))

#
# ::snt on our earth we are obviously much too small to clean out our volcanoes .
#
#
(s / small~e.8 
	 :degree (t2 / too~e.7 
		 :degree (m / much~e.6)) 
	 :compared-to~e.11 (c / clean-out-03~e.10 
		 :arg0 (w / we~e.3) 
		 :arg1 (v / volcano~e.13 
			 :poss~e.12 coref)) 
	 :domain (w / we~e.3) 
	 :location~e.0 (e / earth~e.2 
		 :poss~e.1 coref) 
	 :arg1-of (o / obvious-01~e.5))

#
# ::snt that is why they bring no end of trouble upon us .
#
#
(c / cause-01~e.2 
	 :arg0 (t3 / that~e.0) 
	 :arg1 (t2 / trouble-01~e.8 
		 :arg0 (t4 / they~e.3) 
		 :arg1 (w / we~e.10) 
		 :quant (e / end~e.6 
			 :polarity~e.5 -~e.5)))

#
# ::snt the little prince also pulled up , with a certain sense of dejection , the last little shoots of the baobabs .
#
#
(p / pull-01~e.4 
	 :arg0 (p2 / prince~e.2 
		 :mod (l / little~e.1) 
		 :arg0-of (s2 / sense-01~e.10 
			 :arg1 (d2 / deject-01~e.12) 
			 :mod (c / certain~e.9))) 
	 :arg1 (s / shoot~e.17 
		 :part-of~e.18 (b / baobab~e.20) 
		 :mod (l2 / little~e.16) 
		 :ord~e.7 (o / ordinal-entity~e.8 
			 :value -1~e.15)) 
	 :mod (a / also~e.3) 
	 :direction (u / up~e.5))

#
# ::snt he believed that he would never want to return .
#
#
(b / believe-01~e.1 
	 :arg0 (h / he~e.0) 
	 :arg1 (w / want-01~e.6 
		 :polarity~e.5 -~e.5 
		 :arg0 coref 
		 :arg1 (r / return-01~e.8 
			 :arg1 coref) 
		 :time (e / ever~e.5)))

#
# ::snt but on this last morning all these familiar tasks seemed very precious to him .
#
#
(c / contrast-01~e.0 
	 :arg2 (s / seem-01~e.9 
		 :arg1 (p / precious~e.11 
			 :degree (v / very~e.10) 
			 :domain (t2 / task~e.8 
				 :mod (a2 / all~e.5) 
				 :mod (f / familiar~e.7))) 
		 :arg2 (h / he~e.13) 
		 :time (d / date-entity 
			 :dayperiod~e.1 (m / morning~e.4) 
			 :mod (t / this~e.2) 
			 :ord~e.6 (o / ordinal-entity 
				 :value -1~e.3))))

#
# ::snt and when he watered the flower for the last time , and prepared to place her under the shelter of her glass globe , he realised that he was very close to tears .
#
#
(r / realize-01~e.25 
	 :arg0 (h / he~e.24) 
	 :arg1 (c / close-10~e.30 
		 :arg1 coref 
		 :arg2 (t / tear-03~e.32 
			 :arg1 coref) 
		 :degree (v / very~e.29)) 
	 :time (a / and~e.0 
		 :op1 (w / water-01~e.3 
			 :arg0 coref 
			 :arg1 (f / flower-01~e.5) 
			 :ord~e.1 (o / ordinal-entity~e.9 
				 :value -1~e.8)) 
		 :op2 (p / prepare-02~e.12 
			 :arg0 coref 
			 :arg1 coref 
			 :arg2 (p2 / place-01~e.14 
				 :arg0 coref 
				 :arg1 coref 
				 :arg2 (u2 / under~e.16 
					 :op1 (g / globe~e.22 
						 :consist-of~e.19 (g2 / glass~e.21) 
						 :poss~e.15 coref 
						 :arg2-of~e.20 (s2 / shelter-01~e.18 
							 :arg0 coref 
							 :arg1 coref)))))))

#
# ::snt " goodbye , " he said to the flower .
#
#
(s / say-01~e.5 
	 :arg0 (h / he~e.4) 
	 :arg1 (g / goodbye~e.1) 
	 :arg2 (f / flower~e.8))

#
# ::snt but she made no answer .
#
#
(c / contrast-01~e.0 
	 :arg2 (a2 / answer-01~e.4 
		 :polarity~e.3 -~e.2 
		 :arg0 (s / she~e.1)))

#
# ::snt " goodbye , " he said again .
#
#
(s / say-01~e.5 
	 :arg0 (h / he~e.4) 
	 :arg1 (g / goodbye~e.1) 
	 :mod (a / again~e.6))

#
# ::snt the flower coughed .
#
#
(c / cough-01~e.2 
	 :arg0 (f / flower~e.1))

#
# ::snt but it was not because she had a cold .
#
#
(c2 / contrast-01~e.0 
	 :arg2 (c3 / cause-01~e.4 
		 :polarity~e.3 -~e.3 
		 :arg0 (h / have-03~e.6 
			 :arg0 (s / she~e.5) 
			 :arg1 (c / cold~e.8)) 
		 :arg1 (i / it~e.1)))

#
# ::snt " i have been silly , " she said to him , at last .
#
#
(s / say-01~e.8 
	 :arg0 (s2 / she~e.7) 
	 :arg1 (s4 / silly~e.4 
		 :domain coref) 
	 :arg2 (h / he~e.10) 
	 :time~e.12 (a / at-last~e.13))

#
# ::snt " i ask your forgiveness .
#
#
(a / ask-02~e.2 
	 :arg0 (i / i~e.1) 
	 :arg1 (f / forgive-01~e.4 
		 :arg0 (y / you~e.3) 
		 :arg1 coref) 
	 :arg2 (y / you~e.3))

#
# ::snt try to be happy ... "
#
#
(t / try-01~e.0 
	 :arg0 (y / you) 
	 :arg1 (h / happy-01~e.3 
		 :arg1 coref))

#
# ::snt he was surprised by this absence of reproaches .
#
#
(s / surprise-01~e.2 
	 :arg0 (a / absent-01~e.5 
		 :arg1 (r / reproach-01~e.7)) 
	 :arg1 (h / he~e.0))

#
# ::snt he stood there all bewildered , the glass globe held arrested in mid - air .
#
#
(s / stand-01~e.1 
	 :arg1 (h / he~e.0 
		 :arg1-of (b / bewilder-01~e.4 
			 :degree (a / all~e.3)) 
		 :arg0-of (h2 / hold-01~e.14 
			 :arg1 (g / globe~e.8 
				 :consist-of~e.9 (g2 / glass~e.7) 
				 :arg1-of (a2 / arrest-02~e.10 
					 :location~e.11 (m / midair~e.12))))) 
	 :arg2 (t / there~e.2))

#
# ::snt he did not understand this quiet sweetness .
#
#
(u / understand-01~e.3 
	 :polarity~e.2 -~e.1 
	 :arg0 (h / he~e.0) 
	 :arg1 (s / sweet-05~e.6 
		 :arg1 (t / this~e.4) 
		 :arg1-of (q / quiet-04~e.5)))

#
# ::snt " of course i love you , " the flower said to him .
#
#
(s / say-01~e.10 
	 :arg0 (f / flower-01~e.9) 
	 :arg1 (l / love-01~e.4 
		 :arg0 coref 
		 :arg1 (h / he~e.12) 
		 :mod (o / of-course~e.2)) 
	 :arg2 (h / he~e.12))

#
# ::snt " it is my fault that you have not known it all the while .
#
#
(f / fault-01~e.4 
	 :arg1 (i3 / i~e.3) 
	 :arg2 (k / know-01~e.9 
		 :polarity~e.8 -~e.8 
		 :arg0 (y / you~e.6) 
		 :arg1 (i2 / it~e.10) 
		 :time (w / while-away-01~e.13 
			 :duration~e.7 (a / all~e.11))))

#
# ::snt that is of no importance .
#
#
(i / important~e.4 
	 :polarity~e.3 -~e.3 
	 :domain (t / that~e.0))

#
# ::snt but you - - you have been just as foolish as i .
#
#
(c / contrast-01~e.0 
	 :arg2 (f / foolish~e.9 
		 :domain~e.7 (y / you~e.4) 
		 :degree (e / equal~e.8) 
		 :compared-to~e.10 (i / i~e.11)))

#
# ::snt try to be happy ... let the glass globe be .
#
#
(a / and~e.1 
	 :op1 (t / try-01~e.0 
		 :arg0 (y / you) 
		 :arg1 (h / happy-01~e.3 
			 :arg1 coref)) 
	 :op2 (l / leave-14~e.3 
		 :arg0 coref 
		 :arg1 (a2 / alone~e.3 
			 :domain (g / globe~e.8 
				 :consist-of (g2 / glass~e.7)))))

#
# ::snt i do n't want it any more . "
#
#
(w / want-01~e.3 
	 :arg0 (i / i~e.0) 
	 :arg1 (i2 / it~e.4) 
	 :polarity~e.2 -~e.1 
	 :time (a / anymore~e.6))

#
# ::snt " but the wind - - "
#
#
(c / contrast-01~e.1 
	 :arg2 (w / wind~e.3))

#
# ::snt " my cold is not so bad as all that ... the cool night air will do me good .
#
#
(a / and 
	 :op1 (b / bad-05~e.6 
		 :polarity~e.4 -~e.4 
		 :arg1 (c3 / cold~e.2 
			 :poss~e.1 (i / i~e.1)) 
		 :compared-to~e.7 (t / that~e.9 
			 :mod (a2 / all~e.8))) 
	 :op2 (g / good-04~e.18 
		 :arg1 (a3 / air~e.14 
			 :arg1-of (c / cool-06~e.12) 
			 :mod (n / night~e.13)) 
		 :arg2 coref))

#
# ::snt i am a flower . "
#
#
(f / flower~e.3 
	 :domain~e.2 (i / i~e.0))

#
# ::snt " but the animals - - "
#
#
(c / contrast-01~e.1 
	 :arg2 (a / animal~e.3))

#
# ::snt " well , i must endure the presence of two or three caterpillars if i wish to become acquainted with the butterflies .
#
#
(h / have-concession-91~e.1 
	 :arg2 (o / obligate-01~e.4 
		 :arg1 (i / i~e.3) 
		 :arg2 (e / endure-01~e.5 
			 :arg1 (i / i~e.3) 
			 :arg2 (p / present-02~e.7 
				 :arg1 (c / caterpillar~e.12 
					 :quant (o2 / or~e.10 
						 :op1 2~e.9 
						 :op2 3~e.11))) 
			 :condition~e.13 (w / wish-01~e.15 
				 :arg0 coref 
				 :arg1 (a / acquaint-01~e.18 
					 :arg1 coref 
					 :arg2 (b2 / butterfly~e.21))))))

#
# ::snt it seems that they are very beautiful .
#
#
(s / seem-01~e.1 
	 :arg1 (b / beautiful-02~e.6 
		 :arg1 (t2 / they~e.3) 
		 :degree (v2 / very~e.5)))

#
# ::snt and if not the butterflies - - and the caterpillars - - who will call upon me ?
#
#
(c / call-on-05~e.15 
	 :arg0 (a / amr-unknown~e.17) 
	 :arg1 (i / i~e.16) 
	 :condition~e.1 (c3 / call-on-05~e.14 
		 :polarity~e.2 -~e.2 
		 :arg0 (a2 / and~e.7 
			 :op1 (b / butterfly~e.4) 
			 :op2 (c2 / caterpillar~e.9)) 
		 :arg1 coref))

#
# ::snt you will be far away ... as for the large animals - - i am not at all afraid of any of them .
#
#
(a / and 
	 :op1 (a2 / away~e.4 
		 :extent~e.7 (f / far~e.3) 
		 :location-of~e.22 (y / you~e.0)) 
	 :op2 (f2 / fear-01~e.18 
		 :polarity~e.15 -~e.15 
		 :arg0 (i / i~e.13) 
		 :arg1 (a3 / animal~e.10 
			 :mod (l / large~e.9) 
			 :quant (a4 / any~e.20)) 
		 :degree (a5 / at-all~e.17)))

#
# ::snt i have my claws . "
#
#
(h / have-03~e.1 
	 :arg0 (i / i~e.0) 
	 :arg1 (c / claw~e.3 
		 :part-of~e.2 coref))

#
# ::snt and , na√Øvely , she showed her four thorns .
#
#
(s / show-01~e.5 
	 :arg0 (s2 / she~e.4) 
	 :arg1 (t / thorn~e.8 
		 :quant 4~e.7 
		 :part-of~e.6 coref) 
	 :manner (n / naive~e.2))

#
# ::snt then she added : " do n't linger like this .
#
#
(a / add-01~e.2 
	 :arg0 (s / she~e.1) 
	 :arg1 (l / linger-01~e.7 
		 :polarity~e.6 -~e.5 
		 :arg1 (y / you) 
		 :compared-to~e.8 (t3 / this~e.9)) 
	 :time (t / then~e.0))

#
# ::snt you have decided to go away .
#
#
(d / decide-01~e.2 
	 :arg0 (y / you~e.0) 
	 :arg1 (g / go-02~e.4 
		 :arg0 coref 
		 :direction (a / away~e.5)))

#
# ::snt now go ! "
#
#
(g / go-02~e.1 
	 :mode~e.2 imperative~e.2 
	 :arg0 (y / you~e.1) 
	 :time (n / now~e.0))

#
# ::snt for she did not want him to see her crying .
#
#
(w / want-01~e.4 
	 :polarity~e.3 -~e.2 
	 :arg0 (s / she~e.1) 
	 :arg1 (s2 / see-01~e.7 
		 :arg0 (h / he~e.5) 
		 :arg1 (c / cry-02~e.9 
			 :arg0 coref)))

#
# ::snt she was such a proud flower ...
#
#
(p / pride-01~e.4 
	 :arg0 (f2 / flower~e.5 
		 :domain (s / she~e.0)) 
	 :degree (s2 / such~e.2))

#
# ::snt chapter 10 .
#
#
(c / chapter~e.0 
	 :mod 10~e.1)

#
# ::snt he found himself in the neighborhood of the asteroids 325 , 326 , 327 , 328 , 329 , and 330 .
#
#
(f / find-out-03~e.1 
	 :arg0 (h / he~e.0) 
	 :arg1 (b / be-located-at-91~e.2 
		 :arg1 coref 
		 :arg2 (n / neighborhood~e.5 
			 :location-of~e.6 (a3 / and~e.19 
				 :op1 (a4 / asteroid 
					 :wiki~e.8 - 
					 :name (n2 / name 
						 :op1 325~e.9)) 
				 :op2 (a5 / asteroid 
					 :wiki~e.8 coref 
					 :name (n3 / name 
						 :op1 326~e.11)) 
				 :op3 (a6 / asteroid 
					 :wiki~e.8 coref 
					 :name (n4 / name 
						 :op1 327~e.13)) 
				 :op4 (a7 / asteroid 
					 :wiki~e.8 coref 
					 :name (n5 / name 
						 :op1 328~e.15)) 
				 :op5 (a8 / asteroid 
					 :wiki~e.8 coref 
					 :name (n6 / name 
						 :op1 329~e.17)) 
				 :op6 (a9 / asteroid 
					 :wiki~e.8 coref 
					 :name (n7 / name 
						 :op1 330~e.20))))))

#
# ::snt he began , therefore , by visiting them , in order to add to his knowledge .
#
#
(b / begin-01~e.1 
	 :arg0 (h / he~e.0) 
	 :arg2 (v / visit-01~e.6 
		 :arg0 coref 
		 :arg1 (t2 / they~e.7)) 
	 :mod (t / therefore~e.3) 
	 :purpose~e.11 (a / add-02~e.12 
		 :arg0 coref 
		 :arg2 (k / knowledge~e.15 
			 :poss~e.14 coref)))

#
# ::snt the first of them was inhabited by a king .
#
#
(i / inhabit-01~e.5 
	 :arg0 (k / king~e.8) 
	 :arg1 (t2 / thing 
		 :ord~e.1 (o / ordinal-entity~e.1 
			 :value 1~e.7) 
		 :arg1-of (i2 / include-91~e.2 
			 :arg2 (t / they~e.3))))

#
# ::snt clad in royal purple and ermine , he was seated upon a throne which was at the same time both simple and majestic .
#
#
(s / seat-01~e.9 
	 :arg1 (h / he~e.7 
		 :arg1-of (c / clad-01~e.0 
			 :arg2 (a / and~e.4 
				 :op1 (p / purple-02~e.3 
					 :mod (r / royal~e.2)) 
				 :op2 (e / ermine~e.5)))) 
	 :arg2 (t / throne~e.12 
		 :arg1-of~e.18 (s2 / simple-02~e.20) 
		 :mod (m / majesty~e.22)))

#
# ::snt " ah !
#
#
(a2 / ah~e.1 
	 :mode~e.2 expressive~e.2)

#
# ::snt here is a subject , " exclaimed the king , when he saw the little prince coming .
#
#
(e / exclaim-01~e.6 
	 :arg0 (k / king~e.8) 
	 :arg1 (h2 / here~e.0 
		 :location-of (s / subject~e.3)) 
	 :time~e.10 (s2 / see-01~e.12 
		 :arg0 coref 
		 :arg1 (p / prince~e.15 
			 :mod (l / little~e.14) 
			 :arg1-of (c / come-01~e.16))))

#
# ::snt and the little prince asked himself : " how could he recognize me when he had never seen me before ? "
#
#
(a / ask-01~e.4 
	 :arg0 (p / prince~e.3 
		 :mod (l / little~e.2)) 
	 :arg1 (p2 / possible-01~e.9 
		 :arg1 (r / recognize-02~e.11 
			 :arg0 (h / he~e.10) 
			 :arg1 coref 
			 :condition~e.13 (s / see-01~e.17 
				 :polarity~e.16 -~e.16 
				 :arg0 coref 
				 :arg1 coref 
				 :time (b / before~e.19) 
				 :time (e / ever~e.16))) 
		 :manner~e.8 (a2 / amr-unknown~e.20)) 
	 :arg2 coref)

#
# ::snt he did not know how the world is simplified for kings .
#
#
(k / know-01~e.3 
	 :arg0 (h / he~e.0) 
	 :arg1 (s / simplify-01~e.8 
		 :arg1 (w / world~e.6) 
		 :beneficiary~e.9 (k2 / king~e.10)) 
	 :polarity~e.2 -~e.1)

#
# ::snt to them , all men are subjects .
#
#
(o / opine-01~e.0 
	 :arg0 (t2 / they~e.1) 
	 :arg1 (s2 / subject~e.6 
		 :domain (m2 / man~e.4 
			 :mod (a2 / all~e.3))))

#
# ::snt " approach , so that i may see you better , " said the king , who felt consumingly proud of being at last a king over somebody .
#
#
(s / say-01~e.12 
	 :arg0 (k / king~e.14 
		 :arg0-of~e.20 (p / pride-01~e.19 
			 :arg2 (r / reign-01~e.26 
				 :arg0 coref 
				 :arg1 (s3 / somebody~e.27) 
				 :time~e.22 (a2 / at-last~e.23)))) 
	 :arg1 (a / approach-01~e.1 
		 :mode~e.4 imperative~e.3 
		 :arg1 (y / you~e.8) 
		 :purpose~e.3 (s2 / see-01~e.7 
			 :arg0 coref 
			 :arg1 (y / you~e.8) 
			 :manner (w / well~e.17 
				 :degree (m / more~e.9)))))

#
# ::snt the little prince looked everywhere to find a place to sit down ; but the entire planet was crammed and obstructed by the king 's magnificent ermine robe .
#
#
(a / and~e.19 
	 :op1 (c / cram-01~e.18 
		 :arg1 (r2 / robe~e.27 
			 :mod (e2 / ermine~e.26) 
			 :mod (m / magnificent~e.25) 
			 :poss~e.24 (k / king~e.23)) 
		 :arg2 (p3 / planet~e.16 
			 :extent~e.21 (e3 / entire~e.15))) 
	 :op2 (o / obstruct-01~e.20 
		 :arg0 coref 
		 :arg1 coref) 
	 :concession~e.13 (l / look-01~e.3 
		 :arg0 (p / prince~e.2 
			 :mod (l2 / little~e.1)) 
		 :arg1 (p2 / place~e.8 
			 :purpose~e.9 (s / sit-down-02~e.10 
				 :arg1 coref)) 
		 :location~e.6 (e / everywhere~e.4)))

#
# ::snt so he remained standing upright , and , since he was tired , he yawned .
#
#
(a / and~e.6 
	 :op1 (r / remain-01~e.2 
		 :arg1 (h / he~e.1) 
		 :arg3~e.8 (s / stand-01~e.3 
			 :arg1 coref 
			 :manner (u / upright~e.4))) 
	 :op2 (y / yawn-01~e.14 
		 :arg0 coref 
		 :arg1-of (c / cause-01~e.0 
			 :arg0 (t / tire-01~e.11 
				 :arg1 coref))))

#
# ::snt " it is contrary to etiquette to yawn in the presence of a king , " the monarch said to him .
#
#
(s / say-01~e.18 
	 :arg0 (m / monarch~e.17) 
	 :arg1 (c / contrary-01~e.3 
		 :arg1 (y / yawn-01~e.7 
			 :location~e.8 (k / king~e.13)) 
		 :arg2 (e / etiquette~e.5)) 
	 :arg2 (h / he~e.20))

#
# ::snt " i forbid you to do so . "
#
#
(f / forbid-01~e.2 
	 :arg0 (i / i~e.1) 
	 :arg1 (d / do-02~e.5 
		 :arg0 (y / you~e.3) 
		 :arg1 (s / so~e.6)) 
	 :arg2 (y / you~e.3))

#
# ::snt " i can n't help it .
#
#
(p / possible-01~e.2 
	 :polarity~e.3 - 
	 :arg1 (h / help-02~e.4 
		 :arg0 (i / i~e.1) 
		 :arg1 (i2 / it~e.5)))

#
# ::snt i can n't stop myself , " replied the little prince , thoroughly embarrassed .
#
#
(r / reply-01~e.7 
	 :arg0 (p / prince~e.10 
		 :mod (l / little~e.9)) 
	 :arg2 (p2 / possible-01~e.1 
		 :polarity~e.2 -~e.0 
		 :arg1 (s / stop-01~e.3 
			 :arg0 coref 
			 :arg1 coref)) 
	 :manner (e / embarrass-01~e.13 
		 :arg1 coref 
		 :degree (t / thorough~e.12)))

#
# ::snt " i have come on a long journey , and i have had no sleep ... "
#
#
(a / and~e.9 
	 :op1 (c / come-01~e.3 
		 :arg1 (i / i~e.1) 
		 :arg2 (j / journey-01~e.7 
			 :arg0 coref 
			 :arg1-of (l / long-03~e.6))) 
	 :op2 (s / sleep-01~e.14 
		 :polarity~e.13 -~e.13 
		 :arg0 coref))

#
# ::snt " ah , then , " the king said .
#
#
(s / say-01~e.8 
	 :arg0 (k / king~e.7) 
	 :arg1 (a / ah~e.1 
		 :mod (t / then~e.3)))

#
# ::snt " i order you to yawn .
#
#
(o / order-01~e.2 
	 :arg0 (i / i~e.1) 
	 :arg1 (y / you~e.3) 
	 :arg2 (y2 / yawn-01~e.5 
		 :arg0 coref))

#
# ::snt it is years since i have seen anyone yawning .
#
#
(p / pass-03~e.0 
	 :arg1 (y3 / year~e.2) 
	 :time (s3 / since~e.3 
		 :op1 (s / see-01~e.6 
			 :arg0 (i / i~e.4) 
			 :arg1 (a / anyone~e.7 
				 :arg0-of (y / yawn-01~e.8)))))

#
# ::snt yawns , to me , are objects of curiosity .
#
#
(c2 / curious-01~e.8 
	 :arg0 (y2 / yawn-01~e.0) 
	 :arg1 (i / i~e.3))

#
# ::snt come , now !
#
#
(c / come-01~e.0 
	 :arg1 (y / you) 
	 :time (n / now~e.2) 
	 :mode~e.3 imperative~e.3)

#
# ::snt yawn again !
#
#
(y / yawn-01~e.0 
	 :mode~e.2 imperative~e.2 
	 :arg0 (y2 / you) 
	 :mod (a / again~e.1))

#
# ::snt it is an order . "
#
#
(o2 / order-01~e.3 
	 :arg2 (i2 / it~e.0))

#
# ::snt " that frightens me ...
#
#
(f / frighten-01~e.2 
	 :arg0 (t / that~e.1) 
	 :arg1 (i / i~e.3))

#
# ::snt i can not , any more ... " murmured the little prince , now completely abashed .
#
#
(m / murmur-01~e.8 
	 :arg0 (p / prince~e.11 
		 :mod (l / little~e.10) 
		 :arg1-of (a2 / abash-01~e.15 
			 :arg1-of (c / complete-02~e.14) 
			 :time (n / now~e.13))) 
	 :arg1 (p2 / possible-01~e.1 
		 :polarity~e.2 -~e.2 
		 :time (a / anymore~e.5)))

#
# ::snt " hum !
#
#
(h / hum~e.1 
	 :mode~e.2 expressive~e.2)

#
# ::snt hum ! " replied the king .
#
#
(r / reply-01~e.3 
	 :arg0 (k / king~e.5) 
	 :arg2 (h / hum~e.0 
		 :mode~e.1 expressive~e.1))

#
# ::snt " then i - - i order you sometimes to yawn and sometimes to - - "
#
#
(o / order-01~e.6 
	 :arg0 (i / i~e.5) 
	 :arg1 (y / you~e.7) 
	 :arg2 (a / and~e.11 
		 :op1 (y2 / yawn-01~e.10 
			 :arg0 coref 
			 :frequency (s / sometimes~e.8)) 
		 :op2 (d / do-02~e.2 
			 :frequency (s2 / sometimes~e.12))) 
	 :mod (t2 / then~e.1))

#
# ::snt he sputtered a little , and seemed vexed .
#
#
(a / and~e.5 
	 :op1 (s / sputter-01~e.1 
		 :arg0 (h / he~e.0) 
		 :degree (l / little~e.3)) 
	 :op2 (s2 / seem-01~e.6 
		 :arg1 (v / vex-01~e.7 
			 :arg1 coref)))

#
# ::snt for what the king fundamentally insisted upon was that his authority should be respected .
#
#
(i / insist-01~e.5 
	 :arg0 (k / king~e.3) 
	 :arg1 (r / respect-01~e.13 
		 :arg1 (a / authority~e.10 
			 :poss~e.9 coref)) 
	 :mod (f / fundamental~e.4))

#
# ::snt he tolerated no disobedience .
#
#
(t / tolerate-01~e.1 
	 :arg0 (h / he~e.0) 
	 :arg1 (d / disobey-01~e.3 
		 :arg1 coref) 
	 :polarity~e.2 -~e.2)

#
# ::snt he was an absolute monarch .
#
#
(m / monarch~e.4 
	 :mod (a / absolute~e.3) 
	 :domain (h2 / he~e.0))

#
# ::snt but , because he was a very good man , he made his orders reasonable .
#
#
(h3 / have-concession-91~e.0 
	 :arg1 (m / make-02~e.11 
		 :arg0 (h / he~e.10) 
		 :arg1 (r / reasonable-02~e.14 
			 :arg1 (t / thing~e.13 
				 :arg2-of~e.12 (o / order-01~e.13))) 
		 :arg1-of (c2 / cause-01~e.2 
			 :arg0 (m2 / man~e.8 
				 :arg1-of (g / good-02~e.7 
					 :degree (v / very~e.6)) 
				 :domain~e.5 (h2 / he~e.3)))))

#
# ::snt " if i ordered a general , " he would say , by way of example , " if i ordered a general to change himself into a sea bird , and if the general did not obey me , that would not be the fault of the general .
#
#
(s / say-01~e.10 
	 :arg0 (h / he~e.8) 
	 :arg1 (o / order-01~e.20 
		 :arg0 coref 
		 :arg1 (p / person~e.19 
			 :arg0-of~e.21 (h2 / have-org-role-91~e.21 
				 :arg2 (g / general~e.34))) 
		 :arg2 (c / change-01~e.24 
			 :arg0 coref 
			 :arg1 coref 
			 :arg2 (b / bird~e.29 
				 :mod (s2 / sea~e.28))) 
		 :arg1-of (o2 / obey-01~e.37 
			 :polarity~e.36 -~e.35 
			 :arg0 coref) 
		 :condition-of~e.13 (f / fault-01~e.45 
			 :polarity~e.42 -~e.42 
			 :arg1 coref)) 
	 :arg0-of~e.46 (e / exemplify-01~e.15))

#
# ::snt it would be my fault . "
#
#
(f / fault-01~e.4 
	 :arg1 (i2 / i~e.3))

#
# ::snt " may i sit down ? " came now a timid inquiry from the little prince .
#
#
(i / inquire-01~e.11 
	 :arg0 (p / prince~e.15 
		 :mod (l / little~e.14)) 
	 :arg1 (p2 / permit-01~e.7 
		 :arg1 (s / sit-down-02~e.3 
			 :arg1 coref)) 
	 :manner (t / timid~e.10) 
	 :time (n / now~e.8))

#
# ::snt " i order you to do so , " the king answered him , and majestically gathered in a fold of his ermine mantle .
#
#
(a / and~e.14 
	 :op1 (a2 / answer-01~e.11 
		 :arg0 (k / king~e.10) 
		 :arg1 (h / he~e.12) 
		 :arg2 (o / order-01~e.2 
			 :arg0 coref 
			 :arg1 coref 
			 :arg2 (d / do-02~e.5 
				 :arg1 (s / so~e.6)))) 
	 :op2 (g / gather-01~e.16 
		 :arg0 coref 
		 :arg1 (f / fold~e.19 
			 :part-of~e.21 (m3 / mantle~e.23 
				 :consist-of~e.20 (e2 / ermine~e.22))) 
		 :manner (m / majesty~e.15)))

#
# ::snt but the little prince was wondering ...
#
#
(w / wonder-01~e.5 
	 :arg0 (p / prince~e.3 
		 :mod (l / little~e.2)))

#
# ::snt the planet was tiny .
#
#
(t / tiny~e.3 
	 :domain (p / planet~e.1))

#
# ::snt over what could this king really rule ?
#
#
(p / possible-01~e.2 
	 :arg1 (r / rule-03~e.6 
		 :arg0 (k / king~e.4) 
		 :arg1 (a / amr-unknown~e.7) 
		 :arg1-of (r2 / real-04~e.5)))

#
# ::snt " sire , " he said to him , " i beg that you will excuse my asking you a question - - "
#
#
(s / say-01~e.5 
	 :arg0 (h / he~e.4) 
	 :arg1 (b / beg-01~e.11 
		 :arg0 coref 
		 :arg1 (p / person~e.20 
			 :arg1-of~e.20 (t / title-01~e.20 
				 :arg2 (s2 / sire~e.1))) 
		 :arg2 (e / excuse-01~e.15 
			 :arg0 coref 
			 :arg1 coref 
			 :arg2 (a / ask-01~e.17 
				 :arg0 coref 
				 :arg2 coref))) 
	 :arg2 (p / person~e.20 
		 :arg1-of~e.20 (t / title-01~e.20 
			 :arg2 (s2 / sire~e.1))))

#
# ::snt " i order you to ask me a question , " the king hastened to assure him .
#
#
(h / hasten-01~e.13 
	 :arg0 (k / king~e.12) 
	 :arg1 (a / assure-01~e.15 
		 :arg0 coref 
		 :arg1 (h2 / he~e.16) 
		 :arg2 (o / order-01~e.2 
			 :arg0 coref 
			 :arg1 coref 
			 :arg2 (a2 / ask-01~e.5 
				 :arg0 coref 
				 :arg2 coref))))

#
# ::snt " sire - - over what do you rule ? "
#
#
(s / say-01~e.6 
	 :arg1 (r / rule-03~e.8 
		 :arg0 (p / person~e.4 
			 :arg1-of~e.4 (t / title-01~e.4 
				 :arg2 (s2 / sire~e.1))) 
		 :arg1 (a / amr-unknown~e.9)) 
	 :arg2 (p / person~e.4 
		 :arg1-of~e.4 (t / title-01~e.4 
			 :arg2 (s2 / sire~e.1))))

#
# ::snt " over everything , " said the king , with magnificent simplicity .
#
#
(s / say-01~e.5 
	 :arg0 (k / king~e.7) 
	 :arg1 (e / everything~e.2) 
	 :arg1-of (s2 / simple-02~e.11 
		 :mod (m / magnificence~e.10)))

#
# ::snt " over everything ? "
#
#
(o / over~e.1 
	 :op1 (e / everything~e.2))

#
# ::snt the king made a gesture , which took in his planet , the other planets , and all the stars .
#
#
(g / gesture-01~e.4 
	 :arg0 (k / king~e.1) 
	 :arg0-of (t / take-in-23~e.7 
		 :arg1 (a / and~e.16 
			 :op1 (p / planet~e.10 
				 :poss~e.9 coref) 
			 :op2 (p2 / planet~e.14 
				 :mod (o / other~e.13)) 
			 :op3 (s / star~e.19 
				 :mod (a2 / all~e.17)))))

#
# ::snt " over all that ? " asked the little prince .
#
#
(a / ask-01~e.6 
	 :arg0 (p / prince~e.9 
		 :mod (l / little~e.8)) 
	 :arg1 (o / over~e.1 
		 :op1 (t / that~e.3 
			 :mod (a3 / all~e.2))))

#
# ::snt " over all that , " the king answered .
#
#
(a / answer-01~e.8 
	 :arg0 (k / king~e.7) 
	 :arg2 (o / over~e.1 
		 :op1 (t / that~e.3 
			 :mod (a2 / all~e.2))))

#
# ::snt for his rule was not only absolute : it was also universal .
#
#
(a3 / and~e.10 
	 :op1 (a4 / absolute~e.6 
		 :domain (r / rule-03~e.2 
			 :arg0 (h / he~e.1))) 
	 :op2 (u2 / universal~e.11 
		 :domain~e.8 coref))

#
# ::snt " and the stars obey you ? "
#
#
(o / obey-01~e.4 
	 :arg0 (s / star~e.3) 
	 :arg1 (y / you~e.5))

#
# ::snt " certainly they do , " the king said .
#
#
(s / say-01~e.8 
	 :arg0 (k / king~e.7) 
	 :arg1 (d / do-02~e.3 
		 :arg0 (t / they~e.2) 
		 :mod (c / certain~e.1)))

#
# ::snt " they obey instantly .
#
#
(o / obey-01~e.2 
	 :arg0 (t / they~e.1) 
	 :manner (i / instant~e.3))

#
# ::snt i do not permit insubordination . "
#
#
(p / permit-01~e.3 
	 :polarity~e.2 -~e.1 
	 :arg0 (i / i~e.0) 
	 :arg1 (i2 / insubordinate-00~e.4))

#
# ::snt such power was a thing for the little prince to marvel at .
#
#
(m / marvel-01~e.10 
	 :arg0 (p / prince~e.8 
		 :mod (l / little~e.7)) 
	 :arg1 (p2 / power~e.1 
		 :degree (s / such~e.0)))

#
# ::snt if he had been master of such complete authority , he would have been able to watch the sunset , not forty - four times in one day , but seventy - two , or even a hundred , or even two hundred times , without ever having to move his chair .
#
#
(p / possible-01~e.14 
	 :arg1 (w / watch-01~e.16 
		 :arg0 (h / he~e.10) 
		 :arg1 (s / sunset~e.18 
			 :arg1-of (h3 / have-frequency-91~e.12 
				 :polarity~e.20 -~e.20 
				 :arg2 44~e.21 
				 :range~e.27 (t5 / temporal-quantity 
					 :quant 1~e.26 
					 :unit (y / year~e.30))) 
			 :arg1-of (h4 / have-frequency-91~e.29 
				 :arg2 (o / or~e.34 
					 :op1 72~e.32 
					 :op2 100~e.35 
					 :op3 200~e.24) 
				 :range~e.23 coref)) 
		 :manner~e.45 (m2 / move-01~e.49 
			 :polarity~e.47 - 
			 :arg0 coref 
			 :arg1 (c2 / chair~e.51 
				 :poss~e.50 coref) 
			 :time (e3 / ever~e.46))) 
	 :condition~e.0 (m / master~e.4 
		 :domain (h2 / he~e.1) 
		 :poss-of~e.5 (a / authority~e.8 
			 :arg1-of~e.2 (c / complete-02~e.7) 
			 :mod (s2 / such~e.6))))

#
# ::snt and because he felt a bit sad as he remembered his little planet which he had forsaken , he plucked up his courage to ask the king a favor : " i should like to see a sunset ... do me that kindness ...
#
#
(p / pluck-01~e.19 
	 :arg0 (h / he~e.18) 
	 :arg1 (c / courage~e.22 
		 :poss~e.21 coref) 
	 :mod (u / up~e.20) 
	 :arg1-of (c2 / cause-01~e.1 
		 :arg0 (f / feel-01~e.3 
			 :arg0 coref 
			 :arg1 (s3 / sad-02~e.6 
				 :arg1 coref 
				 :degree~e.32 (b / bit~e.5)) 
			 :arg1-of (c3 / cause-01~e.1 
				 :arg0 (r / remember-01~e.9 
					 :arg0 coref 
					 :arg1 (p2 / planet~e.12 
						 :poss~e.10 coref 
						 :mod (l2 / little~e.11) 
						 :arg1-of~e.15 (f2 / forsake-01~e.16 
							 :arg0 coref)))))) 
	 :arg0-of (c4 / cause-01 
		 :arg1 (a / ask-02~e.24 
			 :arg0 coref 
			 :arg1 (a2 / and~e.0 
				 :op1 (l / like-02~e.33 
					 :arg0 (i / i~e.31) 
					 :arg1 (s / see-01~e.35 
						 :arg0 coref 
						 :arg1 (s2 / sunset~e.37))) 
				 :op2 (d / do-02~e.39 
					 :arg0 (k / king~e.26) 
					 :arg1 (t / thing~e.23 
						 :arg1-of~e.41 (k2 / kind-01~e.42 
							 :arg0 coref 
							 :arg2 coref)) 
					 :arg2 coref)) 
			 :arg2 (k / king~e.26))))

#
# ::snt order the sun to set ... "
#
#
(o / order-01~e.0 
	 :arg0 (y / you) 
	 :arg1 (s / sun~e.2) 
	 :arg2 (s2 / set-11~e.4 
		 :arg1 coref))

#
# ::snt " if i ordered a general to fly from one flower to another like a butterfly , or to write a tragic drama , or to change himself into a sea bird , and if the general did not carry out the order that he had received , which one of us would be in the wrong ? " the king demanded .
#
#
(d / demand-01~e.61 
	 :arg0 (k / king~e.60) 
	 :arg1 (w / wrong-04~e.56 
		 :arg1 (a / amr-unknown~e.57 
			 :arg1-of (i2 / include-91~e.49 
				 :arg2 (w3 / we~e.51))) 
		 :condition~e.1 (a2 / and~e.33 
			 :op1 (o3 / order-01~e.3 
				 :arg0 coref 
				 :arg1 (p / person~e.2 
					 :arg0-of~e.4 (h / have-org-role-91~e.4 
						 :arg2 (g / general~e.5))) 
				 :arg2 (o4 / or~e.17 
					 :op1 (f / fly-01~e.7 
						 :arg1 coref 
						 :destination~e.28 (a3 / another~e.12) 
						 :source~e.8 (t / thing~e.11 
							 :arg1-of~e.10 (f2 / flower-01~e.10 
								 :quant 1~e.9)) 
						 :manner (b / butterfly~e.15)) 
					 :op2 (w2 / write-01~e.19 
						 :arg0 coref 
						 :arg1 (d2 / drama~e.22 
							 :mod (t2 / tragedy~e.21))) 
					 :op3 (c2 / change-01~e.26 
						 :arg0 coref 
						 :arg1 coref 
						 :arg2 (b2 / bird~e.31 
							 :mod (s / sea~e.30))))) 
			 :op2 (c / carry-out-03~e.39 
				 :polarity~e.38 -~e.37 
				 :arg0 coref 
				 :arg1 (t3 / thing~e.42 
					 :arg2-of~e.40 (o2 / order-01~e.42) 
					 :arg1-of~e.45 (r / receive-01~e.46 
						 :arg0 coref 
						 :arg2 coref))))))

#
# ::snt " the general , or myself ? "
#
#
(o / or~e.4 
	 :op1 (p / person 
		 :arg0-of (h / have-org-role-91 
			 :arg2 (g / general~e.2))) 
	 :op2 (i / i~e.5))

#
# ::snt " you , " said the little prince firmly .
#
#
(s / say-01~e.4 
	 :arg0 (p / prince~e.7 
		 :mod (l / little~e.6)) 
	 :arg1 (y / you~e.1) 
	 :arg1-of (f / firm-03~e.8))

#
# ::snt " exactly .
#
#
(e / exact~e.1)

#
# ::snt one much require from each one the duty which each one can perform , " the king went on .
#
#
(g / go-on-25~e.17 
	 :arg0 (k / king~e.16) 
	 :arg1 (o / obligate-01~e.1 
		 :arg1 (o2 / one~e.0) 
		 :arg2 (r / require-01~e.2 
			 :arg0 coref 
			 :arg1 (d / duty~e.7 
				 :arg1-of (p / perform-02~e.12 
					 :arg0 (o3 / one~e.5 
						 :mod (e / each~e.9)) 
					 :arg1-of (p2 / possible-01~e.11))) 
			 :arg2 (o3 / one~e.5 
				 :mod (e / each~e.9)))))

#
# ::snt " accepted authority rests first of all on reason .
#
#
(r / rest-02~e.3 
	 :arg1 (a / authority~e.2 
		 :arg1-of (a2 / accept-01~e.1)) 
	 :arg2 (r2 / reason-01~e.8) 
	 :mod (f / first-of-all~e.4))

#
# ::snt if you ordered your people to go and throw themselves into the sea , they would rise up in revolution .
#
#
(r / rise-up-03~e.16 
	 :arg0 (p / person~e.4 
		 :poss~e.3 (y / you~e.1) 
		 :arg0-of (r2 / revolution-03~e.19)) 
	 :arg1 coref 
	 :condition~e.0 (o / order-01~e.2 
		 :arg0 (y / you~e.1) 
		 :arg1 coref 
		 :arg2 (t / throw-01~e.8 
			 :arg0 coref 
			 :arg1 coref 
			 :arg2 (s / sea~e.12))))

#
# ::snt i have the right to require obedience because my orders are reasonable . "
#
#
(r / right-05~e.3 
	 :arg1 (i / i~e.0) 
	 :arg2 (r2 / require-01~e.5 
		 :arg0 (i / i~e.0) 
		 :arg1 (o / obey-01~e.6 
			 :arg1 coref)) 
	 :arg1-of (c / cause-01~e.7 
		 :arg0 (r3 / reasonable-02~e.11 
			 :arg1 (t / thing~e.9 
				 :arg2-of~e.8 (o2 / order-01~e.9)))))

#
# ::snt " then my sunset ? " the little prince reminded him : for he never forgot a question once he had asked it .
#
#
(r / remind-01~e.9 
	 :arg0 (p / prince~e.8 
		 :mod (l / little~e.7)) 
	 :arg1 (s / sunset~e.3 
		 :mode~e.1 interrogative~e.4 
		 :poss~e.2 coref) 
	 :arg2 (h / he~e.13) 
	 :arg1-of (c / cause-01~e.12 
		 :arg0 (f / forget-01~e.15 
			 :polarity~e.14 -~e.14 
			 :arg0 coref 
			 :arg1 (t / thing~e.18 
				 :arg1-of~e.20 (q / question-01~e.17)) 
			 :condition~e.22 (a / ask-01~e.21 
				 :arg0 coref 
				 :arg1 coref) 
			 :time (e / ever~e.14))))

#
# ::snt " you shall have your sunset .
#
#
(h / have-03~e.3 
	 :arg0 (y / you~e.1) 
	 :arg1 (s / sunset~e.5 
		 :poss~e.4 coref))

#
# ::snt i shall command it .
#
#
(c / command-02~e.2 
	 :arg0 (i / i~e.0) 
	 :arg2 (i2 / it~e.3))

#
# ::snt but , according to my science of government , i shall wait until conditions are favorable . "
#
#
(c3 / contrast-01~e.0 
	 :arg2 (w / wait-01~e.11 
		 :arg1 (i / i~e.9) 
		 :arg2 (c / condition~e.13 
			 :mod (f2 / favorable~e.15)) 
		 :arg1-of (c2 / cause-01~e.2 
			 :arg0 (s2 / science~e.5 
				 :domain~e.12 (g / government-organization~e.7 
					 :arg0-of (g2 / govern-01~e.7)) 
				 :poss~e.4 coref))))

#
# ::snt " when will that be ? " inquired the little prince .
#
#
(i / inquire-01~e.7 
	 :arg0 (p / prince~e.10 
		 :mod (l / little~e.9)) 
	 :arg1 (b2 / be-temporally-at-91~e.1 
		 :arg1 (t / that~e.3) 
		 :arg2 (a / amr-unknown~e.5)))

#
# ::snt " hum !
#
#
(h / hum~e.1 
	 :mode~e.2 expressive~e.2)

#
# ::snt hum ! " replied the king ; and before saying anything else he consulted a bulky almanac .
#
#
(a / and~e.7 
	 :op1 (r / reply-01~e.3 
		 :arg0 (k / king~e.5) 
		 :arg2 (h / hum~e.0 
			 :mode~e.1 expressive~e.1)) 
	 :op2 (c / consult-01~e.13 
		 :arg0 coref 
		 :arg1 (a2 / almanac~e.16 
			 :arg1-of (b / bulky-02~e.15)) 
		 :time (b2 / before~e.8 
			 :op1 (s / say-01~e.9 
				 :arg0 coref 
				 :arg1 (a3 / anything~e.10 
					 :mod (e / else~e.11))))))

#
# ::snt " hum !
#
#
(h / hum~e.1 
	 :mode~e.2 expressive~e.2)

#
# ::snt hum !
#
#
(h / hum~e.0 
	 :mode~e.1 expressive~e.1)

#
# ::snt that will be about - - about - - that will be this evening about twenty minutes to eight .
#
#
(b / be-temporally-at-91~e.1 
	 :arg1 (t3 / that~e.0) 
	 :arg2 (a / about~e.3 
		 :op1 (d / date-entity 
			 :time 19:40~e.18 
			 :dayperiod~e.15 (e / evening~e.13) 
			 :mod (t / today~e.16))))

#
# ::snt and you will see how well i am obeyed . "
#
#
(s / see-01~e.3 
	 :arg0 (y / you~e.1) 
	 :arg1 (o / obey-01~e.8 
		 :arg1 (i / i~e.6) 
		 :manner (w / well~e.5 
			 :degree (a / amr-unknown~e.4))))

#
# ::snt the little prince yawned .
#
#
(y / yawn-01~e.3 
	 :arg0 (p / prince~e.2 
		 :mod (l / little~e.1)))

#
# ::snt he was regretting his lost sunset .
#
#
(r / regret-01~e.2 
	 :arg0 (h / he~e.0) 
	 :arg1 (l / lose-02~e.4 
		 :arg0 coref 
		 :arg1 (s / sunset~e.5)))

#
# ::snt and then , too , he was already beginning to be a little bored .
#
#
(a2 / and~e.0 
	 :op2 (b / begin-01~e.8 
		 :arg1 (b4 / bore-02~e.13 
			 :arg1 (h2 / he~e.5) 
			 :degree (l / little~e.12)) 
		 :time (a / already~e.7)))

#
# ::snt " i have nothing more to do here , " he said to the king .
#
#
(s / say-01~e.11 
	 :arg0 (h / he~e.10) 
	 :arg1 (r / remain-01~e.4 
		 :polarity~e.3 -~e.6 
		 :arg1 (t / thing~e.12 
			 :arg1-of~e.6 (d2 / do-02~e.6)) 
		 :location~e.7 (h2 / here~e.7)) 
	 :arg2 (k / king~e.14))

#
# ::snt " so i shall set out on my way again . "
#
#
(c / cause-01~e.1 
	 :arg1 (s / set-out-07~e.4 
		 :arg0 (i / i~e.2) 
		 :arg1 (w / way~e.8 
			 :poss~e.7 coref) 
		 :mod (a / again~e.9)))

#
# ::snt " do not go , " said the king , who was very proud of having a subject .
#
#
(s / say-01~e.6 
	 :arg0 (k / king~e.8 
		 :arg0-of~e.14 (p / pride-01~e.13 
			 :arg2 (h / have-03~e.16 
				 :arg0 coref 
				 :arg1 (s2 / subject~e.17)) 
			 :degree (v / very~e.12))) 
	 :arg1 (g / go-02~e.3 
		 :polarity~e.2 -~e.2 
		 :arg0 (y / you~e.15)))

#
# ::snt " do not go .
#
#
(g / go-02~e.3 
	 :polarity~e.2 -~e.2 
	 :mode~e.1 imperative~e.1 
	 :arg0 (y / you))

#
# ::snt i will make you a minister ! "
#
#
(m / make-02~e.2 
	 :arg0 (i / i~e.0) 
	 :arg1 (h / have-org-role-91~e.4 
		 :arg0 (y / you~e.3) 
		 :arg2 (m2 / minister~e.5)))

#
# ::snt " minister of what ? "
#
#
(m / minister~e.1 
	 :topic~e.2 (a / amr-unknown~e.4))

#
# ::snt " minster of - - of justice ! "
#
#
(m / minister~e.1 
	 :topic~e.5 (j / justice~e.6))

#
# ::snt " but there is nobody here to judge ! "
#
#
(n / nobody~e.4 
	 :location~e.2 (h / here~e.5) 
	 :arg1-of (j / judge-01~e.7))

#
# ::snt " we do not know that , " the king said to him .
#
#
(s / say-01~e.10 
	 :arg0 (k / king~e.9) 
	 :arg1 (k2 / know-01~e.4 
		 :arg0 (w / we~e.1) 
		 :arg1 (t / that~e.5) 
		 :polarity~e.3 -~e.2) 
	 :arg2 (h / he~e.12))

#
# ::snt " i have not yet made a complete tour of my kingdom .
#
#
(t / tour-01~e.8 
	 :polarity~e.3 -~e.5 
	 :arg0 (i / i~e.1) 
	 :arg1 (k / kingdom~e.11 
		 :poss~e.10 coref) 
	 :arg1-of (c / complete-02~e.7))

#
# ::snt i am very old .
#
#
(o2 / old~e.3 
	 :domain (i / i~e.0) 
	 :degree (v / very~e.2))

#
# ::snt there is no room here for a carriage .
#
#
(r / room~e.3 
	 :polarity~e.2 -~e.2 
	 :purpose~e.5 (c / carriage~e.7) 
	 :location~e.0 (h / here~e.4))

#
# ::snt and it tires me to walk . "
#
#
(t / tire-01~e.2 
	 :arg0 (w / walk-01~e.5 
		 :arg0 (i / i~e.3)) 
	 :arg1 coref)

#
# ::snt " oh , but i have looked already ! " said the little prince , turning around to give one more glance to the other side of the planet .
#
#
(s / say-01~e.10 
	 :arg0 (p / prince~e.13 
		 :mod (l / little~e.12) 
		 :arg0-of (t / turn-01~e.15 
			 :arg1 coref 
			 :purpose~e.22 (g / glance-01~e.21 
				 :quant 1~e.19 
				 :arg0 coref 
				 :arg1 (s2 / side~e.25 
					 :mod (o / other~e.24) 
					 :part-of~e.26 (p2 / planet~e.28)) 
				 :mod (m / more~e.20)))) 
	 :arg1 (c / contrast-01~e.3 
		 :arg2 (l2 / look-01~e.6 
			 :arg0 coref 
			 :time (a2 / already~e.7))))

#
# ::snt on that side , as on this , there was nobody at all ...
#
#
(n2 / nobody~e.10 
	 :location~e.0 (s / side~e.2 
		 :mod (t / that~e.1) 
		 :arg1-of (s2 / same-01~e.4 
			 :arg2 (t2 / this~e.6))) 
	 :mod (a / at-all~e.12))

#
# ::snt " then you shall judge yourself , " the king answered .
#
#
(a / answer-01~e.10 
	 :arg0 (k / king~e.9) 
	 :arg2 (h / have-condition-91~e.5 
		 :arg1 (j / judge-01~e.4 
			 :arg0 (y / you~e.2) 
			 :arg1 coref)))

#
# ::snt " that is the most difficult thing of all .
#
#
(t / thing~e.6 
	 :domain (t2 / that~e.1) 
	 :mod (d / difficult~e.5 
		 :degree (m / most~e.4) 
		 :compared-to~e.7 (a / all~e.8)))

#
# ::snt it is much more difficult to judge oneself than to judge others .
#
#
(d / difficult~e.4 
	 :degree (m / more~e.3 
		 :degree (m2 / much~e.2)) 
	 :domain~e.0 (j / judge-01~e.6 
		 :arg0 (o2 / one~e.7) 
		 :arg1 coref) 
	 :compared-to~e.8 (j2 / judge-01~e.10 
		 :arg1 (o / other~e.11)))

#
# ::snt if you succeed in judging yourself rightly , then you are indeed a man of true wisdom . "
#
#
(w2 / wise~e.11 
	 :domain (y / you~e.5) 
	 :condition~e.0 (s / succeed-01~e.2 
		 :arg0 coref 
		 :arg1 (j / judge-01~e.4 
			 :arg0 coref 
			 :arg1 coref 
			 :arg1-of (r / right-02~e.6))) 
	 :arg1-of (t / true-01~e.15))

#
# ::snt " yes , " said the little prince , " but i can judge myself anywhere .
#
#
(s / say-01~e.4 
	 :arg0 (p / prince~e.7 
		 :mod (l / little~e.6)) 
	 :arg1 (y / yes~e.1 
		 :concession~e.10 (p2 / possible-01~e.12 
			 :arg1 (j / judge-01~e.13 
				 :arg0 coref 
				 :arg1 coref 
				 :location~e.14 (a / anywhere~e.15)))))

#
# ::snt i do not need to live on this planet .
#
#
(n / need-01~e.3 
	 :arg0 (i / i~e.0) 
	 :arg1 (l / live-01~e.5 
		 :arg0 coref 
		 :location~e.6 (p / planet~e.8 
			 :mod (t / this~e.7))) 
	 :polarity~e.2 -~e.1)

#
# ::snt " hum !
#
#
(h / hum~e.1 
	 :mode~e.2 expressive~e.2)

#
# ::snt hum ! " said the king .
#
#
(s / say-01~e.3 
	 :arg0 (k / king~e.5) 
	 :arg1 (h / hum~e.0 
		 :mode~e.1 expressive~e.1))

#
# ::snt " i have good reason to believe that somewhere on my planet there is an old rat .
#
#
(h2 / have-03~e.2 
	 :arg0 (i / i~e.1) 
	 :arg1 (r3 / reason~e.4 
		 :arg1-of (g / good-02~e.3) 
		 :arg0-of (c / cause-01~e.7 
			 :arg1 (b3 / believe-01~e.6 
				 :arg0 coref 
				 :arg1 (r2 / rat~e.16 
					 :location~e.12 (s / somewhere~e.8 
						 :location~e.9 (p / planet~e.11 
							 :poss~e.10 coref)) 
					 :mod (o / old~e.15))))))

#
# ::snt i hear him at night .
#
#
(h / hear-01~e.1 
	 :arg0 (i / i~e.0) 
	 :arg1 (h2 / he~e.2) 
	 :time (d / date-entity 
		 :dayperiod~e.3 (n / night~e.4)))

#
# ::snt you can judge this old rat .
#
#
(p / possible-01~e.1 
	 :arg1 (j / judge-01~e.2 
		 :arg0 (y / you~e.0) 
		 :arg1 (r / rat~e.5 
			 :mod (o / old~e.4) 
			 :mod (t / this~e.3))))

#
# ::snt from time to time you will condemn him to death .
#
#
(c / condemn-01~e.6 
	 :arg0 (y / you~e.4) 
	 :arg1 (h / he~e.7) 
	 :arg3~e.8 (d / die-01~e.9 
		 :arg1 coref) 
	 :frequency~e.0 (t / time-to-time~e.1))

#
# ::snt thus his life will depend on your justice .
#
#
(d / depend-01~e.0 
	 :arg0 (l / live-01~e.2 
		 :arg0 (h / he~e.1)) 
	 :arg1 (j / justice~e.7 
		 :poss~e.5 (y / you~e.6)))

#
# ::snt but you will pardon him on each occasion ; for he must be treated thriftily .
#
#
(p / pardon-01~e.3 
	 :arg0 (y / you~e.1) 
	 :arg1 (h / he~e.4) 
	 :frequency~e.10 (o2 / occasion-02~e.7 
		 :quant (e / each~e.6)) 
	 :arg1-of (c / cause-01~e.9 
		 :arg0 (o / obligate-01~e.11 
			 :arg2 (t / treat-04~e.13 
				 :arg1 coref 
				 :manner (t2 / thrift~e.14)))))

#
# ::snt he is the only one we have . "
#
#
(o / one~e.4 
	 :mod (o2 / only~e.3) 
	 :domain (h2 / he~e.0) 
	 :arg1-of (h / have-03~e.6 
		 :arg0 (w / we~e.5)))

#
# ::snt " i , " replied the little prince , " do not like to condemn anyone to death .
#
#
(r / reply-01~e.4 
	 :arg0 (p / prince~e.7 
		 :mod (l / little~e.6)) 
	 :arg1 (l2 / like-01~e.12 
		 :polarity~e.11 -~e.10 
		 :arg0 coref 
		 :arg1 (c / condemn-01~e.14 
			 :arg0 coref 
			 :arg1 (a / anyone~e.15) 
			 :arg3~e.16 (d / die-01~e.17 
				 :arg1 coref))))

#
# ::snt and now i think i will go on my way . "
#
#
(t / think-01~e.3 
	 :arg0 (i / i~e.2) 
	 :arg1 (g / go-02~e.6 
		 :arg0 coref 
		 :arg1 (w / way~e.9 
			 :poss~e.8 coref)) 
	 :time (n / now~e.1))

#
# ::snt " no , " said the king .
#
#
(s / say-01~e.4 
	 :arg0 (k / king~e.6) 
	 :arg1 (n / no~e.1))

#
# ::snt but the little prince , having now completed his preparations for departure , had no wish to grieve the old monarch .
#
#
(w / wish-01~e.15 
	 :polarity~e.5 -~e.14 
	 :arg0 (p / prince~e.3 
		 :mod (l / little~e.2) 
		 :arg0-of (c / complete-01~e.7 
			 :arg1 (p2 / prepare-02~e.9 
				 :arg0 coref 
				 :arg2 (d / depart-01~e.11 
					 :arg0 coref)) 
			 :time (n / now~e.6))) 
	 :arg1 (g / grieve-01~e.17 
		 :arg0 coref 
		 :arg1 (m / monarch~e.20 
			 :mod (o / old~e.19))))

#
# ::snt " if your majesty wishes to be promptly obeyed , " he said , " he should be able to give me a reasonable order .
#
#
(s / say-01~e.12 
	 :arg0 (h / he~e.11) 
	 :arg1 (p / possible-01~e.18 
		 :arg1 (o / order-01~e.24 
			 :arg0 (p2 / person~e.20 
				 :arg1-of~e.20 (t2 / title-01~e.20 
					 :arg2 (m / majesty~e.3 
						 :poss~e.2 coref))) 
			 :arg1 coref 
			 :arg2 (t / thing~e.19 
				 :arg1-of~e.23 (r / reasonable-02~e.23))) 
		 :condition~e.1 (w / wish-01~e.4 
			 :arg0 coref 
			 :arg1 (o2 / obey-01~e.8 
				 :arg1 coref 
				 :manner~e.16 (p3 / prompt~e.7)))))

#
# ::snt he should be able , for example , to order me to be gone by the end of one minute .
#
#
(e2 / exemplify-01~e.6 
	 :arg0 (p / possible-01~e.3 
		 :arg1 (o / order-01~e.9 
			 :arg0 (h / he~e.0) 
			 :arg1 (i / i~e.10) 
			 :arg2 (g / go-02~e.13 
				 :arg0 coref 
				 :time (b / by~e.14 
					 :op1 (e / end-01~e.16 
						 :arg1 (t / temporal-quantity 
							 :quant 1~e.18 
							 :unit (m / minute~e.19))))))))

#
# ::snt it seems to me that conditions are favorable ... "
#
#
(s / seem-01~e.1 
	 :arg1 (f / favorable~e.7 
		 :domain (c / condition~e.5)) 
	 :arg2 (i2 / i~e.3))

#
# ::snt as the king made no answer , the little prince hesitated a moment .
#
#
(h / hesitate-01~e.10 
	 :arg0 (p / prince~e.9 
		 :mod (l / little~e.8)) 
	 :duration~e.11 (m / moment~e.12) 
	 :arg1-of (c / cause-01 
		 :arg0 (a / answer-01~e.5 
			 :polarity~e.4 -~e.3 
			 :arg0 (k / king~e.2))))

#
# ::snt then , with a sigh , he took his leave .
#
#
(t / take-01~e.7 
	 :arg0 (h / he~e.6 
		 :arg0-of~e.2 (s / sigh-02~e.4)) 
	 :arg1 (l / leave-11~e.9 
		 :arg0 coref) 
	 :time (t2 / then~e.0))

#
# ::snt " i made you my ambassador , " the king called out , hastily .
#
#
(c / call-07~e.10 
	 :arg0 (k / king~e.9) 
	 :arg1 (m / make-02~e.2 
		 :arg0 coref 
		 :arg1 (h2 / have-org-role-91~e.4 
			 :arg0 (y / you~e.3) 
			 :arg1 coref 
			 :arg2 (a / ambassador~e.5))) 
	 :manner~e.11 (h / hasty~e.13))

#
# ::snt he had a magnificent air of authority .
#
#
(h / have-03~e.1 
	 :arg0 (h2 / he~e.0) 
	 :arg1 (a / air~e.4 
		 :mod (m / magnificence~e.3) 
		 :domain~e.2 (a2 / authority~e.6)))

#
# ::snt " the grown - ups are very strange , " the little prince said to himself , as he continued on his journey .
#
#
(s / say-01~e.13 
	 :arg0 (p / prince~e.12 
		 :mod (l / little~e.11)) 
	 :arg1 (s2 / strange~e.7 
		 :degree (v / very~e.6) 
		 :domain~e.15 (g / grown-up~e.2)) 
	 :arg2 coref 
	 :time (c / continue-01~e.19 
		 :arg0 coref 
		 :arg1 (j / journey-01~e.22 
			 :arg0 coref)))

#
# ::snt chapter 11 .
#
#
(c / chapter~e.0 
	 :mod 11~e.1)

#
# ::snt the second planet was inhabited by a conceited man .
#
#
(i / inhabit-01~e.4 
	 :arg0 (m / man~e.8 
		 :mod (c / conceit~e.7)) 
	 :arg1 (p / planet~e.2 
		 :ord~e.1 (o / ordinal-entity~e.6 
			 :value 2~e.5)))

#
# ::snt " ah !
#
#
(a / ah~e.1 
	 :mode~e.2 expressive~e.2)

#
# ::snt ah !
#
#
(a / ah~e.0 
	 :mode~e.1 expressive~e.1)

#
# ::snt i am about to receive a visit from an admirer ! " he exclaimed from afar , when he first saw the little prince coming .
#
#
(e / exclaim-01~e.13 
	 :arg0 (h / he~e.12) 
	 :arg1 (v / visit-01~e.6 
		 :arg0 coref 
		 :arg1 (p / person~e.10 
			 :arg0-of~e.9 (a / admire-01~e.9 
				 :arg1 coref)) 
		 :time (a3 / about-to~e.2)) 
	 :time (s / see-01~e.20 
		 :arg0 coref 
		 :arg1 (c / come-01~e.24 
			 :arg1 (p2 / prince~e.23 
				 :mod (l / little~e.22))) 
		 :ord~e.17 (o / ordinal-entity~e.19 
			 :value 1~e.5)) 
	 :direction~e.7 (f2 / from~e.14 
		 :op1 (a2 / afar~e.15)))

#
# ::snt for , to conceited men , all other men are admirers .
#
#
(o2 / opine-01~e.0 
	 :arg0 (m2 / man~e.4 
		 :mod (c / conceit~e.3)) 
	 :arg1 (p2 / person~e.10 
		 :arg0-of~e.10 (a3 / admire-01~e.10) 
		 :domain (m / man~e.8 
			 :mod (o / other~e.7) 
			 :mod (a / all~e.6))))

#
# ::snt " good morning , " said the little prince .
#
#
(s / say-01~e.5 
	 :arg0 (p / prince~e.8 
		 :mod (l / little~e.7)) 
	 :arg1 (m / morning~e.2 
		 :arg1-of (g / good-02~e.1)))

#
# ::snt " that is a queer hat you are wearing . "
#
#
(h2 / hat~e.5 
	 :mod (q2 / queer~e.4) 
	 :domain~e.3 (t2 / that~e.1) 
	 :arg1-of (w2 / wear-01~e.8))

#
# ::snt " it is a hat for salutes , " the conceited man replied .
#
#
(r / reply-01~e.12 
	 :arg0 (m / man~e.11 
		 :mod (c / conceit~e.10)) 
	 :arg1 (h2 / hat~e.4 
		 :purpose~e.5 (s / salute-01~e.6 
			 :instrument~e.3 coref) 
		 :domain~e.1 (i / it~e.1)))

#
# ::snt " it is to raise in salute when people acclaim me .
#
#
(h / have-purpose-91 
	 :arg1 (i / it~e.1) 
	 :arg2 (r / raise-01~e.4 
		 :arg1 coref 
		 :subevent-of~e.5 (s / salute-01~e.6 
			 :time~e.7 (a / acclaim-01~e.9 
				 :arg0 (p / person~e.8) 
				 :arg1 (i2 / i~e.10)) 
			 :instrument~e.5 coref)))

#
# ::snt unfortunately , nobody at all ever passes this way . "
#
#
(p / pass-03~e.6 
	 :arg1 (n / nobody~e.2 
		 :degree (a / at-all~e.4)) 
	 :path (w / way~e.8 
		 :mod (t / this~e.7)) 
	 :arg2-of (f / fortunate-01~e.0 
		 :polarity -) 
	 :time~e.3 (e / ever~e.5))

#
# ::snt " yes ? " said the little prince , who did not understand what the conceited man was talking about .
#
#
(s / say-01~e.4 
	 :arg0 (p / prince~e.7 
		 :mod (l / little~e.6) 
		 :arg0-of (u / understand-01~e.12 
			 :arg1 (a / amr-unknown~e.13 
				 :arg1-of~e.19 (t / talk-01~e.18 
					 :arg0 (m / man~e.16 
						 :mod (c / conceit~e.15)))) 
			 :polarity~e.11 -~e.10)) 
	 :arg1 (y / yes~e.1))

#
# ::snt " clap your hands , one against the other , " the conceited man now directed him .
#
#
(d / direct-01~e.15 
	 :arg0 (m / man~e.13 
		 :mod (c / conceit~e.12)) 
	 :arg1 (h / he~e.16) 
	 :arg2 (c2 / clap-01~e.1 
		 :arg0 coref 
		 :arg1 (h2 / hand~e.3 
			 :part-of~e.6 coref) 
		 :manner (c3 / clap-01~e.1 
			 :arg0 coref 
			 :arg1 (h3 / hand~e.3 
				 :quant 1~e.5 
				 :part-of~e.6 coref) 
			 :arg2 (h4 / hand~e.3 
				 :part-of~e.6 coref 
				 :arg1-of (d2 / differ-02~e.8 
					 :arg2 coref)))) 
	 :time (n / now~e.14))

#
# ::snt the little prince clapped his hands .
#
#
(c / clap-01~e.3 
	 :arg0 (p / prince~e.2 
		 :mod (l / little~e.1)) 
	 :arg1 (h / hand~e.5 
		 :part-of~e.4 coref))

#
# ::snt the conceited man raised his hat in a modest salute .
#
#
(r / raise-01~e.3 
	 :arg0 (m / man~e.2 
		 :mod (c / conceit~e.1)) 
	 :arg1 (h / hat~e.5 
		 :poss~e.4 coref) 
	 :subevent-of~e.6 (s / salute-01~e.9 
		 :arg0 coref 
		 :manner (m2 / modest~e.8) 
		 :instrument~e.7 coref))

#
# ::snt " this is more entertaining than the visit to the king , " the little prince said to himself .
#
#
(s / say-01~e.16 
	 :arg0 (p / prince~e.15 
		 :mod (l / little~e.14)) 
	 :arg1 (e / entertain-01~e.4 
		 :arg0 (t / this~e.1) 
		 :degree (m / more~e.3) 
		 :compared-to~e.5 (v / visit-01~e.7 
			 :arg1 (k / king~e.10))) 
	 :arg2 coref)

#
# ::snt and he began again to clap his hands , one against the other .
#
#
(b / begin-01~e.2 
	 :arg0 (h / he~e.1) 
	 :arg1 (c / clap-01~e.5 
		 :arg0 coref 
		 :arg1 (h2 / hand~e.7 
			 :part-of~e.6 coref) 
		 :manner (c2 / clap-01~e.5 
			 :arg0 coref 
			 :arg1 (h3 / hand~e.7 
				 :quant 1~e.9 
				 :part-of~e.6 coref) 
			 :arg2 (h4 / hand~e.7 
				 :part-of~e.6 coref 
				 :arg1-of (d / differ-02~e.12 
					 :arg2 coref)))) 
	 :mod (a / again~e.10))

#
# ::snt the conceited man against raised his hat in salute .
#
#
(r / raise-01~e.4 
	 :arg0 (m / man~e.2 
		 :mod (c / conceit~e.1)) 
	 :arg1 (h2 / hat~e.6) 
	 :mod (a / again~e.3) 
	 :subevent-of~e.7 (s / salute-01~e.8 
		 :arg0 coref 
		 :instrument~e.7 coref))

#
# ::snt after five minutes of this exercise the little prince grew tired of the game 's monotony .
#
#
(t / tire-01~e.10 
	 :arg0 (p / prince~e.8 
		 :mod (l / little~e.7)) 
	 :arg1 (m / monotony~e.15 
		 :poss~e.14 (g2 / game~e.13)) 
	 :time (a / after~e.0 
		 :op1 (e / exercise~e.5 
			 :duration~e.9 (t2 / temporal-quantity 
				 :quant 5~e.1 
				 :unit (m2 / minute~e.2)))))

#
# ::snt " and what should one do to make the hat come down ? " he asked .
#
#
(a / ask-01~e.15 
	 :arg0 (h / he~e.14) 
	 :arg1 (d / do-02~e.5 
		 :arg0 (o / one~e.4) 
		 :arg1 (a2 / amr-unknown~e.12) 
		 :arg2 (m / make-02~e.7 
			 :arg0 coref 
			 :arg1 (c / come-01~e.10 
				 :arg1 (h3 / hat~e.9) 
				 :direction (d3 / down~e.11)))))

#
# ::snt but the conceited man did not hear him .
#
#
(h / hear-01~e.6 
	 :arg0 (m / man~e.3 
		 :mod (c / conceit~e.2)) 
	 :arg2 (h2 / he~e.7) 
	 :polarity~e.5 -~e.4)

#
# ::snt conceited people never hear anything but praise .
#
#
(h / hear-01~e.3 
	 :polarity~e.2 -~e.2 
	 :arg0 (p / person~e.1 
		 :mod (c / conceit~e.0)) 
	 :arg1 (a / anything~e.4 
		 :concession~e.5 (p2 / praise-01~e.6)) 
	 :time (e / ever~e.2))

#
# ::snt " do you really admire me very much ? " he demanded of the little prince .
#
#
(d / demand-01~e.11 
	 :arg0 (h / he~e.10) 
	 :arg1 (a / admire-01~e.4 
		 :mode~e.1 interrogative~e.8 
		 :arg0 (p / prince~e.15 
			 :mod (l / little~e.14)) 
		 :arg1 coref 
		 :degree (m / much~e.7 
			 :degree (v / very~e.6)) 
		 :arg1-of (r / real-04~e.3)) 
	 :arg2 (p / prince~e.15 
		 :mod (l / little~e.14)))

#
# ::snt " what does that mean - - ' admire ' ? "
#
#
(m / mean-01~e.4 
	 :arg1 (a / admire-01~e.8) 
	 :arg2 (a2 / amr-unknown~e.10))

#
# ::snt " to admire mean that you regard me as the handsomest , the best - dressed , the richest , and the most intelligent man on this planet . "
#
#
(m / mean-01~e.3 
	 :arg1 (a / admire-01~e.2) 
	 :arg2 (r / regard-01~e.6 
		 :arg0 (y / you~e.5) 
		 :arg1 (i / i~e.7) 
		 :arg2 (m6 / man~e.24 
			 :mod (h / handsome~e.10 
				 :degree (m2 / most~e.22)) 
			 :arg1-of (d / dress-01~e.15 
				 :manner (w / well~e.13 
					 :degree (m3 / most~e.13))) 
			 :mod (r2 / rich~e.18 
				 :degree (m4 / most~e.13)) 
			 :arg1-of (i2 / intelligent-01~e.23 
				 :degree (m5 / most~e.22)) 
			 :location~e.25 (p2 / planet~e.27 
				 :mod (t / this~e.26)))))

#
# ::snt " but you are the only man on your planet ! "
#
#
(c / contrast-01~e.1 
	 :arg2 (m / man~e.6 
		 :quant (o / only~e.5 
			 :location~e.7 (p / planet~e.9 
				 :poss~e.8 (y / you~e.2))) 
		 :domain (y / you~e.2)))

#
# ::snt " do me this kindness .
#
#
(k2 / kind-01~e.4 
	 :mode~e.1 imperative~e.2 
	 :arg0 (y / you) 
	 :arg1 (t / this~e.3) 
	 :arg2 (i / i~e.2))

#
# ::snt admire me just the same . "
#
#
(a / admire-01~e.0 
	 :arg0 (y / you~e.1) 
	 :arg1 (i / i~e.1) 
	 :manner (s / same-01~e.4 
		 :degree (j / just~e.2)))

#
# ::snt " i admire you , " said the little prince , shrugging his shoulders slightly , " but what is there in that to interest you so much ? "
#
#
(s / say-01~e.6 
	 :arg0 (p / prince~e.9 
		 :mod (l / little~e.8) 
		 :arg0-of (s2 / shrug-01~e.11 
			 :arg1 (s3 / shoulder~e.13 
				 :part-of~e.12 coref) 
			 :degree (s4 / slight~e.14))) 
	 :arg1 (c2 / contrast-01~e.17 
		 :arg1 (a / admire-01~e.2 
			 :arg0 (i / i~e.1) 
			 :arg1 (y / you~e.25)) 
		 :arg2 (i2 / interest-01~e.24 
			 :arg0 coref 
			 :arg1 coref 
			 :degree (m / much~e.27 
				 :degree (s6 / so~e.26)) 
			 :arg1-of (c / cause-01 
				 :arg0 (a2 / amr-unknown~e.28)))))

#
# ::snt and the little prince went away .
#
#
(a / and~e.0 
	 :op2 (g / go-02~e.4 
		 :arg0 (p / prince~e.3 
			 :mod (l / little~e.2)) 
		 :direction (a2 / away~e.5)))

#
# ::snt " the grown - ups are certainly very odd , " he said to himself , as he continued on his journey .
#
#
(s / say-01~e.12 
	 :arg0 (h / he~e.11) 
	 :arg1 (o / odd~e.8 
		 :degree (v / very~e.7) 
		 :mod (c2 / certain~e.6) 
		 :domain~e.14 (g / grown-up~e.2)) 
	 :arg2 coref 
	 :time (c / continue-01~e.18 
		 :arg0 coref 
		 :arg1 (j / journey-01~e.21 
			 :arg0 coref)))

#
# ::snt chapter 12 .
#
#
(c / chapter~e.0 
	 :mod 12~e.1)

#
# ::snt the next planet was inhabited by a tippler .
#
#
(i / inhabit-01~e.4 
	 :arg0 (p / person~e.5 
		 :arg0-of~e.7 (t / tipple-01~e.7)) 
	 :arg1 (p2 / planet~e.2 
		 :mod (n / next~e.1)))

#
# ::snt this was a very short visit , but it plunged the little prince into deep dejection .
#
#
(h / have-concession-91~e.7 
	 :arg1 (d / deject-01~e.15 
		 :arg0 (v / visit-01~e.5 
			 :arg1-of (s / short-07~e.4 
				 :degree~e.8 (v2 / very~e.3)) 
			 :domain~e.2 (t / this~e.0)) 
		 :arg1 (p2 / prince~e.12 
			 :mod (l / little~e.11)) 
		 :arg1-of (d2 / deep-02~e.14)) 
	 :arg2 (v / visit-01~e.5 
		 :arg1-of (s / short-07~e.4 
			 :degree~e.8 (v2 / very~e.3)) 
		 :domain~e.2 (t / this~e.0)))

#
# ::snt " what are you doing there ? " he said to the tippler , whom he found settled down in silence before a collection of empty bottles and also a collection of full bottles .
#
#
(s / say-01~e.9 
	 :arg0 (h / he~e.8) 
	 :arg1 (d / do-02~e.4 
		 :arg0 (p / person~e.14 
			 :arg0-of~e.24 (t2 / tipple-01~e.12) 
			 :arg1-of (f / find-01~e.16 
				 :arg0 coref) 
			 :arg1-of (s2 / settle-down-04~e.17 
				 :manner (s3 / silent~e.20) 
				 :location~e.18 (b / before~e.21 
					 :op1 (a2 / and~e.27 
						 :op1 (b2 / bottle~e.26 
							 :arg1-of (e / empty-02~e.25) 
							 :arg1-of (c / collect-01~e.30)) 
						 :op2 (b3 / bottle~e.33 
							 :mod (f2 / full~e.32) 
							 :arg1-of (c2 / collect-01~e.30)))))) 
		 :arg1 (a / amr-unknown~e.6) 
		 :location~e.5 (t / there~e.5)) 
	 :arg2 (p / person~e.14 
		 :arg0-of~e.24 (t2 / tipple-01~e.12) 
		 :arg1-of (f / find-01~e.16 
			 :arg0 coref) 
		 :arg1-of (s2 / settle-down-04~e.17 
			 :manner (s3 / silent~e.20) 
			 :location~e.18 (b / before~e.21 
				 :op1 (a2 / and~e.27 
					 :op1 (b2 / bottle~e.26 
						 :arg1-of (e / empty-02~e.25) 
						 :arg1-of (c / collect-01~e.30)) 
					 :op2 (b3 / bottle~e.33 
						 :mod (f2 / full~e.32) 
						 :arg1-of (c2 / collect-01~e.30)))))))

#
# ::snt " i am drinking , " replied the tippler , with a lugubrious air .
#
#
(r / reply-01~e.6 
	 :arg0 (p / person~e.13 
		 :arg0-of~e.8 (t / tipple-01~e.8)) 
	 :arg2 (d / drink-01~e.3 
		 :arg0 coref) 
	 :manner~e.10 (l / lugubrious~e.12))

#
# ::snt " why are you drinking ? " demanded the little prince .
#
#
(d / demand-01~e.7 
	 :arg0 (p / prince~e.10 
		 :mod (l / little~e.9)) 
	 :arg1 (c / cause-01~e.1 
		 :arg0 (a / amr-unknown~e.5) 
		 :arg1 (d2 / drink-01~e.4 
			 :arg0 (y / you~e.3))))

#
# ::snt " so that i may forget , " replied the tippler .
#
#
(r / reply-01~e.8 
	 :arg0 (p / person~e.3 
		 :arg0-of~e.10 (t / tipple-01~e.10)) 
	 :arg2 (c / cause-01~e.1 
		 :arg0 (p2 / possible-01~e.4 
			 :arg1 (f / forget-01~e.5 
				 :arg0 coref))))

#
# ::snt " forget what ? " inquired the little prince , who already was sorry for him .
#
#
(i / inquire-01~e.5 
	 :arg0 (p / prince~e.8 
		 :mod (l / little~e.7) 
		 :arg1-of (s / sorry-01~e.13 
			 :arg2 (h / he~e.15) 
			 :time (a2 / already~e.11))) 
	 :arg1 (f / forget-01~e.1 
		 :arg0 coref 
		 :arg1 (a / amr-unknown~e.2)) 
	 :arg2 coref)

#
# ::snt " forget that i am ashamed , " the tippler confessed , hanging his head .
#
#
(c / confess-01~e.10 
	 :arg0 (p / person~e.3 
		 :arg0-of~e.9 (t / tipple-01~e.9) 
		 :arg0-of~e.9 (h / hang-01~e.12 
			 :arg1 (h2 / head~e.14 
				 :part-of~e.13 coref))) 
	 :arg1 (f / forget-01~e.1 
		 :arg0 coref 
		 :arg1 (s / shame-01~e.5 
			 :arg1 coref)))

#
# ::snt " ashamed of what ? " insisted the little prince , who wanted to help him .
#
#
(i / insist-01~e.6 
	 :arg0 (p / prince~e.9 
		 :mod (l / little~e.8) 
		 :arg0-of (w / want-01~e.12 
			 :arg1 (h / help-01~e.14 
				 :arg0 coref 
				 :arg1 (h2 / he~e.15)))) 
	 :arg1 (a / amr-unknown~e.4 
		 :arg0-of (s / shame-01~e.1)))

#
# ::snt " ashamed of drinking ! "
#
#
(s / shame-01~e.1 
	 :arg0 (d / drink-01~e.3))

#
# ::snt the tippler brought his speech to an end , and shut himself up in an impregnable silence .
#
#
(a / and~e.9 
	 :op1 (e / end-01~e.7 
		 :arg0 (p / person~e.2 
			 :arg0-of~e.3 (t / tipple-01~e.1)) 
		 :arg1 (s / speak-01~e.4 
			 :arg0 coref)) 
	 :op2 (s2 / shut-up-06~e.10 
		 :arg0 coref 
		 :arg1 coref 
		 :manner (s3 / silent~e.16 
			 :mod (p2 / pregnable~e.15 
				 :polarity -) 
			 :domain~e.11 coref)))

#
# ::snt and the little prince went away , puzzled .
#
#
(a / and~e.0 
	 :op2 (g / go-02~e.4 
		 :arg0 (p / prince~e.3 
			 :mod (l / little~e.2) 
			 :arg1-of (p2 / puzzle-01~e.7)) 
		 :direction (a2 / away~e.5)))

#
# ::snt " the grown - ups are certainly very , very odd , " he said to himself , as he continued on his journey .
#
#
(s / say-01~e.14 
	 :arg0 (h / he~e.13) 
	 :arg1 (o / odd~e.10 
		 :degree (v / very~e.9 
			 :degree (v2 / very~e.7)) 
		 :domain~e.16 (g / grown-up~e.2) 
		 :mod (c / certain~e.6)) 
	 :arg2 coref 
	 :time~e.18 (c2 / continue-01~e.20 
		 :arg0 coref 
		 :arg1 (j / journey-01~e.23 
			 :arg0 coref)))

#
# ::snt chapter 13 .
#
#
(c / chapter~e.0 
	 :mod 13~e.1)

#
# ::snt the fourth planet belonged to a businessman .
#
#
(b / belong-01~e.3 
	 :arg0 (p / planet~e.2 
		 :ord~e.4 (o / ordinal-entity~e.5 
			 :value 4~e.1)) 
	 :arg1 (b3 / businessman~e.6))

#
# ::snt this man was so much occupied that he did not even raise his head at the little prince 's arrival .
#
#
(o / occupy-01~e.5 
	 :arg1 (m / man~e.1 
		 :mod (t / this~e.0)) 
	 :degree (m2 / much~e.4 
		 :degree (s / so~e.3)) 
	 :arg0-of (c / cause-01~e.6 
		 :arg1 (r / raise-01~e.11 
			 :arg0 coref 
			 :arg1 (h / head~e.13 
				 :part-of~e.12 coref) 
			 :polarity~e.9 -~e.8 
			 :time~e.10 (a / arrive-01~e.19 
				 :arg1 (p / prince~e.17 
					 :mod (l / little~e.16))))))

#
# ::snt " good morning , " the little prince said to him .
#
#
(s / say-01~e.8 
	 :arg0 (p / prince~e.7 
		 :mod (l / little~e.6)) 
	 :arg1 (m / morning~e.2 
		 :arg1-of (g / good-02~e.1)) 
	 :arg2 (h / he~e.10))

#
# ::snt " your cigarette has gone out . "
#
#
(g / go-out-18~e.4 
	 :arg1 (c / cigarette~e.2 
		 :poss~e.1 (y / you~e.1)))

#
# ::snt " three and two make five .
#
#
(e / equal-01~e.4 
	 :arg1 (s / sum-of~e.2 
		 :op1 3~e.1 
		 :op2 2~e.3) 
	 :arg2 5~e.5)

#
# ::snt five and seven make twelve .
#
#
(e / equal-01~e.3 
	 :arg1 (s / sum-of~e.1 
		 :op1 5~e.0 
		 :op2 7~e.2) 
	 :arg2 12~e.4)

#
# ::snt twelve and three make fifteen .
#
#
(e / equal-01~e.3 
	 :arg1 (s / sum-of~e.1 
		 :op1 12~e.0 
		 :op2 3~e.2) 
	 :arg2 15~e.4)

#
# ::snt good morning .
#
#
(m / morning~e.1 
	 :arg1-of (g / good-02~e.0))

#
# ::snt fifteen and seven make twenty - two .
#
#
(e / equal-01~e.3 
	 :arg1 (s / sum-of~e.1 
		 :op1 15~e.0 
		 :op2 7~e.2) 
	 :arg2 22~e.4)

#
# ::snt twenty - two and six make twenty - eight .
#
#
(e / equal-01~e.0 
	 :arg1 (s / sum-of~e.3 
		 :op1 22~e.2 
		 :op2 6~e.4) 
	 :arg2 28~e.8)

#
# ::snt i have n't time to light it again .
#
#
(h / have-03~e.1 
	 :arg0 (i / i~e.0) 
	 :arg1 (t / time~e.3 
		 :purpose~e.4 (l / light-04~e.5 
			 :arg0 coref 
			 :arg1 (i2 / it~e.6) 
			 :mod (a / again~e.7))) 
	 :polarity~e.2 -)

#
# ::snt twenty - six and five make thirty - one .
#
#
(e / equal-01~e.0 
	 :arg1 (s / sum-of~e.3 
		 :op1 26~e.2 
		 :op2 5~e.4) 
	 :arg2 31~e.6)

#
# ::snt phew !
#
#
(p / phew~e.0 
	 :mode~e.1 expressive~e.1)

#
# ::snt then that makes five - hundred - and - one - million , six - hundred - twenty - two - thousand , seven - hundred - thirty - one . "
#
#
(e / equal-01~e.2 
	 :arg1 501622731~e.5 
	 :arg2 (t / that~e.1))

#
# ::snt " five hundred million what ? " asked the little prince .
#
#
(a / ask-01~e.7 
	 :arg0 (p / prince~e.10 
		 :mod (l / little~e.9)) 
	 :arg1 (a2 / amr-unknown~e.4 
		 :quant 500000000~e.1))

#
# ::snt " eh ?
#
#
(e / eh~e.1)

#
# ::snt are you still there ?
#
#
(b / be-located-at-91~e.2 
	 :arg1 (y / you~e.1) 
	 :arg2 (t / there~e.3) 
	 :mod (s / still~e.2))

#
# ::snt five - hundred - and - one million - - i can n't stop ...
#
#
(a / and~e.4 
	 :op1 501000000~e.7 
	 :op2 (p / possible-01~e.11 
		 :arg1 (s / stop-01~e.13 
			 :arg0 (i / i~e.10)) 
		 :polarity~e.12 -))

#
# ::snt i have so much to do !
#
#
(o / obligate-01~e.1 
	 :arg1 (i / i~e.0) 
	 :arg2 (d / do-02~e.5 
		 :arg1 (m / much~e.3 
			 :degree (s / so~e.2))))

#
# ::snt i am concerned with matters of consequence .
#
#
(c / concern-01~e.2 
	 :arg0 (m / matter~e.4 
		 :mod (c2 / consequence~e.6)) 
	 :arg1 (i / i~e.0))

#
# ::snt i do n't amuse myself with balderdash .
#
#
(a / amuse-01~e.3 
	 :arg0 (i / i~e.0) 
	 :arg1 coref 
	 :arg2 (b / balderdash~e.6) 
	 :polarity~e.2 -~e.1)

#
# ::snt two and five make seven ... "
#
#
(e / equal-01~e.3 
	 :arg1 7~e.4 
	 :arg2 (s / sum-of~e.1 
		 :op1 2~e.0 
		 :op2 5~e.2))

#
# ::snt " five - hundred - and - one million what ? " repeated the little prince , who never in his life had let go of a question once he had asked it .
#
#
(r / repeat-01~e.12 
	 :arg0 (p / prince~e.15 
		 :mod (l / little~e.14) 
		 :arg0-of (l2 / let-01~e.23 
			 :polarity~e.18 -~e.18 
			 :arg1 (g / go-02~e.24 
				 :arg0 (t / thing~e.9 
					 :arg1-of~e.27 (q / question-01~e.27 
						 :arg0 coref))) 
			 :time~e.19 (l3 / live-01~e.21 
				 :arg0 coref) 
			 :time~e.19 (a2 / ask-01~e.31 
				 :arg0 coref 
				 :arg1 coref) 
			 :time~e.19 (e / ever~e.18))) 
	 :arg1 (a / amr-unknown~e.10 
		 :quant 501000000~e.3))

#
# ::snt the businessman raised his head .
#
#
(r / raise-01~e.2 
	 :arg0 (b / businessman~e.1) 
	 :arg1 (h / head~e.4 
		 :part-of~e.3 coref))

#
# ::snt " during the fifty - four years that i have inhabited this planet , i have been disturbed only three times .
#
#
(d / disturb-01~e.17 
	 :arg1 (i / i~e.8) 
	 :arg1-of~e.20 (h / have-frequency-91~e.15 
		 :arg2 3~e.19 
		 :mod (o / only~e.18)) 
	 :time (i2 / inhabit-01~e.10 
		 :arg0 coref 
		 :arg1 (p / planet~e.12 
			 :mod (t / this~e.11)) 
		 :duration~e.9 (t2 / temporal-quantity 
			 :quant 54~e.1 
			 :unit (y / year~e.6))))

#
# ::snt the first time was twenty - two years ago , when some giddy goose fell from goodness knows where .
#
#
(b / be-temporally-at-91~e.10 
	 :arg1 (d / disturb-01~e.15 
		 :ord~e.1 (o / ordinal-entity~e.2 
			 :value 1)) 
	 :arg2 (b2 / before~e.8 
		 :op1 (n / now~e.7) 
		 :quant (t4 / temporal-quantity 
			 :quant 22~e.4 
			 :unit (y2 / year~e.7)) 
		 :time-of~e.10 (f3 / fall-01~e.14 
			 :arg1 (g4 / goose~e.13 
				 :mod (g5 / giddy~e.12) 
				 :mod (s2 / some~e.11)) 
			 :arg3~e.15 (l / location~e.18 
				 :arg1-of (k2 / know-01~e.17 
					 :arg0 (g6 / goodness~e.16))))))

#
# ::snt he made the most frightful noise that resounded all over the place , and i made four mistakes in my addition .
#
#
(a / and~e.13 
	 :op1 (m / make-01~e.1 
		 :arg0 (h / he~e.0) 
		 :arg1 (n / noise~e.5 
			 :arg1-of (r / resound-01~e.7 
				 :arg2 (a4 / all-over~e.9 
					 :op1 (p / place~e.11))) 
			 :arg0-of (f2 / frighten-01~e.4 
				 :degree (m2 / most~e.3)))) 
	 :op1 (m4 / mistake-02~e.17 
		 :quant 4~e.16 
		 :arg0 (i / i~e.14) 
		 :arg1 (a3 / add-02~e.15 
			 :arg0 (i / i~e.14))))

#
# ::snt the second time , eleven years ago , i was disturbed by an attack of rheumatism .
#
#
(d / disturb-01~e.10 
	 :arg0 (a / attack-01~e.13 
		 :arg0 (r / rheumatism~e.15) 
		 :arg1 (i / i~e.8)) 
	 :arg1 (i / i~e.8) 
	 :time (b / before~e.6 
		 :op1 (n / now~e.5) 
		 :quant (t2 / temporal-quantity 
			 :quant 11~e.4 
			 :unit (y / year~e.5))) 
	 :domain (d2 / disturb-01~e.10 
		 :ord~e.1 (o / ordinal-entity~e.2 
			 :value 2~e.11)))

#
# ::snt i do n't get enough exercise .
#
#
(e / exercise-02~e.5 
	 :arg0 (i / i~e.0) 
	 :degree~e.3 (e2 / enough~e.4 
		 :polarity~e.2 -~e.1))

#
# ::snt i have no time for loafing .
#
#
(h / have-03~e.1 
	 :arg0 (i / i~e.0) 
	 :arg1 (t / time~e.3 
		 :purpose~e.4 (l / loaf-01~e.5 
			 :arg0 coref)) 
	 :polarity~e.2 -~e.2)

#
# ::snt the third time - - well , this is it !
#
#
(d / disturb-01~e.5 
	 :ord~e.1 (o / ordinal-entity~e.2 
		 :value 3~e.10) 
	 :domain~e.9 (t / this~e.7))

#
# ::snt i was saying , then , five - hundred - and - one millions - - "
#
#
(s / say-01~e.2 
	 :arg0 (i / i~e.0) 
	 :arg1 501000000~e.13)

#
# ::snt " millions of what ? "
#
#
(a / amr-unknown~e.4 
	 :quant (m / multiple~e.1 
		 :op1 1000000~e.2))

#
# ::snt the businessman suddenly realized that there was no hope of being left in peace until he answered this question .
#
#
(r / realize-01~e.3 
	 :arg0 (b / businessman~e.1) 
	 :arg1 (h / hopeful-03~e.8 
		 :polarity~e.7 -~e.7 
		 :arg1 (l / leave-14~e.11 
			 :arg1 (p / peace~e.13 
				 :domain coref)) 
		 :time~e.12 (u / until~e.14 
			 :op1 (a / answer-01~e.16 
				 :arg0 coref 
				 :arg1 (q / question-01~e.18 
					 :arg1 (t / this~e.17))))) 
	 :manner (s / sudden~e.2))

#
# ::snt " millions of those little objects , " he said , " which one sometimes sees in the sky . "
#
#
(s / say-01~e.9 
	 :arg0 (h / he~e.8) 
	 :arg1 (o / object~e.5 
		 :arg1-of (i / include-91~e.13 
			 :arg2 (o3 / object~e.5 
				 :mod (l / little~e.4) 
				 :mod (t2 / that~e.3) 
				 :location~e.16 (s4 / sky~e.18) 
				 :arg1-of (s2 / see-01~e.15 
					 :arg0 (o2 / one~e.13) 
					 :frequency (s3 / sometimes~e.14)))) 
		 :quant (m / multiple~e.1 
			 :op1 1000000~e.2)))

#
# ::snt " flies ? "
#
#
(f / fly~e.1)

#
# ::snt " oh , no .
#
#
(n / no~e.3 
	 :mod (o / oh~e.1))

#
# ::snt little glittering objects . "
#
#
(o / object~e.2 
	 :mod (l / little~e.0) 
	 :arg0-of (g / glitter-01~e.1))

#
# ::snt " bees ? "
#
#
(b / bee~e.1)

#
# ::snt " oh , no .
#
#
(n / no~e.3 
	 :mod (o / oh~e.1))

#
# ::snt little golden objects that set lazy men to idle dreaming .
#
#
(c / cause-01~e.3 
	 :arg0 (o / object~e.2 
		 :consist-of~e.4 (g / gold~e.1) 
		 :mod (l / little~e.0)) 
	 :arg1 (d / dream-01~e.9 
		 :arg0 (m / man~e.6 
			 :mod (l2 / lazy~e.5)) 
		 :manner (i / idle-01~e.8)))

#
# ::snt as for me , i am concerned with matters of consequence .
#
#
(c / concern-01~e.6 
	 :arg0 (m / matter~e.8 
		 :mod (c2 / consequence~e.10)) 
	 :arg1 (i / i~e.2))

#
# ::snt there is no time for idle dreaming in my life . "
#
#
(t2 / time~e.3 
	 :polarity~e.2 -~e.2 
	 :purpose~e.4 (d2 / dream-01~e.6 
		 :manner (i2 / idle~e.5)) 
	 :duration~e.4 (l / live-01~e.9 
		 :arg0 (i / i~e.8)))

#
# ::snt " ah !
#
#
(a / ah~e.1 
	 :mode~e.2 expressive~e.2)

#
# ::snt you mean the stars ? "
#
#
(m / mean-01~e.1 
	 :arg0 (y / you~e.0) 
	 :arg2 (s / star~e.3))

#
# ::snt " yes , that 's it .
#
#
(t / that-is-it-00~e.3)

#
# ::snt the stars . "
#
#
(s / star~e.1)

#
# ::snt " and what do you do with five - hundred millions of stars ? "
#
#
(a / and~e.1 
	 :op2 (d / do-02~e.3 
		 :arg0 (y / you~e.4) 
		 :arg1 (a2 / amr-unknown~e.2) 
		 :arg3~e.6 (s / star~e.12 
			 :quant 500000000~e.7)))

#
# ::snt " five - hundred - and - one million , six - hundred - twenty - two thousand , seven - hundred - thirty - one .
#
#
(h / have-quant-91~e.23 
	 :arg2 501622731~e.21)

#
# ::snt i am concerned with matters of consequence : i am accurate . "
#
#
(a / and~e.2 
	 :op1 (c / concern-01~e.2 
		 :arg0 (m / matter~e.4 
			 :mod (c2 / consequence~e.6)) 
		 :arg1 (i / i~e.8)) 
	 :op2 (a2 / accurate~e.10 
		 :domain coref))

#
# ::snt " and what do you do with these stars ? "
#
#
(a / and~e.1 
	 :op2 (d / do-02~e.3 
		 :arg0 (y / you~e.4) 
		 :arg1 (a2 / amr-unknown~e.2) 
		 :arg3~e.6 (s / star~e.8 
			 :mod (t / this~e.7))))

#
# ::snt " what do i do with them ? "
#
#
(d / do-02~e.4 
	 :arg0 (i / i~e.3) 
	 :arg1 (a / amr-unknown~e.7) 
	 :arg3~e.5 (t / they~e.6))

#
# ::snt " yes . "
#
#
(y / yes~e.1)

#
# ::snt " nothing .
#
#
(n / nothing~e.1)

#
# ::snt i own them . "
#
#
(o / own-01~e.1 
	 :arg0 (i / i~e.0) 
	 :arg1 (t / they~e.2))

#
# ::snt " you own the stars ? "
#
#
(o / own-01~e.2 
	 :arg0 (y / you~e.1) 
	 :arg1 (s / star~e.4))

#
# ::snt " yes . "
#
#
(y / yes~e.1)

#
# ::snt " but i have already seen a king who - - "
#
#
(c / contrast-01~e.1 
	 :arg2 (s / see-01~e.5 
		 :arg0 (i / i~e.2) 
		 :arg1 (k / king~e.7) 
		 :time (a / already~e.4)))

#
# ::snt " kings do not own , they reign over .
#
#
(c / contrast-01~e.8 
	 :arg1 (o / own-01~e.4 
		 :polarity~e.3 -~e.2 
		 :arg0 (k / king~e.1)) 
	 :arg2 (r / reign-01~e.7 
		 :arg0 coref))

#
# ::snt it is a very different matter . "
#
#
(m / matter~e.5 
	 :arg1-of (d / differ-02~e.4 
		 :degree (v / very~e.3)) 
	 :domain~e.2 (i / it~e.0))

#
# ::snt " and what good does it do you to own the stars ? "
#
#
(a / and~e.1 
	 :op2 (c / cause-01~e.4 
		 :arg0 (o / own-01~e.9 
			 :arg1 (s / star~e.11)) 
		 :arg1 (g / good-04~e.3 
			 :arg1 (a2 / amr-unknown~e.12) 
			 :arg2 (y / you~e.7))))

#
# ::snt " it does me the good of making me rich . "
#
#
(c / cause-01~e.2 
	 :arg0 (i2 / it~e.1) 
	 :arg1 (g / good-04~e.5 
		 :arg1 (m2 / make-02~e.7 
			 :arg1 (r / rich~e.9 
				 :domain (i / i~e.8))) 
		 :arg2 (i / i~e.8)))

#
# ::snt " and what good does it do you to be rich ? "
#
#
(a / and~e.1 
	 :op2 (c / cause-01~e.4 
		 :arg0 (r / rich~e.10 
			 :domain~e.5 (y / you~e.7)) 
		 :arg1 (g / good-04~e.3 
			 :arg1 (a2 / amr-unknown~e.11) 
			 :arg2 coref)))

#
# ::snt " it makes it possible for me to buy more stars , if any are ever discovered . "
#
#
(p / possible-01~e.4 
	 :arg1 (b / buy-01~e.8 
		 :arg0 (i / i~e.6) 
		 :arg1 (s / star~e.10 
			 :degree (m / more~e.9))) 
	 :condition~e.12 (d / discover-01~e.16 
		 :arg1 coref 
		 :time (e / ever~e.15)))

#
# ::snt " this man , " the little prince said to himself , " reasons a little like my poor tippler ... "
#
#
(s / say-01~e.8 
	 :arg0 (p / prince~e.7 
		 :mod (l / little~e.6)) 
	 :arg1 (r / reason-01~e.13 
		 :arg0 (m / man~e.2 
			 :mod (t2 / this~e.1)) 
		 :arg1-of (r2 / resemble-01~e.16 
			 :arg2 (r3 / reason-01~e.13 
				 :arg0 (p2 / person~e.10 
					 :arg0-of~e.19 (t / tipple-01~e.19) 
					 :mod (p3 / poor~e.18) 
					 :poss~e.17 coref)) 
			 :degree (l2 / little~e.15))) 
	 :arg2 coref)

#
# ::snt nevertheless , he still had some more questions .
#
#
(h3 / have-concession-91~e.0 
	 :arg1 (h / have-03~e.4 
		 :arg0 (h2 / he~e.2) 
		 :arg1 (t / thing 
			 :degree (m / more~e.6) 
			 :mod (s / some~e.5) 
			 :arg1-of (q / question-01~e.7)) 
		 :mod (s2 / still~e.3)))

#
# ::snt " how is it possible for one to own the stars ? "
#
#
(p / possible-01~e.4 
	 :arg1 (o / own-01~e.8 
		 :arg0 (o2 / one~e.6) 
		 :arg1 (s / star~e.10)) 
	 :manner~e.1 (a / amr-unknown~e.11))

#
# ::snt " to whom do they belong ? " the businessman retorted , peevishly .
#
#
(r / retort-01~e.10 
	 :arg0 (b3 / businessman~e.9) 
	 :arg2 (b2 / belong-01~e.5 
		 :arg0 (t / they~e.4) 
		 :arg1 (a / amr-unknown~e.6)) 
	 :manner (p / peevish~e.12))

#
# ::snt " i do n't know .
#
#
(k / know-01~e.4 
	 :arg0 (i / i~e.1) 
	 :polarity~e.3 -~e.2)

#
# ::snt to nobody . "
#
#
(b / belong-01~e.0 
	 :arg1 (n / nobody~e.1))

#
# ::snt " then they belong to me , because i was the first person to think of it . "
#
#
(b / belong-01~e.3 
	 :arg0 (t / they~e.2) 
	 :arg1 (i / i~e.5) 
	 :arg1-of (c / cause-01~e.7 
		 :arg0 (p / person~e.12 
			 :ord~e.11 (o / ordinal-entity~e.11 
				 :value 1) 
			 :domain coref 
			 :arg0-of~e.15 (t2 / think-01~e.14 
				 :arg2 (i2 / it~e.16)))))

#
# ::snt " is that all that is necessary ? "
#
#
(a / all~e.3 
	 :mode~e.4 interrogative~e.7 
	 :domain (t2 / that~e.2) 
	 :arg1-of (n / need-01~e.6))

#
# ::snt " certainly .
#
#
(c / certain~e.1)

#
# ::snt when you find a diamond that belongs to nobody , it is yours .
#
#
(b / belong-01~e.0 
	 :arg0 (d / diamond~e.4 
		 :arg0-of (b2 / belong-01~e.6 
			 :arg1 (n / nobody~e.8))) 
	 :arg1 (y / you~e.12) 
	 :condition~e.10 (f / find-01~e.2 
		 :arg0 coref 
		 :arg1 (d / diamond~e.4 
			 :arg0-of (b2 / belong-01~e.6 
				 :arg1 (n / nobody~e.8)))))

#
# ::snt when you discover an island that belongs to nobody , it is yours .
#
#
(b / belong-01~e.0 
	 :arg0 (i / island~e.4 
		 :arg0-of (b2 / belong-01~e.6 
			 :arg1 (n / nobody~e.8))) 
	 :arg1 (y / you~e.12) 
	 :condition~e.0 (d / discover-01~e.2 
		 :arg0 coref 
		 :arg1 (i / island~e.4 
			 :arg0-of (b2 / belong-01~e.6 
				 :arg1 (n / nobody~e.8)))))

#
# ::snt when you get an idea before any one else , you take out a patent on it : it is yours .
#
#
(a / and~e.12 
	 :op1 (p / patent-01~e.14 
		 :arg0 (y / you~e.10) 
		 :arg1 (i / idea~e.4)) 
	 :op2 (b2 / belong-01~e.0 
		 :arg0 coref 
		 :arg1 (y / you~e.10)) 
	 :condition~e.0 (g / get-01~e.2 
		 :arg0 coref 
		 :arg1 (i / idea~e.4) 
		 :time (b / before~e.5 
			 :op1 (a3 / anyone~e.6 
				 :mod (e / else~e.8)))))

#
# ::snt so with me : i own the stars , because nobody else before me ever thought of owning them . "
#
#
(c / cause-01~e.0 
	 :arg0 (t / think-01~e.15 
		 :arg0 (n / nobody~e.10 
			 :mod (e2 / else~e.11)) 
		 :arg1 (o / own-01~e.5 
			 :arg0 coref 
			 :arg1 (s / star~e.7)) 
		 :time (e / ever~e.14) 
		 :time (b / before~e.12 
			 :op1 (i / i~e.13))) 
	 :arg1 (o2 / own-01~e.5 
		 :arg0 coref 
		 :arg1 coref) 
	 :arg1-of (r / resemble-01~e.1 
		 :beneficiary~e.17 coref))

#
# ::snt " yes , that is true , " said the little prince .
#
#
(s / say-01~e.8 
	 :arg0 (p / prince~e.11 
		 :mod (l / little~e.10)) 
	 :arg1 (t / true-01~e.5 
		 :arg1 (t2 / that~e.3)))

#
# ::snt " and what do you do with them ? "
#
#
(a / and~e.1 
	 :op2 (d / do-02~e.5 
		 :arg0 (y / you~e.4) 
		 :arg1 (a2 / amr-unknown~e.8) 
		 :arg2 (t / they~e.7)))

#
# ::snt " i administer them , " replied the businessman .
#
#
(r / reply-01~e.6 
	 :arg0 (b / businessman~e.8) 
	 :arg2 (a / administer-01~e.2 
		 :arg0 coref 
		 :arg1 (t / they~e.3)))

#
# ::snt " i count them and recount them .
#
#
(a / and~e.4 
	 :op1 (c / count-01~e.2 
		 :arg0 (i / i~e.1) 
		 :arg1 (t / they~e.6)) 
	 :op2 (r2 / recount-01~e.5 
		 :arg0 coref 
		 :arg1 coref))

#
# ::snt it is difficult .
#
#
(d / difficult~e.2 
	 :domain~e.0 (i / it~e.0))

#
# ::snt but i am a man who is naturally interested in matters of consequence . "
#
#
(c / contrast-01~e.0 
	 :arg2 (m / man~e.4 
		 :domain~e.3 (i / i~e.1) 
		 :arg1-of (i2 / interest-01~e.8 
			 :arg2 (m2 / matter~e.10 
				 :mod (c2 / consequence~e.12)) 
			 :arg1-of (n / natural-02~e.7 
				 :arg2 coref))))

#
# ::snt the little prince was still not satisfied .
#
#
(s / satisfy-01~e.6 
	 :arg1 (p / prince~e.2 
		 :mod (l / little~e.1)) 
	 :mod (s2 / still~e.4) 
	 :polarity~e.5 -~e.5)

#
# ::snt " if i owned a silk scarf , " he said , " i could put it around my neck and take it away with me .
#
#
(s / say-01~e.10 
	 :arg0 (h / he~e.9) 
	 :arg1 (p / possible-01~e.14 
		 :arg1 (a2 / and~e.20 
			 :op1 (p2 / put-01~e.15 
				 :arg0 coref 
				 :arg1 (s2 / scarf~e.6 
					 :consist-of~e.16 (s3 / silk~e.5)) 
				 :arg2 (a / around~e.17 
					 :op1 (n / neck~e.19 
						 :part-of~e.18 coref))) 
			 :op2 (t / take-away-05~e.21 
				 :arg0 coref 
				 :arg1 coref 
				 :accompanier~e.23 coref)) 
		 :condition~e.1 (o / own-01~e.3 
			 :arg0 coref 
			 :arg1 coref)))

#
# ::snt if i owned a flower , i could pluck that flower and take it away with me .
#
#
(p / possible-01~e.7 
	 :arg1 (a / and~e.11 
		 :op1 (p2 / pluck-01~e.8 
			 :arg0 (i / i~e.16) 
			 :arg1 (f2 / flower~e.4 
				 :mod (t / that~e.9))) 
		 :op2 (t2 / take-away-05~e.12 
			 :arg0 coref 
			 :arg1 coref 
			 :accompanier~e.14 coref)) 
	 :condition~e.0 (o / own-01~e.2 
		 :arg0 coref 
		 :arg1 coref))

#
# ::snt but you can not pluck the stars from heaven ... "
#
#
(c / contrast-01~e.0 
	 :arg2 (p2 / possible-01~e.2 
		 :polarity~e.3 -~e.3 
		 :arg1 (p / pluck-01~e.4 
			 :arg0 (y / you~e.1) 
			 :arg1 (s / star~e.6) 
			 :arg2 (h / heaven~e.8))))

#
# ::snt " no .
#
#
(n / no~e.1)

#
# ::snt but i can put them in the bank . "
#
#
(c / contrast-01~e.0 
	 :arg2 (p2 / possible-01~e.2 
		 :arg1 (p / put-01~e.3 
			 :arg0 (i / i~e.1) 
			 :arg1 (t / they~e.4) 
			 :arg2 (b / bank~e.7))))

#
# ::snt " whatever does that mean ? "
#
#
(m / mean-01~e.4 
	 :arg1 (t / that~e.3) 
	 :arg2 (a / amr-unknown~e.5))

#
# ::snt " that means that i write the number of my stars on a little paper .
#
#
(m / mean-01~e.2 
	 :arg1 (t / that~e.3) 
	 :arg2 (w / write-01~e.5 
		 :arg0 (i / i~e.4) 
		 :arg1 (n / number~e.7 
			 :quant-of~e.8 (s / star~e.10 
				 :poss~e.9 coref)) 
		 :location~e.11 (p / paper~e.14 
			 :mod (l / little~e.13))))

#
# ::snt and then i put this paper in a drawer and lock it with a key . "
#
#
(a / and~e.0 
	 :op2 (a2 / and~e.9 
		 :op1 (p / put-01~e.3 
			 :arg0 (i / i~e.2) 
			 :arg1 (p2 / paper~e.5 
				 :mod (t2 / this~e.4)) 
			 :arg2 (d / drawer~e.8)) 
		 :op2 (l / lock-01~e.10 
			 :arg0 coref 
			 :arg1 coref 
			 :arg3~e.12 (k / key~e.14))) 
	 :time (t / then~e.1))

#
# ::snt " and that is all ? "
#
#
(a / and~e.1 
	 :op2 (a2 / all~e.4 
		 :domain (t / that~e.2)))

#
# ::snt " that is enough , " said the businessman .
#
#
(s / say-01~e.6 
	 :arg0 (b2 / businessman~e.8) 
	 :arg1 (e / enough~e.3 
		 :domain (t / that~e.1)))

#
# ::snt " it is entertaining , " thought the little prince .
#
#
(t / think-01~e.6 
	 :arg0 (p / prince~e.9 
		 :mod (l / little~e.8)) 
	 :arg1 (e / entertain-01~e.3 
		 :arg0 (i / it~e.1)))

#
# ::snt " it is rather poetic .
#
#
(p / poetry~e.4 
	 :domain~e.1 (i / it~e.1) 
	 :degree (r / rather~e.3))

#
# ::snt but it is of no great consequence . "
#
#
(c / contrast-01~e.0 
	 :arg2 (c2 / consequence~e.6 
		 :domain~e.1 (i / it~e.1) 
		 :mod (g / great~e.5 
			 :polarity~e.4 -~e.4)))

#
# ::snt on matters of consequence , the little prince had ideas which were very different from those of the grown - ups .
#
#
(h / have-03~e.8 
	 :arg0 (p / prince~e.7 
		 :mod (l / little~e.6)) 
	 :arg1 (i / idea~e.9 
		 :topic~e.2 (m / matter~e.1 
			 :mod (c / consequence~e.3)) 
		 :arg1-of (d / differ-02~e.13 
			 :arg2 (i2 / idea~e.15 
				 :poss~e.0 (g / grown-up~e.18)) 
			 :degree (v / very~e.12))))

#
# ::snt " i myself own a flower , " he continued his conversation with the businessman , " which i water every day .
#
#
(c / continue-02~e.9 
	 :arg0 (h / he~e.8) 
	 :arg1 (o / own-01~e.3 
		 :arg0 coref 
		 :arg1 (f2 / flower~e.5 
			 :arg1-of (w / water-01~e.19 
				 :arg0 coref 
				 :frequency~e.20 (r / rate-entity-91~e.20 
					 :arg3~e.2 (t / temporal-quantity 
						 :quant 1 
						 :unit (d / day~e.21)))))) 
	 :arg2 (b / businessman~e.14) 
	 :arg3~e.12 (c2 / converse-01~e.11 
		 :arg0 coref 
		 :arg2 coref))

#
# ::snt i own three volcanoes , which i clean out every week ( for i also clean out the one that is extinct ; one never knows ) .
#
#
(o / own-01~e.1 
	 :arg0 (i / i~e.0) 
	 :arg1 (v / volcano~e.3 
		 :quant 3~e.2 
		 :arg1-of (c / clean-out-03~e.7 
			 :arg0 coref 
			 :frequency~e.8 (r / rate-entity-91~e.9 
				 :arg3~e.12 (t / temporal-quantity 
					 :quant 1~e.18 
					 :unit (w / week~e.10))) 
			 :arg1-of (c2 / cause-01~e.12 
				 :arg0 (c3 / clean-out-03~e.7 
					 :arg0 coref 
					 :arg1 (v2 / volcano~e.3 
						 :mod (e / extinct~e.21) 
						 :arg1-of~e.19 (i2 / include-91~e.23 
							 :arg2 coref)) 
					 :mod (a / also~e.14) 
					 :arg1-of (c4 / cause-01 
						 :arg0 (k / know-01~e.25 
							 :polarity~e.24 -~e.24 
							 :arg0 (o2 / one~e.23))))))))

#
# ::snt it is of some use to my volcanoes , and it is of some use to my flower , that i own them .
#
#
(c / cause-01~e.19 
	 :arg0 (o / own-01~e.21 
		 :arg0 (i / i~e.20) 
		 :arg1 (a / and~e.9 
			 :op1 (v / volcano~e.7 
				 :poss~e.6 coref) 
			 :op2 (f2 / flower~e.17 
				 :poss~e.16 coref))) 
	 :arg1 (u / use-01~e.14 
		 :beneficiary~e.22 (a2 / and~e.9 
			 :op1 (v / volcano~e.7 
				 :poss~e.6 coref) 
			 :op2 (f2 / flower~e.17 
				 :poss~e.16 coref)) 
		 :degree (s / some~e.13)))

#
# ::snt but you are of no use to the stars ... "
#
#
(c / contrast-01~e.0 
	 :arg2 (u / use-01~e.5 
		 :polarity~e.4 -~e.4 
		 :arg0 (s / star~e.8) 
		 :arg1 (y / you~e.1)))

#
# ::snt the businessman opened his mouth , but he found nothing to say in answer .
#
#
(c / contrast-01~e.6 
	 :arg1 (o / open-01~e.2 
		 :arg0 (b / businessman~e.1) 
		 :arg1 (m / mouth~e.4 
			 :part-of~e.3 coref)) 
	 :arg2 (f / find-01~e.8 
		 :arg0 coref 
		 :arg1 (a / answer-01~e.13 
			 :polarity~e.9 -~e.11)))

#
# ::snt and the little prince went away .
#
#
(a / and~e.0 
	 :op2 (g / go-02~e.4 
		 :arg0 (p / prince~e.3 
			 :mod (l / little~e.2)) 
		 :direction (a2 / away~e.5)))

#
# ::snt " the grown - ups are certainly altogether extraordinary , " he said simply , talking to himself as he continued on his journey .
#
#
(s / say-01~e.12 
	 :arg0 (h / he~e.11 
		 :arg0-of (t / talk-01~e.15 
			 :arg2 coref 
			 :time~e.18 (c2 / continue-01~e.20 
				 :arg0 coref 
				 :arg1 (j / journey-01~e.23 
					 :arg0 coref)))) 
	 :arg1 (e / extraordinary~e.8 
		 :domain~e.17 (g2 / grown-up~e.2) 
		 :mod (c / certain~e.6) 
		 :degree (a / altogether~e.7)) 
	 :arg1-of (s2 / simple-02~e.13))

#
# ::snt chapter 14 .
#
#
(c / chapter~e.0 
	 :mod 14~e.1)

#
# ::snt the fifth planet was very strange .
#
#
(s / strange~e.5 
	 :degree (v / very~e.4) 
	 :domain (p / planet~e.2 
		 :ord~e.1 (o / ordinal-entity~e.1 
			 :value 5~e.1)))

#
# ::snt it was the smallest of all .
#
#
(s / small~e.3 
	 :compared-to~e.4 (a / all~e.5) 
	 :degree (m / most~e.5) 
	 :domain~e.0 (i / it~e.0))

#
# ::snt there was just enough room on it for a street lamp and a lamplighter .
#
#
(a2 / accommodate-01~e.5 
	 :arg0 (i / it~e.6) 
	 :arg1 (a / and~e.11 
		 :op1 (l / lamp~e.10 
			 :mod (s / street~e.9)) 
		 :op2 (p / person~e.0 
			 :arg0-of (l2 / light-04 
				 :arg1 (l3 / lamp~e.13)))) 
	 :extent~e.4 (e / enough~e.3 
		 :mod (j / just~e.2)))

#
# ::snt the little prince was not able to reach any explanation of the use of a street lamp and a lamplighter , somewhere in the heavens , on a planet which had no people , and not one house .
#
#
(p / possible-01~e.5 
	 :polarity~e.4 -~e.4 
	 :arg1 (e / explain-01~e.9 
		 :arg0 (p2 / prince~e.2 
			 :mod (l / little~e.1)) 
		 :arg1 (u / use-01~e.12 
			 :arg1 (a / and~e.17 
				 :op1 (l2 / lamp~e.16 
					 :mod (s / street~e.15)) 
				 :op2 (p3 / person~e.7 
					 :arg0-of~e.10 (l3 / light-04~e.7 
						 :arg1 (l4 / lamp~e.19))) 
				 :location (r / relative-position~e.21 
					 :op1 (h / heaven~e.24) 
					 :location~e.26 (p4 / planet~e.28 
						 :arg0-of (h2 / have-03~e.30 
							 :polarity~e.35 -~e.35 
							 :arg1 (a2 / and~e.34 
								 :op1 (p5 / person~e.32) 
								 :op2 (h3 / house~e.37)))))))))

#
# ::snt but he said to himself , nevertheless : " it may well be that this man is absurd .
#
#
(h2 / have-concession-91~e.0 
	 :arg1 (s / say-01~e.2 
		 :arg0 (h / he~e.1) 
		 :arg1 (p / possible-01~e.3 
			 :arg1 (a / absurd~e.17 
				 :domain~e.4 (m / man~e.15 
					 :mod (t / this~e.14)))) 
		 :arg2 coref))

#
# ::snt but he is not so absurd as the king , the conceited man , the businessman , and the tippler .
#
#
(c / contrast-01~e.0 
	 :arg2 (a / absurd~e.5 
		 :polarity~e.3 -~e.3 
		 :domain (h / he~e.1) 
		 :compared-to~e.6 (a2 / and~e.17 
			 :op1 (k / king~e.8) 
			 :op2 (m / man~e.12 
				 :mod (c2 / conceit~e.11)) 
			 :op3 (b2 / businessman~e.15) 
			 :op4 (p / person~e.19 
				 :arg0-of~e.19 (t / tipple-01~e.19))) 
		 :degree (e / equal~e.6)))

#
# ::snt for at least his work has some meaning .
#
#
(c / cause-01~e.0 
	 :arg0 (m / mean-01~e.7 
		 :arg1 (w / work-01~e.4 
			 :arg0 (h / he~e.3)) 
		 :degree (s / some~e.6) 
		 :mod (a / at-least~e.2)))

#
# ::snt when he lights his street lamp , it is as if he brought one more star to life , or one flower .
#
#
(l2 / light-04~e.2 
	 :arg0 (h / he~e.11) 
	 :arg1 (l3 / lamp~e.5 
		 :mod (s2 / street~e.4) 
		 :poss~e.3 coref) 
	 :arg1-of (r / resemble-01~e.9 
		 :arg2 (b / bring-01~e.12 
			 :arg0 (h / he~e.11) 
			 :arg1 (o / or~e.19 
				 :op1 (s / star~e.15 
					 :quant 1~e.13 
					 :mod (m / more~e.14)) 
				 :op2 (f2 / flower~e.21)) 
			 :arg3~e.16 (l / live-01~e.17))))

#
# ::snt when he puts out his lamp , he sends the flower , or the star , to sleep .
#
#
(s / send-02~e.8 
	 :arg0 (h / he~e.7) 
	 :arg1 (o / or~e.12 
		 :op1 (f2 / flower~e.10) 
		 :op2 (s3 / star~e.14)) 
	 :arg2 (s2 / sleep-01~e.17 
		 :arg0 coref) 
	 :time~e.0 (p / put-out-09~e.2 
		 :arg0 coref 
		 :arg1 (l / lamp~e.5 
			 :poss~e.4 coref)))

#
# ::snt that is a beautiful occupation .
#
#
(o / occupation~e.4 
	 :arg1-of (b / beautiful-02~e.3) 
	 :domain~e.2 (t / that~e.0))

#
# ::snt and since it is beautiful , it is truly useful . "
#
#
(a / and~e.0 
	 :op2 (c / cause-01~e.1 
		 :arg0 (b / beautiful-02~e.4 
			 :arg1 (i / it~e.2)) 
		 :arg1 (u / useful-05~e.9 
			 :arg1 coref 
			 :degree (t / truly~e.8))))

#
# ::snt when he arrived on the planet he respectfully saluted the lamplighter .
#
#
(s / salute-01~e.8 
	 :arg0 (h / he~e.6) 
	 :arg1 (p / person 
		 :arg0-of (l / light-04 
			 :arg1 (l2 / lamp~e.10))) 
	 :manner (r / respect-01~e.7) 
	 :time~e.0 (a / arrive-01~e.2 
		 :arg1 coref 
		 :arg4~e.3 (p2 / planet~e.5)))

#
# ::snt " good morning .
#
#
(m / morning~e.2 
	 :arg1-of (g / good-02~e.1))

#
# ::snt why have you just put out your lamp ? "
#
#
(c / cause-01~e.0 
	 :arg0 (a / amr-unknown~e.8) 
	 :arg1 (p / put-out-09~e.4 
		 :arg0 (y / you~e.2) 
		 :arg1 (l / lamp~e.7 
			 :poss~e.6 coref) 
		 :mod (j / just~e.3)))

#
# ::snt " those are the orders , " replied the lamplighter .
#
#
(r / reply-01~e.7 
	 :arg0 (p / person~e.1 
		 :arg0-of~e.1 (l / light-04~e.1 
			 :arg1 (l2 / lamp~e.9))) 
	 :arg2 (o / order-01~e.4 
		 :arg2 (t / that~e.1)))

#
# ::snt " good morning . "
#
#
(m / morning~e.2 
	 :arg1-of (g / good-02~e.1))

#
# ::snt " what are the orders ? "
#
#
(o / order-01~e.4 
	 :arg2 (a / amr-unknown~e.5))

#
# ::snt " the orders are that i put out my lamp .
#
#
(o / order-01~e.2 
	 :arg2 (p / put-out-09~e.6 
		 :arg0 (i / i~e.5) 
		 :arg1 (l / lamp~e.9 
			 :poss~e.8 coref)))

#
# ::snt good evening . "
#
#
(e / evening~e.1 
	 :arg1-of (g / good-02~e.0))

#
# ::snt and he lighted his lamp again .
#
#
(a / and~e.0 
	 :op2 (l / light-04~e.2 
		 :arg0 (h / he~e.1) 
		 :arg1 (l2 / lamp~e.4 
			 :poss~e.3 coref) 
		 :mod (a2 / again~e.5)))

#
# ::snt " but why have you just lighted it again ? "
#
#
(c / contrast-01~e.1 
	 :arg2 (c2 / cause-01~e.2 
		 :arg0 (a / amr-unknown~e.9) 
		 :arg1 (l / light-04~e.6 
			 :arg0 (y / you~e.4) 
			 :arg1 (i / it~e.7) 
			 :mod (a2 / again~e.8) 
			 :mod (j / just~e.5))))

#
# ::snt " those are the orders , " replied the lamplighter .
#
#
(r / reply-01~e.7 
	 :arg0 (p / person~e.1 
		 :arg0-of~e.1 (l / light-04~e.1 
			 :arg1 (l2 / lamp~e.9))) 
	 :arg2 (o / order-01~e.4 
		 :arg2 (t / that~e.1)))

#
# ::snt " i do not understand , " said the little prince .
#
#
(s / say-01~e.7 
	 :arg0 (p / prince~e.10 
		 :mod (l / little~e.9)) 
	 :arg1 (u / understand-01~e.4 
		 :arg0 coref 
		 :polarity~e.3 -~e.2))

#
# ::snt " there is nothing to understand , " said the lamplighter .
#
#
(s / say-01~e.8 
	 :arg0 (p / person~e.1 
		 :arg0-of (l / light-04 
			 :arg1 (l2 / lamp~e.10))) 
	 :arg1 (n / nothing~e.3 
		 :arg1-of (u / understand-01~e.5)))

#
# ::snt " orders are orders .
#
#
(o / order~e.1 
	 :domain (o2 / order~e.3))

#
# ::snt good morning . "
#
#
(m / morning~e.1 
	 :arg1-of (g / good-02~e.0))

#
# ::snt and he put out his lamp .
#
#
(a / and~e.0 
	 :op2 (p / put-out-09~e.2 
		 :arg0 (h / he~e.1) 
		 :arg1 (l / lamp~e.5 
			 :poss~e.4 coref)))

#
# ::snt then he mopped his forehead with a handkerchief decorated with red squares .
#
#
(m / mop-01~e.2 
	 :arg0 (h / he~e.1) 
	 :arg1 (f / forehead~e.4 
		 :part-of~e.3 coref) 
	 :arg2 (h2 / handkerchief~e.7 
		 :arg1-of (d / decorate-01~e.8 
			 :arg2 (s / square~e.11 
				 :arg1-of (r / red-02~e.10)))) 
	 :time (t / then~e.0))

#
# ::snt " i follow a terrible profession .
#
#
(f / follow-02~e.2 
	 :arg0 (i / i~e.1) 
	 :arg1 (p / profession~e.5 
		 :arg1-of (t / terrible-01~e.4)))

#
# ::snt in the old days it was reasonable .
#
#
(r / reasonable-02~e.6 
	 :arg1 (i / it~e.4) 
	 :time~e.0 (d / day~e.3 
		 :mod (o / old~e.2)))

#
# ::snt i put the lamp out in the morning , and in the evening i lighted it again .
#
#
(a / and~e.9 
	 :op1 (p / put-out-09~e.1 
		 :arg0 (i / i~e.0) 
		 :arg1 (l / lamp~e.3) 
		 :time~e.10 (d2 / date-entity 
			 :dayperiod~e.12 (m / morning~e.7))) 
	 :op2 (l2 / light-04~e.14 
		 :arg0 coref 
		 :arg1 coref 
		 :time~e.10 (d / date-entity 
			 :dayperiod~e.12 (e / evening~e.12)) 
		 :mod (a2 / again~e.16)))

#
# ::snt i had the rest of the day for relaxation and the rest of the night for sleep . "
#
#
(h / have-03~e.1 
	 :arg0 (i / i~e.0) 
	 :arg1 (a / and~e.9 
		 :op1 (r / rest~e.3 
			 :purpose~e.7 (r2 / relax-01~e.8) 
			 :part-of~e.4 (d / day~e.6)) 
		 :op2 (r3 / rest~e.11 
			 :purpose~e.15 (s / sleep-01~e.16) 
			 :part-of~e.12 (n / night~e.14))))

#
# ::snt " and the orders have been changed since that time ? "
#
#
(a / and~e.1 
	 :op2 (c / change-01~e.6 
		 :arg1 (o / order-01~e.3) 
		 :time (s / since~e.7 
			 :op1 (t / time~e.9 
				 :mod (t2 / that~e.8)))))

#
# ::snt " the orders have not been changed , " said the lamplighter .
#
#
(s / say-01~e.9 
	 :arg0 (p / person~e.3 
		 :arg0-of~e.3 (l / light-04~e.3 
			 :arg1 (l2 / lamp~e.11))) 
	 :arg1 (c / change-01~e.6 
		 :arg1 (o / order-01~e.2) 
		 :polarity~e.4 -~e.4))

#
# ::snt " that is the tragedy !
#
#
(t / tragedy~e.4 
	 :domain (t2 / that~e.1))

#
# ::snt from year to year the planet has turned more rapidly and the orders have not been changed ! "
#
#
(a / and~e.10 
	 :op1 (t / turn-01~e.7 
		 :arg1 (p / planet~e.5) 
		 :manner (r / rapid~e.9 
			 :degree (m / more~e.8)) 
		 :frequency~e.0 (y / year~e.1)) 
	 :op2 (c / change-01~e.16 
		 :arg1 (o / order-01~e.12) 
		 :polarity~e.14 -~e.14))

#
# ::snt " then what ? " asked the little prince .
#
#
(a / ask-01~e.5 
	 :arg0 (p / prince~e.8 
		 :mod (l / little~e.7)) 
	 :arg1 (a2 / amr-unknown~e.2 
		 :time (t / then~e.1)))

#
# ::snt " then - - the planet now makes a complete turn every minute , and i no longer have a single second for repose .
#
#
(a / and~e.14 
	 :op1 (t / turn-01~e.10 
		 :arg1 (p / planet~e.5) 
		 :arg1-of (c / complete-02~e.9) 
		 :time (n / now~e.6) 
		 :frequency (r2 / rate-entity-91~e.11 
			 :arg3 (t3 / temporal-quantity 
				 :quant 1~e.8 
				 :unit (m / minute~e.12)))) 
	 :op2 (h / have-03~e.18 
		 :polarity~e.16 -~e.16 
		 :arg0 (i / i~e.15) 
		 :arg1 (t2 / temporal-quantity 
			 :quant 1~e.19 
			 :unit (s / second~e.21) 
			 :purpose~e.22 (r / repose-01~e.23)) 
		 :time (n2 / no-longer~e.17)) 
	 :time (t4 / then~e.1))

#
# ::snt once every minute i have to light my lamp and put it out ! "
#
#
(o / obligate-01~e.4 
	 :arg1 (i / i~e.3) 
	 :arg2 (a / and~e.9 
		 :op1 (l / light-04~e.6 
			 :arg0 coref 
			 :arg1 (l2 / lamp~e.8 
				 :poss~e.7 coref)) 
		 :op2 (p / put-out-09~e.10 
			 :arg0 coref 
			 :arg1 coref)) 
	 :frequency~e.0 (r / rate-entity-91~e.1 
		 :arg2 (t / temporal-quantity 
			 :quant 1 
			 :unit (m / minute~e.2))))

#
# ::snt " that is very funny !
#
#
(f / funny~e.4 
	 :degree (v / very~e.3) 
	 :domain~e.5 (t / that~e.1))

#
# ::snt a day lasts only one minute , here where you live ! "
#
#
(l / last-01~e.2 
	 :arg1 (t / temporal-quantity 
		 :quant 1~e.0 
		 :unit (d / day~e.1)) 
	 :arg2 (t2 / temporal-quantity 
		 :quant 1~e.4 
		 :unit (m / minute~e.5)) 
	 :mod (o / only~e.3) 
	 :location~e.8 (l2 / live-01~e.10 
		 :arg0 (y / you~e.9)))

#
# ::snt " it is not funny at all ! " said the lamplighter .
#
#
(s / say-01~e.9 
	 :arg0 (p / person~e.7 
		 :arg0-of~e.7 (l / light-04~e.7 
			 :arg1 (l2 / lamp~e.11))) 
	 :arg1 (f / funny~e.4 
		 :polarity~e.3 -~e.3 
		 :domain~e.1 (i / it~e.1) 
		 :degree (a / at-all~e.6)))

#
# ::snt " while we have been talking together a month has gone by . "
#
#
(p / pass-03~e.1 
	 :arg1 (t / temporal-quantity 
		 :quant 1~e.7 
		 :unit (m / month~e.8)) 
	 :duration-of~e.10 (t2 / talk-01~e.5 
		 :arg0 (w / we~e.2) 
		 :mod (t3 / together~e.6)))

#
# ::snt " a month ? "
#
#
(t / temporal-quantity 
	 :quant 1~e.1 
	 :unit (m / month~e.2))

#
# ::snt " yes , a month .
#
#
(t / temporal-quantity 
	 :unit (m / month~e.4) 
	 :quant 1~e.3)

#
# ::snt thirty minutes .
#
#
(t / temporal-quantity 
	 :unit (m / minute~e.1) 
	 :quant 30~e.0)

#
# ::snt thirty days .
#
#
(t / temporal-quantity 
	 :unit (d / day~e.1) 
	 :quant 30~e.0)

#
# ::snt good evening . "
#
#
(e / evening~e.1 
	 :arg1-of (g / good-02~e.0))

#
# ::snt and he lighted his lamp again .
#
#
(a / and~e.0 
	 :op2 (l / light-04~e.2 
		 :arg0 (h / he~e.1) 
		 :arg1 (l2 / lamp~e.4 
			 :poss~e.3 coref) 
		 :mod (a2 / again~e.5)))

#
# ::snt as the little prince watched him , he felt that he loved this lamplighter who was so faithful to his orders .
#
#
(f / feel-01~e.8 
	 :arg0 (p / prince~e.3 
		 :mod (l2 / little~e.2)) 
	 :arg1 (l / love-01~e.11 
		 :arg0 coref 
		 :arg1 (p2 / person~e.10 
			 :arg0-of~e.10 (l3 / light-04~e.10 
				 :arg1 (l4 / lamp~e.13)) 
			 :mod (t / this~e.12) 
			 :arg1-of~e.9 (f2 / faithful-00~e.17 
				 :arg2 (t2 / thing~e.18 
					 :arg2-of~e.19 (o / order-01~e.20 
						 :arg1 coref))))) 
	 :time (w / watch-01~e.4 
		 :arg0 coref 
		 :arg1 coref))

#
# ::snt he remembered the sunsets which he himself had gone to seek , in other days , merely by pulling up his chair ; and he wanted to help his friend .
#
#
(a / and~e.23 
	 :op1 (r / remember-01~e.1 
		 :arg0 (h / he~e.0) 
		 :arg1 (s3 / sunset~e.3 
			 :arg1-of (s / seek-01~e.10 
				 :purpose-of~e.8 (g / go-02~e.8 
					 :arg0 coref 
					 :manner~e.17 (p / pull-01~e.18 
						 :arg0 coref 
						 :arg1 (c / chair~e.21) 
						 :mod (m / mere~e.16) 
						 :direction (u / up~e.19)) 
					 :time~e.12 (d / day~e.14 
						 :mod (o / other~e.13)))))) 
	 :op2 (w / want-01~e.25 
		 :arg0 coref 
		 :arg1 (h2 / help-01~e.27 
			 :arg0 coref 
			 :arg1 (p2 / person~e.6 
				 :arg0-of~e.7 (h3 / have-rel-role-91~e.7 
					 :arg1 coref 
					 :arg2 (f / friend~e.29))))))

#
# ::snt " you know , " he said , " i can tell you a way you can rest whenever you want to ... "
#
#
(s / say-01~e.6 
	 :arg0 (h / he~e.5) 
	 :arg1 (p / possible-01~e.10 
		 :arg1 (t / tell-01~e.11 
			 :arg0 coref 
			 :arg1 (w / way~e.14 
				 :purpose~e.21 (p2 / possible-01~e.16 
					 :arg1 (r / rest-01~e.17 
						 :arg1 (y / you~e.15) 
						 :time~e.18 (w2 / want-01~e.20 
							 :arg0 coref 
							 :mod (a / any~e.2))))) 
			 :arg2 coref)))

#
# ::snt " i always want to rest , " said the lamplighter .
#
#
(s / say-01~e.8 
	 :arg0 (p / person~e.1 
		 :arg0-of (l / light-04 
			 :arg1 (l2 / lamp~e.10))) 
	 :arg1 (w / want-01~e.3 
		 :arg0 coref 
		 :arg1 (r / rest-01~e.5 
			 :arg1 coref) 
		 :time (a / always~e.2)))

#
# ::snt for it is possible for a man to be faithful and lazy at the same time .
#
#
(c / cause-01~e.0 
	 :arg0 (p / possible-01~e.3 
		 :arg1 (a / and~e.10 
			 :op1 (f / faithful~e.9) 
			 :op2 (l / lazy~e.11) 
			 :domain (m / man~e.6) 
			 :time (s / same-01~e.14 
				 :arg1 (t / time~e.15)))))

#
# ::snt the little prince went on with his explanation : " your planet is so small that three strides will take you all the way around it .
#
#
(g / go-on-25~e.3 
	 :arg0 (p / prince~e.2 
		 :mod (l / little~e.1)) 
	 :arg1 (e / explain-01~e.7 
		 :arg0 coref 
		 :arg1 (c / cause-01~e.15 
			 :arg0 (s / small~e.14 
				 :domain~e.25 (p2 / planet~e.11 
					 :poss~e.10 (y / you~e.20)) 
				 :degree (s2 / so~e.13)) 
			 :arg1 (t / take-03~e.19 
				 :arg0 (s3 / stride-01~e.17 
					 :quant 3~e.16) 
				 :arg1 coref 
				 :arg2 (a / around~e.24 
					 :op1 coref 
					 :degree (a2 / all-the-way~e.23))))))

#
# ::snt to be always in the sunshine , you need only walk along rather slowly .
#
#
(n / need-01~e.8 
	 :arg0 (y / you~e.7) 
	 :arg1 (w / walk-01~e.10 
		 :arg1-of (s / slow-05~e.13 
			 :degree (r / rather~e.12)) 
		 :mod (o / only~e.9)) 
	 :purpose~e.0 (b / be-located-at-91~e.3 
		 :arg1 coref 
		 :arg2 (s2 / sunshine~e.5) 
		 :time~e.3 (a / always~e.2)))

#
# ::snt when you want to rest , you will walk - - and the day will last as long as you like . "
#
#
(w / walk-01~e.8 
	 :arg0 (y / you~e.6) 
	 :time~e.0 (w2 / want-01~e.2 
		 :arg0 coref 
		 :arg1 (r / rest-01~e.4 
			 :arg1 coref)) 
	 :arg0-of (c / cause-01~e.17 
		 :arg1 (l / last-01~e.15 
			 :arg1 (d / day~e.13) 
			 :arg2 (t / temporal-quantity 
				 :degree (e / equal~e.16) 
				 :compared-to~e.18 (l2 / like-02~e.20 
					 :arg0 coref)))))

#
# ::snt " that does n't do me much good , " said the lamplighter .
#
#
(s / say-01~e.10 
	 :arg0 (p / person 
		 :arg0-of (l / light-04 
			 :arg1 (l2 / lamp~e.12))) 
	 :arg1 (d / do-02~e.4 
		 :polarity~e.3 -~e.2 
		 :arg0 (t / that~e.1) 
		 :arg1 (g / good-04~e.7 
			 :arg2 coref 
			 :degree (m / much~e.6)) 
		 :arg2 coref))

#
# ::snt " the one thing i love in life is to sleep . "
#
#
(l / love-01~e.5 
	 :arg0 (i / i~e.4) 
	 :arg1 (s / sleep-01~e.10 
		 :arg0 coref 
		 :mod (t / thing~e.3 
			 :quant 1~e.2)) 
	 :time~e.6 (l2 / live-01~e.7))

#
# ::snt " then you 're unlucky , " said the little prince .
#
#
(s / say-01~e.7 
	 :arg0 (p / prince~e.10 
		 :mod (l / little~e.9)) 
	 :arg1 (l2 / lucky~e.4 
		 :polarity - 
		 :domain (y / you~e.2) 
		 :time (t / then~e.1)))

#
# ::snt " i am unlucky , " said the lamplighter .
#
#
(s / say-01~e.6 
	 :arg0 (p / person~e.1 
		 :arg0-of (l / light-04 
			 :arg1 (l2 / lamp~e.8))) 
	 :arg1 (l3 / lucky~e.3 
		 :domain coref 
		 :polarity -~e.1))

#
# ::snt " good morning . "
#
#
(m / morning~e.2 
	 :arg1-of (g / good-02~e.1))

#
# ::snt and he put out his lamp .
#
#
(a / and~e.0 
	 :op2 (p / put-out-09~e.2 
		 :arg0 (h / he~e.1) 
		 :arg1 (l / lamp~e.5 
			 :poss~e.4 coref)))

#
# ::snt " that man , " said the little prince to himself , as he continued farther on his journey , " that man would be scorned by all the others : by the king , by the conceited man , by the tippler , by the businessman .
#
#
(s / say-01~e.5 
	 :arg0 (p / prince~e.8 
		 :mod (l / little~e.7)) 
	 :arg1 (s2 / scorn-01~e.25 
		 :arg0 (o / other~e.29 
			 :mod (a / all~e.27) 
			 :domain~e.10 (a2 / and 
				 :op1 (k / king~e.33) 
				 :op2 (m / man~e.38 
					 :mod (c / conceit~e.37)) 
				 :op3 (p2 / person~e.40 
					 :arg0-of~e.42 (t / tipple-01~e.42)) 
				 :op4 (b / businessman~e.46))) 
		 :arg1 (m2 / man~e.2 
			 :mod (t2 / that~e.1))) 
	 :arg2 coref 
	 :time~e.12 (c2 / continue-01~e.14 
		 :arg0 coref 
		 :arg1 (j / journey-01~e.18 
			 :arg0 coref) 
		 :extent~e.31 (f / far~e.15 
			 :degree (m3 / more~e.15))))

#
# ::snt nevertheless he is the only one of them all who does not seem to me ridiculous .
#
#
(h2 / have-concession-91~e.0 
	 :arg1 (s / seem-01~e.12 
		 :polarity~e.11 -~e.10 
		 :arg1 (r / ridiculous-02~e.15 
			 :arg1 (p / person 
				 :mod (o2 / only~e.4) 
				 :arg1-of (i2 / include-91~e.5 
					 :arg2 (t / they~e.7 
						 :mod (a / all~e.8))) 
				 :domain (h / he~e.1))) 
		 :arg2 (i / i~e.14)))

#
# ::snt perhaps that is because he is thinking of something else besides himself . "
#
#
(p / possible-01~e.0 
	 :arg1 (c / cause-01~e.3 
		 :arg0 (t / think-01~e.6 
			 :arg0 (h / he~e.4) 
			 :arg2 (s / something~e.8 
				 :mod (e / else~e.9) 
				 :arg1-of (d / differ-02~e.10 
					 :arg2 coref)))))

#
# ::snt he breathed a sigh of regret , and said to himself , again : " that man is the only one of them all whom i could have made my friend .
#
#
(a / and~e.7 
	 :op1 (b / breathe-02~e.1 
		 :arg0 (h / he~e.0) 
		 :arg1 (s / sigh-02~e.3 
			 :manner (r / regret-01~e.5))) 
	 :op2 (s2 / say-01~e.8 
		 :arg0 coref 
		 :arg1 (p / person~e.24 
			 :mod (o2 / only~e.19) 
			 :arg1-of (i / include-91~e.20 
				 :arg2 (t / they~e.22 
					 :mod (a2 / all~e.23))) 
			 :domain~e.2 (m2 / man~e.16 
				 :mod (t2 / that~e.15)) 
			 :arg2-of~e.9 (m / make-01~e.28 
				 :arg0 coref 
				 :arg1 (h2 / have-rel-role-91~e.27 
					 :arg0 coref 
					 :arg1 coref 
					 :arg2 (f / friend~e.30)) 
				 :arg1-of (p2 / possible-01~e.26))) 
		 :arg2 coref 
		 :mod (a3 / again~e.12)))

#
# ::snt but his planet is indeed too small .
#
#
(c / contrast-01~e.0 
	 :arg2 (s / small~e.6 
		 :degree (t / too~e.5) 
		 :domain (p / planet~e.2 
			 :poss~e.1 (h / he~e.1)) 
		 :mod (i / indeed~e.4)))

#
# ::snt there is no room on it for two people ... "
#
#
(r / room~e.3 
	 :poss~e.4 (i / it~e.5) 
	 :beneficiary~e.6 (p / person~e.8 
		 :quant 2~e.7) 
	 :polarity~e.2 -~e.2)

#
# ::snt what the little prince did not dare confess was that he was sorry most of all to leave this planet , because it was blest every day with 1440 sunsets !
#
#
(d / dare-01~e.6 
	 :polarity~e.5 -~e.4 
	 :arg0 (p / prince~e.3 
		 :mod (l / little~e.2)) 
	 :arg2 (c / confess-01~e.7 
		 :arg1 (c2 / cause-01~e.21 
			 :arg0 (b / bless-01~e.24 
				 :arg1 (p2 / planet~e.19 
					 :mod (t / this~e.18)) 
				 :arg2 (s / sunset~e.29 
					 :quant 1440~e.28) 
				 :frequency~e.10 (r / rate-entity-91~e.25 
					 :arg3~e.27 (t2 / temporal-quantity 
						 :quant 1 
						 :unit (d2 / day~e.26)))) 
			 :arg1 (s2 / sorry-01~e.12 
				 :arg1 coref 
				 :arg2 (l2 / leave-11~e.17 
					 :arg1 coref)) 
			 :degree (m / most~e.13))))

#
# ::snt chapter 15 .
#
#
(c / chapter~e.0 
	 :mod 15~e.1)

#
# ::snt the sixth planet was ten times larger than the last one .
#
#
(l / large~e.6 
	 :domain (p / planet~e.2 
		 :ord~e.5 (o / ordinal-entity~e.5 
			 :value 6~e.7)) 
	 :quant (p3 / product-of~e.1 
		 :op1 10~e.10 
		 :op2 (v / volume-quantity 
			 :quant-of~e.4 (p2 / planet~e.2 
				 :mod (l2 / last~e.9)))))

#
# ::snt it was inhabited by an old gentleman who wrote voluminous books .
#
#
(i / inhabit-01~e.2 
	 :arg0 (g / gentleman~e.6 
		 :mod (o / old~e.5) 
		 :arg0-of (w / write-01~e.8 
			 :arg1 (b / book~e.10 
				 :mod (v / volume~e.9)))) 
	 :arg1 (i2 / it~e.0))

#
# ::snt " oh , look !
#
#
(a / and~e.4 
	 :op1 (o / oh~e.1 
		 :mode~e.4 expressive~e.4) 
	 :op2 (l / look-01~e.3 
		 :mode~e.4 imperative~e.4 
		 :arg0 (y / you)))

#
# ::snt here is an explorer ! " he exclaimed to himself when he saw the little prince coming .
#
#
(e / exclaim-01~e.7 
	 :arg0 (h / he~e.6) 
	 :arg1 (p / person~e.9 
		 :arg0-of~e.0 (e2 / explore-01~e.3)) 
	 :arg2 coref 
	 :time~e.10 (s / see-01~e.12 
		 :arg0 coref 
		 :arg1 (c / come-01~e.16 
			 :arg1 (p2 / prince~e.15 
				 :mod (l / little~e.14)))))

#
# ::snt the little prince sat down on the table and panted a little .
#
#
(a / and~e.8 
	 :op1 (s / sit-down-02~e.3 
		 :arg1 (p2 / prince~e.2 
			 :mod (l / little~e.1)) 
		 :location~e.4 (t / table~e.7)) 
	 :op2 (p / pant-01~e.9 
		 :arg0 coref 
		 :duration~e.10 (l2 / little~e.11)))

#
# ::snt he had already traveled so much and so far !
#
#
(a2 / and~e.6 
	 :op1 (t / travel-01~e.3 
		 :arg0 (h / he~e.0) 
		 :quant (m / much~e.5 
			 :mod (s / so~e.4))) 
	 :op2 (t2 / travel-01~e.3 
		 :arg0 coref 
		 :arg1 (f / far~e.8 
			 :mod (s2 / so~e.7))) 
	 :time (a / already~e.2))

#
# ::snt " where do you come from ? " the old gentleman said to him .
#
#
(s / say-01~e.11 
	 :arg0 (g / gentleman~e.10 
		 :mod (o / old~e.9)) 
	 :arg1 (c / come-01~e.4 
		 :arg1 (h / he~e.13) 
		 :arg3~e.5 (a / amr-unknown~e.6)) 
	 :arg2 (h / he~e.13))

#
# ::snt " what is that big book ? " said the little prince .
#
#
(s / say-01~e.8 
	 :arg0 (p / prince~e.11 
		 :mod (l / little~e.10)) 
	 :arg1 (b / book~e.5 
		 :domain (a / amr-unknown~e.1) 
		 :mod (b2 / big~e.4) 
		 :mod (t / that~e.3)))

#
# ::snt " what are you doing ? "
#
#
(d2 / do-02~e.4 
	 :arg0 (y / you~e.3) 
	 :arg1 (a / amr-unknown~e.5))

#
# ::snt " i am a geographer , " the old gentleman said to him .
#
#
(s / say-01~e.10 
	 :arg0 (g / gentleman~e.9 
		 :mod (o / old~e.8)) 
	 :arg1 (g2 / geographer~e.4 
		 :domain~e.3 coref) 
	 :arg2 (h / he~e.12))

#
# ::snt " what is a geographer ? " asked the little prince .
#
#
(a / ask-01~e.7 
	 :arg0 (p / prince~e.10 
		 :mod (l / little~e.9)) 
	 :arg1 (g / geographer~e.4 
		 :domain~e.3 (a2 / amr-unknown~e.1)))

#
# ::snt " a geographer is a scholar who knows the location of all the seas , rivers , towns , mountains , and deserts . "
#
#
(s4 / scholar~e.5 
	 :domain~e.1 (g / geographer~e.2) 
	 :arg0-of (k / know-01~e.7 
		 :arg1 (l / location~e.9 
			 :location-of (a / and~e.21 
				 :op1 (s2 / sea~e.13) 
				 :op2 (r / river~e.15) 
				 :op3 (t / town~e.17) 
				 :op4 (m / mountain~e.19) 
				 :op5 (d / desert~e.22) 
				 :mod (a2 / all~e.11)))))

#
# ::snt " that is very interesting , " said the little prince .
#
#
(s / say-01~e.7 
	 :arg0 (p / prince~e.10 
		 :mod (l / little~e.9)) 
	 :arg1 (i / interest-01~e.4 
		 :arg0 (t2 / that~e.1) 
		 :arg1 coref 
		 :degree (v / very~e.3)))

#
# ::snt " here at last is a man who has a real profession ! "
#
#
(m2 / man~e.6 
	 :arg0-of~e.1 (h2 / have-03~e.8 
		 :arg1 (p2 / profession~e.11 
			 :arg1-of (r / real-04~e.10))) 
	 :time~e.2 (a / at-last~e.3))

#
# ::snt and he cast a look around him at the planet of the geographer .
#
#
(a / and~e.0 
	 :op2 (l / look-01~e.4 
		 :arg0 (h / he~e.1) 
		 :arg1 (p / planet~e.9 
			 :poss~e.2 (g / geographer~e.12)) 
		 :direction~e.7 (a2 / around~e.5 
			 :op1 coref)))

#
# ::snt it was the most magnificent and stately planet that he had ever seen .
#
#
(p / planet~e.7 
	 :domain~e.0 (i / it~e.0) 
	 :mod (m2 / magnificent~e.4 
		 :degree (m / most~e.3) 
		 :compared-to~e.5 (p2 / planet~e.7 
			 :arg1-of~e.10 (s2 / see-01~e.12 
				 :arg0 (h / he~e.9) 
				 :time (e / ever~e.11)))) 
	 :mod (s / stately~e.6 
		 :degree (m3 / most~e.3) 
		 :compared-to~e.5 coref))

#
# ::snt " your planet is very beautiful , " he said .
#
#
(s / say-01~e.9 
	 :arg0 (h / he~e.8) 
	 :arg1 (b / beautiful-02~e.5 
		 :arg1 (p / planet~e.2 
			 :poss~e.1 (y / you~e.1)) 
		 :degree (v / very~e.4)))

#
# ::snt " has it any oceans ? "
#
#
(h / have-03~e.1 
	 :arg0 (i / it~e.2) 
	 :arg1 (o / ocean~e.4 
		 :mod (a / any~e.3)))

#
# ::snt " i could n't tell you , " said the geographer .
#
#
(s / say-01~e.8 
	 :arg0 (g / geographer~e.10) 
	 :arg1 (p / possible-01~e.2 
		 :arg1 (t / tell-01~e.4 
			 :arg0 coref 
			 :arg2 (y / you~e.5)) 
		 :polarity~e.3 -~e.1))

#
# ::snt " ah ! "
#
#
(a / ah~e.1 
	 :mode~e.2 expressive~e.2)

#
# ::snt the little prince was disappointed .
#
#
(d / disappoint-01~e.4 
	 :arg1 (p / prince~e.2 
		 :mod (l / little~e.1)))

#
# ::snt " has it any mountains ? "
#
#
(h2 / have-03~e.1 
	 :arg0 (i / it~e.2) 
	 :arg1 (m / mountain~e.4 
		 :mod (a / any~e.3)))

#
# ::snt " i could n't tell you , " said the geographer .
#
#
(s / say-01~e.8 
	 :arg0 (g / geographer~e.10) 
	 :arg1 (p / possible-01~e.2 
		 :arg1 (t / tell-01~e.4 
			 :arg0 coref 
			 :arg2 (y / you~e.5)) 
		 :polarity~e.3 -~e.1))

#
# ::snt " and towns , and rivers , and deserts ? "
#
#
(a3 / and~e.1 
	 :op2 (a4 / and~e.4 
		 :op1 (t2 / town~e.2) 
		 :op2 (r2 / river~e.5) 
		 :op3 (d2 / desert~e.8)))

#
# ::snt " i could n't tell you that , either . "
#
#
(p2 / possible-01~e.2 
	 :polarity~e.3 - 
	 :arg1 (t / tell-01~e.4 
		 :arg0 (i / i~e.1) 
		 :arg1 (t2 / that~e.6) 
		 :arg2 (y / you~e.5)) 
	 :mod (e / either~e.8))

#
# ::snt " but you are a geographer ! "
#
#
(c / contrast-01~e.1 
	 :mode~e.6 expressive~e.6 
	 :arg2 (g2 / geographer~e.5 
		 :domain~e.4 (y2 / you~e.2)))

#
# ::snt " exactly , " the geographer said .
#
#
(s / say-01~e.6 
	 :arg0 (g / geographer~e.5) 
	 :arg1 (e / exact~e.1))

#
# ::snt " but i am not an explorer .
#
#
(c / contrast-01~e.1 
	 :arg2 (p / person 
		 :polarity~e.4 -~e.4 
		 :domain (i / i~e.2) 
		 :arg0-of (e / explore-01~e.6)))

#
# ::snt i have n't a single explorer on my planet .
#
#
(h2 / have-03~e.1 
	 :polarity~e.2 - 
	 :arg0 (i / i~e.0) 
	 :arg1 (p2 / person~e.4 
		 :arg1-of~e.4 (s / single-02~e.4) 
		 :arg0-of (e / explore-01~e.5) 
		 :location~e.6 (p3 / planet~e.8 
			 :poss~e.7 coref)))

#
# ::snt it is not the geographer who goes out to count the towns , the rivers , the mountains , the seas , the oceans , and the deserts .
#
#
(p2 / person~e.7 
	 :domain~e.0 (g / geographer~e.4 
		 :polarity~e.2 -~e.2) 
	 :arg0-of (g2 / go-02~e.6 
		 :purpose~e.8 (c / count-01~e.9 
			 :arg0 coref 
			 :arg1 (a / and~e.25 
				 :op1 (t / town~e.11) 
				 :op2 (r / river~e.14) 
				 :op3 (m / mountain~e.17) 
				 :op4 (o2 / ocean~e.23) 
				 :op5 (d / desert~e.27) 
				 :op6 (s2 / sea~e.20)))))

#
# ::snt the geographer is much too important to go loafing about .
#
#
(i2 / important~e.5 
	 :domain (g / geographer~e.1 
		 :arg1-of (g2 / go-01~e.7 
			 :purpose~e.6 (l / loaf-01~e.8 
				 :arg0 coref 
				 :path (a / about~e.9)))) 
	 :degree (t / too~e.4 
		 :degree (m / much~e.3)))

#
# ::snt he does not leave his desk .
#
#
(l / leave-11~e.3 
	 :polarity~e.2 -~e.1 
	 :arg0 (h / he~e.0) 
	 :arg1 (d / desk~e.5 
		 :poss~e.4 coref))

#
# ::snt but he receives the explorers in his study .
#
#
(c / contrast-01~e.0 
	 :arg2 (r / receive-01~e.2 
		 :arg0 (h / he~e.1) 
		 :arg1 (p / person~e.4 
			 :arg0-of~e.4 (e / explore-01~e.4)) 
		 :location~e.5 (s / study~e.7 
			 :poss~e.6 coref)))

#
# ::snt he asks them questions , and he notes down what they recall of their travels .
#
#
(a3 / and~e.5 
	 :op1 (q2 / question-01~e.1 
		 :arg0 (h / he~e.0) 
		 :arg2 (t / they~e.2)) 
	 :op2 (n / note-02~e.7 
		 :arg0 coref 
		 :arg1 (t3 / thing~e.9 
			 :arg1-of~e.11 (r / recall-02~e.11) 
			 :source~e.13 (t2 / travel-01~e.14 
				 :arg0 coref))))

#
# ::snt and if the recollections of any one among them seem interesting to him , the geographer orders an inquiry into that explorer 's moral character . "
#
#
(a3 / and~e.0 
	 :op2 (o / order-02~e.16 
		 :arg0 (g / geographer~e.15) 
		 :arg1 (i / inquire-01~e.18 
			 :arg1 (c / character~e.24 
				 :arg1-of (m / moral-02~e.23) 
				 :poss~e.22 (p / person~e.21 
					 :arg0-of~e.19 (e / explore-01~e.21) 
					 :mod (t2 / that~e.20)))) 
		 :condition~e.1 (i4 / interest-01~e.10 
			 :arg1 coref 
			 :arg2 (t4 / thing~e.11 
				 :arg1-of~e.3 (r2 / recall-02~e.3) 
				 :poss~e.22 (p2 / person~e.21 
					 :arg0-of~e.21 (e2 / explore-01~e.21) 
					 :mod (a / any~e.5) 
					 :arg1-of (i5 / include-91~e.7 
						 :arg2 (t5 / they~e.8)))))))

#
# ::snt " why is that ? "
#
#
(t2 / that~e.3 
	 :arg1-of (c / cause-01~e.1 
		 :arg0 (a / amr-unknown~e.4)))

#
# ::snt " because an explorer who told lies would bring disaster on the books of the geographer .
#
#
(c / cause-01~e.1 
	 :arg1 (l / lie-08~e.5 
		 :arg0 (p2 / person~e.3 
			 :arg0-of~e.13 (e2 / explore-01~e.3)) 
		 :condition-of~e.6 (b3 / bring-01~e.8 
			 :arg1 (d2 / disaster~e.9) 
			 :arg2 (b4 / book~e.12 
				 :poss~e.10 (g2 / geographer~e.15)))))

#
# ::snt so would an explorer who drank too much . "
#
#
(d3 / drink-01~e.5 
	 :arg0 (p2 / person~e.5 
		 :arg0-of~e.3 (e2 / explore-01~e.3)) 
	 :quant (m2 / much~e.7 
		 :degree (t2 / too~e.6)) 
	 :arg0-of (c / cause-01~e.0 
		 :arg1 (t / thing~e.0 
			 :arg1-of~e.0 (s / same-01~e.0))))

#
# ::snt " why is that ? " asked the little prince .
#
#
(a / ask-01~e.6 
	 :arg0 (p / prince~e.9 
		 :mod (l / little~e.8)) 
	 :arg1 (t / that~e.3 
		 :arg1-of (c / cause-01~e.1 
			 :arg0 (a2 / amr-unknown~e.4))))

#
# ::snt " because intoxicated men see double .
#
#
(s3 / see-01~e.4 
	 :arg0 (m2 / man~e.3 
		 :arg1-of (i2 / intoxicate-01~e.2)) 
	 :arg2 (d / double~e.5) 
	 :arg0-of (c2 / cause-01~e.1 
		 :arg1 (t2 / thing)))

#
# ::snt then the geographer would note down two mountains in a place where there was only one . "
#
#
(t / thing~e.0 
	 :arg0-of (c / cause-01 
		 :arg1 (n2 / note-02~e.4 
			 :arg0 (g / geographer~e.2) 
			 :arg1 (m / mountain~e.7 
				 :quant 2~e.6 
				 :location~e.5 (p / place~e.10 
					 :location-of~e.11 (m2 / mountain~e.7 
						 :quant 1~e.9 
						 :mod (o2 / only~e.14)))) 
			 :time (t2 / then~e.0))))

#
# ::snt " i know some one , " said the little prince , " who would make a bad explorer . "
#
#
(s / say-01~e.7 
	 :arg0 (p / prince~e.10 
		 :mod (l / little~e.9)) 
	 :arg1 (k / know-02~e.2 
		 :arg0 coref 
		 :arg1 (s2 / someone~e.3 
			 :arg1-of~e.4 (m / make-06~e.15 
				 :arg2 (p2 / person~e.18 
					 :arg0-of~e.18 (e / explore-01~e.18) 
					 :arg1-of (b / bad-02~e.17 
						 :arg2 coref))))))

#
# ::snt " that is possible .
#
#
(p2 / possible-01~e.3 
	 :arg1 (t / that~e.1))

#
# ::snt then , when the moral character of the explorer is shown to be good , an inquiry is ordered into his discovery . "
#
#
(o2 / order-01~e.18 
	 :arg1 (i / inquire-01~e.16 
		 :arg1 (t / thing~e.11 
			 :arg1-of~e.21 (d / discover-01~e.21 
				 :arg0 (p / person~e.8 
					 :arg0-of~e.6 (e / explore-01~e.8))))) 
	 :time~e.2 (s3 / show-01~e.10 
		 :arg1 (g / good-02~e.13 
			 :arg1 (c / character~e.5 
				 :poss~e.20 (p / person~e.8 
					 :arg0-of~e.6 (e / explore-01~e.8)) 
				 :arg1-of (m / moral-02~e.4)))) 
	 :time~e.2 (t3 / then~e.0))

#
# ::snt " one goes to see it ? "
#
#
(g / go-02~e.2 
	 :arg0 (o / one~e.1) 
	 :purpose~e.3 (s2 / see-01~e.4 
		 :arg0 coref 
		 :arg1 (i / it~e.5)))

#
# ::snt " no .
#
#
(n / no~e.1)

#
# ::snt that would be too complicated .
#
#
(c2 / complicate-01~e.4 
	 :arg1 (t3 / that~e.0) 
	 :degree (t2 / too~e.3))

#
# ::snt but one requires the explorer to furnish proofs .
#
#
(c / contrast-01~e.0 
	 :arg2 (r / require-01~e.2 
		 :arg0 (o / one~e.1) 
		 :arg1 (f / furnish-01~e.6 
			 :arg0 (p / person~e.4 
				 :arg0-of~e.4 (e / explore-01~e.4)) 
			 :arg1 (p2 / prove-01~e.7)) 
		 :arg2 (p / person~e.4 
			 :arg0-of~e.4 (e / explore-01~e.4))))

#
# ::snt for example , if the discovery in question is that of a large mountain , one requires that large stones be brought back from it . "
#
#
(e2 / exemplify-01~e.1 
	 :arg0 (r / require-01~e.16 
		 :arg0 (o / one~e.15) 
		 :arg1 (b / bring-01~e.21 
			 :arg1 (s2 / stone~e.19 
				 :mod (l2 / large~e.18)) 
			 :direction (b2 / back~e.22) 
			 :source~e.23 (m / mountain~e.13 
				 :mod (l / large~e.12))) 
		 :condition~e.3 (d / discover-01~e.5 
			 :arg1 (m / mountain~e.13 
				 :mod (l / large~e.12)) 
			 :arg1-of (q / question-01~e.7))))

#
# ::snt the geographer was suddenly stirred to excitement .
#
#
(s / stir-02~e.4 
	 :arg1 (g / geographer~e.1) 
	 :arg3~e.5 (e / excite-01~e.6) 
	 :manner (s2 / sudden~e.3))

#
# ::snt " but you - - you come from far away !
#
#
(c3 / contrast-01~e.1 
	 :arg2 (c / come-01~e.6 
		 :arg1 (y / you~e.2) 
		 :arg3~e.7 (a / away~e.9 
			 :extent~e.10 (f / far~e.8))))

#
# ::snt you are an explorer !
#
#
(p2 / person~e.4 
	 :arg0-of~e.3 (e / explore-01~e.3) 
	 :domain (y / you~e.0))

#
# ::snt you shall describe your planet to me ! "
#
#
(d2 / describe-01~e.2 
	 :mode~e.7 imperative~e.5 
	 :arg0 (y / you~e.0) 
	 :arg1 (p / planet~e.4 
		 :source-of~e.1 coref) 
	 :beneficiary~e.6 (i / i~e.6))

#
# ::snt and , having opened his big register , the geographer sharpened his pencil .
#
#
(a / and~e.0 
	 :op2 (s / sharpen-01~e.10 
		 :arg0 (g / geographer~e.9) 
		 :arg1 (p / pencil~e.12 
			 :poss~e.11 coref) 
		 :time (a3 / after~e.2 
			 :op1 (o / open-01~e.3 
				 :arg0 (g / geographer~e.9) 
				 :arg1 (r / register-02~e.6 
					 :arg0 coref 
					 :mod (b / big~e.5))))))

#
# ::snt the recitals of explorers are put down first in pencil .
#
#
(p / put-01~e.5 
	 :arg1 (t / thing~e.1 
		 :arg1-of~e.1 (r / recite-01~e.1 
			 :arg0 (p2 / person~e.3 
				 :arg0-of~e.2 (e / explore-01~e.3)))) 
	 :direction (d / down~e.6) 
	 :time~e.8 (f / first~e.7) 
	 :instrument~e.8 (p3 / pencil~e.9))

#
# ::snt one waits until the explorer has furnished proofs , before putting them down in ink .
#
#
(w / wait-01~e.1 
	 :arg1 (o / one~e.0) 
	 :time~e.5 (u / until~e.2 
		 :op1 (f / furnish-01~e.6 
			 :arg0 (p2 / person~e.4 
				 :arg0-of~e.4 (e / explore-01~e.4)) 
			 :arg1 (p / prove-01~e.7))) 
	 :time~e.5 (b / before~e.9 
		 :op1 (p3 / put-01~e.10 
			 :arg0 coref 
			 :arg1 (t / they~e.11) 
			 :direction (d / down~e.12) 
			 :instrument~e.13 (i / ink~e.14))))

#
# ::snt " well ? " said the geographer expectantly .
#
#
(s / say-01~e.4 
	 :arg0 (g / geographer~e.6) 
	 :arg1 (w / well~e.1) 
	 :manner (e / expect-01~e.7))

#
# ::snt " oh , where i live , " said the little prince , " it is not very interesting .
#
#
(s / say-01~e.8 
	 :arg0 (p / prince~e.11 
		 :mod (l / little~e.10)) 
	 :arg1 (a / and 
		 :op1 (o / oh~e.1) 
		 :op2 (i2 / interest-01~e.18 
			 :arg0 (l2 / location~e.3 
				 :location-of~e.3 (l3 / live-01~e.5 
					 :arg0 coref)) 
			 :arg1 coref 
			 :degree~e.14 (v / very~e.17) 
			 :polarity~e.16 -~e.16)))

#
# ::snt it is all so small .
#
#
(s3 / small~e.4 
	 :domain~e.0 (i / it~e.0 
		 :mod (a / all~e.2)) 
	 :degree (s / so~e.3))

#
# ::snt i have three volcanoes .
#
#
(h2 / have-03~e.1 
	 :arg0 (i / i~e.0) 
	 :arg1 (v / volcano~e.3 
		 :quant 3~e.2))

#
# ::snt two volcanoes are active and the other is extinct .
#
#
(a3 / and~e.4 
	 :op1 (a / activity-06~e.3 
		 :arg0 (v / volcano~e.1 
			 :quant 2~e.0)) 
	 :op2 (e / extinct~e.8 
		 :domain (o / other~e.6)))

#
# ::snt but one never knows . "
#
#
(c / contrast-01~e.0 
	 :arg2 (k / know-01~e.3 
		 :arg0 (o / one~e.1) 
		 :polarity~e.2 -~e.2 
		 :time (e / ever~e.2)))

#
# ::snt " one never knows , " said the geographer .
#
#
(s / say-01~e.6 
	 :arg0 (g / geographer~e.8) 
	 :arg1 (k / know-01~e.3 
		 :polarity~e.2 -~e.2 
		 :arg0 (o / one~e.1) 
		 :time (e / ever~e.2)))

#
# ::snt " i have also a flower . "
#
#
(h2 / have-03~e.2 
	 :arg0 (i / i~e.1) 
	 :arg1 (t / thing~e.5 
		 :arg1-of~e.5 (f / flower-01~e.5)) 
	 :mod (a2 / also~e.3))

#
# ::snt " we do not record flowers , " said the geographer .
#
#
(s / say-01~e.8 
	 :arg0 (g / geographer~e.10) 
	 :arg1 (r / record-01~e.4 
		 :arg0 (w / we~e.1) 
		 :arg1 (t / thing~e.5 
			 :arg1-of~e.5 (f / flower-01~e.5)) 
		 :polarity~e.3 -~e.2))

#
# ::snt " why is that ?
#
#
(t2 / that~e.3 
	 :arg1-of (c / cause-01~e.1 
		 :arg0 (a / amr-unknown~e.4)))

#
# ::snt the flower is the most beautiful thing on my planet ! "
#
#
(t3 / thing~e.6 
	 :arg1-of~e.5 (b / beautiful-02~e.5 
		 :degree (m2 / most~e.4)) 
	 :location~e.7 (p / planet~e.9 
		 :source-of~e.8 (i / i~e.8)) 
	 :domain~e.10 (t2 / thing~e.6 
		 :arg1-of~e.1 (f / flower-01~e.1)))

#
# ::snt " we do not record them , " said the geographer , " because they are ephemeral . "
#
#
(s / say-01~e.8 
	 :arg0 (g / geographer~e.10) 
	 :arg1 (r / record-01~e.4 
		 :polarity~e.3 -~e.3 
		 :arg0 (w / we~e.1) 
		 :arg1 (t / they~e.5) 
		 :arg1-of (c / cause-01~e.13 
			 :arg0 (e / ephemeral~e.16 
				 :domain coref))))

#
# ::snt " what does that mean - - ' ephemeral ' ? "
#
#
(m2 / mean-01~e.4 
	 :arg1 (e / ephemeral~e.8) 
	 :arg2 (a / amr-unknown~e.10))

#
# ::snt " geographies , " said the geographer , " are the books which , of all books , are most concerned with matters of consequence .
#
#
(s / say-01~e.4 
	 :arg0 (g / geographer~e.1) 
	 :arg1 (b / book~e.11 
		 :domain (g2 / geography~e.6) 
		 :arg1-of (i / include-91~e.14 
			 :arg2 (b2 / book~e.16 
				 :mod (a / all~e.15))) 
		 :arg0-of~e.21 (c / concern-02~e.20 
			 :arg1 (m2 / matter~e.22 
				 :mod (c2 / consequence~e.24)) 
			 :degree (m / most~e.19))))

#
# ::snt they never become old - fashioned .
#
#
(b / become-01~e.2 
	 :arg1 (t / they~e.0) 
	 :arg2 (f / fashion~e.5 
		 :mod (o / old~e.3)) 
	 :time (e / ever~e.1) 
	 :polarity~e.1 -~e.1)

#
# ::snt it is very rarely that a mountain changes its position .
#
#
(c / change-01~e.7 
	 :arg0 (m / mountain~e.6) 
	 :arg1 (l / location~e.8 
		 :arg2-of (p / position-01~e.9 
			 :arg1 coref)) 
	 :arg1-of~e.4 (r / rare-02~e.3 
		 :degree~e.0 (v / very~e.2)))

#
# ::snt it is very rarely that an ocean empties itself of its waters .
#
#
(e / empty-01~e.7 
	 :arg0 (o / ocean~e.6) 
	 :arg1 coref 
	 :arg2 (w / water~e.11 
		 :poss~e.8 coref) 
	 :arg1-of~e.4 (r / rare-02~e.3 
		 :degree~e.0 (v / very~e.2)))

#
# ::snt we write of eternal things . "
#
#
(w3 / write-01~e.1 
	 :arg0 (w2 / we~e.0) 
	 :arg1 (t / thing~e.4 
		 :mod (e / eternal~e.3)))

#
# ::snt " but extinct volcanoes may come to life again , " the little prince interrupted .
#
#
(i / interrupt-01~e.14 
	 :arg0 (p2 / prince~e.13 
		 :mod (l / little~e.12)) 
	 :arg2 (c / contrast-01~e.1 
		 :arg2 (p / possible-01~e.4 
			 :arg1 (c2 / come-04~e.5 
				 :arg1 (v / volcano~e.3 
					 :mod (e / extinct~e.2)) 
				 :arg2 (t / thing~e.6 
					 :arg1-of~e.7 (l3 / live-01~e.7)) 
				 :mod (a / again~e.8)))))

#
# ::snt " what does that mean - - ' ephemeral ' ? "
#
#
(m2 / mean-01~e.4 
	 :arg1 (e / ephemeral~e.8) 
	 :arg2 (a / amr-unknown~e.10))

#
# ::snt " whether volcanoes are extinct or alive , it comes to the same thing for us , " said the geographer .
#
#
(s / say-01~e.18 
	 :arg0 (g / geographer~e.20) 
	 :arg1 (s2 / same-01~e.12 
		 :arg1 (e2 / extinct~e.4 
			 :domain~e.8 (v / volcano~e.2)) 
		 :arg2 (l2 / live-01~e.6 
			 :arg0 coref) 
		 :arg3~e.14 (w / we~e.15)))

#
# ::snt " the thing that matters to us is the mountain .
#
#
(m3 / mountain~e.9 
	 :domain (t / thing~e.2 
		 :arg1-of~e.3 (m2 / matter-01~e.4 
			 :arg2 (w / we~e.6))))

#
# ::snt it does not change . "
#
#
(c2 / change-01~e.3 
	 :arg1 (i / it~e.0) 
	 :polarity~e.2 -~e.1)

#
# ::snt " but what does that mean - - ' ephemeral ' ? " repeated the little prince , who never in his life had let go of a question , once he had asked it .
#
#
(r / repeat-01~e.13 
	 :arg0 (p / prince~e.16 
		 :mod (l / little~e.15) 
		 :arg0-of~e.26 (l2 / let-01~e.24 
			 :polarity~e.19 -~e.19 
			 :arg1 (g / go-02~e.25 
				 :arg0 (t / thing~e.28 
					 :arg1-of~e.32 (q / question-01~e.28 
						 :arg0 coref))) 
			 :time~e.20 (o / once~e.30 
				 :op1 (a2 / ask-01~e.33 
					 :arg1 coref)) 
			 :time~e.20 (e2 / ever~e.19 
				 :duration~e.27 (t2 / thing~e.22 
					 :arg1-of~e.23 (l3 / live-01~e.22 
						 :arg0 coref))))) 
	 :arg1 (c / contrast-01~e.1 
		 :arg2 (m / mean-01~e.5 
			 :arg1 (e / ephemeral~e.9) 
			 :arg2 (a / amr-unknown~e.2))))

#
# ::snt " it means , ' which is in danger of speedy disappearance . ' "
#
#
(m2 / mean-01~e.2 
	 :arg1 (i / it~e.1) 
	 :arg2 (t / thing~e.8 
		 :arg1-of~e.8 (e / endanger-01~e.8 
			 :arg1-of (c / cause-01~e.9 
				 :arg0 (d / disappear-01~e.11 
					 :arg1-of (s / speedy-03~e.10))))))

#
# ::snt " is my flower in danger of speedy disappearance ? "
#
#
(e2 / endanger-01~e.5 
	 :arg1 (f2 / flower~e.3 
		 :poss~e.2 (i / i~e.2)) 
	 :arg1-of (c / cause-01~e.6 
		 :arg0 (d / disappear-01~e.8 
			 :arg1-of (s / speedy-03~e.7))))

#
# ::snt " certainly it is . "
#
#
(c2 / certain~e.1 
	 :domain~e.2 (i2 / it~e.2))

#
# ::snt " my flower is ephemeral , " the little prince said to himself , " and she has only four thorns to defend herself against the world .
#
#
(s / say-01~e.10 
	 :arg0 (p / prince~e.9 
		 :mod (l / little~e.8)) 
	 :arg1 (a / and~e.15 
		 :op1 (e / ephemeral~e.4 
			 :domain (f2 / flower~e.2 
				 :poss~e.1 coref)) 
		 :op2 (h / have-03~e.17 
			 :arg0 coref 
			 :arg1 (t2 / thorn~e.20 
				 :arg2-of~e.11 (d / defend-01~e.22 
					 :arg0 coref 
					 :arg1 coref 
					 :arg3~e.23 (w / world~e.26)) 
				 :quant (o / only~e.18 
					 :op1 4~e.19)))) 
	 :arg2 coref)

#
# ::snt and i have left her on my planet , all alone ! "
#
#
(a4 / and~e.0 
	 :op2 (l / leave-12~e.3 
		 :arg0 (i / i~e.1) 
		 :arg1 (s / she~e.4) 
		 :arg2 (p / planet~e.7 
			 :source-of~e.6 coref) 
		 :arg0-of (c / cause-01 
			 :arg1 (a2 / alone~e.10 
				 :degree (a3 / all~e.9) 
				 :domain~e.11 coref))))

#
# ::snt that was his first moment of regret .
#
#
(m / moment~e.4 
	 :domain (t / that~e.0) 
	 :mod (r / regret-01~e.6) 
	 :ord~e.3 (o / ordinal-entity~e.3 
		 :value 1) 
	 :poss~e.2 (h / he~e.2))

#
# ::snt but he took courage once more .
#
#
(c / contrast-01~e.0 
	 :arg2 (t / take-01~e.2 
		 :arg0 (h / he~e.1) 
		 :arg1 (c2 / courage~e.3) 
		 :mod (a / again~e.5 
			 :frequency~e.4 1)))

#
# ::snt " what place would you advise me to visit now ? " he asked .
#
#
(a / ask-01~e.13 
	 :arg0 (h / he~e.12) 
	 :arg1 (a2 / advise-01~e.5 
		 :arg0 (y / you~e.4) 
		 :arg1 coref 
		 :arg2 (v / visit-01~e.8 
			 :arg0 coref 
			 :arg1 (p / place~e.2 
				 :domain (a3 / amr-unknown~e.1)) 
			 :time (n / now~e.9))))

#
# ::snt " the planet earth , " replied the geographer .
#
#
(r / reply-01~e.6 
	 :arg0 (g / geographer~e.8) 
	 :arg2 (p2 / planet 
		 :wiki~e.2 earth~e.3 
		 :name (n / name 
			 :op1 coref)))

#
# ::snt " it has a good reputation . "
#
#
(h2 / have-03~e.2 
	 :arg0 (i / it~e.1) 
	 :arg1 (r / reputation~e.5 
		 :arg1-of (g / good-02~e.4)))

#
# ::snt and the little prince went away , thinking of his flower .
#
#
(a / and~e.0 
	 :op2 (a2 / and~e.0 
		 :op1 (g / go-02~e.4 
			 :arg0 (p / prince~e.3 
				 :mod (l / little~e.2)) 
			 :direction (a3 / away~e.5)) 
		 :op2 (t / think-01~e.7 
			 :arg0 coref 
			 :arg1 (f2 / flower~e.10 
				 :poss~e.9 coref))))

#
# ::snt chapter 16 .
#
#
(c / chapter~e.0 
	 :mod 16~e.1)

#
# ::snt so then the seventh planet was the earth .
#
#
(p2 / planet~e.4 
	 :ord (o / ordinal-entity 
		 :value 7~e.3) 
	 :domain (p / planet 
		 :wiki~e.1 earth~e.7 
		 :name (n / name 
			 :op1 coref)) 
	 :arg1-of (c / cause-01~e.0))

#
# ::snt the earth is not just an ordinary planet !
#
#
(p / planet~e.7 
	 :mod (o / ordinary~e.6 
		 :mod (j / just~e.4 
			 :polarity~e.3 -~e.3)) 
	 :domain (p2 / planet 
		 :name (n / name 
			 :op1 earth~e.1)))

#
# ::snt one can count , there 111 kings ( not forgetting , to be sure , the negro kings among them ) , 7000 geographers , 900,000 businessmen , 7,500,000 tipplers , 311,000,000 conceited men - - that is to say , about 2,000,000,000 grown - ups .
#
#
(p / possible-01~e.1 
	 :arg1 (a3 / and~e.25 
		 :op1 (c / count-01~e.2 
			 :arg0 (o / one~e.0) 
			 :arg1 (a / and~e.25 
				 :op1 (p5 / person~e.4 
					 :quant 111~e.5 
					 :arg0-of (h2 / have-org-role-91 
						 :arg2 (k / king~e.17))) 
				 :op2 (g2 / geographer~e.23 
					 :quant 7000~e.22) 
				 :op3 (b / businessman~e.26 
					 :quant 900000~e.18) 
				 :op4 (p4 / person 
					 :quant 7500000~e.28 
					 :arg0-of (t2 / tipple-01~e.29)) 
				 :op5 (m / man~e.33 
					 :quant 311000000~e.31 
					 :mod (c2 / conceited~e.32)) 
				 :mod (g3 / grown-up~e.43 
					 :quant (a2 / about~e.41 
						 :op1 2000000000~e.39))) 
			 :location~e.4 (t / there~e.4)) 
		 :op2 (f / forget-01~e.9 
			 :polarity~e.8 -~e.8 
			 :arg0 coref 
			 :arg1 (n / negro~e.16 
				 :arg1-of (i2 / include-91~e.19 
					 :arg2 coref) 
				 :arg0-of (h / have-org-role-91 
					 :arg2 (k2 / king~e.17))) 
			 :arg1-of (s / sure-02~e.13))))

#
# ::snt to give you an idea of the size of the earth , i will tell you that before the invention of electricity it was necessary to maintain , over the whole of the six continents , a veritable army of 462,511 lamplighters for the street lamps .
#
#
(t / tell-01~e.14 
	 :arg0 (i3 / i~e.12) 
	 :arg1 (o / obligate-01 
		 :arg2 (m / maintain-01~e.26 
			 :arg1 (a / army~e.38 
				 :consist-of~e.39 (p2 / person 
					 :quant 462511~e.40 
					 :arg0-of (l2 / light-04~e.24 
						 :arg1 (l3 / lamp~e.41))) 
				 :mod (v / veritable~e.37)) 
			 :location (o2 / over~e.28 
				 :op1 (c / continent~e.34 
					 :quant (w / whole~e.30 
						 :op1 6~e.33))) 
			 :purpose~e.42 (l / lamp~e.45 
				 :location (s2 / street~e.44))) 
		 :time (b / before~e.17 
			 :op1 (i2 / invent-01~e.19 
				 :arg1 (e / electricity~e.21)))) 
	 :arg2 (y / you~e.15) 
	 :purpose~e.0 (g / give-01~e.1 
		 :arg1 (i / idea~e.4 
			 :topic~e.5 (s / size-01~e.7 
				 :arg1 (p3 / planet 
					 :wiki~e.8 earth~e.10 
					 :name (n / name 
						 :op1 coref)))) 
		 :arg2 (y / you~e.15)))

#
# ::snt seen from a slight distance , that would make a splendid spectacle .
#
#
(m / make-01~e.8 
	 :arg0 (t / that~e.6) 
	 :arg1 (s / spectacle~e.11 
		 :mod (s2 / splendid~e.10)) 
	 :condition~e.1 (s3 / see-01~e.0 
		 :arg1 coref 
		 :manner (d / distance-01~e.4 
			 :arg2 coref 
			 :degree (s4 / slight~e.3))))

#
# ::snt the movements of this army would be regulated like those of the ballet in the opera .
#
#
(r / regulate-01~e.7 
	 :arg1 (m / move-01~e.1 
		 :arg0 (a / army~e.4 
			 :mod (t / this~e.3)) 
		 :arg1-of (r3 / resemble-01~e.8 
			 :arg2 (m2 / move-01~e.9 
				 :arg0 (b / ballet~e.12 
					 :subevent-of~e.13 (o / opera~e.15))))))

#
# ::snt first would come the turn of the lamplighters of new zealand and australia .
#
#
(c / come-03~e.2 
	 :arg1 (t / turn-01~e.4 
		 :arg1 (p / person 
			 :source (a / and~e.11 
				 :op1 (c2 / country 
					 :wiki~e.5 new_zealand~e.8 
					 :name (n / name 
						 :op1 new~e.9 
						 :op2 zealand~e.10)) 
				 :op2 (c3 / country 
					 :wiki~e.8 australia~e.12 
					 :name (n2 / name 
						 :op1 coref))) 
			 :arg0-of (l / light-04 
				 :arg1 (l2 / lamp~e.7)))) 
	 :time (f / first~e.0))

#
# ::snt having set their lamps alight , these would go off to sleep .
#
#
(g / go-02~e.8 
	 :arg0 (t / they~e.9) 
	 :purpose~e.10 (s / sleep-01~e.11 
		 :arg0 coref) 
	 :time (a / after~e.4 
		 :op1 (l2 / light-04~e.1 
			 :arg0 coref 
			 :arg1 (l / lamp~e.3 
				 :poss~e.2 coref))))

#
# ::snt next , the lamplighters of china and siberia would enter for their steps in the dance , and then they too would be waved back into the wings .
#
#
(a / and~e.6 
	 :op1 (e / enter-01~e.9 
		 :arg0 (p / person 
			 :arg0-of (l / light-04 
				 :arg1 (l2 / lamp~e.3)) 
			 :source~e.11 (a2 / and~e.17 
				 :op1 (c / country 
					 :wiki~e.4 china~e.5 
					 :name (n2 / name 
						 :op1 coref)) 
				 :op2 (c2 / country-region 
					 :wiki~e.4 siberia~e.7 
					 :name (n3 / name 
						 :op1 coref)))) 
		 :time~e.13 (n / next~e.0) 
		 :purpose~e.10 (s / step~e.12 
			 :poss~e.11 coref 
			 :part-of~e.11 (d2 / dance-01~e.15))) 
	 :op2 (w / wave-02~e.23 
		 :arg1 coref 
		 :arg2 (b / back~e.24 
			 :direction (i / into~e.25 
				 :op1 (w2 / wing~e.27))) 
		 :time (t / then~e.18) 
		 :degree (t2 / too~e.20)))

#
# ::snt after that would come the turn of the lamplighters of russia and the indies ; then those of africa and europe , then those of south america ; then those of south america ; then those of north america .
#
#
(c8 / come-03~e.3 
	 :arg1 (t2 / turn~e.5 
		 :poss (p / person~e.29 
			 :arg0-of~e.6 (l / light-04~e.29 
				 :arg1 (l2 / lamp~e.8)) 
			 :location (c3 / continent 
				 :wiki~e.34 north_america~e.37 
				 :name (n2 / name 
					 :op1 north~e.37 
					 :op2 america~e.38))) 
		 :time (a / after~e.0 
			 :op1 (t / turn~e.5 
				 :poss (p3 / person 
					 :arg0-of coref 
					 :location (c2 / continent 
						 :wiki~e.24 south_america~e.25 
						 :name (n / name 
							 :op1 south~e.25 
							 :op2 america~e.26))) 
				 :time (a6 / after~e.0 
					 :op1 (t3 / turn~e.5 
						 :poss (p2 / person~e.23 
							 :arg0-of coref 
							 :location (a4 / and~e.11 
								 :op1 (c4 / continent 
									 :wiki~e.17 africa~e.18 
									 :name (n5 / name 
										 :op1 coref)) 
								 :op2 (c5 / continent 
									 :wiki~e.22 europe~e.20 
									 :name (n6 / name 
										 :op1 coref)))) 
						 :time (a3 / after~e.0 
							 :op1 (t4 / turn~e.5 
								 :poss (p4 / person~e.16 
									 :arg0-of~e.9 coref 
									 :location (a2 / and~e.11 
										 :op1 (c / country 
											 :wiki~e.9 russia~e.10 
											 :name (n3 / name 
												 :op1 coref)) 
										 :op2 (w / world-region 
											 :wiki~e.9 indies~e.13 
											 :name (n4 / name 
												 :op1 coref))))))))))))

#
# ::snt and never would they make a mistake in the order of their entry upon the stage .
#
#
(a / and~e.0 
	 :op2 (m2 / mistake-02~e.6 
		 :polarity -~e.4 
		 :arg0 (t / they~e.3) 
		 :arg1 (o / order-03~e.9 
			 :arg1 (e / enter-01~e.13 
				 :arg0 coref 
				 :arg1 (s / stage~e.15))) 
		 :time~e.7 (e2 / ever~e.1)))

#
# ::snt it would be magnificent .
#
#
(m / magnificent~e.3 
	 :domain~e.0 (i / it~e.0))

#
# ::snt only the man who was in charge of the single lamp at the north pole , and his colleague who was responsible for the single lamp at the south pole - - only these two would live free from toil and care : they would be busy twice a year .
#
#
(l / live-01~e.36 
	 :arg0 (a2 / and~e.16 
		 :op1 (m / man~e.2 
			 :arg1-of (c4 / charge-05~e.6 
				 :arg2 (l2 / lamp~e.10 
					 :arg1-of (s / single-02~e.9) 
					 :location (w / world-region 
						 :wiki~e.7 north_pole~e.13 
						 :name (n3 / name 
							 :op1 north~e.13 
							 :op2 pole~e.14)))) 
			 :mod (o / only~e.0)) 
		 :op2 (c3 / colleague~e.18 
			 :poss~e.17 coref 
			 :arg0-of (r / responsible-03~e.21 
				 :arg1 (l4 / lamp~e.25 
					 :arg1-of (s2 / single-02~e.24)) 
				 :location (w2 / world-region 
					 :wiki~e.7 south_pole~e.28 
					 :name (n / name 
						 :op1 south~e.28 
						 :op2 pole~e.29)))) 
		 :mod (p / person 
			 :quant 2~e.34 
			 :mod (t4 / this~e.33) 
			 :mod (o2 / only~e.32))) 
	 :arg3-of~e.38 (f / free-04~e.37 
		 :arg1 coref 
		 :arg2 (a / and~e.40 
			 :op1 (t / toil-01~e.39) 
			 :op2 (c / care-01~e.41))) 
	 :arg1-of (c2 / cause-01~e.22 
		 :arg0 (b / busy-01~e.46 
			 :arg1 coref 
			 :frequency~e.43 (r2 / rate-entity-91~e.47 
				 :arg1 2 
				 :arg2 (t3 / temporal-quantity 
					 :quant 1~e.48 
					 :unit (y / year~e.49))))))

#
# ::snt chapter 17 .
#
#
(c / chapter~e.0 
	 :mod 17~e.1)

#
# ::snt when one wishes to play the wit , he sometimes wanders a little from the truth .
#
#
(w / wander-01~e.10 
	 :arg0 (o / one~e.1) 
	 :arg1 (f / from~e.13 
		 :op1 (t / truth~e.15)) 
	 :time~e.0 (w2 / wish-01~e.2 
		 :arg0 (o / one~e.1) 
		 :arg1 (p / play-02~e.4 
			 :arg0 coref 
			 :arg1 (w3 / wit~e.6))) 
	 :degree (l / little~e.12) 
	 :frequency~e.8 (s / sometimes~e.9))

#
# ::snt i have not been altogether honest in what i have told you about the lamplighters .
#
#
(h / honest-01~e.5 
	 :arg0 (i / i~e.0) 
	 :arg1 (t2 / thing~e.7 
		 :arg1-of~e.10 (t / tell-01~e.10 
			 :arg0 coref 
			 :arg2 (y / you~e.11) 
			 :topic~e.12 (p2 / person~e.8 
				 :arg0-of~e.9 (l / light-04~e.9 
					 :arg1 (l2 / lamp~e.14))))) 
	 :degree (a / altogether~e.4 
		 :polarity~e.2 -~e.2))

#
# ::snt and i realize that i run the risk of giving a false idea of our planet to those who do not know it .
#
#
(a / and~e.0 
	 :op2 (r / realize-01~e.2 
		 :arg0 (i / i~e.1) 
		 :arg1 (r2 / risk-01~e.7 
			 :arg0 coref 
			 :arg2 (g / give-01~e.5 
				 :arg0 coref 
				 :arg1 (i2 / idea~e.12 
					 :mod (f / false~e.11) 
					 :topic~e.9 (p2 / planet~e.15 
						 :source~e.14 (w / we~e.17))) 
				 :arg2 (p / person~e.21 
					 :arg0-of~e.21 (k / know-02~e.21 
						 :polarity~e.20 -~e.19 
						 :arg1 coref))))))

#
# ::snt men occupy a very small place upon the earth .
#
#
(o / occupy-01~e.1 
	 :arg0 (m / man~e.0) 
	 :arg1 (p2 / place~e.5 
		 :mod (s / small~e.4 
			 :degree (v / very~e.3)) 
		 :location (p / planet 
			 :wiki~e.6 earth~e.8 
			 :name (n / name 
				 :op1 coref))))

#
# ::snt if the two billion inhabitants who people its surface were all to stand upright and somewhat crowded together , as they do for some big public assembly , they could easily be put into one public square twenty miles long and twenty miles wide .
#
#
(p / possible-01~e.29 
	 :arg1 (p2 / put-01~e.32 
		 :arg1 (p3 / person 
			 :quant 2000000000~e.3 
			 :arg0-of (i / inhabit-01~e.4) 
			 :arg2-of~e.11 (p4 / people-01~e.6 
				 :arg1 (s2 / surface~e.8 
					 :poss~e.7 (i2 / it~e.7))) 
			 :mod (a / all~e.10)) 
		 :arg2 (s5 / square~e.36 
			 :arg1-of (p6 / public-02~e.35) 
			 :arg1-of (l / long-03~e.39 
				 :arg2 (d2 / distance-quantity 
					 :quant 20~e.41 
					 :unit (m / mile~e.42))) 
			 :arg1-of (w / wide-02~e.43 
				 :mod (d3 / distance-quantity 
					 :quant 20~e.37 
					 :unit (m2 / mile~e.38)))) 
		 :arg1-of (e / easy-05~e.30)) 
	 :condition~e.0 (s / stand-01~e.2 
		 :arg0 (p3 / person 
			 :quant 2000000000~e.3 
			 :arg0-of (i / inhabit-01~e.4) 
			 :arg2-of~e.11 (p4 / people-01~e.6 
				 :arg1 (s2 / surface~e.8 
					 :poss~e.7 (i2 / it~e.7))) 
			 :mod (a / all~e.10)) 
		 :arg1-of (r / resemble-01~e.19 
			 :arg2 (d / do-02~e.21 
				 :arg0 coref 
				 :purpose~e.22 (a3 / assemble-02~e.26 
					 :mod (p5 / public~e.25) 
					 :mod (b / big~e.24) 
					 :mod (s4 / some~e.23)))) 
		 :manner (a2 / and~e.14 
			 :op1 (u / upright~e.13) 
			 :op2 (c / crowd-02~e.16 
				 :manner (t / together~e.17) 
				 :degree (s3 / somewhat~e.15)))))

#
# ::snt all humanity could be piled up on a small pacific islet .
#
#
(p / possible-01~e.2 
	 :arg1 (p2 / pile-01~e.4 
		 :arg1 (h / humanity~e.1 
			 :mod (a / all~e.0)) 
		 :arg2 (i / islet~e.10 
			 :mod (s / small~e.8) 
			 :location~e.6 (o2 / ocean 
				 :wiki~e.5 pacific_ocean~e.9 
				 :name (n / name 
					 :op1 pacific~e.9)))))

#
# ::snt the grown - ups , to be sure , will not believe you when you tell them that .
#
#
(b / believe-01~e.11 
	 :polarity~e.10 -~e.10 
	 :arg0 (g2 / grown-up~e.1) 
	 :arg1 (y / you~e.12) 
	 :time~e.13 (t / tell-01~e.15 
		 :arg0 coref 
		 :arg1 (t2 / that~e.17) 
		 :arg2 coref) 
	 :arg1-of (s / sure-02~e.7))

#
# ::snt they imagine that they fill a great deal of space .
#
#
(i / imagine-01~e.1 
	 :arg0 (t / they~e.0) 
	 :arg1 (f / fill-01~e.4 
		 :arg1 (s / space~e.9 
			 :quant (d / deal~e.7 
				 :mod (g / great~e.6))) 
		 :arg2 coref))

#
# ::snt they fancy themselves as important as the baobabs .
#
#
(f / fancy-01~e.1 
	 :arg0 (t / they~e.2) 
	 :arg1 (i / important~e.4 
		 :domain coref 
		 :degree (e / equal~e.3) 
		 :compared-to~e.5 (b / baobab~e.7)))

#
# ::snt you should advise them , then , to make their own calculations .
#
#
(r / recommend-01~e.1 
	 :arg1 (a / advise-01~e.2 
		 :arg0 (y / you~e.0) 
		 :arg1 (t / they~e.3) 
		 :arg2 (c / calculate-01~e.11 
			 :arg0 coref)) 
	 :arg2 coref)

#
# ::snt they adore figures , and that will please them .
#
#
(a / and~e.4 
	 :op1 (a2 / adore-01~e.1 
		 :arg0 (t / they~e.0) 
		 :arg1 (f / figure~e.2)) 
	 :op2 (p / please-01~e.7 
		 :arg1 coref 
		 :arg2 (t2 / that~e.5)))

#
# ::snt but do not waste your time on this extra task .
#
#
(c / contrast-01~e.0 
	 :arg2 (w / waste-01~e.3 
		 :polarity~e.2 -~e.2 
		 :arg0 (y / you~e.4) 
		 :arg1 (t / time~e.5 
			 :poss~e.4 coref) 
		 :arg2 (t2 / task-01~e.9 
			 :mod (e / extra~e.8) 
			 :mod (t3 / this~e.7))))

#
# ::snt it is unnecessary .
#
#
(n / need-01~e.2 
	 :arg1 (i / it~e.0) 
	 :polarity -~e.2)

#
# ::snt you have , i know , confidence in me .
#
#
(t / trust-01~e.6 
	 :arg0 (y / you~e.0) 
	 :arg2 (i / i~e.8) 
	 :arg1-of (k / know-01~e.4 
		 :arg0 coref))

#
# ::snt when the little prince arrived on the earth , he was very much surprised not to see any people .
#
#
(s / surprise-01~e.13 
	 :arg0 (s2 / see-01~e.16 
		 :polarity~e.14 -~e.14 
		 :arg0 (p / prince~e.3 
			 :mod (l / little~e.2)) 
		 :arg1 (p2 / person~e.18 
			 :quant (a / any~e.17))) 
	 :arg1 (p / prince~e.3 
		 :mod (l / little~e.2)) 
	 :degree (m / much~e.12 
		 :degree (v / very~e.11)) 
	 :time~e.0 (a2 / arrive-01~e.4 
		 :arg1 coref 
		 :arg4~e.5 (p3 / planet 
			 :name (n / name 
				 :op1 earth~e.7))))

#
# ::snt he was beginning to be afraid he had come to the wrong planet , when a coil of gold , the color of the moonlight , flashed across the sand .
#
#
(b / begin-01~e.2 
	 :arg0 (h / he~e.0) 
	 :arg1 (f / fear-01~e.5 
		 :arg0 coref 
		 :arg1 (c / come-01~e.8 
			 :arg1 coref 
			 :arg4~e.6 (p / planet~e.12 
				 :arg2-of~e.9 (w / wrong-04~e.11)))) 
	 :time~e.14 (f2 / flash-02~e.26 
		 :arg1 (c2 / coil~e.16 
			 :mod (g / gold~e.18 
				 :mod (c3 / color~e.21 
					 :poss (l / light-04 
						 :arg0 (m / moon~e.24))))) 
		 :path (a / across~e.27 
			 :op1 (s / sand~e.29))))

#
# ::snt " good evening , " said the little prince courteously .
#
#
(s / say-01~e.5 
	 :arg0 (p / prince~e.8 
		 :mod (l / little~e.7)) 
	 :arg1 (e2 / evening~e.2 
		 :arg1-of (g / good-02~e.1)) 
	 :manner (c / courteous~e.9))

#
# ::snt " good evening , " said the snake .
#
#
(s / say-01~e.5 
	 :arg0 (s2 / snake~e.7) 
	 :arg1 (d / date-entity 
		 :dayperiod~e.2 (e / evening~e.2) 
		 :arg1-of (g / good-02~e.1)))

#
# ::snt " what planet is this on which i have come down ? " asked the little prince .
#
#
(a / ask-01~e.13 
	 :arg0 (p / prince~e.16 
		 :mod (l / little~e.15)) 
	 :arg1 (p2 / planet~e.2 
		 :arg4-of~e.4 (c / come-01~e.9 
			 :arg1 coref 
			 :direction~e.5 (d / down~e.10)) 
		 :domain (a2 / amr-unknown~e.1)))

#
# ::snt " this is the earth ; this is africa , " the snake answered .
#
#
(a / answer-01~e.13 
	 :arg0 (s / snake~e.12) 
	 :arg2 (a2 / and 
		 :op1 (p / planet 
			 :name (n / name 
				 :op1 earth~e.4) 
			 :domain (t / this~e.1)) 
		 :op2 (c / continent 
			 :name (n2 / name 
				 :op1 africa~e.8) 
			 :domain (t2 / this~e.6))))

#
# ::snt " ah !
#
#
(a / ah~e.1 
	 :mode~e.2 expressive~e.2)

#
# ::snt then there are no people on the earth ? "
#
#
(p / person~e.1 
	 :polarity~e.3 -~e.3 
	 :location~e.5 (p2 / planet 
		 :wiki~e.0 earth~e.7 
		 :name (n2 / name 
			 :op1 coref)))

#
# ::snt " this is the desert .
#
#
(d2 / desert~e.4 
	 :domain (t / this~e.1))

#
# ::snt there are no people in the desert .
#
#
(p / person~e.3 
	 :polarity~e.2 -~e.2 
	 :location~e.4 (d / desert~e.6))

#
# ::snt the earth is large , " said the snake .
#
#
(s / say-01~e.6 
	 :arg0 (s2 / snake~e.8) 
	 :arg1 (l / large~e.3 
		 :domain (p / planet 
			 :name (n / name 
				 :op1 earth~e.1))))

#
# ::snt the little prince sat down on a stone , and raised his eyes toward the sky .
#
#
(a / and~e.9 
	 :op1 (s / sit-down-02~e.3 
		 :arg1 (p / prince~e.2 
			 :mod (l / little~e.1)) 
		 :arg2 (s2 / stone~e.7) 
		 :direction~e.5 (d / down~e.4)) 
	 :op2 (r / raise-01~e.10 
		 :arg0 coref 
		 :arg1 (e / eye~e.12 
			 :part-of~e.11 coref) 
		 :direction~e.13 (s3 / sky~e.15)))

#
# ::snt " i wonder , " he said , " whether the stars are set alight in heaven so that one day each one of us may find his own again ...
#
#
(s / say-01~e.6 
	 :arg0 (h / he~e.5) 
	 :arg1 (w2 / wonder-01~e.2 
		 :arg0 coref 
		 :arg1 (l / light-04~e.13 
			 :arg1 (s2 / star~e.11) 
			 :location~e.15 (h2 / heaven~e.16) 
			 :purpose~e.17 (f / find-01~e.26 
				 :arg0 (w / we~e.24 
					 :mod (e / each~e.21)) 
				 :arg1 (s3 / star~e.11 
					 :poss~e.27 coref) 
				 :time (d / day~e.20 
					 :mod (o / one~e.19)) 
				 :mod (a / again~e.29) 
				 :arg1-of (p / possible-01~e.14)))))

#
# ::snt look at my planet .
#
#
(l2 / look-01~e.0 
	 :arg0 (y / you) 
	 :arg1 (p / planet~e.3 
		 :source~e.2 (i / i~e.2)))

#
# ::snt it is right there above us .
#
#
(b2 / be-located-at-91~e.0 
	 :arg1 (i / it~e.0) 
	 :arg2 (t / there~e.3 
		 :mod (r / right~e.2) 
		 :direction (a / above~e.4 
			 :op1 (w / we~e.5))))

#
# ::snt but how far away it is ! "
#
#
(c2 / contrast-01~e.0 
	 :arg2 (f / far~e.2 
		 :direction~e.1 (a / away~e.3) 
		 :domain~e.4 (i / it~e.4) 
		 :degree (s / so~e.6)))

#
# ::snt " it is beautiful , " the snake said .
#
#
(s / say-01~e.8 
	 :arg0 (s2 / snake~e.7) 
	 :arg1 (b / beautiful-02~e.3 
		 :arg1 (i / it~e.1)))

#
# ::snt " what has brought you here ? "
#
#
(b2 / bring-01~e.3 
	 :arg0 (a / amr-unknown~e.6) 
	 :arg1 (y / you~e.4) 
	 :arg2 (h / here~e.5))

#
# ::snt " i have been having some trouble with a flower , " said the little prince .
#
#
(s / say-01~e.12 
	 :arg0 (p / prince~e.15 
		 :mod (l / little~e.14)) 
	 :arg1 (h / have-03~e.2 
		 :arg0 coref 
		 :arg1 (t / trouble-01~e.6 
			 :arg0 (f2 / flower~e.9) 
			 :mod (s2 / some~e.5))))

#
# ::snt " ah ! " said the snake .
#
#
(s / say-01~e.4 
	 :arg0 (s2 / snake~e.6) 
	 :arg1 (a / ah-01~e.1))

#
# ::snt and they were both silent .
#
#
(a / and~e.0 
	 :op2 (s / silent~e.4 
		 :domain (t / they~e.1 
			 :mod (b / both~e.3))))

#
# ::snt " where are the men ? " the little prince at last took up the conversation again .
#
#
(a3 / and~e.13 
	 :op1 (t / take-up-31~e.12 
		 :arg0 (p / prince~e.9 
			 :mod (l / little~e.8)) 
		 :arg1 (c / converse-01~e.15) 
		 :mod (a / again~e.16) 
		 :time~e.10 (a2 / at-last~e.11)) 
	 :op2 (b2 / be-located-at-91~e.1 
		 :arg1 (m / man~e.4) 
		 :arg2 (a4 / amr-unknown~e.5)))

#
# ::snt " it is a little lonely in the desert ... "
#
#
(l2 / lonely~e.5 
	 :domain~e.1 (b / be-located-at-91~e.6 
		 :arg2 (d / desert~e.8)) 
	 :degree (l / little~e.4))

#
# ::snt " it is also lonely among men , " the snake said .
#
#
(s / say-01~e.11 
	 :arg0 (s2 / snake~e.10) 
	 :arg1 (l / lonely~e.4 
		 :domain~e.1 (b / be-located-at-91~e.1 
			 :arg2 (a3 / among~e.5 
				 :op1 (m / man~e.6))) 
		 :mod (a2 / also~e.3)))

#
# ::snt the little prince gazed at him for a long time .
#
#
(g / gaze-01~e.3 
	 :arg0 (p / prince~e.2 
		 :mod (l / little~e.1)) 
	 :arg1 (h / he~e.5) 
	 :arg1-of~e.9 (l2 / long-03~e.8))

#
# ::snt " you are a funny animal , " he said at last .
#
#
(s / say-01~e.9 
	 :arg0 (h / he~e.8) 
	 :arg1 (a2 / animal~e.5 
		 :mod (f / funny~e.4) 
		 :domain~e.3 (y / you~e.1)) 
	 :time~e.10 (a / at-last~e.11))

#
# ::snt " you are no thicker than a finger ... "
#
#
(t / thick-03~e.4 
	 :arg1 (y / you~e.1) 
	 :degree (m / more 
		 :polarity~e.3 -~e.3) 
	 :compared-to~e.5 (f / finger~e.7))

#
# ::snt " but i am more powerful than the finger of a king , " said the snake .
#
#
(s / say-01~e.14 
	 :arg0 (s2 / snake~e.16) 
	 :arg1 (c2 / contrast-01~e.1 
		 :arg2 (p / powerful-02~e.5 
			 :arg1 (i / i~e.2) 
			 :degree (m / more~e.4) 
			 :compared-to~e.6 (f / finger~e.8 
				 :part-of~e.9 (k / king~e.11)))))

#
# ::snt the little prince smiled .
#
#
(s / smile-01~e.3 
	 :arg0 (p / prince~e.2 
		 :mod (l / little~e.1)))

#
# ::snt " you are not very powerful .
#
#
(p / powerful-02~e.5 
	 :arg1 (y / you~e.1) 
	 :degree (v / very~e.4 
		 :polarity~e.3 -~e.3))

#
# ::snt you have n't even any feet .
#
#
(h / have-03~e.1 
	 :polarity~e.2 - 
	 :arg0 (y / you~e.0) 
	 :arg1 (f / foot~e.5 
		 :quant (a / any~e.4)) 
	 :mod (e / even~e.3))

#
# ::snt you can not even travel ... "
#
#
(p / possible-01~e.1 
	 :polarity~e.2 -~e.2 
	 :arg1 (t / travel-01~e.4 
		 :arg0 (y / you~e.0)) 
	 :mod (e / even~e.3))

#
# ::snt " i can carry you farther than any ship could take you , " said the snake .
#
#
(s / say-01~e.14 
	 :arg0 (s2 / snake~e.16) 
	 :arg1 (p / possible-01~e.9 
		 :arg1 (c / carry-01~e.3 
			 :arg0 coref 
			 :arg1 (y / you~e.4) 
			 :extent~e.10 (f / far~e.5 
				 :degree (m / more~e.5) 
				 :compared-to~e.6 (t / take-01~e.10 
					 :arg0 (s3 / ship~e.8 
						 :mod (a / any~e.7)) 
					 :arg1 coref)))))

#
# ::snt he twined himself around the little prince 's ankle , like a golden bracelet .
#
#
(t / twine-01~e.1 
	 :arg0 (h / he~e.0) 
	 :arg1 coref 
	 :arg2 (a / ankle~e.8 
		 :part-of~e.7 (p / prince~e.6 
			 :mod (l / little~e.5))) 
	 :manner (r / resemble-01~e.10 
		 :arg2 (b / bracelet~e.13 
			 :consist-of~e.3 (g / gold~e.12))))

#
# ::snt " whomever i touch , i send back to the earth from whence he came , " the snake spoke again .
#
#
(s / speak-01~e.19 
	 :arg0 (s2 / snake~e.18) 
	 :arg1 (s3 / send-01~e.6 
		 :arg0 coref 
		 :arg1 (p / person~e.1 
			 :arg1-of~e.3 (t / touch-01~e.3 
				 :arg0 coref) 
			 :mod (a2 / any~e.2)) 
		 :arg2 (b / back~e.7 
			 :op1 (e / earth~e.10 
				 :arg3-of~e.11 (c / come-01~e.14 
					 :arg1 coref)))) 
	 :mod (a / again~e.20))

#
# ::snt " but you are innocent and true , and you come from a star ... "
#
#
(c / contrast-01~e.1 
	 :arg2 (a / and~e.8 
		 :op1 (a2 / and~e.5 
			 :op1 (i / innocent-01~e.4 
				 :arg1 (y / you~e.2)) 
			 :op2 (t / true-01~e.6 
				 :arg1 coref)) 
		 :op2 (c2 / come-01~e.10 
			 :arg1 coref 
			 :arg3~e.11 (s2 / star~e.13))))

#
# ::snt the little prince made no reply .
#
#
(r / reply-01~e.5 
	 :arg0 (p / prince~e.2 
		 :mod (l / little~e.1)) 
	 :polarity~e.4 -~e.3)

#
# ::snt " you move me to pity - - you are so weak on this earth made of granite , " the snake said .
#
#
(s / say-01~e.22 
	 :arg0 (s2 / snake~e.21) 
	 :arg1 (p3 / pity-01~e.5 
		 :arg0 coref 
		 :arg1 (y / you~e.1) 
		 :arg1-of (c / cause-01 
			 :arg0 (w / weak-02~e.11 
				 :arg1 coref 
				 :degree (s3 / so~e.10) 
				 :location~e.12 (p2 / planet 
					 :wiki~e.16 earth~e.14 
					 :name (n / name 
						 :op1 coref) 
					 :consist-of~e.15 (g / granite~e.17) 
					 :mod (t / this~e.13))))))

#
# ::snt " i can help you , some day , if you grow too homesick for your own planet .
#
#
(p / possible-01~e.2 
	 :arg1 (h / help-01~e.3 
		 :arg0 (i / i~e.1) 
		 :arg1 (y / you~e.4) 
		 :time (d / day~e.7 
			 :mod (s / some~e.6))) 
	 :condition~e.9 (g / grow-02~e.11 
		 :arg1 coref 
		 :arg2 (h2 / homesick~e.13 
			 :topic~e.16 (p2 / planet~e.17 
				 :source-of~e.15 coref) 
			 :degree (t / too~e.12) 
			 :domain coref)))

#
# ::snt i can - - "
#
#
(p / possible-01~e.1 
	 :arg1 (d / do-02 
		 :arg0 (i / i~e.0)))

#
# ::snt " oh !
#
#
(o / oh~e.1 
	 :mode~e.2 expressive~e.2)

#
# ::snt i understand you very well , " said the little prince .
#
#
(s / say-01~e.7 
	 :arg0 (p / prince~e.10 
		 :mod (l / little~e.9)) 
	 :arg1 (u / understand-01~e.1 
		 :arg0 coref 
		 :arg1 (y / you~e.2) 
		 :mod (w / well~e.4 
			 :degree (v / very~e.3))))

#
# ::snt " but why do you always speak in riddles ? "
#
#
(c / contrast-01~e.1 
	 :arg2 (s2 / speak-01~e.6 
		 :arg0 (y / you~e.4) 
		 :arg1 (r / riddle~e.8) 
		 :time~e.7 (a / always~e.5) 
		 :purpose~e.2 (a2 / amr-unknown~e.9)))

#
# ::snt " i solve them all , " said the snake .
#
#
(s / say-01~e.7 
	 :arg0 (s2 / snake~e.9) 
	 :arg1 (s3 / solve-01~e.2 
		 :arg0 coref 
		 :arg1 (t / they~e.3 
			 :mod (a / all~e.4))))

#
# ::snt and they were both silent .
#
#
(a / and~e.0 
	 :op2 (s / silent~e.4 
		 :domain (t / they~e.1 
			 :mod (b / both~e.3))))

#
# ::snt chapter 18 .
#
#
(c / chapter~e.0 
	 :mod 18~e.1)

#
# ::snt the little prince crossed the desert and met with only one flower .
#
#
(a / and~e.6 
	 :op1 (c / cross-02~e.3 
		 :arg0 (p / prince~e.2 
			 :mod (l / little~e.1)) 
		 :arg1 (d / desert~e.5)) 
	 :op2 (m / meet-03~e.7 
		 :arg0 coref 
		 :arg1 (f / flower~e.11 
			 :quant 1~e.10) 
		 :mod (o2 / only~e.9)))

#
# ::snt it was a flower with three petals , a flower of no account at all .
#
#
(f2 / flower~e.3 
	 :arg0-of (h / have-03~e.2 
		 :arg1 (p / petal~e.6 
			 :quant 3~e.5)) 
	 :mod (a2 / account~e.12 
		 :polarity~e.11 -~e.11) 
	 :domain~e.0 (i / it~e.0))

#
# ::snt " good morning , " said the little prince .
#
#
(s / say-01~e.5 
	 :arg0 (p / prince~e.8 
		 :mod (l / little~e.7)) 
	 :arg1 (m2 / morning~e.2 
		 :arg1-of (g / good-02~e.1)))

#
# ::snt " good morning , " said the flower .
#
#
(s / say-01~e.5 
	 :arg0 (f / flower-01~e.7) 
	 :arg1 (m2 / morning~e.2 
		 :arg1-of (g / good-02~e.1)))

#
# ::snt " where are the men ? " the little prince asked , politely .
#
#
(a / ask-01~e.10 
	 :arg0 (p / prince~e.9 
		 :mod (l / little~e.8)) 
	 :arg1 (b / be-located-at-91~e.1 
		 :arg1 (m / man~e.4) 
		 :arg2 (a2 / amr-unknown~e.5)) 
	 :manner (p3 / polite-01~e.12))

#
# ::snt the flower had once seen a caravan passing .
#
#
(s / see-01~e.4 
	 :frequency~e.3 1~e.5 
	 :arg0 (f / flower~e.1) 
	 :arg1 (p / pass-02~e.7 
		 :arg0 (c / caravan-01~e.6)))

#
# ::snt " men ? " she echoed .
#
#
(e / echo-01~e.5 
	 :arg0 (s / she~e.4) 
	 :arg1 (m / man~e.1))

#
# ::snt " i think there are six or seven of them in existence .
#
#
(t / think-01~e.2 
	 :arg0 (i / i~e.1) 
	 :arg1 (e / exist-01~e.11 
		 :arg1 (t2 / they~e.9 
			 :quant (o / or~e.6 
				 :op1 6~e.5 
				 :op2 7~e.7))))

#
# ::snt i saw them , several years ago .
#
#
(s / see-01~e.1 
	 :arg0 (i / i~e.0) 
	 :arg1 (t / they~e.2) 
	 :time (b / before~e.6 
		 :op1 (n / now~e.5) 
		 :quant (s2 / several~e.4 
			 :op1 (t2 / temporal-quantity 
				 :quant 1 
				 :unit (y / year~e.5)))))

#
# ::snt but one never knows where to find them .
#
#
(c / contrast-01~e.0 
	 :arg2 (k / know-01~e.3 
		 :arg0 (p / person~e.1 
			 :arg1-of~e.1 (i / include-91~e.1 
				 :arg2 (t2 / they~e.7))) 
		 :arg1 (f / find-01~e.6 
			 :arg0 coref 
			 :arg1 (t / they~e.7) 
			 :location~e.4 (a / amr-unknown~e.4)) 
		 :time (e / ever~e.2 
			 :polarity~e.2 -~e.2)))

#
# ::snt the wind blows them away .
#
#
(b / blow-01~e.2 
	 :arg0 (w / wind~e.1) 
	 :arg1 (t / they~e.3) 
	 :direction (a / away~e.4))

#
# ::snt they have no roots , and that makes their life very difficult . "
#
#
(a / and~e.5 
	 :op1 (h / have-03~e.1 
		 :polarity~e.2 -~e.2 
		 :arg0 (t / they~e.0) 
		 :arg1 (r / root~e.3)) 
	 :op2 (m / make-02~e.7 
		 :arg0 coref 
		 :arg1 (d / difficult~e.11 
			 :domain (t2 / thing~e.9 
				 :arg1-of~e.9 (l / live-01~e.9) 
				 :poss~e.8 coref) 
			 :degree (v / very~e.10))))

#
# ::snt " goodbye , " said the little prince .
#
#
(s / say-01~e.4 
	 :arg0 (p / prince~e.7 
		 :mod (l / little~e.6)) 
	 :arg1 (g / goodbye~e.1))

#
# ::snt " goodbye , " said the flower .
#
#
(s / say-01~e.4 
	 :arg0 (f / flower~e.6) 
	 :arg1 (g / goodbye~e.1))

#
# ::snt chapter 19 .
#
#
(c / chapter~e.0 
	 :mod 19~e.1)

#
# ::snt after that , the little prince climbed a high mountain .
#
#
(c / climb-01~e.6 
	 :arg0 (p / prince~e.5 
		 :mod (l / little~e.4)) 
	 :arg1 (m / mountain~e.9 
		 :arg1-of (h / high-02~e.8)) 
	 :time (a / after~e.0 
		 :op1 (t / that~e.1)))

#
# ::snt the only mountains he had ever known were the three volcanoes , which came up to his knees .
#
#
(v / volcano~e.10 
	 :quant 3~e.9 
	 :domain (m / mountain~e.2 
		 :mod (o / only~e.1) 
		 :arg1-of~e.4 (k / know-01~e.6 
			 :arg0 (h / he~e.3) 
			 :time (e / ever~e.5))) 
	 :arg1-of (c / come-04~e.13 
		 :arg2 (u / up-to~e.14 
			 :op1 (k2 / knee~e.17 
				 :part-of~e.16 coref))))

#
# ::snt and he used the extinct volcano as a footstool .
#
#
(a / and~e.0 
	 :op2 (u / use-01~e.2 
		 :arg0 (h / he~e.1) 
		 :arg1 (v / volcano~e.5 
			 :mod (e / extinct~e.4)) 
		 :arg2 (f / footstool~e.8)))

#
# ::snt " from a mountain as high as this one , " he said to himself , " i shall be able to see the whole planet at one glance , and all the people ... "
#
#
(s / say-01~e.12 
	 :arg0 (h / he~e.11) 
	 :arg1 (p / possible-01~e.20 
		 :arg1 (s2 / see-01~e.22 
			 :arg0 coref 
			 :arg1 (a / and~e.30 
				 :op1 (p2 / planet~e.25 
					 :extent~e.26 (w / whole~e.24)) 
				 :op2 (p3 / person~e.33 
					 :mod (a3 / all~e.31))) 
			 :source~e.1 (m / mountain~e.3 
				 :arg1-of (h2 / high-02~e.5 
					 :degree (e / equal~e.4) 
					 :compared-to~e.6 (m2 / mountain~e.3 
						 :mod (t / this~e.7)))) 
			 :manner (g / glance-01~e.28 
				 :quant 1~e.27))) 
	 :arg2 coref)

#
# ::snt but he saw nothing , save peaks of rock that were sharpened like needles .
#
#
(c / contrast-01~e.0 
	 :arg2 (s / see-01~e.2 
		 :arg0 (h / he~e.1) 
		 :arg1 (n / nothing~e.3 
			 :arg2-of (e / except-01~e.5 
				 :arg1 (p / peak~e.6 
					 :consist-of~e.7 (r / rock~e.8) 
					 :arg1-of~e.9 (s2 / sharpen-01~e.11 
						 :manner (r2 / resemble-01~e.12 
							 :arg1 coref 
							 :arg2 (n2 / needle~e.13))))))))

#
# ::snt " good morning , " he said courteously .
#
#
(s / say-01~e.6 
	 :arg0 (h / he~e.5) 
	 :arg1 (m / morning~e.2 
		 :arg1-of (g / good-02~e.1)) 
	 :manner (c / courtesy~e.7))

#
# ::snt " good morning - - good morning - - good morning , " answered the echo .
#
#
(a / answer-01~e.13 
	 :arg0 (e / echo-01~e.15) 
	 :arg1 (m2 / morning~e.10 
		 :arg1-of (g / good-02~e.9)))

#
# ::snt " who are you ? " said the little prince .
#
#
(s / say-01~e.6 
	 :arg0 (p / prince~e.9 
		 :mod (l / little~e.8)) 
	 :arg2 (y / you~e.3 
		 :domain (a / amr-unknown~e.4)))

#
# ::snt " who are you - - who are you - - who are you ? " answered the echo .
#
#
(a / answer-01~e.16 
	 :arg0 (e / echo-01~e.18) 
	 :arg2 (y / you~e.8 
		 :domain (a2 / amr-unknown~e.14)))

#
# ::snt " be my friends .
#
#
(h / have-rel-role-91~e.2 
	 :arg0 (y / you) 
	 :arg1 (i / i~e.2) 
	 :arg2 (f / friend~e.3))

#
# ::snt i am all alone , " he said .
#
#
(s / say-01~e.7 
	 :arg0 (h / he~e.6) 
	 :arg1 (a / alone~e.3 
		 :degree (a2 / all~e.2) 
		 :domain coref))

#
# ::snt " i am all alone - - all alone - - all alone , " answered the echo .
#
#
(a / answer-01~e.15 
	 :arg0 (e / echo-01~e.17) 
	 :arg2 (a2 / alone~e.12 
		 :domain~e.11 (i / i~e.1) 
		 :mod (a3 / all~e.7)))

#
# ::snt " what a queer planet ! " he thought .
#
#
(t / think-01~e.8 
	 :arg0 (h / he~e.7) 
	 :arg1 (p / planet~e.4 
		 :mod (q / queer~e.3 
			 :degree (a / amr-unknown~e.1))))

#
# ::snt " it is altogether dry , and altogether pointed , and altogether harsh and forbidding .
#
#
(a / and~e.6 
	 :op1 (d / dry-08~e.4 
		 :arg1 (i / it~e.1) 
		 :degree (a2 / altogether~e.7)) 
	 :op2 (p / pointed~e.8 
		 :degree (a3 / altogether~e.11) 
		 :domain coref) 
	 :op3 (a4 / and~e.13 
		 :op1 (h / harsh-02~e.12 
			 :arg1 coref) 
		 :op2 (f / forbidding~e.14 
			 :domain coref) 
		 :degree (a5 / altogether~e.3)))

#
# ::snt and the people have no imagination .
#
#
(a / and~e.0 
	 :op2 (h / have-03~e.3 
		 :arg0 (p / person~e.2) 
		 :arg1 (i2 / imagine-01~e.5 
			 :polarity~e.4 -~e.4)))

#
# ::snt they repeat whatever one says to them ...
#
#
(r / repeat-01~e.1 
	 :arg0 (t2 / they~e.0) 
	 :arg1 (t / thing~e.2 
		 :arg1-of~e.4 (s2 / say-01~e.4 
			 :arg0 (p / person~e.3 
				 :arg1-of~e.3 (i / include-91~e.3 
					 :arg2 (t3 / they~e.6))) 
			 :arg2 coref) 
		 :mod (a / all~e.6)))

#
# ::snt on my planet i had a flower ; she always was the first to speak ... "
#
#
(h / have-03~e.4 
	 :arg0 (i / i~e.3) 
	 :arg1 (f / flower~e.6 
		 :arg0-of (s / speak-01~e.14 
			 :ord~e.12 (o / ordinal-entity~e.12 
				 :value 1) 
			 :time (a / always~e.9))) 
	 :location~e.0 (p2 / planet~e.2 
		 :poss~e.1 coref))

#
# ::snt chapter 20 .
#
#
(c / chapter~e.0 
	 :mod 20~e.1)

#
# ::snt but it happened that after walking for a long time through sand , and rocks , and snow , the little prince at last came upon a road .
#
#
(c / contrast-01~e.0 
	 :arg2 (c2 / come-upon-26~e.24 
		 :arg0 (p / prince~e.21 
			 :mod (l / little~e.20)) 
		 :arg1 (r / road~e.27) 
		 :time~e.22 (a / after~e.4 
			 :op1 (w / walk-01~e.5 
				 :arg0 coref 
				 :path~e.10 (a2 / and~e.13 
					 :op1 (s / sand~e.11) 
					 :op2 (r2 / rock~e.14) 
					 :op3 (t / thing~e.17 
						 :arg1-of~e.17 (s2 / snow-01~e.17))) 
				 :arg1-of~e.9 (l3 / long-03~e.8))) 
		 :time~e.22 (a3 / at-last~e.23)))

#
# ::snt and all roads lead to the abodes of men .
#
#
(a / and~e.0 
	 :op2 (l / lead-01~e.3 
		 :arg0 (r / road~e.2 
			 :mod (a2 / all~e.1)) 
		 :arg4~e.4 (a3 / abode~e.6 
			 :poss (m / man~e.8))))

#
# ::snt " good morning , " he said .
#
#
(s / say-01~e.6 
	 :arg0 (h / he~e.5) 
	 :arg1 (m / morning~e.2 
		 :arg1-of (g / good-02~e.1)))

#
# ::snt he was standing before a garden , all a - bloom with roses .
#
#
(s / stand-01~e.2 
	 :arg1 (h / he~e.0) 
	 :arg2 (b / before~e.3 
		 :op1 (g / garden~e.5 
			 :location-of~e.7 (b2 / bloom-01~e.10 
				 :arg0 (r / rose~e.12)))))

#
# ::snt " good morning , " said the roses .
#
#
(s / say-01~e.5 
	 :arg0 (r / rose~e.7) 
	 :arg1 (m / morning~e.2 
		 :arg1-of (g / good-02~e.1)))

#
# ::snt the little prince gazed at them .
#
#
(g / gaze-01~e.3 
	 :arg0 (p / prince~e.2 
		 :mod (l / little~e.1)) 
	 :arg1 (t / they~e.5))

#
# ::snt they all looked like his flower .
#
#
(l / look-02~e.2 
	 :arg0 (t / they~e.0 
		 :mod (a / all~e.1)) 
	 :arg1 (f / flower~e.5 
		 :poss~e.4 (h / he~e.4)))

#
# ::snt " who are you ? " he demanded , thunderstruck .
#
#
(d / demand-01~e.7 
	 :arg0 (h / he~e.6 
		 :mod (t / thunderstruck~e.9)) 
	 :arg1 (a / amr-unknown~e.4 
		 :domain (y2 / you~e.3)))

#
# ::snt " we are roses , " the roses said .
#
#
(s / say-01~e.8 
	 :arg0 (r / rose~e.7) 
	 :arg1 (r2 / rose~e.3 
		 :domain~e.1 coref))

#
# ::snt and he was overcome with sadness .
#
#
(a / and~e.0 
	 :op2 (o / overcome-01~e.3 
		 :arg0 (s / sad-02~e.5) 
		 :arg1 (h / he~e.1)))

#
# ::snt his flower had told him that she was the only one of her kind in all the universe .
#
#
(t / tell-01~e.3 
	 :arg0 (f / flower~e.1 
		 :poss~e.0 (h / he~e.4)) 
	 :arg1 (u2 / unique~e.9 
		 :domain (s / she~e.6) 
		 :location~e.14 (u / universe~e.17 
			 :mod (a / all~e.15))) 
	 :arg2 coref)

#
# ::snt and here were five thousand of them , all alike , in one single garden !
#
#
(a / and~e.0 
	 :op1 (t / they~e.6 
		 :quant 5000~e.3 
		 :arg1-of (a2 / alike-05~e.9 
			 :mod (a3 / all~e.8)) 
		 :location~e.11 (h / here~e.1) 
		 :location~e.11 (g / garden~e.14 
			 :quant 1~e.12)))

#
# ::snt " she would be very much annoyed , " he said to himself , " if she should see that ... she would cough most dreadfully , and she would pretend that she was dying , to avoid being laughed at .
#
#
(s / say-01~e.10 
	 :arg0 (h / he~e.9) 
	 :arg1 (a / and~e.27 
		 :op1 (a2 / annoy-01~e.6 
			 :arg1 (s2 / she~e.32) 
			 :degree (m2 / much~e.5 
				 :degree (v / very~e.4))) 
		 :op2 (c / cough-01~e.23 
			 :arg0 coref 
			 :manner (d2 / dreadful-02~e.25 
				 :degree (m / most~e.24))) 
		 :op3 (p / pretend-01~e.30 
			 :arg0 coref 
			 :arg1 (d / die-01~e.34 
				 :arg1 coref) 
			 :purpose~e.36 (a3 / avoid-01~e.37 
				 :arg0 coref 
				 :arg1 (l / laugh-01~e.39 
					 :arg2 coref))) 
		 :condition~e.15 (s3 / see-01~e.18 
			 :arg0 coref 
			 :arg1 (t / that~e.19))) 
	 :arg2 coref)

#
# ::snt and i should be obliged to pretend that i was nursing her back to life - - for if i did not do that , to humble myself also , she would really allow herself to die ... "
#
#
(a / and~e.0 
	 :op2 (o / oblige-02~e.4 
		 :arg1 (i / i~e.27) 
		 :arg2 (p / pretend-01~e.6 
			 :arg0 coref 
			 :arg1 (n / nurse-01~e.10 
				 :arg0 coref 
				 :arg1 (s / she~e.34) 
				 :purpose~e.12 (l / live-01~e.14 
					 :arg0 coref)))) 
	 :arg1-of (c / cause-01~e.17 
		 :arg0 (a2 / allow-01~e.33 
			 :arg0 (s / she~e.34) 
			 :arg1 (d / die-01~e.36 
				 :arg1 coref) 
			 :arg1-of (r / real-04~e.32) 
			 :condition~e.18 (p2 / pretend-01~e.6 
				 :polarity~e.21 -~e.20 
				 :arg0 coref 
				 :arg1 coref 
				 :purpose~e.25 (h / humble-01~e.26 
					 :arg0 coref 
					 :arg1 (i / i~e.27) 
					 :mod (a3 / also~e.28))))))

#
# ::snt then he went on with his reflections : " i thought that i was rich , with a flower that was unique in all the world ; and all i had was a common rose .
#
#
(g / go-on-25~e.2 
	 :arg0 (h / he~e.5) 
	 :arg1 (r / reflect-02~e.6 
		 :arg0 (h / he~e.5) 
		 :arg1 (c2 / contrast-01 
			 :arg1 (t / think-01~e.10 
				 :arg0 coref 
				 :arg1 (r3 / rich~e.14 
					 :arg1-of (c3 / cause-01~e.11 
						 :arg0 (h3 / have-03~e.17 
							 :arg0 coref 
							 :arg1 (f / flower~e.18 
								 :mod (u / unique~e.21 
									 :compared-to~e.27 (w / world~e.25 
										 :mod (a2 / all~e.23)))))) 
					 :domain coref)) 
			 :arg2 (h2 / have-03~e.30 
				 :arg0 coref 
				 :arg1 (r2 / rose~e.34 
					 :mod (c / common~e.33)) 
				 :mod (a / all~e.28)))) 
	 :time (t2 / then~e.0))

#
# ::snt a common rose , and three volcanoes that come up to my knees - - and one of them perhaps extinct forever ... that does n't make me a very great prince ... "
#
#
(m / make-02~e.26 
	 :polarity~e.25 -~e.24 
	 :arg0 (a / and~e.4 
		 :op1 (r / rose~e.2 
			 :mod (c / common~e.1)) 
		 :op2 (v2 / volcano~e.6 
			 :quant 3~e.5 
			 :arg1-of~e.7 (c2 / come-01~e.8 
				 :arg4~e.10 (k / knee~e.12 
					 :part-of~e.11 (i / i~e.27)) 
				 :direction (u / up~e.9)) 
			 :arg2-of (i2 / include-91~e.18 
				 :arg1 (v3 / volcano~e.6 
					 :quant 1~e.16 
					 :mod (e / extinct~e.20 
						 :mod (p2 / perhaps~e.19) 
						 :duration~e.28 (f / forever~e.21)))))) 
	 :arg1 (p / prince~e.31 
		 :mod (g / great~e.30 
			 :degree (v / very~e.29)) 
		 :domain (i / i~e.27)))

#
# ::snt and he lay down in the grass and cried .
#
#
(a2 / and~e.0 
	 :op2 (a / and~e.7 
		 :op1 (l / lie-07~e.2 
			 :arg1 (h / he~e.1) 
			 :arg2 (g / grass~e.6) 
			 :direction (d / down~e.3)) 
		 :op2 (c / cry-02~e.8 
			 :arg0 coref)))

#
# ::snt chapter 21 .
#
#
(c / chapter~e.0 
	 :mod 21~e.1)

#
# ::snt it was then that the fox appeared .
#
#
(a / appear-01~e.6 
	 :arg1 (f / fox~e.5) 
	 :time (t / then~e.2))

#
# ::snt " good morning , " said the fox .
#
#
(s / say-01~e.5 
	 :arg0 (f / fox~e.7) 
	 :arg1 (m / morning~e.2 
		 :arg1-of (g / good-02~e.1)))

#
# ::snt " good morning , " the little prince responded politely , although when he turned around he saw nothing .
#
#
(r / respond-01~e.8 
	 :arg0 (p / prince~e.7 
		 :mod (l / little~e.6)) 
	 :arg2 (m / morning~e.2 
		 :arg1-of (g / good-02~e.1)) 
	 :manner (p2 / polite-01~e.9) 
	 :concession~e.11 (s / see-01~e.17 
		 :arg0 coref 
		 :arg1 (n / nothing~e.18) 
		 :time~e.12 (t / turn-01~e.14 
			 :arg1 coref 
			 :direction~e.13 (a / around~e.15))))

#
# ::snt " i am right here , " the voice said , " under the apple tree . "
#
#
(s / say-01~e.9 
	 :arg0 (v / voice~e.8) 
	 :arg1 (i / i~e.1 
		 :location~e.4 (h / here~e.4 
			 :location (u / under~e.12 
				 :op1 (t / tree~e.15 
					 :mod (a / apple~e.14))) 
			 :mod (r / right~e.3))))

#
# ::snt " who are you ? " asked the little prince , and added , " you are very pretty to look at . "
#
#
(a / and~e.11 
	 :op1 (a2 / ask-01~e.6 
		 :arg0 (p / prince~e.9 
			 :mod (l / little~e.8)) 
		 :arg1 (y2 / you~e.15 
			 :mod (a3 / amr-unknown~e.4))) 
	 :op2 (a4 / add-01~e.12 
		 :arg0 coref 
		 :arg1 (l2 / look-01~e.20 
			 :arg0 coref 
			 :arg1 coref 
			 :arg2 (p2 / pretty~e.18 
				 :degree (v / very~e.17)))))

#
# ::snt " i am a fox , " said the fox .
#
#
(s / say-01~e.7 
	 :arg0 (f / fox~e.9) 
	 :arg1 (f2 / fox~e.4 
		 :domain~e.3 coref))

#
# ::snt " come and play with me , " proposed the little prince .
#
#
(p / propose-01~e.8 
	 :arg0 (p2 / prince~e.11 
		 :mod (l / little~e.10)) 
	 :arg1 (a / and~e.2 
		 :op1 (c / come-01~e.1) 
		 :op2 (p3 / play-01~e.3 
			 :arg3~e.4 coref)))

#
# ::snt " i am so unhappy . "
#
#
(h / happy-01~e.4 
	 :polarity - 
	 :arg1 (i / i~e.1) 
	 :mod (s / so~e.3))

#
# ::snt " i can not play with you , " the fox said .
#
#
(s / say-01~e.11 
	 :arg0 (f / fox~e.10) 
	 :arg1 (p / possible-01~e.2 
		 :polarity~e.3 -~e.3 
		 :arg1 (p2 / play-01~e.4 
			 :arg0 coref 
			 :arg3~e.5 (y / you~e.6))))

#
# ::snt " i am not tamed . "
#
#
(t / tame-01~e.4 
	 :arg1 (i / i~e.1) 
	 :polarity~e.3 -~e.3)

#
# ::snt " ah !
#
#
(a / ah~e.1 
	 :mode~e.2 expressive~e.2)

#
# ::snt please excuse me , " said the little prince .
#
#
(s / say-01~e.5 
	 :arg0 (p / prince~e.8 
		 :mod (l / little~e.7)) 
	 :arg1 (e / excuse-01~e.1 
		 :polite~e.0 +~e.0 
		 :arg0 (y / you~e.2) 
		 :arg1 (i / i~e.2)))

#
# ::snt but , after some thought , he added : " what does that mean - - ' tame ' ? "
#
#
(c / contrast-01~e.0 
	 :arg2 (a / add-01~e.7 
		 :arg0 (h / he~e.6) 
		 :arg1 (m / mean-01~e.13 
			 :arg1 (t2 / tame-01~e.17) 
			 :arg2 (a3 / amr-unknown~e.19)) 
		 :time (a2 / after~e.2 
			 :op1 (t / think-01~e.4 
				 :mod (s / some~e.3)))))

#
# ::snt " you do not live here , " said the fox .
#
#
(s / say-01~e.8 
	 :arg0 (f / fox~e.10) 
	 :arg1 (l / live-01~e.4 
		 :arg0 (y / you~e.1) 
		 :location (h / here~e.5 
			 :polarity~e.3 -~e.2)))

#
# ::snt " what is it that you are looking for ? "
#
#
(l / look-01~e.7 
	 :arg0 (y / you~e.5) 
	 :arg1 (a / amr-unknown~e.9))

#
# ::snt " i am looking for men , " said the little prince .
#
#
(s / say-01~e.8 
	 :arg0 (p / prince~e.11 
		 :mod (l / little~e.10)) 
	 :arg1 (l2 / look-01~e.3 
		 :arg0 coref 
		 :arg1 (m / man~e.5)))

#
# ::snt " what does that mean - - ' tame ' ? "
#
#
(m / mean-01~e.4 
	 :arg1 (t / tame-01~e.8) 
	 :arg2 (a / amr-unknown~e.10))

#
# ::snt " men , " said the fox .
#
#
(s / say-01~e.4 
	 :arg0 (f / fox~e.6) 
	 :arg1 (m / man~e.1))

#
# ::snt " they have guns , and they hunt .
#
#
(a / and~e.5 
	 :op1 (h / have-03~e.2 
		 :arg0 (t / they~e.1) 
		 :arg1 (g / gun~e.3)) 
	 :op2 (h2 / hunt-01~e.7 
		 :arg0 coref))

#
# ::snt it is very disturbing .
#
#
(d / disturb-01~e.3 
	 :arg0 (i / it~e.0) 
	 :degree (v / very~e.2))

#
# ::snt they also raise chickens .
#
#
(r / raise-03~e.2 
	 :arg0 (t / they~e.0) 
	 :arg1 (c / chicken~e.3) 
	 :mod (a / also~e.1))

#
# ::snt these are their only interests .
#
#
(i / interest-01~e.4 
	 :arg0 (t / this~e.0) 
	 :arg1 (t2 / they~e.2) 
	 :mod (o / only~e.3))

#
# ::snt are you looking for chickens ? "
#
#
(l / look-01~e.2 
	 :arg0 (y / you~e.1) 
	 :arg1 (c / chicken~e.4))

#
# ::snt " no , " said the little prince .
#
#
(s / say-01~e.4 
	 :arg0 (p / prince~e.7 
		 :mod (l / little~e.6)) 
	 :arg1 (n / no~e.1))

#
# ::snt " i am looking for friends .
#
#
(l / look-01~e.3 
	 :arg0 (i / i~e.1) 
	 :arg1 (p / person 
		 :arg0-of~e.4 (h / have-rel-role-91 
			 :arg1 coref 
			 :arg2 (f / friend~e.5))))

#
# ::snt what does that mean - - ' tame ' ? "
#
#
(m / mean-01~e.3 
	 :arg1 (t / tame-01~e.7) 
	 :arg2 (a / amr-unknown~e.9))

#
# ::snt " it is an act too often neglected , " said the fox .
#
#
(s / say-01~e.10 
	 :arg0 (f / fox~e.12) 
	 :arg1 (n / neglect-01~e.7 
		 :arg1 (a / act-02~e.4) 
		 :frequency (o / often~e.6 
			 :degree~e.1 (t / too~e.5))))

#
# ::snt it means to establish ties . "
#
#
(m / mean-01~e.1 
	 :arg1 (i / it~e.0) 
	 :arg2 (e / establish-01~e.3 
		 :arg1 (t / tie-01~e.4)))

#
# ::snt " ' to establish ties ' ? "
#
#
(e / establish-01~e.3 
	 :arg1 (t / tie-01~e.4))

#
# ::snt " just that , " said the fox .
#
#
(s / say-01~e.5 
	 :arg0 (f / fox~e.7) 
	 :arg1 (t / that~e.2 
		 :mod (j / just~e.1)))

#
# ::snt " to me , you are still nothing more than a little boy who is just like a hundred thousand other little boys .
#
#
(o2 / opine-01~e.1 
	 :arg0 (i / i~e.2) 
	 :arg1 (b / boy~e.22 
		 :mod (l / little~e.21) 
		 :arg1-of (r / resemble-01~e.16 
			 :arg2 (b2 / boy~e.12 
				 :quant 100000~e.19 
				 :mod (l2 / little~e.11) 
				 :mod (o / other~e.20)) 
			 :mod (j / just~e.15)) 
		 :domain~e.17 (y2 / you~e.4 
			 :mod (m2 / more~e.8 
				 :polarity~e.7 -~e.9)) 
		 :mod (s2 / still~e.6)))

#
# ::snt and i have no need of you .
#
#
(a / and~e.0 
	 :op2 (n / need-01~e.4 
		 :arg0 (i / i~e.1) 
		 :arg1 (y / you~e.6) 
		 :polarity~e.3 -~e.3))

#
# ::snt and you , on your part , have no need of me .
#
#
(a / and~e.0 
	 :op2 (n / need-01~e.9 
		 :polarity~e.8 -~e.8 
		 :arg0 (y / you~e.4) 
		 :arg1 (i / i~e.11)))

#
# ::snt to you , i am nothing more than a fox like a hundred thousand other foxes .
#
#
(o / opine-01~e.0 
	 :arg0 (y2 / you~e.1) 
	 :arg1 (f / fox~e.9 
		 :arg1-of (r3 / resemble-01~e.10 
			 :arg2 (f2 / fox~e.9 
				 :quant 100000~e.15 
				 :mod (o3 / other~e.14))) 
		 :domain~e.8 (i / i~e.3 
			 :mod (m2 / more~e.6 
				 :polarity~e.5 -~e.7))))

#
# ::snt but if you tame me , then we shall need each other .
#
#
(c / contrast-01~e.0 
	 :arg2 (n / need-01~e.9 
		 :arg0 (w / we~e.7) 
		 :arg1 (o / other~e.11 
			 :mod (e / each~e.10)) 
		 :condition~e.1 (t / tame-01~e.3 
			 :arg0 (y / you~e.2) 
			 :arg1 (i / i~e.4))))

#
# ::snt to me , you will be unique in all the world .
#
#
(o / opine-01~e.0 
	 :arg0 (i / i~e.1) 
	 :arg1 (u / unique~e.6 
		 :domain (y / you~e.3) 
		 :location~e.7 (w / world~e.10 
			 :mod (a / all~e.8))))

#
# ::snt to you , i shall be unique in all the world ... "
#
#
(o / opine-01~e.0 
	 :arg0 (y / you~e.1) 
	 :arg1 (u / unique~e.6 
		 :domain (i / i~e.3) 
		 :location~e.7 (w / world~e.10 
			 :mod (a / all~e.8))))

#
# ::snt " i am beginning to understand , " said the little prince .
#
#
(s / say-01~e.8 
	 :arg0 (p / prince~e.11 
		 :mod (l / little~e.10)) 
	 :arg1 (b / begin-01~e.3 
		 :arg0 (i / i~e.1) 
		 :arg1 (u / understand-01~e.5 
			 :arg0 coref)))

#
# ::snt " there is a flower ...
#
#
(f / flower~e.4)

#
# ::snt i think that she has tamed me ... "
#
#
(t / think-01~e.1 
	 :arg0 (i / i~e.0) 
	 :arg1 (t2 / tame-01~e.5 
		 :arg0 (s / she~e.3) 
		 :arg1 coref))

#
# ::snt " it is possible , " said the fox .
#
#
(s / say-01~e.6 
	 :arg0 (f / fox~e.8) 
	 :arg1 (p / possible-01~e.3 
		 :arg1 (i / it~e.1)))

#
# ::snt " on the earth one sees all sorts of things . "
#
#
(s / see-01~e.5 
	 :arg0 (o / one~e.4) 
	 :arg1 (t / thing~e.9 
		 :mod (s2 / sort~e.7 
			 :mod (a / all~e.6))) 
	 :location~e.1 (p / planet 
		 :wiki~e.8 earth~e.3 
		 :name (n / name 
			 :op1 coref)))

#
# ::snt " oh , but this is not on the earth ! " said the little prince .
#
#
(s / say-01~e.12 
	 :arg0 (p / prince~e.15 
		 :mod (l / little~e.14)) 
	 :arg1 (a / and 
		 :op1 (o / oh~e.1 
			 :mode~e.10 expressive~e.10) 
		 :op2 (c / contrast-01~e.3 
			 :arg2 (b / be-located-at-91~e.7 
				 :polarity~e.6 -~e.6 
				 :arg1 (t / this~e.4) 
				 :arg2 (p2 / planet 
					 :name (n / name 
						 :op1 earth~e.9))))))

#
# ::snt the fox seemed perplexed , and very curious .
#
#
(s / seem-01~e.2 
	 :arg1 (a / and~e.5 
		 :op1 (p / perplex-01~e.3 
			 :arg1 (f / fox~e.1)) 
		 :op2 (c / curious-01~e.7 
			 :arg1 coref 
			 :degree (v / very~e.6))))

#
# ::snt " on another planet ? "
#
#
(b / be-located-at-91~e.1 
	 :arg2 (p / planet~e.3 
		 :mod (a2 / another~e.2)))

#
# ::snt " yes . "
#
#
(y / yes~e.1)

#
# ::snt " are there hunters on this planet ? "
#
#
(p / person~e.2 
	 :arg0-of~e.3 (h / hunt-01~e.3) 
	 :location~e.4 (p2 / planet~e.6 
		 :mod (t / this~e.5)))

#
# ::snt " no . "
#
#
(n / no~e.1)

#
# ::snt " ah , that is interesting !
#
#
(a / ah-01~e.1 
	 :arg1 (i2 / interest-01~e.5 
		 :arg0 (t / that~e.3)))

#
# ::snt are there chickens ? "
#
#
(c / chicken~e.2)

#
# ::snt " no . "
#
#
(n / no~e.1)

#
# ::snt " nothing is perfect , " sighed the fox .
#
#
(s / sigh-01~e.6 
	 :arg0 (f / fox~e.8) 
	 :arg1 (p / perfect-02~e.3 
		 :arg1 (n / nothing~e.1)))

#
# ::snt but he came back to his idea .
#
#
(c2 / contrast-01~e.0 
	 :arg2 (c / come-01~e.2 
		 :arg1 (h / he~e.1) 
		 :arg4~e.4 (i / idea~e.6 
			 :poss~e.5 coref) 
		 :direction (b2 / back~e.3)))

#
# ::snt " my life is very monotonous , " the fox said .
#
#
(s / say-01~e.10 
	 :arg0 (f / fox~e.9) 
	 :arg1 (m / monotonous~e.5 
		 :domain (l / life~e.2 
			 :poss~e.1 (i / i~e.1)) 
		 :degree (v / very~e.4)))

#
# ::snt " i hunt chickens ; men hunt me .
#
#
(a / and 
	 :op1 (h / hunt-01~e.2 
		 :arg0 (i / i~e.1) 
		 :arg1 (c / chicken~e.3)) 
	 :op2 (h2 / hunt-01~e.6 
		 :arg0 (m / man~e.5) 
		 :arg1 coref))

#
# ::snt all the chickens are just alike , and all the men are just alike .
#
#
(a / and~e.7 
	 :op1 (a2 / alike-05~e.5 
		 :arg1 (c / chicken~e.2 
			 :mod (a5 / all~e.0)) 
		 :mod (j / just~e.4)) 
	 :op2 (a3 / alike-05~e.13 
		 :arg1 (m / man~e.10 
			 :mod (a7 / all~e.8)) 
		 :mod (j2 / just~e.12)))

#
# ::snt and , in consequence , i am a little bored .
#
#
(a / and~e.0 
	 :op2 (c2 / cause-01~e.3 
		 :arg1 (b / bore-02~e.9 
			 :arg1 (i / i~e.5) 
			 :degree (l / little~e.8))))

#
# ::snt but if you tame me , it will be as if the sun came to shine on my life .
#
#
(c / contrast-01~e.0 
	 :arg2 (s / shine-01~e.15 
		 :arg1 (s2 / sun~e.12) 
		 :arg2 (l / life~e.18 
			 :poss~e.17 (i / i~e.4)) 
		 :condition~e.1 (t / tame-01~e.3 
			 :arg0 (y / you~e.2) 
			 :arg1 coref)))

#
# ::snt i shall know the sound of a step that will be different from all the others .
#
#
(k / know-04~e.2 
	 :arg0 (i / i~e.0) 
	 :arg1 (s / sound-02~e.4 
		 :arg1 (s2 / step-01~e.7 
			 :arg1-of~e.8 (d / differ-02~e.11 
				 :arg2 (s3 / step-01~e.12 
					 :mod (o / other~e.15 
						 :mod (a / all~e.13)))))))

#
# ::snt other steps send me hurrying back underneath the ground .
#
#
(s / send-03~e.2 
	 :arg0 (s2 / step-01~e.1 
		 :mod (o / other~e.0)) 
	 :arg1 (i / i~e.3) 
	 :arg4~e.5 (u / underneath~e.6 
		 :op1 (g / ground~e.8)) 
	 :arg5~e.5 (b / back~e.5) 
	 :manner (h / hurry-01~e.4 
		 :arg1 coref))

#
# ::snt yours will call me , like music , out of my burrow .
#
#
(c / call-03~e.2 
	 :arg0 (s / step-01~e.1 
		 :arg1 (y / you~e.0)) 
	 :arg1 (o / out-06~e.8 
		 :arg1 (i / i~e.3) 
		 :arg2 (b / burrow~e.11 
			 :poss~e.10 coref)) 
	 :arg2 (i / i~e.3) 
	 :arg1-of (r / resemble-01~e.5 
		 :arg2 (m / music~e.6)))

#
# ::snt and then look : you see the grain - fields down yonder ?
#
#
(a / and~e.0 
	 :op2 (l / look-01~e.2 
		 :arg0 (y / you~e.4) 
		 :time (t / then~e.1)) 
	 :op3 (s / see-01~e.5 
		 :arg0 (y / you~e.4) 
		 :arg1 (f / field~e.9 
			 :mod (g / grain~e.7) 
			 :location (y2 / yonder~e.11 
				 :mod (d / down~e.10)))))

#
# ::snt i do not eat bread .
#
#
(e / eat-01~e.3 
	 :arg0 (i / i~e.0) 
	 :arg1 (b / bread~e.4) 
	 :polarity~e.2 -~e.1)

#
# ::snt wheat is of no use to me .
#
#
(u / use-01~e.4 
	 :arg0 (i / i~e.6) 
	 :arg1 (w / wheat~e.0) 
	 :polarity~e.3 -~e.3)

#
# ::snt the wheat fields have nothing to say to me .
#
#
(s / say-01~e.6 
	 :arg0 (f / field~e.2 
		 :mod (w / wheat~e.1)) 
	 :arg1 (n / nothing~e.4) 
	 :arg2 (i / i~e.8))

#
# ::snt and that is sad .
#
#
(a / and~e.0 
	 :op2 (s / sad-02~e.3 
		 :arg0 (t2 / that~e.1)))

#
# ::snt but you have hair that is the colour of gold .
#
#
(c2 / contrast-01~e.0 
	 :arg2 (h / have-03~e.2 
		 :arg0 (y / you~e.1) 
		 :arg1 (h2 / hair~e.3 
			 :mod (c / color~e.7 
				 :mod (g / gold~e.9)))))

#
# ::snt think how wonderful that will be when you have tamed me !
#
#
(t / think-01~e.0 
	 :mode~e.11 imperative~e.11 
	 :arg0 (y / you~e.7) 
	 :arg1 (w / wonderful-03~e.2 
		 :arg1 (t2 / tame-01~e.9 
			 :arg0 (y / you~e.7) 
			 :arg1 (i / i~e.10)) 
		 :degree (a / amr-unknown~e.1)))

#
# ::snt the grain , which is also golden , will bring me back the thought of you .
#
#
(b / bring-01~e.9 
	 :arg0 (g / grain~e.1 
		 :mod (g2 / golden~e.6 
			 :mod (a / also~e.5))) 
	 :arg1 (t / think-01~e.13 
		 :arg1 (y / you~e.15)) 
	 :arg2 (i / i~e.10) 
	 :direction (b2 / back~e.11))

#
# ::snt and i shall love to listen to the wind in the wheat ... "
#
#
(a / and~e.0 
	 :op2 (l / love-02~e.3 
		 :arg0 (i / i~e.1) 
		 :arg1 (l2 / listen-01~e.5 
			 :arg0 coref 
			 :arg1 (w / wind~e.8 
				 :location~e.9 (w2 / wheat~e.11)))))

#
# ::snt the fox gazed at the little prince , for a long time .
#
#
(g / gaze-01~e.2 
	 :arg0 (f / fox~e.1) 
	 :arg1 (p / prince~e.6 
		 :mod (l / little~e.5)) 
	 :arg1-of~e.11 (l2 / long-03~e.10))

#
# ::snt " please - - tame me ! " he said .
#
#
(s / say-01~e.9 
	 :arg0 (h / he~e.8) 
	 :arg1 (t / tame-01~e.4 
		 :mode~e.6 imperative~e.5 
		 :polite~e.1 +~e.1 
		 :arg0 (y / you) 
		 :arg1 coref))

#
# ::snt " i want to , very much , " the little prince replied .
#
#
(r / reply-01~e.12 
	 :arg0 (p / prince~e.11 
		 :mod (l / little~e.10)) 
	 :arg2 (w / want-01~e.2 
		 :arg0 coref 
		 :arg1 (t / tame-01~e.1 
			 :arg0 coref 
			 :arg1 (y / you)) 
		 :degree (m / much~e.6 
			 :degree (v / very~e.5))))

#
# ::snt " but i have not much time .
#
#
(c / contrast-01~e.1 
	 :arg2 (h / have-03~e.3 
		 :arg0 (i / i~e.2) 
		 :arg1 (t / time~e.6 
			 :quant (m / much~e.5 
				 :polarity~e.4 -~e.4))))

#
# ::snt i have friends to discover , and a great many things to understand . "
#
#
(o / obligate-01~e.1 
	 :arg2 (a / and~e.6 
		 :op1 (d / discover-01~e.4 
			 :arg0 (i / i~e.0) 
			 :arg1 (p / person~e.1 
				 :arg0-of~e.1 (h / have-rel-role-91~e.1 
					 :arg1 coref 
					 :arg2 (f / friend~e.2)))) 
		 :op2 (u / understand-01~e.12 
			 :arg0 coref 
			 :arg1 (t / thing~e.10 
				 :quant (m / many~e.9 
					 :mod (g / great~e.8))))))

#
# ::snt " one only understands the things that one tames , " said the fox .
#
#
(s / say-01~e.11 
	 :arg0 (f / fox~e.13) 
	 :arg1 (u / understand-01~e.3 
		 :arg0 (o / one~e.1) 
		 :arg1 (t / thing~e.5 
			 :arg1-of~e.6 (t2 / tame-01~e.8 
				 :arg0 coref)) 
		 :mod (o2 / only~e.2)))

#
# ::snt " men have no more time to understand anything .
#
#
(h / have-03~e.2 
	 :arg0 (m / man~e.1) 
	 :arg1 (t / time~e.5 
		 :duration-of~e.4 (u / understand-01~e.7 
			 :arg0 coref 
			 :arg1 (a / anything~e.8))) 
	 :polarity~e.3 -~e.3)

#
# ::snt they buy things all ready made at the shops .
#
#
(b / buy-01~e.1 
	 :arg0 (t / they~e.0) 
	 :arg1 (t2 / thing~e.2 
		 :arg1-of~e.5 (m / make-01~e.5 
			 :time (a / already~e.4))) 
	 :location~e.6 (s / shop~e.8))

#
# ::snt but there is no shop anywhere where one can buy friendship , and so men have no friends any more .
#
#
(c / contrast-01~e.0 
	 :arg2 (p / possible-01~e.8 
		 :polarity~e.3 -~e.3 
		 :arg1 (b / buy-01~e.9 
			 :arg0 (o / one~e.7) 
			 :arg1 (f / friendship~e.10) 
			 :location~e.6 (s / shop~e.4 
				 :location (a2 / anywhere~e.5)) 
			 :arg0-of (c2 / cause-01~e.13 
				 :arg1 (h / have-rel-role-91~e.15 
					 :polarity~e.16 -~e.16 
					 :arg0 (p2 / person) 
					 :arg1 (m / man~e.14) 
					 :arg2 (f2 / friend~e.17) 
					 :mod (a / anymore~e.19))))))

#
# ::snt if you want a friend , tame me ... "
#
#
(t / tame-01~e.6 
	 :arg0 (y / you~e.1) 
	 :arg1 (i / i~e.7) 
	 :condition~e.0 (w / want-01~e.2 
		 :arg0 coref 
		 :arg1 (h / have-rel-role-91~e.3 
			 :arg0 (p / person) 
			 :arg1 coref 
			 :arg2 (f / friend~e.4))))

#
# ::snt " what must i do , to tame you ? " asked the little prince .
#
#
(a / ask-01~e.11 
	 :arg0 (p / prince~e.14 
		 :mod (l / little~e.13)) 
	 :arg1 (o / obligate-01~e.2 
		 :arg2 (d / do-02~e.4 
			 :arg0 coref 
			 :arg1 (a2 / amr-unknown~e.1) 
			 :purpose~e.6 (t / tame-01~e.7 
				 :arg0 coref 
				 :arg1 (y / you~e.8)))))

#
# ::snt " you must be very patient , " replied the fox .
#
#
(r / reply-01~e.8 
	 :arg0 (f / fox~e.10) 
	 :arg2 (o / obligate-01~e.2 
		 :arg2 (p / patient-01~e.5 
			 :arg1 (y / you~e.1) 
			 :degree (v / very~e.4))))

#
# ::snt " first you will sit down at a little distance from me - - like that - - in the grass .
#
#
(s / sit-down-02~e.4 
	 :arg1 (y / you~e.2) 
	 :time~e.18 (f / first~e.1) 
	 :location (r / relative-position~e.10 
		 :op1 (i / i~e.11) 
		 :quant (l / little~e.8) 
		 :unit (d / distance~e.9)) 
	 :direction~e.6 (d2 / down~e.5 
		 :location (g / grass~e.20)) 
	 :example~e.14 (t / that~e.15))

#
# ::snt i shall look at you out of the corner of my eye , and you will say nothing .
#
#
(a / and~e.13 
	 :op1 (l / look-01~e.2 
		 :arg0 (i / i~e.0) 
		 :arg1 (y / you~e.4) 
		 :source~e.5 (c / corner~e.8 
			 :part-of~e.9 (e / eye~e.11 
				 :part-of~e.10 coref))) 
	 :op2 (s / say-01~e.16 
		 :arg0 coref 
		 :arg1 (n / nothing~e.17)))

#
# ::snt words are the source of misunderstandings .
#
#
(s / source-01~e.3 
	 :arg1 (m / misunderstand-01~e.5) 
	 :arg2 (w / word~e.0))

#
# ::snt but you will sit a little closer to me , every day ... "
#
#
(c2 / contrast-01~e.0 
	 :arg2 (s / sit-01~e.3 
		 :arg1 (y / you~e.1) 
		 :arg2 (c / close-10~e.6 
			 :arg1 coref 
			 :arg2 (i / i~e.8) 
			 :degree (m / more 
				 :mod (l / little~e.5)) 
			 :frequency (r2 / rate-entity-91~e.10 
				 :arg3~e.7 (t / temporal-quantity 
					 :quant 1~e.4 
					 :unit (d / day~e.11))))))

#
# ::snt the next day the little prince came back .
#
#
(c / come-01~e.6 
	 :arg1 (p / prince~e.5 
		 :mod (l / little~e.4)) 
	 :direction (b / back~e.7) 
	 :time (d / day~e.2 
		 :mod (n / next~e.1)))

#
# ::snt " it would have been better to come back at the same hour , " said the fox .
#
#
(s / say-01~e.15 
	 :arg0 (f / fox~e.17) 
	 :arg1 (g / good-02~e.5 
		 :arg1 (c / come-01~e.7 
			 :direction (b2 / back~e.8) 
			 :time~e.9 (h / hour~e.12 
				 :arg1-of (s2 / same-01~e.11))) 
		 :degree (m / more~e.5)))

#
# ::snt " if , for example , you come at four o'clock in the afternoon , then at three o'clock i shall begin to be happy .
#
#
(b / begin-01~e.21 
	 :arg0 (i / i~e.19) 
	 :arg1 (h / happy-01~e.24 
		 :arg1 coref) 
	 :condition~e.1 (c / come-01~e.7 
		 :arg1 (y / you~e.6) 
		 :time (d2 / date-entity 
			 :time~e.8 4:00~e.10 
			 :dayperiod~e.16 (a / afternoon~e.13)) 
		 :arg0-of~e.3 (e / exemplify-01~e.4)) 
	 :time~e.11 (d / date-entity 
		 :time 3:00~e.15))

#
# ::snt i shall feel happier and happier as the hour advances .
#
#
(f / feel-01~e.2 
	 :arg0 (i / i~e.0) 
	 :arg1 (a / and~e.4 
		 :op1 (h / happy-01~e.3 
			 :arg1 coref 
			 :degree (m / more)) 
		 :op2 (h2 / happy-01~e.5 
			 :arg1 coref 
			 :degree (m2 / more~e.6))) 
	 :time (a2 / advance-01~e.9 
		 :arg1 (h3 / hour~e.8)))

#
# ::snt at four o'clock , i shall already be worrying and jumping about .
#
#
(a / and~e.9 
	 :op1 (w / worry-01~e.8 
		 :arg1 (i / i~e.4)) 
	 :op2 (j / jump-03~e.10 
		 :arg0 coref 
		 :direction (a2 / about~e.11)) 
	 :time (d / date-entity 
		 :time~e.0 4:00~e.2) 
	 :time (a3 / already~e.6))

#
# ::snt i shall show you how happy i am !
#
#
(s / show-01~e.2 
	 :arg0 (i / i~e.0) 
	 :arg1 (h / happy-01~e.5 
		 :arg1 coref 
		 :degree (s2 / so~e.4)) 
	 :arg2 (y / you~e.3))

#
# ::snt but if you come at just any time , i shall never know at what hour my heart is to be ready to greet you ...
#
#
(c / contrast-01~e.0 
	 :arg2 (k / know-01~e.12 
		 :polarity~e.11 -~e.11 
		 :arg0 (i / i~e.9) 
		 :arg1 (h3 / hour~e.15 
			 :time (r / ready-02~e.21 
				 :arg1 (h2 / heart~e.17 
					 :part-of~e.16 coref) 
				 :arg2 (g / greet-01~e.23 
					 :arg0 coref 
					 :arg1 (y / you~e.24)))) 
		 :time~e.13 (e / ever~e.11) 
		 :condition~e.1 (c2 / come-01~e.3 
			 :arg1 (y2 / you~e.2) 
			 :time (t / time~e.7 
				 :mod (a2 / any~e.6 
					 :mod (j2 / just~e.5))))))

#
# ::snt one must observe the proper rites ... "
#
#
(o / obligate-01~e.1 
	 :arg1 (o3 / one~e.0) 
	 :arg2 (o2 / observe-01~e.2 
		 :arg0 coref 
		 :arg1 (r / rite~e.5 
			 :mod (p2 / proper~e.4))))

#
# ::snt " what is a rite ? " asked the little prince .
#
#
(a / ask-01~e.7 
	 :arg0 (p / prince~e.10 
		 :mod (l / little~e.9)) 
	 :arg1 (r / rite~e.4 
		 :domain~e.3 (a2 / amr-unknown~e.1)))

#
# ::snt " those also are actions too often neglected , " said the fox .
#
#
(s / say-01~e.10 
	 :arg0 (f / fox~e.12) 
	 :arg1 (a / act-02~e.4 
		 :domain (t2 / that~e.1) 
		 :arg1-of (n2 / neglect-01~e.7 
			 :frequency (o / often~e.6 
				 :degree (t3 / too~e.5))) 
		 :mod (a3 / also~e.2)))

#
# ::snt " they are what make one day different from other days , one hour from other hours .
#
#
(t2 / thing~e.3 
	 :domain (t / they~e.1) 
	 :arg0-of (m / make-02~e.4 
		 :arg1 (a / and 
			 :op1 (d / differ-02~e.7 
				 :arg1 (d2 / day~e.6 
					 :mod (o4 / one~e.5)) 
				 :arg2 (d3 / day~e.10 
					 :mod (o / other~e.9))) 
			 :op2 (d4 / differ-02~e.7 
				 :arg1 (h / hour~e.13 
					 :mod (o3 / one~e.12)) 
				 :arg2 (h2 / hour~e.16 
					 :mod (o2 / other~e.15))))))

#
# ::snt there is a rite , for example , among my hunters .
#
#
(r / rite~e.3 
	 :arg1-of (h / have-03~e.9 
		 :arg0 (p / person~e.0 
			 :arg0-of~e.10 (h2 / hunt-01~e.10 
				 :arg1 (i / i~e.9)))) 
	 :arg0-of~e.5 (e / exemplify-01~e.6))

#
# ::snt every thursday they dance with the village girls .
#
#
(d / dance-01~e.3 
	 :arg0 (t / they~e.2) 
	 :arg2 (g / girl~e.7 
		 :source (v / village~e.6)) 
	 :frequency~e.0 (r / rate-entity-91~e.0 
		 :arg4 (d2 / date-entity 
			 :weekday~e.1 (t2 / thursday~e.1))))

#
# ::snt so thursday is a wonderful day for me !
#
#
(c / cause-01~e.0 
	 :arg1 (d2 / day~e.5 
		 :domain (d / date-entity 
			 :weekday~e.8 (t / thursday~e.1)) 
		 :arg1-of (w / wonderful-03~e.4) 
		 :beneficiary~e.6 (i / i~e.7)))

#
# ::snt i can take a walk as far as the vineyards .
#
#
(p / possible-01~e.1 
	 :arg1 (w / walk-01~e.4 
		 :arg0 (i / i~e.0) 
		 :extent~e.2 (f / far~e.6 
			 :degree (e / equal~e.5) 
			 :compared-to~e.7 (v / vineyard~e.9))))

#
# ::snt but if the hunters danced at just any time , every day would be like every other day , and i should never have any vacation at all . "
#
#
(c2 / contrast-01~e.0 
	 :arg2 (v2 / vacation-01~e.25 
		 :polarity~e.22 -~e.22 
		 :arg0 (i / i~e.20) 
		 :condition~e.1 (d / dance-01~e.4 
			 :arg0 (p / person~e.3 
				 :arg0-of~e.3 (h2 / hunt-01~e.3)) 
			 :time (a2 / any~e.7 
				 :mod (j / just~e.6)) 
			 :arg1-of~e.8 (c / cause-01 
				 :arg0 (r / resemble-01~e.14 
					 :arg1 (d2 / day~e.11 
						 :mod (e / every~e.10)) 
					 :arg2 (d3 / day~e.17 
						 :mod (o / other~e.16 
							 :mod (e2 / every~e.15)))))) 
		 :quant (a4 / any~e.24) 
		 :mod (a3 / at-all~e.27)))

#
# ::snt so the little prince tamed the fox .
#
#
(c / cause-01~e.0 
	 :arg1 (t / tame-01~e.4 
		 :arg0 (p / prince~e.3 
			 :mod (l / little~e.2)) 
		 :arg1 (f / fox~e.6)))

#
# ::snt and when the hour of his departure drew near - - " ah , " said the fox , " i shall cry . "
#
#
(a / and~e.0 
	 :op1 (s / say-01~e.15 
		 :arg0 (f / fox~e.17) 
		 :arg1 (a2 / and~e.0 
			 :op1 (a3 / ah~e.12) 
			 :op2 (c / cry-02~e.22 
				 :arg0 coref)) 
		 :time (h2 / hour~e.3 
			 :time-of~e.1 (d / depart-01~e.6 
				 :arg0 coref) 
			 :arg1-of (n2 / near-01~e.8))))

#
# ::snt " it is your own fault , " said the little prince .
#
#
(s / say-01~e.8 
	 :arg0 (p / prince~e.11 
		 :mod (l / little~e.10)) 
	 :arg1 (f / fault-01~e.5 
		 :arg1 (y / you~e.3) 
		 :arg2 (i / it~e.1)))

#
# ::snt " i never wished you any sort of harm ; but you wanted me to tame you ... "
#
#
(c / contrast-01~e.10 
	 :arg1 (w / wish-01~e.3 
		 :polarity~e.2 -~e.2 
		 :arg0 (i / i~e.1) 
		 :arg1 (h / harm-01~e.8 
			 :arg1 (y / you~e.4) 
			 :mod (s / sort~e.6 
				 :mod (a / any~e.5))) 
		 :arg2 coref 
		 :time (e / ever~e.2)) 
	 :arg2 (w2 / want-01~e.12 
		 :arg0 (y2 / you~e.16) 
		 :arg1 (t / tame-01~e.15 
			 :arg0 coref 
			 :arg1 coref)))

#
# ::snt " yes , that is so , " said the fox .
#
#
(s / say-01~e.8 
	 :arg0 (f / fox~e.10) 
	 :arg1 (s2 / so~e.5 
		 :domain (t / that~e.3)))

#
# ::snt " but now you are going to cry ! " said the little prince .
#
#
(s / say-01~e.10 
	 :arg0 (p / prince~e.13 
		 :mod (l / little~e.12)) 
	 :arg1 (c / contrast-01~e.1 
		 :arg2 (c2 / cry-02~e.7 
			 :arg0 (y / you~e.3) 
			 :time (n / now~e.2))))

#
# ::snt " yes , that is so , " said the fox .
#
#
(s / say-01~e.8 
	 :arg0 (f / fox~e.10) 
	 :arg1 (s2 / so~e.5 
		 :domain (t / that~e.3)))

#
# ::snt " then it has done you no good at all ! "
#
#
(d / do-02~e.4 
	 :arg0 (i / it~e.2) 
	 :arg1 (g / good-04~e.7 
		 :polarity~e.6 -~e.6) 
	 :arg2 (y / you~e.5) 
	 :mod (a / at-all~e.9))

#
# ::snt " it has done me good , " said the fox , " because of the color of the wheat fields . "
#
#
(s / say-01~e.8 
	 :arg0 (f2 / fox~e.10) 
	 :arg1 (d / do-02~e.3 
		 :arg0 (i / it~e.1) 
		 :arg1 (g / good-04~e.5 
			 :arg1 coref 
			 :arg2 coref) 
		 :arg2 coref 
		 :arg1-of (c / cause-01~e.13 
			 :arg0 (c2 / color-01~e.16 
				 :arg1 (f / field~e.20 
					 :mod (w / wheat~e.19))))))

#
# ::snt and then he added : " go and look again at the roses .
#
#
(a / and~e.0 
	 :op1 (a2 / add-01~e.3 
		 :arg0 (h / he~e.2) 
		 :arg1 (a3 / and~e.7 
			 :op1 (g / go-02~e.6 
				 :arg0 (y / you~e.6)) 
			 :op2 (l / look-01~e.8 
				 :arg0 coref 
				 :arg1 (r / rose~e.12) 
				 :mod (a4 / again~e.9))) 
		 :time (t / then~e.1)))

#
# ::snt you will understand now that yours is unique in all the world .
#
#
(u / understand-01~e.2 
	 :arg0 (y / you~e.0) 
	 :arg1 (u2 / unique~e.7 
		 :domain (r / rose~e.4 
			 :poss~e.5 coref) 
		 :location~e.8 (w / world~e.11 
			 :extent~e.9 (a / all~e.9))) 
	 :time~e.8 (n / now~e.3))

#
# ::snt then come back to say goodbye to me , and i will make you a present of a secret . "
#
#
(a / and~e.9 
	 :op1 (c / come-01~e.1 
		 :arg1 (y / you~e.13) 
		 :direction (b / back~e.2) 
		 :time (t / then~e.0) 
		 :purpose~e.6 (s / say-01~e.4 
			 :arg0 coref 
			 :arg1 (g / goodbye~e.5) 
			 :arg2 (i / i~e.10))) 
	 :op2 (g2 / give-01~e.12 
		 :arg0 coref 
		 :arg1 (p / present~e.15) 
		 :arg2 coref 
		 :manner (r / reveal-01~e.11 
			 :arg0 coref 
			 :arg1 (s2 / secret~e.18) 
			 :arg2 coref)))

#
# ::snt the little prince went away , to look again at the roses .
#
#
(g / go-02~e.3 
	 :arg0 (p / prince~e.2 
		 :mod (l / little~e.1)) 
	 :direction (a / away~e.4) 
	 :purpose~e.6 (l2 / look-01~e.7 
		 :arg0 coref 
		 :arg1 (r / rose~e.11) 
		 :mod (a2 / again~e.8)))

#
# ::snt " you are not at all like my rose , " he said .
#
#
(s / say-01~e.12 
	 :arg0 (h / he~e.11) 
	 :arg1 (r / resemble-01~e.6 
		 :polarity~e.3 -~e.3 
		 :arg1 (y / you~e.1) 
		 :arg2 (r2 / rose~e.8 
			 :poss~e.7 (i / i~e.7)) 
		 :degree (a / at-all~e.5)))

#
# ::snt " as yet you are nothing .
#
#
(n / nothing~e.5 
	 :domain (y / you~e.3) 
	 :time~e.1 (a / as-yet~e.2))

#
# ::snt no one has tamed you , and you have tamed no one .
#
#
(a / and~e.6 
	 :op1 (t / tame-01~e.3 
		 :arg0 (n / no-one~e.1) 
		 :arg1 (y / you~e.4)) 
	 :op2 (t2 / tame-01~e.9 
		 :arg0 coref 
		 :arg1 coref))

#
# ::snt you are like my fox when i first knew him .
#
#
(r / resemble-01~e.2 
	 :arg1 (y / you~e.0) 
	 :arg2 (f / fox~e.4 
		 :poss~e.3 (i / i~e.6)) 
	 :time~e.5 (k / know-02~e.8 
		 :arg0 coref 
		 :arg1 coref 
		 :ord~e.7 (o / ordinal-entity~e.9 
			 :value 1)))

#
# ::snt he was only a fox like a hundred thousand other foxes .
#
#
(f2 / fox~e.4 
	 :domain~e.3 (h / he~e.0) 
	 :arg1-of (r / resemble-01~e.5 
		 :arg2 (f3 / fox~e.4 
			 :quant 100000~e.10 
			 :mod (o / other~e.9))) 
	 :mod (o2 / only~e.2))

#
# ::snt but i have made him my friend , and now he is unique in all the world . "
#
#
(c / contrast-01~e.0 
	 :arg2 (m / make-01~e.3 
		 :arg0 (i / i~e.1) 
		 :arg1 (h / have-rel-role-91~e.5 
			 :arg0 (h2 / he~e.4) 
			 :arg1 coref 
			 :arg2 (f / friend~e.6)) 
		 :arg0-of (c2 / cause-01~e.10 
			 :arg1 (u / unique~e.12 
				 :domain coref 
				 :time (n / now~e.9) 
				 :location~e.13 (w / world~e.16 
					 :extent~e.14 (a2 / all~e.14))))))

#
# ::snt and the roses were very much embarassed .
#
#
(a / and~e.0 
	 :op1 (e / embarrass-01~e.6 
		 :arg1 (r / rose~e.2) 
		 :degree (m / much~e.5 
			 :degree (v / very~e.4))))

#
# ::snt " you are beautiful , but you are empty , " he went on .
#
#
(g / go-on-25~e.12 
	 :arg0 (h / he~e.11) 
	 :arg1 (c / contrast-01~e.5 
		 :arg1 (b / beautiful-02~e.3 
			 :arg1 (y / you~e.1)) 
		 :arg2 (e / empty-02~e.8 
			 :arg1 coref)))

#
# ::snt " one could not die for you .
#
#
(p / possible-01~e.2 
	 :polarity~e.3 -~e.3 
	 :arg1 (d / die-01~e.4 
		 :arg1 (o / one~e.1) 
		 :beneficiary~e.5 (y / you~e.6)))

#
# ::snt to be sure , an ordinary passerby would think that my rose looked just like you - - the rose that belongs to me .
#
#
(t / think-01~e.8 
	 :arg0 (p2 / person~e.6 
		 :arg0-of~e.6 (p3 / pass-by-17~e.6) 
		 :mod (o / ordinary~e.5)) 
	 :arg1 (l / look-02~e.12 
		 :arg0 (r / rose~e.11 
			 :poss~e.10 (i / i~e.23) 
			 :arg0-of (b / belong-01~e.21 
				 :arg1 coref)) 
		 :arg1 (y / you~e.15) 
		 :degree~e.14 (j / just~e.13)) 
	 :arg1-of~e.20 (s / sure-02~e.2))

#
# ::snt but in herself alone she is more important than all the hundreds of you other roses : because it is she that i have watered ; because it is she that i have put under the glass globe ; because it is she that i have sheltered behind the screen ; because it is for her that i have killed the caterpillars ( except the two or three that we saved to become butterflies ) ; because it is she that i have listened to , when she grumbled , or boasted , or ever sometimes when she said nothing .
#
#
(c4 / contrast-01~e.0 
	 :arg2 (i / important~e.7 
		 :degree (m / more~e.6) 
		 :domain~e.77 (s / she~e.4 
			 :mod (a / alone~e.3)) 
		 :compared-to~e.8 (r / rose~e.15 
			 :mod (a3 / all~e.9) 
			 :mod (o / other~e.14) 
			 :quant (m2 / multiple~e.13 
				 :op1 100~e.11)) 
		 :arg1-of (c / cause-01~e.17 
			 :arg0 (a2 / and 
				 :op1 (w / water-01~e.24 
					 :arg0 (i2 / i~e.44) 
					 :arg1 coref) 
				 :op2 (p / put-01~e.33 
					 :arg0 coref 
					 :arg1 coref 
					 :arg2 (u / under~e.34 
						 :op1 (g / globe~e.37 
							 :consist-of~e.12 (g2 / glass~e.36)))) 
				 :op3 (s3 / shelter-01~e.46 
					 :arg0 coref 
					 :arg1 coref 
					 :arg2 (b2 / behind~e.47 
						 :op1 (s4 / screen~e.49))) 
				 :op4 (k / kill-01~e.59 
					 :arg0 coref 
					 :arg1 (c2 / caterpillar~e.61 
						 :arg2-of~e.55 (e2 / except-01~e.63 
							 :arg1 (c3 / caterpillar~e.61 
								 :quant (o2 / or~e.66 
									 :op1 2~e.65 
									 :op2 3~e.67) 
								 :arg1-of~e.68 (s2 / save-02~e.70 
									 :arg0 (w2 / we~e.69) 
									 :purpose~e.71 (b3 / become-01~e.72 
										 :arg1 coref 
										 :arg2 (b4 / butterfly~e.73)))))) 
					 :beneficiary~e.54 coref) 
				 :op4 (l / listen-01~e.83 
					 :arg0 coref 
					 :arg1 coref 
					 :time~e.86 (o3 / or~e.90 
						 :op1 (g3 / grumble-01~e.88 
							 :arg0 coref) 
						 :op2 (b5 / boast-01~e.91 
							 :arg0 coref) 
						 :op3 (s6 / say-01~e.98 
							 :arg0 coref 
							 :arg1 (n / nothing~e.99) 
							 :frequency (s7 / sometimes~e.95 
								 :time~e.96 (e / ever~e.94)))))))))

#
# ::snt because she is my rose .
#
#
(c / cause-01~e.0 
	 :arg0 (r / rose~e.4 
		 :domain (s / she~e.1) 
		 :poss~e.3 (i / i~e.3)))

#
# ::snt and he went back to meet the fox .
#
#
(a / and~e.0 
	 :op1 (g / go-02~e.2 
		 :arg0 (h / he~e.1) 
		 :direction (b / back~e.3) 
		 :purpose~e.4 (m / meet-03~e.5 
			 :arg0 coref 
			 :arg1 (f / fox~e.7))))

#
# ::snt " goodbye , " he said .
#
#
(s / say-01~e.5 
	 :arg0 (h / he~e.4) 
	 :arg1 (g / goodbye~e.1))

#
# ::snt " goodbye , " said the fox .
#
#
(s / say-01~e.4 
	 :arg0 (f / fox~e.6) 
	 :arg1 (g / goodbye~e.1))

#
# ::snt " and now here is my secret , a very simple secret : it is only with the heart that one can see rightly ; what is essential is invisible to the eye . "
#
#
(a / and~e.1 
	 :op1 (s / secret~e.6 
		 :poss~e.5 (i / i~e.5) 
		 :arg1-of (s2 / simple-02~e.10 
			 :degree (v / very~e.9)) 
		 :domain~e.8 (a2 / and~e.1 
			 :op1 (p / possible-01~e.21 
				 :arg1 (s3 / see-01~e.22 
					 :arg0 (o2 / one~e.20) 
					 :arg2-of~e.30 (r / right-06~e.23) 
					 :instrument~e.16 (h2 / heart~e.18)) 
				 :mod (o / only~e.15)) 
			 :op2 (p2 / possible-01~e.21 
				 :polarity - 
				 :arg1 (s4 / see-01~e.22 
					 :arg0 coref 
					 :arg1 (t / thing~e.25 
						 :mod (e / essential~e.27)) 
					 :instrument~e.29 (e2 / eye~e.32)))) 
		 :time (n / now~e.2)))

#
# ::snt " what is essential is invisible to the eye , " the little prince repeated , so that he would be sure to remember .
#
#
(r / repeat-01~e.14 
	 :arg0 (p / prince~e.13 
		 :mod (l / little~e.12)) 
	 :arg1 (p2 / possible-01~e.6 
		 :polarity - 
		 :arg1 (s2 / see-01~e.1 
			 :arg1 (t / thing~e.1 
				 :mod (e / essential~e.3)) 
			 :instrument~e.5 (e2 / eye~e.8))) 
	 :purpose~e.22 (r2 / remember-01~e.23 
		 :arg0 coref 
		 :arg1 coref 
		 :arg1-of~e.17 (s / sure-02~e.21)))

#
# ::snt " it is the time you have wasted for your rose that makes your rose so important . "
#
#
(t / time~e.4 
	 :arg1-of (w / waste-01~e.7 
		 :arg0 (y / you~e.5) 
		 :beneficiary~e.8 (r / rose~e.10 
			 :poss~e.9 coref)) 
	 :arg0-of (m / make-02~e.12 
		 :arg1 (i / important~e.16 
			 :domain coref 
			 :degree (s / so~e.15))))

#
# ::snt " it is the time i have wasted for my rose - - " said the little prince , so that he would be sure to remember .
#
#
(s / say-01~e.14 
	 :arg0 (p / prince~e.17 
		 :mod (l / little~e.16)) 
	 :arg1 (t / time~e.4 
		 :arg1-of (w / waste-01~e.7 
			 :arg0 coref) 
		 :beneficiary~e.8 (r / rose~e.10 
			 :poss~e.9 coref)) 
	 :purpose~e.19 (r2 / remember-01~e.26 
		 :arg0 coref 
		 :arg1-of~e.20 (s2 / sure-02~e.24)))

#
# ::snt " men have forgotten this truth , " said the fox .
#
#
(s / say-01~e.8 
	 :arg0 (f / fox~e.10) 
	 :arg1 (f2 / forget-01~e.3 
		 :arg0 (m / man~e.1) 
		 :arg1 (t / truth~e.5 
			 :mod (t2 / this~e.4))))

#
# ::snt " but you must not forget it .
#
#
(c / contrast-01~e.1 
	 :arg2 (o / obligate-01~e.3 
		 :arg1 (y / you~e.2) 
		 :arg2 (f / forget-01~e.5 
			 :polarity~e.4 -~e.4 
			 :arg0 coref 
			 :arg1 (i / it~e.6))))

#
# ::snt you become responsible , forever , for what you have tamed .
#
#
(b / become-01~e.1 
	 :arg1 (y / you~e.0) 
	 :arg2 (r / responsible-03~e.2 
		 :arg0 coref 
		 :arg1 (t2 / thing~e.7 
			 :arg1-of~e.10 (t / tame-01~e.10 
				 :arg0 coref)) 
		 :extent~e.6 (f / forever~e.4)))

#
# ::snt you are responsible for your rose ... "
#
#
(r / responsible-03~e.2 
	 :arg0 (y / you~e.0) 
	 :arg1 (r2 / rose~e.5 
		 :poss~e.4 coref))

#
# ::snt " i am responsible for my rose , " the little prince repeated , so that he would be sure to remember .
#
#
(r / repeat-01~e.12 
	 :arg0 (p / prince~e.11 
		 :mod (l / little~e.10)) 
	 :arg1 (r2 / responsible-03~e.3 
		 :arg0 coref 
		 :arg1 (r3 / rose~e.6 
			 :poss~e.5 coref)) 
	 :purpose~e.4 (r4 / remember-01~e.21 
		 :arg0 coref 
		 :arg1-of (s / sure-02~e.19)))

#
# ::snt chapter 22 .
#
#
(c / chapter~e.0 
	 :mod 22~e.1)

#
# ::snt " good morning , " said the little prince .
#
#
(s / say-01~e.5 
	 :arg0 (p / prince~e.8 
		 :mod (l / little~e.7)) 
	 :arg1 (m / morning~e.2 
		 :arg1-of (g / good-02~e.1)))

#
# ::snt " good morning , " said the railway switchman .
#
#
(s / say-01~e.5 
	 :arg0 (s2 / switchman~e.8 
		 :mod (r / railway~e.7)) 
	 :arg1 (m / morning~e.2 
		 :arg1-of (g / good-02~e.1)))

#
# ::snt " what do you do here ? " the little prince asked .
#
#
(a / ask-01~e.11 
	 :arg0 (p / prince~e.10 
		 :mod (l / little~e.9)) 
	 :arg1 (d / do-02~e.4 
		 :arg0 (y / you~e.3) 
		 :arg1 (a2 / amr-unknown~e.6) 
		 :location (h / here~e.5)))

#
# ::snt " i sort out travelers , in bundles of a thousand , " said the switchman .
#
#
(s / say-01~e.13 
	 :arg0 (s2 / switchman~e.15) 
	 :arg1 (s3 / sort-01~e.2 
		 :arg0 coref 
		 :arg1 (p / person~e.1 
			 :arg0-of~e.4 (t / travel-01~e.4)) 
		 :arg2 (b / bundle-01~e.7 
			 :arg0 coref 
			 :arg1 coref 
			 :arg2 (p2 / person~e.3 
				 :quant 1000~e.10))))

#
# ::snt " i send off the trains that carry them ; now to the right , now to the left . "
#
#
(s / send-03~e.2 
	 :arg0 (i / i~e.1) 
	 :arg1 (t / train~e.5 
		 :arg0-of (c / carry-01~e.7 
			 :arg1 (t2 / they~e.8))) 
	 :arg5~e.3 (a / and~e.11 
		 :op1 (r / right-04~e.13 
			 :time (n / now~e.10)) 
		 :op2 (l / left-20~e.18 
			 :time (n2 / now~e.15))))

#
# ::snt and a brilliantly lighted express train shook the switchman 's cabin as it rushed by with a roar like thunder .
#
#
(a / and~e.0 
	 :op2 (s / shake-01~e.6 
		 :arg0 (t / train~e.5 
			 :mod (e / express-02~e.4) 
			 :arg1-of (l / light-04~e.3 
				 :manner (b / brilliant-02~e.2))) 
		 :arg1 (c / cabin~e.10 
			 :poss~e.9 (s2 / switchman~e.8)) 
		 :time~e.11 (r / rush-01~e.13 
			 :arg1 coref 
			 :direction (b2 / by~e.14) 
			 :arg0-of~e.15 (r2 / roar-01~e.17 
				 :arg1-of (r3 / resemble-01~e.18 
					 :arg2 (t2 / thunder~e.19))))))

#
# ::snt " they are in a great hurry , " said the little prince .
#
#
(s / say-01~e.9 
	 :arg0 (p / prince~e.12 
		 :mod (l / little~e.11)) 
	 :arg1 (h / hurry-01~e.6 
		 :arg1 (t / they~e.1) 
		 :degree (g / great~e.5)))

#
# ::snt " what are they looking for ? "
#
#
(l / look-01~e.4 
	 :arg0 (t / they~e.3) 
	 :arg1 (a / amr-unknown~e.6))

#
# ::snt " not even the locomotive engineer knows that , " said the switchman .
#
#
(s / say-01~e.10 
	 :arg0 (s2 / switchman~e.12) 
	 :arg1 (k / know-01~e.6 
		 :polarity~e.1 -~e.1 
		 :arg0 (p / person~e.5 
			 :arg0-of~e.5 (e / engineer-01~e.5 
				 :arg1 (l / locomotive~e.4)) 
			 :mod (e2 / even~e.2)) 
		 :arg1 (t / that~e.7)))

#
# ::snt and a second brilliantly lighted express thundered by , in the opposite direction .
#
#
(a / and~e.0 
	 :op2 (t / thunder-01~e.6 
		 :arg0 (t2 / train~e.12 
			 :mod (e / express-02~e.5) 
			 :arg1-of (l / light-04~e.4 
				 :manner (b2 / brilliant-02~e.3)) 
			 :ord~e.2 (o2 / ordinal-entity~e.1 
				 :value 2~e.7)) 
		 :direction~e.9 (b / by~e.7) 
		 :direction~e.9 (o / opposite-01~e.11 
			 :arg2 (d / direction~e.12))))

#
# ::snt " are they coming back already ? " demanded the little prince .
#
#
(d / demand-01~e.8 
	 :arg0 (p / prince~e.11 
		 :mod (l / little~e.10)) 
	 :arg1 (c / come-01~e.3 
		 :arg1 (t / they~e.2) 
		 :direction (b / back~e.4) 
		 :time (a / already~e.5)))

#
# ::snt " these are not the same ones , " said the switchman .
#
#
(s / say-01~e.9 
	 :arg0 (s2 / switchman~e.11) 
	 :arg1 (o / one~e.6 
		 :arg1-of (s3 / same-01~e.5 
			 :polarity~e.3 -~e.3) 
		 :domain (t / this~e.1)))

#
# ::snt " it is an exchange . "
#
#
(e / exchange-01~e.4 
	 :domain~e.1 (i / it~e.1))

#
# ::snt " were they not satisfied where they were ? " asked the little prince .
#
#
(a / ask-01~e.10 
	 :arg0 (p / prince~e.13 
		 :mod (l / little~e.12)) 
	 :arg1 (s / satisfy-01~e.4 
		 :polarity~e.3 -~e.3 
		 :arg1 (t / they~e.2) 
		 :location-of~e.5 (t2 / they~e.6)))

#
# ::snt " no one is ever satisfied where he is , " said the switchman .
#
#
(s / say-01~e.11 
	 :arg0 (s2 / switchman~e.13) 
	 :arg1 (s3 / satisfy-01~e.5 
		 :arg1 (n / no-one~e.2) 
		 :time (e / ever~e.4) 
		 :location~e.6 coref))

#
# ::snt and they heard the roaring thunder of a third brilliantly lighted express .
#
#
(a / and~e.0 
	 :op2 (h / hear-01~e.2 
		 :arg0 (t / they~e.1) 
		 :arg1 (t2 / thunder-01~e.5 
			 :arg1-of (r / roar-01~e.4)) 
		 :arg2 (t3 / train~e.2 
			 :mod (e / express-02~e.11) 
			 :arg1-of (l / light-04~e.10 
				 :manner (b / brilliant-02~e.9)) 
			 :ord~e.8 (o / ordinal-entity~e.7 
				 :value 3~e.11))))

#
# ::snt " are they pursuing the first travelers ? " demanded the little prince .
#
#
(d / demand-01~e.9 
	 :arg0 (p / prince~e.12 
		 :mod (l / little~e.11)) 
	 :arg1 (p2 / pursue-01~e.3 
		 :arg0 (t / they~e.2) 
		 :arg1 (p3 / person~e.6 
			 :arg0-of~e.6 (t2 / travel-01~e.6 
				 :ord~e.5 (o / ordinal-entity~e.5 
					 :value 1)))))

#
# ::snt " they are pursuing nothing at all , " said the switchman .
#
#
(s / say-01~e.9 
	 :arg0 (s2 / switchman~e.11) 
	 :arg1 (p / pursue-01~e.3 
		 :arg0 (t / they~e.1) 
		 :arg1 (n / nothing~e.4 
			 :extent~e.5 (a / at-all~e.6))))

#
# ::snt " they are asleep in there , or if they are not asleep they are yawning .
#
#
(o / or~e.7 
	 :op1 (s / sleep-01~e.3 
		 :arg0 (t / they~e.1) 
		 :location~e.4 (t2 / there~e.5)) 
	 :op2 (y / yawn-01~e.15 
		 :arg0 coref 
		 :condition~e.8 (s2 / sleep-01~e.12 
			 :polarity~e.11 -~e.11 
			 :arg0 coref)))

#
# ::snt only the children are flattening their noses against the windowpanes . "
#
#
(f / flatten-01~e.4 
	 :arg0 (c / child~e.2 
		 :mod (o / only~e.0)) 
	 :arg1 (n / nose~e.6 
		 :part-of~e.5 coref) 
	 :arg1-of (c2 / cause-01 
		 :arg0 (p / push-01~e.7 
			 :arg0 coref 
			 :arg1 coref 
			 :arg2 (w / windowpane~e.9))))

#
# ::snt " only the children know what they are looking for , " said the little prince .
#
#
(s / say-01~e.12 
	 :arg0 (p / prince~e.15 
		 :mod (l / little~e.14)) 
	 :arg1 (k / know-01~e.4 
		 :arg0 (c / child~e.3 
			 :mod (o / only~e.1)) 
		 :arg1 (t / thing~e.5 
			 :arg1-of~e.8 (l2 / look-01~e.8 
				 :arg0 coref))))

#
# ::snt " they waste their time over a rag doll and it becomes very important to them ; and if anybody takes it away from them , they cry ... "
#
#
(a / and~e.9 
	 :op1 (c3 / cause-01 
		 :arg0 (w / waste-01~e.2 
			 :arg0 (t / they~e.1) 
			 :arg1 (t2 / time~e.4 
				 :poss~e.3 coref) 
			 :arg1-of (c / cause-01 
				 :arg0 (d / doll~e.8 
					 :mod (r / rag~e.7)))) 
		 :arg1 (b / become-01~e.11 
			 :arg1 coref 
			 :arg2 (i / important~e.13 
				 :arg1-of (o / opine-01~e.14 
					 :arg0 coref) 
				 :degree~e.10 (v / very~e.12)))) 
	 :op2 (c2 / cry-02~e.27 
		 :arg0 coref 
		 :condition~e.18 (t3 / take-away-05~e.20 
			 :arg0 (a3 / anybody~e.19) 
			 :arg1 coref 
			 :source~e.23 coref)))

#
# ::snt " they are lucky , " the switchman said .
#
#
(s / say-01~e.8 
	 :arg0 (s2 / switchman~e.7) 
	 :arg1 (l / lucky~e.3 
		 :domain (t / they~e.1)))

#
# ::snt chapter 23 .
#
#
(c / chapter~e.0 
	 :mod 23~e.1)

#
# ::snt " good morning , " said the little prince .
#
#
(s / say-01~e.5 
	 :arg0 (p / prince~e.8 
		 :mod (l / little~e.7)) 
	 :arg1 (m / morning~e.2 
		 :arg1-of (g / good-02~e.1)))

#
# ::snt " good morning , " said the merchant .
#
#
(s / say-01~e.5 
	 :arg0 (p / person~e.7 
		 :arg0-of~e.7 (m / merchandise-01~e.7)) 
	 :arg1 (m2 / morning~e.2 
		 :arg1-of (g / good-02~e.1)))

#
# ::snt this was a merchant who sold pills that had been invented to quench thirst .
#
#
(s / sell-01~e.5 
	 :arg0 (p / person~e.3 
		 :arg0-of~e.3 (m / merchandise-01~e.3) 
		 :domain~e.2 (t2 / this~e.0)) 
	 :arg1 (p2 / pill~e.6 
		 :arg1-of~e.8 (i / invent-01~e.10) 
		 :purpose~e.11 (q / quench-01~e.12 
			 :arg0 coref 
			 :arg1 (t / thirst-01~e.13))))

#
# ::snt you need only swallow one pill a week , and you would feel no need of anything to drink .
#
#
(c / cause-01~e.15 
	 :arg0 (n / need-01~e.1 
		 :arg0 (y / you~e.0) 
		 :arg1 (s / swallow-01~e.3 
			 :arg1 (r / rate-entity-91~e.10 
				 :arg1 (p / pill~e.5 
					 :quant 1~e.4) 
				 :arg3 (t / temporal-quantity 
					 :quant 1~e.6 
					 :unit (w / week~e.7)))) 
		 :mod (o / only~e.2)) 
	 :arg1 (f / feel-01~e.12 
		 :polarity~e.13 -~e.13 
		 :arg0 coref 
		 :arg1 (n2 / need-01~e.14 
			 :arg0 coref 
			 :arg1 (d / drink-01~e.18 
				 :arg0 coref 
				 :arg1 (a2 / anything~e.16)))))

#
# ::snt " why are you selling those ? " asked the little prince .
#
#
(a / ask-01~e.8 
	 :arg0 (p / prince~e.11 
		 :mod (l / little~e.10)) 
	 :arg1 (s / sell-01~e.4 
		 :arg0 (y / you~e.3) 
		 :arg1 (t / that~e.5) 
		 :arg1-of (c / cause-01~e.1 
			 :arg0 (a2 / amr-unknown~e.6))))

#
# ::snt " because they save a tremendous amount of time , " said the merchant .
#
#
(s / say-01~e.11 
	 :arg0 (p / person~e.13 
		 :arg0-of~e.13 (m / merchandise-01~e.13)) 
	 :arg1 (c / cause-01~e.1 
		 :arg0 (t / they~e.2) 
		 :arg1 (s2 / save-01~e.3 
			 :arg0 coref 
			 :arg1 (t2 / time~e.8 
				 :arg1-of (a / amount-01~e.6 
					 :arg2 (t3 / tremendous~e.5))))))

#
# ::snt " computations have been made by experts .
#
#
(m / make-01~e.4 
	 :arg0 (p / person~e.5 
		 :arg1-of~e.6 (e / expert-01~e.6)) 
	 :arg1 (t / thing~e.2 
		 :arg1-of~e.1 (c / compute-01~e.1)))

#
# ::snt with these pills , you save fifty - three minutes in every week . "
#
#
(s / save-03~e.5 
	 :arg0 (y / you~e.4) 
	 :arg1 (r / rate-entity-91~e.11 
		 :arg1 (t / temporal-quantity 
			 :quant 53~e.6 
			 :unit (m / minute~e.9)) 
		 :arg2 (t3 / temporal-quantity 
			 :quant 1 
			 :unit (w / week~e.12))) 
	 :instrument~e.0 (p / pill~e.2 
		 :mod (t2 / this~e.1)))

#
# ::snt " and what do i do with those fifty - three minutes ? "
#
#
(a / and~e.1 
	 :op1 (d / do-02~e.5 
		 :arg0 (i / i~e.4) 
		 :arg1 (a2 / amr-unknown~e.12) 
		 :arg2 (t / temporal-quantity 
			 :quant 53~e.8 
			 :unit (m / minute~e.11) 
			 :mod (t2 / that~e.7))))

#
# ::snt " anything you like ... "
#
#
(d / do-02~e.3 
	 :arg0 (y2 / you~e.2) 
	 :arg1 (a2 / anything~e.1 
		 :arg1-of (l / like-02~e.3 
			 :arg0 coref)))

#
# ::snt " as for me , " said the little prince to himself , " if i had fifty - three minutes to spend as i liked , i should walk at my leisure toward a spring of fresh water . "
#
#
(s / say-01~e.6 
	 :arg0 (p / prince~e.9 
		 :mod (l / little~e.8)) 
	 :arg1 (w / walk-01~e.29 
		 :arg0 (i / i~e.27) 
		 :direction~e.30 (t / toward~e.33 
			 :destination~e.11 (s2 / spring~e.35 
				 :source-of~e.34 (w2 / water~e.38 
					 :arg1-of (f / fresh-04~e.37)))) 
		 :manner~e.28 (l2 / leisure~e.32 
			 :poss~e.31 coref) 
		 :condition~e.14 (h / have-03~e.16 
			 :arg0 coref 
			 :arg1 (t2 / temporal-quantity 
				 :quant 53~e.17 
				 :unit (m / minute~e.20) 
				 :arg1-of (s3 / spend-02~e.22 
					 :arg2 (l3 / like-02~e.25 
						 :arg0 coref))))) 
	 :arg2 coref)

#
# ::snt chapter 24 .
#
#
(c / chapter~e.0 
	 :mod 24~e.1)

#
# ::snt it was now the eighth day since i had had my accident in the desert , and i had listened to the story of the merchant as i was drinking the last drop of my water supply .
#
#
(a / and~e.16 
	 :op1 (p / pass-03~e.18 
		 :arg1 (t2 / temporal-quantity 
			 :quant 8 
			 :unit (d / day~e.5)) 
		 :time (s / since~e.6 
			 :op1 (a2 / accident~e.11 
				 :poss~e.10 (i / i~e.7) 
				 :location~e.12 (d2 / desert~e.14)))) 
	 :op2 (l / listen-01~e.19 
		 :arg0 coref 
		 :arg1 (s2 / story~e.22 
			 :poss (p2 / person~e.17 
				 :arg0-of~e.23 (m2 / merchandise-01~e.25))) 
		 :time~e.26 (d3 / drink-01~e.29 
			 :arg0 coref 
			 :arg1 (d4 / drop~e.32 
				 :part-of~e.34 (w / water~e.35 
					 :arg1-of (s3 / supply-01~e.36 
						 :arg2 coref)) 
				 :ord~e.0 (o / ordinal-entity~e.4 
					 :value -1~e.31)))))

#
# ::snt " ah , "
#
#
(a / ah~e.1)

#
# ::snt i said to the little prince , " these memories of yours are very charming ; but i have not yet succeeded in repairing my plane ; i have nothing more to drink ; and i , too , should be very happy if i could walk at my leisure toward a spring of fresh water ! "
#
#
(s / say-01~e.1 
	 :arg0 (i / i~e.0) 
	 :arg1 (a / and~e.2 
		 :op1 (c2 / charm-01~e.14 
			 :arg0 (m / memory~e.9 
				 :poss~e.11 (y / you~e.11) 
				 :mod (t / this~e.8)) 
			 :concession-of~e.16 (a2 / and~e.34 
				 :op1 (s2 / succeed-01~e.21 
					 :polarity~e.19 -~e.19 
					 :arg0 coref 
					 :arg1 (r / repair-01~e.23 
						 :arg0 coref 
						 :arg1 (p2 / plane~e.25 
							 :poss~e.24 coref)) 
					 :time (y2 / yet~e.20)) 
				 :op2 (h / have-03~e.28 
					 :arg0 coref 
					 :arg1 (n / nothing~e.29 
						 :purpose~e.31 (d / drink-01~e.32 
							 :arg0 coref))) 
				 :op3 (h2 / happy-01~e.42 
					 :arg1 coref 
					 :degree~e.39 (v2 / very~e.41) 
					 :condition~e.43 (p3 / possible-01~e.45 
						 :arg1 (w / walk-01~e.46 
							 :arg0 coref 
							 :direction~e.47 (s3 / spring~e.52 
								 :source-of~e.50 (w2 / water~e.55 
									 :arg1-of (f / fresh-04~e.54))) 
							 :manner (a3 / at~e.47 
								 :op1 (l2 / leisure~e.49 
									 :poss~e.48 coref)))))) 
			 :degree (v / very~e.13))) 
	 :arg2 (p / prince~e.5 
		 :mod (l / little~e.4)))

#
# ::snt " my friend the fox - - " the little prince said to me .
#
#
(s / say-01~e.11 
	 :arg0 (p / prince~e.10 
		 :mod (l / little~e.9)) 
	 :arg1 (f / fox~e.4 
		 :arg0-of (h / have-rel-role-91~e.1 
			 :arg1 (i / i~e.13) 
			 :arg2 (f2 / friend~e.2))) 
	 :arg2 (i / i~e.13))

#
# ::snt " my dear little man , this is no longer a matter that has anything to do with the fox ! "
#
#
(s / say-01~e.16 
	 :arg0 (i / i~e.1) 
	 :arg1 (c / concern-02~e.14 
		 :arg0 (m2 / matter~e.11 
			 :domain~e.10 (t / this~e.6)) 
		 :arg1 (f / fox~e.19) 
		 :time (n / no-longer~e.9)) 
	 :arg2 (m / man~e.4 
		 :mod (l / little~e.3) 
		 :poss~e.1 coref 
		 :mod (d / dear~e.2)))

#
# ::snt " why not ? "
#
#
(c2 / concern-02~e.1 
	 :polarity~e.2 -~e.2 
	 :arg1-of (c3 / cause-01~e.1 
		 :arg0 (a / amr-unknown~e.3)))

#
# ::snt " because i am about to die of thirst ... "
#
#
(c / cause-01~e.1 
	 :arg0 (d / die-01~e.6 
		 :arg1 (i / i~e.2) 
		 :arg1-of (c2 / cause-01~e.7 
			 :arg0 (t / thirst-01~e.8 
				 :arg0 coref)) 
		 :time (a / about-to~e.4)))

#
# ::snt he did not follow my reasoning , and he answered me : " it is a good thing to have had a friend , even if one is about to die .
#
#
(a / and~e.7 
	 :op1 (f / follow-02~e.3 
		 :polarity~e.2 -~e.1 
		 :arg0 (h / he~e.0) 
		 :arg1 (r / reason-01~e.5 
			 :arg0 (i / i~e.10))) 
	 :op2 (a2 / answer-01~e.9 
		 :arg0 coref 
		 :arg1 coref 
		 :arg2 (g / good-02~e.16 
			 :arg1 (h2 / have-rel-role-91~e.19 
				 :arg1 (o / one~e.26) 
				 :arg2 (f2 / friend~e.22)) 
			 :concession~e.17 (e / even-if~e.24 
				 :op1 (d / die-01~e.30 
					 :arg1 (o / one~e.26) 
					 :time (a3 / about-to~e.28))))))

#
# ::snt i , for instance , am very glad to have had a fox as a friend ... "
#
#
(g / glad-02~e.7 
	 :arg0 (h / have-rel-role-91~e.9 
		 :arg0 (f2 / fox~e.12) 
		 :arg1 (i / i~e.0 
			 :arg0-of~e.2 (e / exemplify-01~e.3)) 
		 :arg2 (f / friend~e.15)) 
	 :arg1 (i / i~e.0 
		 :arg0-of~e.2 (e / exemplify-01~e.3)) 
	 :degree (v / very~e.6))

#
# ::snt " he has no way of guessing the danger , "
#
#
(p / possible-01~e.4 
	 :arg1 (g / guess-01~e.6 
		 :arg0 (h / he~e.1) 
		 :arg1 (d / danger~e.8)) 
	 :polarity~e.3 -~e.3)

#
# ::snt i said to myself .
#
#
(s / say-01~e.1 
	 :arg0 (i / i~e.0) 
	 :arg2 coref)

#
# ::snt " he has never been either hungry or thirsty .
#
#
(a / and~e.5 
	 :op1 (h / hunger-01~e.6 
		 :arg0 (h2 / he~e.1) 
		 :polarity -) 
	 :op2 (t / thirst-01~e.8 
		 :arg0 coref 
		 :polarity~e.3 -~e.3) 
	 :time~e.2 (e / ever~e.3))

#
# ::snt a little sunshine is all he needs ... "
#
#
(n / need-01~e.6 
	 :arg0 (h / he~e.5) 
	 :arg1 (s / sunshine~e.2 
		 :quant (l / little~e.1)) 
	 :mod (a / all~e.4))

#
# ::snt but he looked at me steadily , and replied to my thought : " i am thirsty , too .
#
#
(c / contrast-01~e.0 
	 :arg2 (a2 / and~e.7 
		 :op1 (l / look-01~e.2 
			 :arg0 (h / he~e.1) 
			 :arg1 (i / i~e.4) 
			 :manner (s / steady~e.5)) 
		 :op2 (r / reply-01~e.8 
			 :arg0 coref 
			 :arg1 (t / thing~e.11 
				 :arg1-of~e.9 (t2 / think-01~e.9 
					 :arg0 coref)) 
			 :arg2 (t3 / thirst-01~e.16 
				 :arg0 coref 
				 :mod (t4 / too~e.18)))))

#
# ::snt let us look for a well ... "
#
#
(l / look-01~e.2 
	 :arg0 (w / we~e.1) 
	 :arg1 (w2 / well~e.5))

#
# ::snt i made a gesture of weariness .
#
#
(g2 / gesture-01~e.3 
	 :arg0 (i / i~e.0) 
	 :arg1 (w / weary-01~e.5 
		 :arg1 coref))

#
# ::snt it is absurd to look for a well , at random , in the immensity of the desert .
#
#
(a / absurd~e.2 
	 :domain~e.6 (l / look-01~e.4 
		 :arg1 (w / well~e.7) 
		 :location (d / desert~e.17 
			 :mod (i / immense~e.14)) 
		 :manner (r / random~e.10)))

#
# ::snt but nevertheless we started walking .
#
#
(h / have-concession-91~e.0 
	 :arg1 (s / start-01~e.3 
		 :arg0 (w / we~e.2) 
		 :arg1 (w2 / walk-01~e.4)))

#
# ::snt when we had trudged along for several hours , in silence , the darkness fell , and the stars began to come out .
#
#
(a / and~e.16 
	 :op1 (f / fall-04~e.14 
		 :arg1 (d / darkness~e.13)) 
	 :op2 (b / begin-01~e.19 
		 :arg0 (s / star~e.18) 
		 :arg1 (c / come-out-09~e.21 
			 :arg1 coref)) 
	 :time~e.0 (t / trudge-01~e.3 
		 :arg0 (w / we~e.1) 
		 :duration~e.5 (s2 / several~e.6 
			 :op1 (t2 / temporal-quantity 
				 :quant 1 
				 :unit (h / hour~e.7))) 
		 :manner~e.22 (s3 / silent~e.10)))

#
# ::snt thirst had made me a little feverish , and i looked at them as if i were in a dream .
#
#
(a / and~e.8 
	 :op1 (m / make-02~e.2 
		 :arg0 (t / thirst-01~e.0 
			 :arg0 (i / i~e.3)) 
		 :arg1 (f / feverish~e.6 
			 :domain coref 
			 :degree (l / little~e.5))) 
	 :op2 (l2 / look-01~e.10 
		 :arg0 coref 
		 :arg1 (t2 / they~e.12) 
		 :arg1-of (r / resemble-01~e.13 
			 :arg2 (d / dream-01~e.19 
				 :arg0 coref))))

#
# ::snt the little prince 's last words came reeling back into my memory : " then you are thirsty , too ? "
#
#
(c / come-01~e.6 
	 :arg1 (w / word-01~e.5 
		 :arg0 (p / prince~e.2 
			 :mod (l2 / little~e.1)) 
		 :arg1 (t / thirst-01~e.17 
			 :mode~e.14 interrogative~e.20 
			 :arg0 (y / you~e.15 
				 :mod (t2 / too~e.19))) 
		 :mod (l / last~e.4)) 
	 :arg4~e.8 (m / memory~e.11 
		 :poss~e.10 (i / i~e.10)) 
	 :manner (r / reel-03~e.7 
		 :arg1 coref 
		 :arg2 coref))

#
# ::snt i demanded .
#
#
(d / demand-01~e.1 
	 :arg0 (i / i~e.0))

#
# ::snt but he did not reply to my question .
#
#
(c / contrast-01~e.0 
	 :arg2 (r / reply-01~e.4 
		 :arg0 (h / he~e.1) 
		 :arg1 (q / question-01~e.7 
			 :arg0 (i / i~e.6)) 
		 :polarity~e.3 -~e.2))

#
# ::snt he merely said to me : " water may also be good for the heart ... "
#
#
(s / say-01~e.2 
	 :arg0 (h / he~e.0) 
	 :arg1 (p / possible-01~e.8 
		 :arg1 (g / good-04~e.11 
			 :arg1 (w / water~e.7) 
			 :arg2 (h2 / heart~e.14) 
			 :mod (a / also~e.9))) 
	 :arg2 (i / i~e.4) 
	 :mod (m / mere~e.1))

#
# ::snt i did not understand this answer , but i said nothing .
#
#
(u2 / understand-01~e.3 
	 :arg0 (i / i~e.0) 
	 :arg1 (a / answer~e.5 
		 :mod (t / this~e.4)) 
	 :polarity~e.2 -~e.1 
	 :concession-of~e.7 (s / say-01~e.9 
		 :arg0 coref 
		 :arg1 (n / nothing~e.10)))

#
# ::snt i knew very well that it was impossible to cross - examine him .
#
#
(k / know-01~e.1 
	 :arg0 (i / i~e.0) 
	 :arg1 (p / possible-01~e.8 
		 :polarity -~e.7 
		 :arg1 (c / crossexamine-01~e.9 
			 :arg0 coref 
			 :arg1 (h / he~e.12))) 
	 :degree~e.11 (w / well~e.3 
		 :degree (v / very~e.2)))

#
# ::snt he was tired .
#
#
(t / tire-01~e.2 
	 :arg1 (h / he~e.0))

#
# ::snt he sat down .
#
#
(s / sit-down-02~e.1 
	 :arg1 (h / he~e.0))

#
# ::snt i sat down beside him .
#
#
(s / sit-down-02~e.1 
	 :arg1 (i / i~e.0) 
	 :location~e.2 (b / beside~e.3 
		 :op1 (h / he~e.4)))

#
# ::snt and , after a little silence , he spoke again : " the stars are beautiful , because of a flower that can not be seen . "
#
#
(a / and~e.0 
	 :op2 (s / speak-01~e.8 
		 :arg0 (h / he~e.7) 
		 :arg1 (b / beautiful-02~e.15 
			 :arg1 (s5 / star~e.13) 
			 :arg1-of (c / cause-01~e.17 
				 :arg0 (f / flower~e.20 
					 :arg1-of (s6 / see-01~e.25 
						 :arg1-of~e.21 (p / possible-01~e.22 
							 :polarity~e.23 -~e.23))))) 
		 :time (a2 / after~e.2 
			 :op1 (s2 / silent~e.5 
				 :duration~e.3 (l / little~e.4))) 
		 :mod (a3 / again~e.9)))

#
# ::snt i replied , " yes , that is so . "
#
#
(r / reply-01~e.1 
	 :arg0 (i / i~e.0) 
	 :arg2 (s / so~e.8 
		 :domain (t / that~e.6)))

#
# ::snt and , without saying anything more , i looked across the ridges of sand that were stretched out before us in the moonlight .
#
#
(a / and~e.0 
	 :op2 (l / look-01~e.8 
		 :arg0 (i / i~e.7) 
		 :arg1 (a3 / across~e.9 
			 :op1 (r / ridge~e.11 
				 :consist-of~e.12 (s / sand~e.13) 
				 :arg1-of~e.14 (s2 / stretch-out-02~e.16 
					 :location~e.20 (b / before~e.18 
						 :op1 (w / we~e.19))) 
				 :arg1-of~e.14 (l2 / light-04 
					 :arg0 (m / moon~e.22)))) 
		 :manner~e.2 (s3 / say-01~e.3 
			 :polarity - 
			 :arg0 coref 
			 :arg1 (a2 / anything~e.4 
				 :mod (m2 / more~e.5)))))

#
# ::snt " the desert is beautiful , " the little prince added .
#
#
(a / add-01~e.10 
	 :arg0 (p / prince~e.9 
		 :mod (l / little~e.8)) 
	 :arg1 (b / beautiful-02~e.4 
		 :arg1 (d / desert~e.2)))

#
# ::snt and that was true .
#
#
(a / and~e.0 
	 :op2 (t / true-01~e.3 
		 :arg1 (t2 / that~e.1)))

#
# ::snt i have always loved the desert .
#
#
(l / love-01~e.3 
	 :arg0 (i / i~e.0) 
	 :arg1 (d / desert~e.5) 
	 :time (a / always~e.2))

#
# ::snt one sits down on a desert sand dune , sees nothing , hears nothing .
#
#
(a / and~e.1 
	 :op1 (s / sit-down-02~e.1 
		 :arg1 (o / one~e.0) 
		 :location~e.2 (d / dune~e.7 
			 :consist-of (s2 / sand~e.6) 
			 :location~e.3 (d2 / desert~e.5))) 
	 :op2 (s3 / see-01~e.9 
		 :arg0 coref 
		 :arg1 (n / nothing~e.13)) 
	 :op3 (h / hear-01~e.12 
		 :arg0 coref 
		 :arg1 (n2 / nothing~e.10)))

#
# ::snt yet through the silence something throbs , and gleams ...
#
#
(a2 / and~e.7 
	 :op1 (t / throb-01~e.1 
		 :arg1 (s / something~e.4)) 
	 :op2 (g / gleam-01~e.8 
		 :arg0 coref) 
	 :concession~e.0 (s2 / silent~e.3))

#
# ::snt " what makes the desert beautiful , " said the little prince , " is that somewhere it hides a well ... "
#
#
(s / say-01~e.8 
	 :arg0 (p / prince~e.11 
		 :mod (l / little~e.10)) 
	 :arg1 (m / make-02~e.2 
		 :arg0 (h / hide-01~e.18 
			 :arg0 (d / desert~e.4) 
			 :arg1 (w / well~e.20) 
			 :location (s2 / somewhere~e.16)) 
		 :arg1 (b / beautiful-02~e.5 
			 :arg1 (d / desert~e.4))))

#
# ::snt i was astonished by a sudden understanding of that mysterious radiation of the sands .
#
#
(a / astonish-01~e.2 
	 :arg0 (u / understand-01~e.6 
		 :arg0 (i / i~e.0) 
		 :arg1 (r / radiate-01~e.10 
			 :arg0 (s2 / sand~e.13) 
			 :mod (m / mystery~e.9) 
			 :mod (t / that~e.8)) 
		 :manner~e.3 (s / sudden~e.5)) 
	 :arg1 (i / i~e.0))

#
# ::snt when i was a little boy i lived in an old house , and legend told us that a treasure was buried there .
#
#
(a / and~e.13 
	 :op1 (l / live-01~e.7 
		 :arg0 (i / i~e.6) 
		 :location~e.8 (h / house~e.11 
			 :mod (o / old~e.10)) 
		 :time~e.0 (b / boy~e.5 
			 :mod (l2 / little~e.4) 
			 :domain coref)) 
	 :op2 (t / tell-01~e.15 
		 :arg0 (l3 / legend~e.14) 
		 :arg1 (b2 / bury-01~e.21 
			 :arg1 (t2 / treasure~e.19) 
			 :location~e.22 coref) 
		 :arg2 (w / we~e.16)))

#
# ::snt to be sure , no one had ever known how to find it ; perhaps no one had ever even looked for it .
#
#
(a / and~e.0 
	 :op1 (s / sure-02~e.2 
		 :arg0 (n / no-one~e.16) 
		 :arg1 (t / thing~e.8 
			 :manner-of~e.9 (f / find-01~e.11 
				 :arg0 coref 
				 :arg1 (i / it~e.12))) 
		 :time~e.19 (e2 / ever~e.18) 
		 :mod (t2 / to-be-sure~e.17)) 
	 :op2 (p2 / possible-01~e.14 
		 :arg1 (l / look-01~e.20 
			 :arg0 coref 
			 :arg1 coref 
			 :time coref)))

#
# ::snt but it cast an enchantment over that house .
#
#
(c / contrast-01~e.0 
	 :arg2 (c2 / cast-01~e.2 
		 :arg0 (i / it~e.1) 
		 :arg1 (e / enchant-01~e.4) 
		 :arg2 (h / house~e.7 
			 :mod (t / that~e.6))))

#
# ::snt my home was hiding a secret in the depths of its heart ...
#
#
(h / hide-01~e.3 
	 :arg0 (h2 / home~e.1 
		 :poss~e.0 (i / i~e.0)) 
	 :arg1 (s / secret~e.5) 
	 :location~e.6 (d / deep-02~e.8 
		 :arg1 (h3 / heart~e.11 
			 :part-of~e.10 coref)))

#
# ::snt " yes , "
#
#
(y / yes~e.1)

#
# ::snt i said to the little prince .
#
#
(s / say-01~e.1 
	 :arg0 (i / i~e.0) 
	 :arg2 (p / prince~e.5 
		 :mod (l / little~e.4)))

#
# ::snt " the house , the stars , the desert - - what gives them their beauty is something that is invisible ! "
#
#
(g2 / give-01~e.12 
	 :arg0 (s3 / something~e.17 
		 :arg1-of (s4 / see-01~e.11 
			 :arg1-of~e.18 (p / possible-01~e.20 
				 :polarity~e.14 -~e.21))) 
	 :arg1 (b / beautiful-02~e.15 
		 :arg1 (a / and 
			 :op1 (h / house~e.2) 
			 :op2 (s2 / star~e.5) 
			 :op3 (d / desert~e.8))) 
	 :arg2 (a / and 
		 :op1 (h / house~e.2) 
		 :op2 (s2 / star~e.5) 
		 :op3 (d / desert~e.8)))

#
# ::snt " i am glad , " he said , " that you agree with my fox . "
#
#
(s / say-01~e.7 
	 :arg0 (h / he~e.6) 
	 :arg1 (g / glad-02~e.3 
		 :arg0 (a / agree-01~e.12 
			 :arg0 (y / you~e.11) 
			 :arg2 (f / fox~e.15 
				 :poss~e.14 coref)) 
		 :arg1 coref))

#
# ::snt as the little prince dropped off to sleep , i took him in my arms and set out walking once more .
#
#
(a2 / and~e.15 
	 :op1 (t / take-01~e.10 
		 :arg0 (i / i~e.9) 
		 :arg1 (p / prince~e.3 
			 :mod (l / little~e.2)) 
		 :arg3~e.11 (a / arm~e.14 
			 :part-of~e.13 coref)) 
	 :op2 (s / set-out-07~e.16 
		 :arg0 coref 
		 :manner~e.17 (w / walk-01~e.18) 
		 :mod (a3 / again~e.20 
			 :frequency~e.19 1)) 
	 :time (d / drop-off-03~e.4 
		 :arg0 coref 
		 :arg2 (s2 / sleep-01~e.7 
			 :arg0 coref)))

#
# ::snt i felt deeply moved , and stirred .
#
#
(f / feel-01~e.1 
	 :arg0 (i / i~e.0) 
	 :arg1 (a / and~e.5 
		 :op1 (m / move-05~e.3 
			 :arg1 coref 
			 :arg1-of (d / deep-02~e.2)) 
		 :op2 (s / stir-02~e.6 
			 :arg1 coref)))

#
# ::snt it seemed to me that i was carrying a very fragile treasure .
#
#
(s / seem-01~e.1 
	 :arg1 (c / carry-01~e.7 
		 :arg0 (i / i~e.3) 
		 :arg1 (t / treasure~e.11 
			 :mod (f / fragile~e.10 
				 :degree (v / very~e.9)))) 
	 :arg2 (i / i~e.3))

#
# ::snt it seemed to me , even , that there was nothing more fragile on all earth .
#
#
(s / seem-01~e.1 
	 :arg1 (f / fragile~e.12 
		 :degree (m / more~e.11) 
		 :domain (n2 / nothing~e.10 
			 :location~e.13 (p / planet 
				 :name (n / name 
					 :op1 earth~e.15) 
				 :mod (a / all~e.14)))) 
	 :arg2 (i / i~e.3) 
	 :mod (e / even~e.5))

#
# ::snt in the moonlight i looked at his pale forehead , his closed eyes , his locks of hair that trembled in the wind , and i said to myself : " what i see here is nothing but a shell .
#
#
(a / and~e.24 
	 :op1 (l / look-01~e.4 
		 :arg0 (i / i~e.3) 
		 :arg1 (a2 / and~e.24 
			 :op1 (f / forehead~e.8 
				 :part-of~e.6 (h / he~e.6) 
				 :arg1-of (p / pale-03~e.7)) 
			 :op2 (e / eye~e.12 
				 :arg1-of (c / close-01~e.11) 
				 :part-of~e.10 coref) 
			 :op3 (l2 / lock~e.15 
				 :consist-of~e.16 (h2 / hair~e.17) 
				 :arg1-of (t / tremble-01~e.19 
					 :arg1-of (c2 / cause-01~e.18 
						 :arg0 (w / wind~e.22))) 
				 :part-of~e.14 coref) 
			 :arg1-of (l3 / light-04~e.36 
				 :arg0 (m2 / moon~e.2)))) 
	 :op2 (s / say-01~e.26 
		 :arg0 coref 
		 :arg1 (s2 / see-01~e.33 
			 :arg0 coref 
			 :arg1 (s3 / shell~e.39) 
			 :mod (o / only~e.37) 
			 :location~e.28 (h3 / here~e.34)) 
		 :arg2 coref))

#
# ::snt what is most important is invisible ... "
#
#
(s / see-01~e.0 
	 :arg1 (t / thing~e.0 
		 :mod (i2 / important~e.3 
			 :degree (m / most~e.2))) 
	 :arg1-of (p / possible-01~e.5 
		 :polarity -))

#
# ::snt as his lips opened slightly with the suspicious of a half - smile , i said to myself , again : " what moves me so deeply , about this little prince who is sleeping here , is his loyalty to a flower - - the image of a rose that shines through his whole being like the flame of a lamp , even when he is asleep ... "
#
#
(s / say-01~e.15 
	 :arg0 (i / i~e.14) 
	 :arg1 (m / move-05~e.23 
		 :arg0 (p / prince~e.31 
			 :mod (l / little~e.30) 
			 :arg0-of (s2 / sleep-01~e.34 
				 :location~e.17 (h / here~e.35))) 
		 :arg1 coref 
		 :arg2 (l2 / loyal-01~e.39 
			 :arg1 coref 
			 :arg2 (f / flower~e.42 
				 :op1 (i2 / image~e.46 
					 :poss~e.38 (r / rose~e.49 
						 :arg1-of (s3 / shine-01~e.51 
							 :arg2 (t / through~e.52 
								 :op1 (b / being~e.55 
									 :poss~e.53 coref 
									 :mod (w / whole~e.54))) 
							 :arg1-of (r2 / resemble-01~e.56 
								 :arg2 (f2 / flame-01~e.58 
									 :arg1 (l3 / lamp~e.61))) 
							 :concession~e.64 (e / even-when~e.63 
								 :op1 (s6 / sleep-01~e.67 
									 :arg0 coref))))))) 
		 :arg1-of (d / deep-02~e.26)) 
	 :arg2 coref 
	 :time~e.29 (o / open-01~e.3 
		 :arg1 (l4 / lip~e.2 
			 :part-of~e.1 coref) 
		 :degree (s4 / slight~e.4) 
		 :manner~e.5 (s8 / smile-01~e.12 
			 :mod (h3 / half~e.10) 
			 :mod (s5 / suspicious~e.7))) 
	 :mod (a2 / again~e.19))

#
# ::snt and i felt him to be more fragile still .
#
#
(a / and~e.0 
	 :op2 (f / feel-02~e.2 
		 :arg0 (i / i~e.1) 
		 :arg1 (f3 / fragile~e.7 
			 :domain (h / he~e.3) 
			 :degree (m / more~e.6) 
			 :mod (s / still~e.8))))

#
# ::snt i felt the need of protecting him , as if he himself were a flame that might be extinguished by a little puff of wind ...
#
#
(f / feel-01~e.1 
	 :arg0 (i / i~e.0) 
	 :arg1 (n / need-01~e.3 
		 :arg0 coref 
		 :arg1 (p / protect-01~e.5 
			 :arg0 coref 
			 :arg1 (h / he~e.6) 
			 :conj-as-if~e.11 (f2 / flame-01~e.14 
				 :arg1 coref 
				 :arg1-of (e / extinguish-01~e.18 
					 :arg0 (p3 / puff-up-04~e.22 
						 :arg1 (w / wind~e.24) 
						 :mod (l / little~e.21)) 
					 :arg1-of~e.15 (p2 / possible-01~e.16))))))

#
# ::snt and , as i walked on so , i found the well , at daybreak .
#
#
(a / and~e.0 
	 :op2 (f / find-01~e.9 
		 :arg0 (i / i~e.8) 
		 :arg1 (w / well~e.11) 
		 :time~e.2 (d / daybreak~e.14) 
		 :time~e.2 (w2 / walk-01~e.4 
			 :arg0 coref 
			 :mod (o / on~e.5) 
			 :manner (s / so~e.6))))

#
# ::snt chapter 25 .
#
#
(c / chapter~e.0 
	 :mod 25~e.1)

#
# ::snt " men , " said the little prince , " set out on their way in express trains , but they do not know what they are looking for .
#
#
(s / say-01~e.4 
	 :arg0 (p / prince~e.7 
		 :mod (l / little~e.6)) 
	 :arg1 (h / have-concession-91~e.19 
		 :arg1 (k / know-01~e.23 
			 :polarity~e.22 -~e.21 
			 :arg0 (m / man~e.1) 
			 :arg1 (t2 / thing~e.24 
				 :arg1-of~e.27 (l2 / look-01~e.27 
					 :arg0 coref))) 
		 :arg2 (s2 / set-out-07~e.10 
			 :arg0 (m / man~e.1) 
			 :path~e.11 (w / way~e.14 
				 :poss~e.13 coref) 
			 :manner (t / train~e.17 
				 :mod (e / express~e.16)))))

#
# ::snt then they rush about , and get excited , and turn round and round ... "
#
#
(a / and~e.5 
	 :op1 (r / rush-01~e.2 
		 :arg1 (t / they~e.1) 
		 :arg2 (a2 / about~e.3)) 
	 :op2 (e / excite-01~e.7 
		 :arg1 coref) 
	 :op3 (t2 / turn-01~e.10 
		 :arg1 coref 
		 :direction (a3 / and~e.9 
			 :op1 (r2 / round~e.11) 
			 :op2 (r3 / round~e.13))) 
	 :time (t3 / then~e.0))

#
# ::snt and he added : " it is not worth the trouble ... "
#
#
(a / and~e.0 
	 :op2 (a2 / add-01~e.2 
		 :arg0 (h / he~e.1) 
		 :arg1 (w / worth-02~e.8 
			 :polarity~e.7 -~e.7 
			 :arg1 (i / it~e.5) 
			 :arg2 (t / trouble-01~e.10))))

#
# ::snt the well that we had come to was not like the wells of the sahara .
#
#
(w / well~e.1 
	 :arg4-of~e.4 (c / come-01~e.5 
		 :arg1 (w2 / we~e.3)) 
	 :arg1-of (r / resemble-01~e.9 
		 :polarity~e.8 -~e.8 
		 :arg2 (w3 / well~e.11 
			 :location (d / desert 
				 :wiki~e.12 sahara~e.14 
				 :name (n / name 
					 :op1 coref)))))

#
# ::snt the wells of the sahara are mere holes dug in the sand .
#
#
(h / hole~e.7 
	 :arg1-of (d / dig-01~e.8 
		 :arg2 (s / sand~e.11)) 
	 :mod (m / mere~e.6) 
	 :domain (w / well~e.1 
		 :location~e.9 (d2 / desert 
			 :wiki~e.2 sahara~e.4 
			 :name (n / name 
				 :op1 coref))))

#
# ::snt this one was like a well in a village .
#
#
(r / resemble-01~e.3 
	 :arg1 (w / well~e.5 
		 :mod (t / this~e.0)) 
	 :arg2 (w2 / well~e.5 
		 :location~e.6 (v / village~e.8)))

#
# ::snt but there was no village here , and i thought i must be dreaming ...
#
#
(c3 / contrast-01~e.0 
	 :arg2 (a / and~e.7 
		 :op1 (v / village~e.4 
			 :polarity~e.3 -~e.3 
			 :location~e.1 (h / here~e.5)) 
		 :op2 (t / think-01~e.9 
			 :arg0 (i / i~e.8) 
			 :arg1 (d / dream-01~e.13 
				 :arg0 coref))))

#
# ::snt " it is strange , "
#
#
(s / strange~e.3 
	 :domain~e.1 (i / it~e.1))

#
# ::snt i said to the little prince .
#
#
(s / say-01~e.1 
	 :arg0 (i / i~e.0) 
	 :arg2 (p / prince~e.5 
		 :mod (l / little~e.4)))

#
# ::snt " everything is ready for use : the pulley , the bucket , the rope ... "
#
#
(r / ready-02~e.3 
	 :arg1 (e / everything~e.1 
		 :example~e.4 (a / and 
			 :op1 (p2 / pulley~e.8) 
			 :op2 (b / bucket~e.11) 
			 :op3 (r2 / rope~e.14))) 
	 :arg2 (u / use-01~e.5 
		 :arg1 coref))

#
# ::snt he laughed , touched the rope , and set the pulley to working .
#
#
(a / and~e.7 
	 :op1 (l / laugh-01~e.1 
		 :arg0 (h / he~e.0)) 
	 :op2 (t / touch-01~e.3 
		 :arg0 coref 
		 :arg1 (r / rope~e.5)) 
	 :op3 (s / set-08~e.8 
		 :arg0 coref 
		 :arg1 (p / pulley~e.10) 
		 :arg2 (w / work-09~e.12 
			 :arg1 coref)))

#
# ::snt and the pulley moaned , like an old weathervane which the wind has long since forgotten .
#
#
(a / and~e.0 
	 :op2 (m / moan-01~e.3 
		 :arg0 (p / pulley~e.2) 
		 :arg1-of (r / resemble-01~e.5 
			 :arg2 (m2 / moan-01~e.3 
				 :arg0 (w / weathervane~e.8 
					 :mod (o / old~e.7) 
					 :arg1-of (f / forget-01~e.15 
						 :arg0 (w2 / wind~e.11) 
						 :time~e.12 (s / since~e.14 
							 :op1 (l / long~e.13))))))))

#
# ::snt " do you hear ? " said the little prince .
#
#
(s / say-01~e.6 
	 :arg0 (p / prince~e.9 
		 :mod (l / little~e.8)) 
	 :arg1 (h / hear-01~e.3 
		 :arg0 (y / you~e.2)))

#
# ::snt " we have wakened the well , and it is singing ... "
#
#
(a / and~e.7 
	 :op1 (w / wake-01~e.3 
		 :arg0 (w2 / we~e.1) 
		 :arg1 (w3 / well~e.5)) 
	 :op2 (s / sing-01~e.10 
		 :arg0 coref))

#
# ::snt i did not want him to tire himself with the rope .
#
#
(w / want-01~e.3 
	 :arg0 (i / i~e.0) 
	 :arg1 (t / tire-01~e.6 
		 :arg0 (h / he~e.4) 
		 :arg1 coref 
		 :instrument~e.8 (r / rope~e.10)) 
	 :polarity~e.2 -~e.1)

#
# ::snt " leave it to me , "
#
#
(l / leave-02~e.1 
	 :arg0 (y / you) 
	 :arg1 (i2 / it~e.2) 
	 :arg2 (i / i~e.4) 
	 :mode~e.4 imperative~e.4)

#
# ::snt i said .
#
#
(s / say-01~e.1 
	 :arg0 (i / i~e.0))

#
# ::snt " it is too heavy for you . "
#
#
(h / heavy~e.4 
	 :domain~e.1 (i2 / it~e.1) 
	 :degree (t / too~e.3) 
	 :compared-to~e.5 (y / you~e.6))

#
# ::snt i hoisted the bucket slowly to the edge of the well and set it there - - happy , tired as i was , over my achievement .
#
#
(a / and~e.11 
	 :op1 (h / hoist-01~e.1 
		 :arg0 (i / i~e.0 
			 :arg1-of (c / content-01~e.24 
				 :arg2 (t3 / thing~e.25 
					 :arg1-of~e.26 (a2 / achieve-01~e.26 
						 :arg0 coref)) 
				 :concession~e.20 (a3 / and~e.11 
					 :op1 (h2 / happy-01~e.17 
						 :arg1 coref) 
					 :op2 (t2 / tire-01~e.19 
						 :arg1 coref)))) 
		 :arg1 (b / bucket~e.3) 
		 :arg1-of (s / slow-05~e.4) 
		 :destination~e.24 (e / edge~e.7 
			 :part-of~e.8 (w / well~e.10))) 
	 :op1 (s2 / set-01~e.12 
		 :arg0 coref 
		 :arg1 coref 
		 :arg2 coref))

#
# ::snt the song of the pulley was still in my ears , and i could see the sunlight shimmer in the still trembling water .
#
#
(a / and~e.11 
	 :op1 (h / hear-01~e.9 
		 :arg0 (i / i~e.8) 
		 :arg1 (s / sing-01~e.1 
			 :arg0 (p / pulley~e.4)) 
		 :mod (s2 / still~e.6)) 
	 :op2 (p2 / possible-01~e.13 
		 :arg1 (s3 / see-01~e.14 
			 :arg0 coref 
			 :arg1 (s4 / shimmer-01~e.17 
				 :arg1 (s5 / sunlight~e.16) 
				 :location~e.18 (w / water~e.22 
					 :arg1-of (t / tremble-01~e.21 
						 :mod (s6 / still~e.20)))))))

#
# ::snt " i am thirsty for this water , " said the little prince .
#
#
(s / say-01~e.9 
	 :arg0 (p / prince~e.12 
		 :mod (l / little~e.11)) 
	 :arg1 (t / thirst-01~e.3 
		 :arg0 (i / i~e.1) 
		 :arg1 (w / water~e.6 
			 :mod (t2 / this~e.5))))

#
# ::snt " give me some of it to drink ... "
#
#
(g / give-01~e.1 
	 :arg0 (y / you) 
	 :arg1 (t / thing~e.4 
		 :arg1-of~e.4 (i3 / include-91~e.4 
			 :arg2 (i / it~e.5)) 
		 :quant (s / some~e.3)) 
	 :arg2 (i2 / i~e.2) 
	 :mode~e.2 imperative~e.2 
	 :purpose~e.6 (d / drink-01~e.7 
		 :arg0 coref 
		 :arg1 coref))

#
# ::snt and i understood what he had been looking for .
#
#
(a / and~e.0 
	 :op2 (u / understand-01~e.2 
		 :arg0 (i / i~e.1) 
		 :arg1 (t / thing~e.3 
			 :arg1-of~e.5 (l / look-01~e.7 
				 :arg0 (h / he~e.4)))))

#
# ::snt i raised the bucket to his lips .
#
#
(r / raise-01~e.1 
	 :arg0 (i / i~e.0) 
	 :arg1 (b / bucket~e.3) 
	 :arg4~e.4 (l / lip~e.6 
		 :part-of~e.5 (h / he~e.5)))

#
# ::snt he drank , his eyes closed .
#
#
(a / and 
	 :op1 (d / drink-01~e.1 
		 :arg0 (h / he~e.0)) 
	 :op2 (c / close-01~e.5 
		 :arg0 coref 
		 :arg1 (e / eye~e.4 
			 :part-of~e.3 coref)))

#
# ::snt it was as sweet as some special festival treat .
#
#
(s / sweet-04~e.3 
	 :arg1 (i / it~e.0) 
	 :degree (e / equal~e.2) 
	 :compared-to~e.4 (f2 / food-dish~e.4 
		 :mod (f / festival~e.7) 
		 :mod (s2 / some~e.5) 
		 :arg1-of (s3 / special-02~e.6) 
		 :arg1-of (t / treat-02~e.8)))

#
# ::snt this water was indeed a different thing from ordinary nourishment .
#
#
(r2 / resemble-01~e.4 
	 :arg1 (w / water~e.1 
		 :mod (t / this~e.0)) 
	 :arg2 (t2 / thing~e.6 
		 :arg2-of~e.7 (n / nourish-01~e.9) 
		 :mod (o / ordinary~e.8)) 
	 :mod (i / indeed~e.3) 
	 :polarity -~e.5)

#
# ::snt its sweetness was born of the walk under the stars , the song of the pulley , the effort of my arms .
#
#
(b2 / bear-02~e.3 
	 :arg0 (a / and 
		 :op1 (w2 / walk-01~e.6 
			 :location (u / under~e.7 
				 :op1 (s2 / star~e.9))) 
		 :op2 (s3 / sing-01~e.12 
			 :arg0 (p / pulley~e.15)) 
		 :op3 (e / effort-01~e.18 
			 :arg0 (a2 / arm~e.21 
				 :part-of~e.19 (i / i~e.20)))) 
	 :arg1 (s / sweet-05~e.1 
		 :arg1 (i3 / it~e.0)))

#
# ::snt it was good for the heart , like a present .
#
#
(g / good-04~e.2 
	 :arg1 (i / it~e.0 
		 :arg1-of (r / resemble-01~e.7 
			 :arg2 (p / present~e.9))) 
	 :arg2 (h / heart~e.5))

#
# ::snt when i was a little boy , the lights of the christmas tree , the music of the midnight mass , the tenderness of smiling faces , used to make up , so , the radiance of the gifts i received .
#
#
(m / make-up-07~e.29 
	 :arg0 (a / and~e.30 
		 :op1 (l / light-04~e.8 
			 :arg0 (t2 / tree~e.12 
				 :mod (f2 / festival 
					 :wiki~e.9 christmas~e.11 
					 :name (n / name 
						 :op1 coref)))) 
		 :op2 (m2 / music~e.15 
			 :poss~e.27 (e2 / event 
				 :wiki~e.16 - 
				 :name (n2 / name 
					 :op1 midnight~e.18 
					 :op2 mass~e.19))) 
		 :op3 (t4 / tender~e.22 
			 :domain (f / face~e.25 
				 :arg0-of~e.23 (s2 / smile-01~e.24)))) 
	 :arg1 (r3 / radiant~e.35 
		 :domain (g2 / gift~e.38 
			 :arg1-of (r4 / receive-01~e.40 
				 :arg0 (i / i~e.39)))) 
	 :manner (s / so~e.32) 
	 :time~e.0 (b / boy~e.5 
		 :mod (l2 / little~e.4) 
		 :domain~e.3 coref))

#
# ::snt " the men where you live , " said the little prince , " raise five thousand roses in the same garden - - and they do not find in it what they are looking for . "
#
#
(s / say-01~e.8 
	 :arg0 (p / prince~e.11 
		 :mod (l / little~e.10)) 
	 :arg1 (a / and~e.24 
		 :op1 (r / raise-03~e.14 
			 :arg0 (m / man~e.2 
				 :location~e.3 (l2 / live-01~e.5 
					 :arg0 (y / you~e.4))) 
			 :arg1 (r2 / rose~e.17 
				 :quant 5000~e.15) 
			 :location~e.18 (g / garden~e.21 
				 :arg1-of (s2 / same-01~e.20))) 
		 :op2 (f / find-01~e.28 
			 :polarity~e.27 -~e.26 
			 :arg0 coref 
			 :arg1 (t / thing~e.31 
				 :arg1-of~e.34 (l3 / look-01~e.34 
					 :arg0 coref)) 
			 :location coref)))

#
# ::snt " they do not find it , "
#
#
(f / find-01~e.4 
	 :arg0 (t / they~e.1) 
	 :arg1 (i / it~e.5) 
	 :polarity~e.3 -~e.2)

#
# ::snt i replied .
#
#
(r / reply-01~e.1 
	 :arg0 (i / i~e.0))

#
# ::snt " and yet what they are looking for could be found in one single rose , or in a little water . "
#
#
(c / contrast-01~e.2 
	 :arg2 (p2 / possible-01~e.8 
		 :arg1 (f / find-01~e.10 
			 :arg1 (t / thing~e.3 
				 :arg1-of~e.6 (l2 / look-01~e.6 
					 :arg0 (t2 / they~e.4))) 
			 :location~e.11 (o / or~e.16 
				 :op1 (r / rose~e.14 
					 :arg1-of (s / single-02~e.13)) 
				 :op2 (w / water~e.20 
					 :quant (l3 / little~e.19))))))

#
# ::snt " yes , that is true , "
#
#
(t / true-01~e.5 
	 :arg1 (t2 / that~e.3))

#
# ::snt i said .
#
#
(s / say-01~e.1 
	 :arg0 (i / i~e.0))

#
# ::snt and the little prince added : " but the eyes are blind .
#
#
(a / and~e.0 
	 :op2 (a2 / add-01~e.4 
		 :arg0 (p / prince~e.3 
			 :mod (l / little~e.2)) 
		 :arg1 (c / contrast-01~e.7 
			 :arg2 (b / blind-02~e.11 
				 :arg1 (e / eye~e.9)))))

#
# ::snt one must look with the heart ... "
#
#
(r / recommend-01~e.1 
	 :arg1 (l / look-01~e.2 
		 :arg0 (o / one~e.0) 
		 :instrument~e.3 (h / heart~e.5)))

#
# ::snt i had drunk the water .
#
#
(d / drink-01~e.2 
	 :arg0 (i / i~e.0) 
	 :arg1 (w / water~e.4))

#
# ::snt i breathed easily .
#
#
(b / breathe-01~e.1 
	 :arg0 (i / i~e.0) 
	 :arg1-of (e / easy-05~e.2))

#
# ::snt at sunrise the sand is the color of honey .
#
#
(r2 / resemble-01~e.0 
	 :arg1 (c / color~e.6 
		 :poss (s / sand~e.3)) 
	 :arg2 (c2 / color~e.6 
		 :poss (h / honey~e.8)) 
	 :time (r / rise-01~e.7 
		 :arg1 (s2 / sun~e.1)))

#
# ::snt and that honey color was making me happy , too .
#
#
(a / and~e.0 
	 :op2 (m / make-02~e.5 
		 :arg0 (c / color~e.3 
			 :mod (h / honey~e.2)) 
		 :arg1 (h2 / happy-01~e.7 
			 :arg1 (i / i~e.6)) 
		 :mod (t / too~e.9)))

#
# ::snt what brought me , then , this sense of grief ?
#
#
(b2 / bring-01~e.1 
	 :arg0 (a / amr-unknown~e.10) 
	 :arg1 (s / sense-01~e.7 
		 :arg0 (i / i~e.2) 
		 :arg1 (g / grieve-01~e.9 
			 :arg1 coref) 
		 :mod (t / this~e.6)) 
	 :arg2 (i / i~e.2) 
	 :time (t2 / then~e.4))

#
# ::snt " you must keep your promise , " said the little prince , softly , as he sat down beside me once more .
#
#
(s / say-01~e.8 
	 :arg0 (p / prince~e.11 
		 :mod (l / little~e.10)) 
	 :arg1 (o / obligate-01~e.2 
		 :arg1 (y / you~e.1) 
		 :arg2 (h / honor-02~e.3 
			 :arg0 coref 
			 :arg1 (t / thing~e.5 
				 :arg1-of~e.5 (p2 / promise-01~e.5 
					 :arg0 coref)))) 
	 :manner (s2 / soft~e.13) 
	 :time~e.15 (s3 / sit-down-02~e.17 
		 :arg1 coref 
		 :location~e.18 (b / beside~e.19 
			 :op1 (i / i~e.20)) 
		 :mod (a / again~e.22 
			 :frequency~e.21 1)))

#
# ::snt " what promise ? "
#
#
(t / thing~e.1 
	 :arg1-of~e.2 (p2 / promise-01~e.2 
		 :arg0 (i / i~e.2)) 
	 :domain (a / amr-unknown~e.3))

#
# ::snt " you know - - a muzzle for my sheep ...
#
#
(t / thing~e.2 
	 :arg2-of~e.1 (m2 / muzzle-01~e.6 
		 :arg1 (s / sheep~e.9 
			 :poss~e.8 (i / i~e.8))))

#
# ::snt i am responsible for this flower ... "
#
#
(r / responsible-03~e.2 
	 :arg0 (i / i~e.0) 
	 :arg1 (f / flower~e.5 
		 :mod (t / this~e.4)))

#
# ::snt i took my rough drafts of drawings out of my pocket .
#
#
(t / take-01~e.1 
	 :arg0 (i / i~e.0) 
	 :arg1 (p2 / picture~e.2 
		 :arg1-of (d3 / draft-01~e.4) 
		 :arg1-of (r / rough-04~e.3) 
		 :arg1-of (d4 / draw-01~e.6)) 
	 :arg2 (p / pocket~e.10 
		 :poss~e.9 coref))

#
# ::snt the little prince looked them over , and laughed as he said : " your baobabs - - they look a little like cabbages . "
#
#
(a / and~e.7 
	 :op1 (l / look-01~e.3 
		 :arg0 (p / prince~e.2 
			 :mod (l2 / little~e.1)) 
		 :arg1 (t / they~e.4)) 
	 :op2 (l3 / laugh-01~e.8 
		 :arg0 coref 
		 :time (s / say-01~e.11 
			 :arg0 coref 
			 :arg1 (l4 / look-02~e.19 
				 :arg0 (b / baobab~e.15 
					 :poss~e.14 (y / you)) 
				 :arg1 (c / cabbage~e.23) 
				 :degree~e.22 (l5 / little~e.21)))))

#
# ::snt " oh ! "
#
#
(o / oh~e.1 
	 :mode~e.2 expressive~e.2)

#
# ::snt i had been so proud of my baobabs !
#
#
(p / pride-01~e.4 
	 :arg0 (i / i~e.0) 
	 :arg1 (b / baobab~e.7 
		 :poss~e.6 coref) 
	 :degree (s / so~e.3))

#
# ::snt " your fox - - his ears look a little like horns ; and they are too long . "
#
#
(a2 / and~e.13 
	 :op1 (l4 / look-02~e.7 
		 :arg0 (e / ear~e.6 
			 :part-of~e.5 (f / fox~e.2 
				 :poss~e.1 (y / you))) 
		 :arg1 (h / horn~e.11) 
		 :degree~e.10 (l / little~e.9)) 
	 :op2 (l2 / long-03~e.17 
		 :arg1 coref 
		 :degree (t2 / too~e.16)))

#
# ::snt and he laughed again .
#
#
(a / and~e.0 
	 :op2 (l / laugh-01~e.2 
		 :arg0 (h / he~e.1) 
		 :mod (a2 / again~e.3)))

#
# ::snt " you are not fair , little prince , "
#
#
(f / fair-01~e.4 
	 :polarity~e.3 -~e.3 
	 :arg0 (p / prince~e.7 
		 :mod (l / little~e.6)))

#
# ::snt i said .
#
#
(s / say-01~e.1 
	 :arg0 (i / i~e.0))

#
# ::snt " i do n't know how to draw anything except boa constrictors from the outside and boa constrictors from the inside . "
#
#
(k / know-01~e.4 
	 :arg0 (i / i~e.1) 
	 :arg1 (d / draw-01~e.7 
		 :arg0 coref 
		 :arg1 (a2 / and~e.15 
			 :op1 (o / outside~e.14 
				 :part-of~e.12 (b / boa~e.16 
					 :mod (c / constrictor~e.17))) 
			 :op2 (i2 / inside~e.20 
				 :part-of~e.18 coref))))

#
# ::snt " oh , that will be all right , " he said , " children understand . "
#
#
(s / say-01~e.11 
	 :arg0 (h / he~e.10) 
	 :arg1 (a / all-right~e.7 
		 :domain~e.6 (t / that~e.3) 
		 :arg1-of (c / cause-01 
			 :arg0 (u / understand-01~e.15 
				 :arg0 (c2 / child~e.14)))))

#
# ::snt so then i made a pencil sketch of a muzzle .
#
#
(s2 / sketch-01~e.6 
	 :arg0 (i / i~e.2) 
	 :arg1 (m / muzzle~e.9) 
	 :instrument~e.3 (p / pencil~e.5) 
	 :time (t / then~e.1))

#
# ::snt and as i gave it to him my heart was torn .
#
#
(a / and~e.0 
	 :op2 (t / tear-01~e.10 
		 :arg1 (h / heart~e.8 
			 :part-of~e.7 (i / i~e.2)) 
		 :time~e.1 (g / give-01~e.3 
			 :arg0 coref 
			 :arg1 (i2 / it~e.4) 
			 :arg2 (h2 / he~e.6))))

#
# ::snt " you have plans that i do not know about , "
#
#
(p2 / plan-01~e.3 
	 :arg0 (y / you~e.1) 
	 :arg1 (t / thing~e.8 
		 :arg1-of~e.4 (k / know-01~e.8 
			 :arg0 (i / i~e.5) 
			 :polarity~e.7 -~e.6)))

#
# ::snt i said .
#
#
(s / say-01~e.1 
	 :arg0 (i / i~e.0))

#
# ::snt but he did not answer me .
#
#
(h2 / have-concession-91~e.0 
	 :arg1 (a / answer-01~e.4 
		 :arg0 (h / he~e.1) 
		 :arg1 (i / i~e.5) 
		 :polarity~e.3 -~e.2))

#
# ::snt he said to me , instead : " you know - - my descent to the earth ...
#
#
(s / say-01~e.1 
	 :arg0 (h / he~e.0) 
	 :arg1 (d / descend-01~e.13 
		 :arg0 coref 
		 :arg1 (e / earth~e.16)) 
	 :arg2 (i / i~e.3) 
	 :arg1-of (i2 / instead-of-91~e.5))

#
# ::snt tomorrow will be its anniversary . "
#
#
(a / anniversary~e.4 
	 :time (t / tomorrow~e.0) 
	 :poss~e.3 (i / it~e.3))

#
# ::snt then , after a silence , he went on : " i came down very near here . "
#
#
(g / go-23~e.7 
	 :arg0 (h / he~e.6) 
	 :arg1 (c / come-01~e.12 
		 :arg1 coref 
		 :arg4~e.8 (n / near-02~e.15 
			 :arg1 coref 
			 :arg2 (h2 / here~e.16) 
			 :degree (v / very~e.14)) 
		 :direction~e.12 (d / down~e.13)) 
	 :time (t / then~e.0) 
	 :time (a / after~e.2 
		 :op1 (s / silent~e.4)))

#
# ::snt and he flushed .
#
#
(a / and~e.0 
	 :op2 (f / flush-03~e.2 
		 :arg1 (h / he~e.1)))

#
# ::snt and once again , without understanding why , i had a queer sense of sorrow .
#
#
(a2 / and~e.0 
	 :op2 (s / sense-01~e.12 
		 :arg0 (i / i~e.8) 
		 :arg1 (s2 / sorrow-01~e.14 
			 :arg0 coref) 
		 :mod (q / queer~e.11) 
		 :mod (a / again~e.2 
			 :frequency~e.1 1~e.10) 
		 :arg1-of (c2 / cause-01~e.6 
			 :arg0 (a3 / amr-unknown~e.4 
				 :arg1-of (u2 / understand-01~e.5 
					 :polarity - 
					 :arg0 coref)))))

#
# ::snt one question , however , occurred to me : " then it was not by chance that on the morning when i first met you - - a week ago - - you were strolling along like that , all alone , a thousand miles from any inhabited region ?
#
#
(c / contrast-01~e.3 
	 :arg2 (q / question-01~e.1 
		 :arg0 (i / i~e.7) 
		 :arg1 (s / stroll-01~e.34 
			 :arg0 (y / you~e.24) 
			 :manner (a3 / alone~e.40 
				 :degree (a4 / all~e.39) 
				 :arg1-of (r / resemble-01~e.36 
					 :arg2 (t2 / that~e.37))) 
			 :direction (a6 / along~e.40) 
			 :location (r3 / relative-position~e.45 
				 :op1 (r2 / region~e.48 
					 :arg1-of (i3 / inhabit-01~e.47) 
					 :mod (a5 / any~e.46)) 
				 :quant (d2 / distance-quantity 
					 :quant 1000~e.43 
					 :unit (m3 / mile~e.44))) 
			 :time~e.20 (m / meet-03~e.23 
				 :arg0 coref 
				 :arg1 (y / you~e.24) 
				 :ord~e.22 (o2 / ordinal-entity~e.22 
					 :value 1~e.27) 
				 :time (b / before~e.29 
					 :op1 (n / now~e.14) 
					 :quant (t / temporal-quantity 
						 :quant 1~e.42 
						 :unit (w / week~e.28))) 
				 :time (d / date-entity 
					 :dayperiod~e.17 (m2 / morning~e.19))) 
			 :arg1-of (c2 / cause-01~e.16 
				 :polarity~e.13 -~e.13 
				 :arg0 (c3 / chance-02~e.15)))))

#
# ::snt you were on the your back to the place where you landed ? "
#
#
(g / go-02~e.4 
	 :arg1 (y2 / you~e.0) 
	 :arg4~e.6 (p2 / place~e.8 
		 :location-of~e.9 (l / land-01~e.11 
			 :arg0 (y / you~e.10))) 
	 :direction~e.2 (b / back~e.5))

#
# ::snt the little prince flushed again .
#
#
(f / flush-03~e.3 
	 :arg1 (p / prince~e.2 
		 :mod (l / little~e.1)) 
	 :mod (a / again~e.4))

#
# ::snt and i added , with some hesitancy : " perhaps it was because of the anniversary ? "
#
#
(a4 / and~e.0 
	 :op2 (a / add-01~e.2 
		 :arg0 (i / i~e.1) 
		 :arg1 (p2 / possible-01~e.9 
			 :arg1 (c / cause-01~e.12 
				 :arg0 (a3 / anniversary~e.15) 
				 :arg1 (i2 / it~e.10))) 
		 :manner~e.4 (h / hesitate-01~e.6 
			 :arg0 coref 
			 :degree (s / some~e.5))))

#
# ::snt the little prince flushed once more .
#
#
(f / flush-03~e.3 
	 :arg1 (p / prince~e.2 
		 :mod (l / little~e.1)) 
	 :mod (a / again~e.5 
		 :frequency~e.4 1))

#
# ::snt he never answered questions - - but when one flushes does that not mean " yes " ?
#
#
(c / contrast-01~e.6 
	 :arg1 (a / answer-01~e.2 
		 :polarity~e.1 -~e.1 
		 :arg0 (h / he~e.0) 
		 :arg1 (q / question-01~e.3 
			 :arg2 coref) 
		 :time~e.7 (e / ever~e.1)) 
	 :arg2 (f / flush-03~e.9 
		 :arg1 (o / one~e.8) 
		 :arg1-of (m / mean-01~e.13 
			 :arg2 (y / yes~e.15))))

#
# ::snt " ah , "
#
#
(a / ah~e.1)

#
# ::snt i said to him , " i am a little frightened - - "
#
#
(s / say-01~e.1 
	 :arg0 (i / i~e.0) 
	 :arg1 (f / frighten-01~e.10 
		 :arg1 coref 
		 :degree (l / little~e.9)) 
	 :arg2 (h / he~e.3))

#
# ::snt but he interrupted me .
#
#
(c / contrast-01~e.0 
	 :arg2 (i / interrupt-01~e.2 
		 :arg0 (h / he~e.1) 
		 :arg1 (i2 / i~e.3)))

#
# ::snt " now you must work .
#
#
(o / obligate-01~e.3 
	 :arg1 (y / you~e.2) 
	 :arg2 (w / work-01~e.4 
		 :arg0 coref) 
	 :time (n / now~e.1))

#
# ::snt you must return to your engine .
#
#
(o2 / obligate-01~e.1 
	 :arg1 (y / you~e.0) 
	 :arg2 (r / return-01~e.2 
		 :arg1 coref 
		 :arg4~e.3 (e / engine~e.5 
			 :poss~e.4 coref)))

#
# ::snt i will be waiting for you here .
#
#
(w / wait-01~e.3 
	 :arg1 (i / i~e.0) 
	 :arg2 (y / you~e.5) 
	 :location~e.6 (h / here~e.6))

#
# ::snt come back tomorrow evening ... "
#
#
(c / come-01~e.0 
	 :arg1 (y / you) 
	 :direction (b / back~e.1) 
	 :time~e.3 (d / date-entity 
		 :dayperiod~e.3 (e2 / evening~e.3) 
		 :mod (t / tomorrow~e.2)))

#
# ::snt but i was not reassured .
#
#
(h / have-concession-91~e.0 
	 :arg1 (r / reassure-01~e.4 
		 :arg1 (i / i~e.1) 
		 :polarity~e.3 -~e.3))

#
# ::snt i remembered the fox .
#
#
(r / remember-01~e.1 
	 :arg0 (i / i~e.0) 
	 :arg1 (f / fox~e.3))

#
# ::snt one runs the risk of weeping a little , if one lets himself be tamed ...
#
#
(r2 / risk-01~e.3 
	 :arg0 (o / one~e.0) 
	 :arg2 (w / weep-01~e.5 
		 :arg0 coref 
		 :degree (l / little~e.7)) 
	 :condition~e.9 (l2 / let-01~e.12 
		 :arg0 coref 
		 :arg1 (t / tame-01~e.14 
			 :arg1 coref)))

#
# ::snt chapter 26 .
#
#
(c / chapter~e.0 
	 :mod 26~e.1)

#
# ::snt beside the well there was the ruin of an old stone wall .
#
#
(w / wall~e.11 
	 :mod (o / old~e.9) 
	 :consist-of~e.7 (s / stone~e.10) 
	 :arg1-of (r / ruin-01~e.6) 
	 :location~e.3 (b / beside~e.0 
		 :op1 (w2 / well~e.2)))

#
# ::snt when i came back from my work , the next evening , i saw from some distance away my little price sitting on top of a wall , with his feet dangling .
#
#
(s / see-01~e.13 
	 :arg0 (i / i~e.1 
		 :location (r2 / relative-position~e.14 
			 :quant (d2 / distant-02~e.16))) 
	 :arg1 (s2 / sit-01~e.17 
		 :arg1 (p2 / prince~e.20 
			 :mod (l / little~e.19) 
			 :poss~e.18 coref 
			 :arg0-of~e.28 (d / dangle-01~e.31 
				 :arg1 (f / foot~e.30 
					 :part-of~e.29 coref))) 
		 :arg2 (w / wall~e.26 
			 :location (p / position~e.21 
				 :op1 (o / on~e.22 
					 :direction~e.2 (t / top~e.23))))) 
	 :time (r / return-01~e.3 
		 :arg1 coref 
		 :arg3~e.4 (w2 / work-01~e.6 
			 :arg0 coref) 
		 :time (d3 / date-entity 
			 :dayperiod~e.10 (e / evening~e.10) 
			 :mod (n / next~e.9))))

#
# ::snt and i heard him say : " then you do n't remember .
#
#
(a / and~e.0 
	 :op2 (h / hear-01~e.2 
		 :arg0 (i / i~e.1) 
		 :arg1 (s / say-01~e.4 
			 :arg0 (h2 / he~e.3) 
			 :arg1 (r / remember-01~e.11 
				 :polarity~e.10 -~e.9 
				 :arg0 (y / you~e.8) 
				 :mod (t / then~e.7)))))

#
# ::snt this is not the exact spot . "
#
#
(s2 / spot~e.5 
	 :domain (t / this~e.0) 
	 :mod (e2 / exact~e.4 
		 :polarity~e.2 -~e.2))

#
# ::snt another voice must have answered him , for he replied to it : " yes , yes !
#
#
(o / obligate-01~e.2 
	 :arg0 (v / voice~e.1 
		 :mod (a / another~e.0)) 
	 :arg1 (h2 / he~e.8) 
	 :arg2 (a2 / answer-01~e.4) 
	 :arg0-of (c / cause-01~e.7 
		 :arg1 (r / reply-01~e.9 
			 :arg0 (h2 / he~e.8) 
			 :arg2 (y / yes~e.14))))

#
# ::snt it is the right day , but this is not the place . "
#
#
(c / contrast-01~e.6 
	 :arg1 (d / day~e.4 
		 :arg2-of (r / right-06~e.3)) 
	 :arg2 (p / place~e.11 
		 :polarity~e.9 -~e.9 
		 :domain~e.0 (t / this~e.7)))

#
# ::snt i continued my walk toward the wall .
#
#
(c / continue-01~e.1 
	 :arg0 (i / i~e.0) 
	 :arg1 (w / walk-01~e.3 
		 :arg0 coref 
		 :direction (t / toward~e.4 
			 :op1 (w2 / wall~e.6))))

#
# ::snt at no time did i see or hear anyone .
#
#
(o / or~e.6 
	 :op1 (s / see-01~e.5 
		 :polarity -~e.3 
		 :arg0 (i / i~e.4) 
		 :arg1 (a / anyone~e.8)) 
	 :op2 (h / hear-01~e.7 
		 :polarity~e.1 -~e.1 
		 :arg0 coref 
		 :arg1 coref) 
	 :time~e.0 (e / ever~e.2))

#
# ::snt the little prince , however , replied once again : " -- exactly .
#
#
(c / contrast-01~e.4 
	 :arg2 (r / reply-01~e.6 
		 :arg0 (p / prince~e.2 
			 :mod (l / little~e.1)) 
		 :arg2 (e / exact~e.12) 
		 :mod (a / again~e.8) 
		 :time (o / once~e.7)))

#
# ::snt you will see where my track begins , in the sand .
#
#
(s / see-01~e.2 
	 :arg0 (y2 / you~e.0) 
	 :arg1 (b2 / begin-01~e.6 
		 :arg1 (t2 / track~e.5 
			 :poss~e.4 (i / i~e.4)) 
		 :location~e.8 (s3 / sand~e.10)))

#
# ::snt you have nothing to do but wait for me there .
#
#
(h2 / have-03~e.1 
	 :arg0 (y / you~e.0) 
	 :arg1 (n / nothing~e.2 
		 :arg1-of (d / do-02~e.4 
			 :arg0 coref) 
		 :arg1-of (c / contrast-01~e.5 
			 :arg2 (w2 / wait-01~e.6 
				 :arg1 coref 
				 :arg2 (i / i~e.8) 
				 :location~e.9 (t2 / there~e.9)))))

#
# ::snt i shall be there tonight . "
#
#
(t / there~e.3 
	 :location-of~e.1 (i / i~e.0) 
	 :time (d / date-entity 
		 :dayperiod~e.4 (n / night~e.4) 
		 :mod (t2 / today~e.4)))

#
# ::snt i was only twenty metres from the wall , and i still saw nothing .
#
#
(a / and~e.9 
	 :op1 (b / be-located-at-91 
		 :arg1 (i / i~e.0) 
		 :arg2 (r / relative-position~e.5 
			 :op1 (w / wall~e.7) 
			 :quant (d / distance-quantity 
				 :quant 20~e.3 
				 :unit (m / meter~e.4) 
				 :mod (o / only~e.2)))) 
	 :op2 (s / see-01~e.12 
		 :arg0 coref 
		 :arg1 (n / nothing~e.13) 
		 :mod (s2 / still~e.11)))

#
# ::snt after a silence the little prince spoke again : " you have good poison ?
#
#
(s / speak-01~e.6 
	 :arg0 (p / prince~e.5 
		 :mod (l / little~e.4)) 
	 :arg1 (h / have-03~e.11 
		 :arg0 (y / you~e.10) 
		 :arg1 (p2 / poison-01~e.13 
			 :arg1-of (g / good-02~e.12))) 
	 :mod (a / again~e.7) 
	 :time (a2 / after~e.0 
		 :op1 (s2 / silent~e.2)))

#
# ::snt you are sure that it will not make me suffer too long ? "
#
#
(s2 / sure-02~e.2 
	 :mode~e.3 interrogative~e.12 
	 :arg0 (y / you~e.0) 
	 :arg1 (s / suffer-01~e.9 
		 :polarity~e.6 -~e.6 
		 :arg0 (i / i~e.8) 
		 :arg1 (i2 / it~e.4) 
		 :arg1-of (l / long-03~e.11 
			 :degree (t / too~e.10))))

#
# ::snt i stopped in my tracks , my heart torn asunder ; but still i did not understand .
#
#
(c / contrast-01~e.11 
	 :arg1 (a / and~e.4 
		 :op1 (s / stop-01~e.1 
			 :arg1 (i / i~e.0)) 
		 :op2 (t / tear-01~e.8 
			 :arg1 (h / heart~e.7 
				 :part-of~e.6 coref) 
			 :mod (a2 / asunder~e.9))) 
	 :arg2 (u / understand-01~e.16 
		 :polarity~e.15 -~e.14 
		 :arg0 coref 
		 :mod (s2 / still~e.12)))

#
# ::snt " now go away , " said the little prince .
#
#
(s / say-01~e.6 
	 :arg0 (p / prince~e.9 
		 :mod (l / little~e.8)) 
	 :arg1 (g / go-02~e.2 
		 :arg0 (y / you~e.2) 
		 :arg1 (a / away~e.3) 
		 :time (n / now~e.1)))

#
# ::snt " i want to get down from the wall . "
#
#
(w / want-01~e.2 
	 :arg0 (i / i~e.1) 
	 :arg1 (g / get-05~e.4 
		 :arg0 coref 
		 :arg2 (r / relative-position~e.6 
			 :op1 (w2 / wall~e.8) 
			 :direction (d / down~e.5))))

#
# ::snt i dropped my eyes , then , to the foot of the wall - - and i leaped into the air .
#
#
(a / and~e.15 
	 :op1 (d / drop-01~e.1 
		 :arg0 (i / i~e.0) 
		 :arg1 (e / eye~e.3 
			 :part-of~e.2 coref) 
		 :arg4~e.7 (f / foot~e.9 
			 :part-of~e.10 (w / wall~e.12)) 
		 :time (t / then~e.5)) 
	 :op2 (l / leap-03~e.17 
		 :arg0 coref 
		 :destination~e.18 (a2 / air~e.20)))

#
# ::snt there before me , facing the little prince , was one of those yellow snakes that take just thirty seconds to bring your life to an end .
#
#
(s3 / snake~e.14 
	 :arg1-of~e.15 (y / yellow-02~e.13) 
	 :arg2-of~e.12 (t / take-10~e.16 
		 :arg0 (e / end-01~e.26 
			 :arg1 (l2 / life~e.23 
				 :poss~e.22 (y2 / you))) 
		 :arg1 (t2 / temporal-quantity 
			 :quant 30~e.18 
			 :unit (s2 / second~e.19) 
			 :mod (j / just~e.17))) 
	 :location~e.0 (b / before~e.1 
		 :op1 (i / i~e.2)) 
	 :arg0-of (f / face-01~e.4 
		 :arg1 (p / prince~e.7 
			 :mod (l / little~e.6))))

#
# ::snt even as i was digging into my pocked to get out my revolver i made a running step back .
#
#
(c / contrast-01~e.0 
	 :arg1 (s / step-01~e.17 
		 :arg1 (i / i~e.2) 
		 :arg2 (b / back~e.18) 
		 :manner (r / run-02~e.16)) 
	 :arg2 (d / dig-01~e.4 
		 :arg0 (i / i~e.2) 
		 :arg2 (p / pocket~e.7 
			 :poss~e.6 coref) 
		 :arg3 (r2 / revolver~e.12 
			 :poss~e.11 coref) 
		 :purpose~e.8 (g / get-01~e.9 
			 :arg0 coref 
			 :arg1 (r2 / revolver~e.12 
				 :poss~e.11 coref))))

#
# ::snt but , at the noise i made , the snake let himself flow easily across the sand like the dying spray of a fountain , and , in no apparent hurry , disappeared , with a light metallic sound , among the stones .
#
#
(c / contrast-01~e.0 
	 :arg2 (a / and~e.25 
		 :op1 (l2 / let-01~e.10 
			 :arg0 (s3 / snake~e.9) 
			 :arg1 (f / flow-01~e.12 
				 :arg1 coref 
				 :arg1-of (e / easy-05~e.13) 
				 :arg1-of (r / resemble-01~e.17 
					 :arg2 (s5 / spray~e.20 
						 :arg1-of (d2 / die-down-02~e.19) 
						 :poss (f2 / fountain~e.23))) 
				 :path (a3 / across~e.14 
					 :op1 (s4 / sand~e.16))) 
			 :arg1-of (c2 / cause-01~e.21 
				 :arg0 (n / noise~e.4 
					 :arg1-of (m2 / make-01~e.6 
						 :arg0 (i / i~e.5))))) 
		 :op2 (d / disappear-01~e.32 
			 :arg1 coref 
			 :arg1-of (h / hurry-01~e.30 
				 :polarity~e.28 -~e.28 
				 :mod (a2 / apparent~e.29)) 
			 :location~e.27 (a4 / among~e.40 
				 :op1 (s2 / stone~e.42)) 
			 :arg0-of (s / sound-02~e.38 
				 :arg3~e.34 (m / metallic~e.37) 
				 :arg1-of (l / light-06~e.36)))))

#
# ::snt i reached the wall just in time to catch my little man in my arms ; his face was white as snow .
#
#
(m / multi-sentence~e.3 
	 :snt1~e.6 (r / reach-01~e.1 
		 :arg0 (i / i~e.0) 
		 :arg1 (w2 / wall~e.3) 
		 :time~e.5 (c / catch-01~e.8 
			 :arg0 coref 
			 :arg1 (m2 / man~e.11 
				 :mod (l / little~e.10) 
				 :poss~e.9 coref) 
			 :mod (j / just~e.4) 
			 :location~e.5 (a / arm~e.14 
				 :part-of~e.13 coref))) 
	 :snt2~e.16 (f / face~e.17 
		 :arg1-of (w / white-03~e.19 
			 :degree (e / equal~e.20) 
			 :compared-to~e.20 (s / snow~e.21)) 
		 :part-of~e.13 coref))

#
# ::snt " what does this mean ? "
#
#
(m / mean-01~e.4 
	 :arg1 (t / this~e.3) 
	 :arg2 (a / amr-unknown~e.5))

#
# ::snt i demanded .
#
#
(d / demand-01~e.1 
	 :arg0 (i / i~e.0))

#
# ::snt " why are you talking with snakes ? "
#
#
(t / talk-01~e.4 
	 :arg0 (y / you~e.3) 
	 :arg2 (s / snake~e.6) 
	 :purpose~e.1 (a / amr-unknown~e.7))

#
# ::snt i had loosened the golden muffler that he always wore .
#
#
(l / loosen-01~e.2 
	 :arg0 (i / i~e.0) 
	 :arg1 (m / muffler~e.5 
		 :consist-of (g / gold~e.4) 
		 :arg1-of~e.1 (w / wear-01~e.9 
			 :arg0 (h / he~e.7) 
			 :time (a / always~e.8))))

#
# ::snt i had moistened his temples , and had given him some water to drink .
#
#
(a / and~e.6 
	 :op1 (m / moisten-01~e.2 
		 :arg0 (i / i~e.0) 
		 :arg1 (t / temple~e.4 
			 :poss~e.3 (h / he~e.9))) 
	 :op2 (g / give-01~e.8 
		 :arg0 coref 
		 :arg1 (w / water~e.11 
			 :quant (s / some~e.10) 
			 :purpose~e.12 (d / drink-01~e.13)) 
		 :arg2 coref))

#
# ::snt and now i did not dare ask him any more questions .
#
#
(a / and~e.0 
	 :op2 (d / dare-01~e.5 
		 :polarity~e.4 -~e.3 
		 :arg1 (i / i~e.2) 
		 :arg2 (q2 / question-01~e.10 
			 :arg0 coref 
			 :arg2 (h / he~e.7) 
			 :mod (m / more~e.9 
				 :mod (a3 / any~e.8)))) 
	 :time (n / now~e.1))

#
# ::snt he looked at me very gravely , and put his arms around my neck .
#
#
(a / and~e.7 
	 :op1 (l / look-01~e.1 
		 :arg0 (h / he~e.0) 
		 :arg1 (i / i~e.3) 
		 :manner (g / grave~e.5 
			 :degree (v / very~e.4))) 
	 :op2 (p / put-01~e.8 
		 :arg0 coref 
		 :arg1 (a2 / arm~e.10 
			 :part-of~e.9 coref) 
		 :arg2 (a3 / around~e.11 
			 :op1 (n / neck~e.13 
				 :part-of~e.12 coref))))

#
# ::snt i felt his heart beating like the heart of a dying bird , shot with someone 's rifle ...
#
#
(f / feel-01~e.1 
	 :arg0 (i / i~e.0) 
	 :arg1 (h4 / heart~e.3 
		 :part-of~e.2 (h2 / he~e.2) 
		 :arg1-of (b / beat-01~e.4 
			 :arg1-of (r / resemble-01~e.5 
				 :arg2 (h3 / heart~e.7 
					 :part-of~e.2 (b2 / bird~e.11 
						 :arg1-of (d / die-01~e.10) 
						 :arg1-of (s / shoot-02~e.13 
							 :arg2 (r2 / rifle~e.17 
								 :poss~e.16 (s2 / someone~e.15)))))))))

#
# ::snt " i am glad that you have found what was the matter with your engine , " he said .
#
#
(s / say-01~e.18 
	 :arg0 (h / he~e.17) 
	 :arg1 (g / glad-02~e.3 
		 :arg0 (f / find-01~e.7 
			 :arg0 (y / you~e.5) 
			 :arg1 (a / amr-unknown~e.8 
				 :arg0-of (c / cause-01 
					 :arg1 (h2 / have-03~e.6 
						 :arg1 (p / problem~e.11 
							 :topic~e.12 (e / engine~e.14 
								 :poss~e.13 coref)))))) 
		 :arg1 (i / i~e.1)))

#
# ::snt " now you can go back home - - "
#
#
(p / possible-01~e.3 
	 :arg1 (g / go-02~e.4 
		 :arg0 (y / you~e.2) 
		 :arg4~e.5 (h / home~e.6) 
		 :direction (b / back~e.5)) 
	 :time (n / now~e.1))

#
# ::snt " how do you know about that ? "
#
#
(k / know-01~e.4 
	 :arg0 (y / you~e.3) 
	 :arg1 (t / that~e.6) 
	 :manner~e.1 (a / amr-unknown~e.7))

#
# ::snt i was just coming to tell him that my work had been successful , beyond anything that i had dared to hope .
#
#
(c / come-01~e.3 
	 :arg1 (i / i~e.0) 
	 :purpose~e.4 (t / tell-01~e.5 
		 :arg0 coref 
		 :arg1 (s2 / succeed-01~e.12 
			 :arg1 (w / work-01~e.9 
				 :arg0 coref) 
			 :degree (b / beyond~e.14 
				 :op1 (a / anything~e.15 
					 :arg1-of~e.10 (h2 / hope-01~e.21 
						 :arg0 coref 
						 :arg2-of~e.20 (d / dare-01~e.19 
							 :arg1 coref))))) 
		 :arg2 (h / he~e.6)) 
	 :mod (j / just~e.2))

#
# ::snt he made no answer to my question , but he added : " i , too , am going back home today ... "
#
#
(c / contrast-01~e.8 
	 :arg1 (m / make-01~e.1 
		 :arg0 (h / he~e.0) 
		 :arg1 (a / answer-01~e.3 
			 :polarity~e.2 -~e.2 
			 :arg0 (h / he~e.0) 
			 :arg1 (q / question-01~e.6 
				 :arg0 (i / i~e.13)))) 
	 :arg2 (a2 / add-01~e.10 
		 :arg0 coref 
		 :arg1 (r / return-01~e.18 
			 :arg1 coref 
			 :arg4~e.19 (h2 / home~e.20) 
			 :time (t / today~e.21) 
			 :mod (t2 / too~e.15))))

#
# ::snt then , sadly - - " it is much farther ... it is much more difficult ... "
#
#
(s2 / say-01~e.2 
	 :arg1 (a / and 
		 :op1 (f / far~e.9 
			 :mod (m3 / much~e.8 
				 :quant (m4 / more~e.9)) 
			 :domain~e.11 (i / it~e.11)) 
		 :op2 (d / difficult~e.15 
			 :degree (m / more~e.14 
				 :quant (m2 / much~e.13)) 
			 :domain~e.11 coref)) 
	 :time (t / then~e.0) 
	 :manner (s / sad-02~e.15))

#
# ::snt i realised clearly that something extraordinary was happening .
#
#
(r / realize-01~e.1 
	 :arg0 (i / i~e.0) 
	 :arg1 (e2 / event~e.7 
		 :mod (e / extraordinary~e.5)) 
	 :arg1-of~e.3 (c / clear-06~e.2))

#
# ::snt i was holding him close in my arms as if he were a little child ; and yet it seemed to me that he was rushing headlong toward an abyss from which i could do nothing to restrain him ...
#
#
(a / and~e.16 
	 :op1 (h / hold-01~e.2 
		 :arg0 (i / i~e.0) 
		 :arg1 (h2 / he~e.3) 
		 :arg1-of (c / close-10~e.4) 
		 :location~e.5 (a2 / arm~e.7 
			 :part-of~e.6 coref) 
		 :arg1-of (r / resemble-01~e.8 
			 :arg2 (c2 / child~e.14 
				 :mod (l / little~e.13) 
				 :domain~e.18 coref))) 
	 :op2 (s / seem-01~e.19 
		 :arg1 (r2 / rush-01~e.25 
			 :arg1 coref 
			 :arg2 (t / toward~e.27 
				 :op1 (a3 / abyss~e.29 
					 :arg2-of~e.30 (r3 / restrain-01~e.37 
						 :polarity~e.35 -~e.34 
						 :arg0 coref 
						 :arg1 coref)) 
				 :mod (h3 / headlong~e.26))) 
		 :arg2 coref 
		 :mod (y / yet~e.17)))

#
# ::snt his look was very serious , like some one lost far away .
#
#
(l / look-01~e.1 
	 :arg0 (h / he~e.0) 
	 :arg2-of~e.0 (s / serious-01~e.4 
		 :degree (v / very~e.3)) 
	 :arg1-of (r / resemble-01~e.6 
		 :arg2 (s2 / someone~e.7 
			 :arg1-of (l2 / lose-02~e.9 
				 :direction (a / away~e.11 
					 :mod (f / far~e.10))))))

#
# ::snt " i have your sheep .
#
#
(h / have-03~e.2 
	 :arg0 (i / i~e.1) 
	 :arg1 (s / sheep~e.4 
		 :poss~e.3 (y / you~e.3)))

#
# ::snt and i have the sheep 's box .
#
#
(a / and~e.0 
	 :op2 (h / have-03~e.2 
		 :arg0 (i / i~e.1) 
		 :arg1 (b / box~e.6 
			 :poss~e.5 (s / sheep~e.4))))

#
# ::snt and i have the muzzle ... "
#
#
(a / and~e.0 
	 :op2 (h / have-03~e.2 
		 :arg0 (i / i~e.1) 
		 :arg1 (m / muzzle~e.4)))

#
# ::snt and he gave me a sad smile .
#
#
(a / and~e.0 
	 :op2 (g / give-01~e.2 
		 :arg0 (h / he~e.1) 
		 :arg1 (s / smile~e.6 
			 :arg1-of (s2 / sad-02~e.5)) 
		 :arg2 (i / i~e.3)))

#
# ::snt i waited a long time .
#
#
(w / wait-01~e.1 
	 :arg1 (i / i~e.0) 
	 :arg1-of~e.4 (l / long-03~e.3))

#
# ::snt i could see that he was reviving little by little .
#
#
(p / possible-01~e.1 
	 :arg1 (s / see-01~e.2 
		 :arg0 (i / i~e.0) 
		 :arg1 (r / revive-01~e.6 
			 :arg1 (h / he~e.4) 
			 :manner~e.8 (l / little-by-little~e.9))))

#
# ::snt " dear little man , "
#
#
(m2 / man~e.3 
	 :mod (l2 / little~e.2) 
	 :mod (d / dear~e.1))

#
# ::snt i said to him , " you are afraid ... "
#
#
(s / say-01~e.1 
	 :arg0 (i / i~e.0) 
	 :arg1 (f / fear-01~e.8 
		 :arg0 (h / he~e.3)) 
	 :arg2 (h / he~e.3))

#
# ::snt he was afraid , there was no doubt about that .
#
#
(f / fear-01~e.2 
	 :arg0 (h / he~e.0) 
	 :mod (c / certain~e.7))

#
# ::snt but he laughed lightly .
#
#
(c / contrast-01~e.0 
	 :arg2 (l / laugh-01~e.2 
		 :arg0 (h / he~e.1) 
		 :manner (l2 / light-06~e.3)))

#
# ::snt " i shall be much more afraid this evening ... "
#
#
(f / fear-01~e.6 
	 :arg0 (i / i~e.1) 
	 :degree (m / more~e.5 
		 :mod (m2 / much~e.4)) 
	 :time (d / date-entity 
		 :dayperiod~e.7 (e / evening~e.8) 
		 :mod (t / today~e.2)))

#
# ::snt once again i felt myself frozen by the sense of something irreparable .
#
#
(f / feel-01~e.3 
	 :arg0 (i / i~e.2) 
	 :arg1 (f2 / freeze-01~e.5 
		 :arg0 (s / sense-01~e.8 
			 :arg0 coref 
			 :arg1 (s2 / something~e.10 
				 :arg1-of (r / repair-01~e.6 
					 :arg1-of (p / possible-01~e.4 
						 :polarity -)))) 
		 :arg1 coref) 
	 :mod (a / again~e.1 
		 :frequency~e.0 1~e.11))

#
# ::snt and i knew that i could not bear the thought of never hearing that laughter any more .
#
#
(a / and~e.0 
	 :op2 (k / know-01~e.2 
		 :arg0 (i / i~e.1) 
		 :arg1 (p / possible-01~e.5 
			 :polarity~e.6 -~e.6 
			 :arg1 (b / bear-01~e.7 
				 :arg1 (t / think-01~e.9 
					 :arg1 (h / hear-01~e.12 
						 :polarity~e.11 -~e.11 
						 :arg1 (l / laugh-01~e.14) 
						 :time (e / ever~e.11) 
						 :mod (m / more~e.16 
							 :mod (a2 / any~e.15))))))))

#
# ::snt for me , it was like a spring of fresh water in the desert .
#
#
(r / resemble-01~e.5 
	 :arg1 (i / it~e.3) 
	 :arg2 (s / spring~e.7 
		 :source-of~e.6 (w / water~e.10 
			 :arg1-of (f / fresh-04~e.9)) 
		 :location~e.11 (d / desert~e.13)) 
	 :beneficiary~e.0 (i2 / i~e.1))

#
# ::snt " little man , "
#
#
(m / man~e.2 
	 :mod (l / little~e.1))

#
# ::snt i said , " i want to hear you laugh again . "
#
#
(s / say-01~e.1 
	 :arg0 (i / i~e.4) 
	 :arg1 (w / want-01~e.5 
		 :arg0 (i / i~e.4) 
		 :arg1 (h / hear-01~e.7 
			 :arg0 coref 
			 :arg1 (l / laugh-01~e.9 
				 :arg0 (y / you~e.8) 
				 :mod (a / again~e.10)))))

#
# ::snt but he said to me : " tonight , it will be a year ... my star , then , can be found right above the place where i came to the earth , a year ago ... "
#
#
(c / contrast-01~e.0 
	 :arg2 (s / say-01~e.2 
		 :arg0 (h / he~e.1) 
		 :arg1 (p / possible-01~e.20 
			 :arg1 (f / find-01~e.22 
				 :arg1 (s2 / star~e.16 
					 :poss~e.15 coref) 
				 :location (a / above~e.24 
					 :op1 (p2 / place~e.26 
						 :location~e.27 (e / earth~e.32) 
						 :arg4-of~e.29 (c2 / come-01~e.29 
							 :time (b / before~e.36 
								 :op1 (n / now~e.35) 
								 :quant (t3 / temporal-quantity 
									 :quant 1~e.34 
									 :unit (y2 / year~e.35))))) 
					 :mod (r / right~e.23))) 
			 :time (d / date-entity 
				 :dayperiod (n2 / night~e.10) 
				 :mod (t / today~e.7)) 
			 :duration~e.12 (y / year~e.13) 
			 :mod (t2 / then~e.18)) 
		 :arg2 (i / i~e.28)))

#
# ::snt " little man , "
#
#
(m / man~e.2 
	 :mod (l / little~e.1))

#
# ::snt i said , " tell me that it is only a bad dream - - this affair of the snake , and the meeting - place , and the star ... "
#
#
(s / say-01~e.1 
	 :arg0 (i / i~e.0) 
	 :arg1 (t / tell-01~e.4 
		 :arg0 (y / you) 
		 :arg1 (d / dream-01~e.12 
			 :arg0 coref 
			 :arg1 (a / and~e.21 
				 :op1 (a2 / affair-02~e.16 
					 :arg1 (s2 / snake~e.19) 
					 :arg2 (t2 / this~e.15)) 
				 :op2 (m / meet-01~e.23 
					 :location (p / place~e.25)) 
				 :op3 (s3 / star~e.29)) 
			 :arg1-of (b / bad-07~e.11) 
			 :mod (o / only~e.9)) 
		 :arg2 coref))

#
# ::snt but he did not answer my plea .
#
#
(c / contrast-01~e.0 
	 :arg2 (a / answer-01~e.4 
		 :arg0 (h / he~e.1) 
		 :arg1 (p / plea~e.6 
			 :poss~e.5 (i / i~e.5)) 
		 :polarity~e.3 -~e.2))

#
# ::snt he said to me , instead : " the thing that is important is the thing that is not seen ... "
#
#
(s3 / say-01~e.1 
	 :arg0 (h / he~e.0) 
	 :arg1 (i2 / important~e.12 
		 :domain (t / thing~e.9 
			 :arg1-of~e.10 (s2 / see-01~e.19 
				 :polarity~e.18 -~e.18))) 
	 :arg2 (i3 / i~e.3) 
	 :arg1-of (i / instead-of-91~e.5))

#
# ::snt " yes , i know ... "
#
#
(k / know-01~e.4 
	 :arg0 (i / i~e.3))

#
# ::snt " it is just as it is with the flower .
#
#
(r / resemble-01~e.4 
	 :arg1 (i / it~e.5) 
	 :arg2 (f / flower~e.9) 
	 :mod (j / just~e.3))

#
# ::snt if you love a flower that lives on a star , it is sweet to look at the sky at night .
#
#
(l / look-01~e.15 
	 :arg1 (s2 / sky~e.18 
		 :time~e.16 (d / date-entity 
			 :dayperiod~e.19 (n / night~e.20))) 
	 :arg1-of (s / sweet-04~e.13) 
	 :condition~e.0 (l2 / love-01~e.2 
		 :arg0 (y / you~e.1) 
		 :arg1 (f / flower~e.4 
			 :arg0-of (l3 / live-01~e.6 
				 :location~e.7 (s3 / star~e.9)))))

#
# ::snt all the stars are a - bloom with flowers ... "
#
#
(b / bloom-01~e.6 
	 :arg0 (f / flower~e.8) 
	 :location (s / star~e.2 
		 :mod (a / all~e.0)))

#
# ::snt " yes , i know ... "
#
#
(k / know-01~e.4 
	 :arg0 (i / i~e.3))

#
# ::snt " it is just as it is with the water .
#
#
(r / resemble-01~e.4 
	 :arg1 (i / it~e.1) 
	 :arg2 (w / water~e.9) 
	 :mod (j / just~e.3))

#
# ::snt because of the pulley , and the rope , what you gave me to drink was like music .
#
#
(c / cause-01~e.0 
	 :arg0 (a / and~e.5 
		 :op1 (p / pulley~e.3) 
		 :op2 (r / rope~e.7)) 
	 :arg1 (r2 / resemble-01~e.16 
		 :arg1 (t / thing~e.9 
			 :arg1-of~e.11 (g / give-01~e.11 
				 :arg0 (y / you~e.10) 
				 :arg2 (i / i~e.12) 
				 :purpose~e.13 (d / drink-01~e.14 
					 :arg0 coref))) 
		 :arg2 (m / music~e.17)))

#
# ::snt you remember - - how good it was . "
#
#
(r / remember-01~e.1 
	 :arg0 (y / you~e.0) 
	 :arg1 (g / good-02~e.5 
		 :arg1 (i / it~e.6) 
		 :degree (s / so~e.4)))

#
# ::snt " yes , i know ... "
#
#
(k / know-01~e.4 
	 :arg0 (i / i~e.3))

#
# ::snt " and at night you will look up at the stars .
#
#
(a / and~e.1 
	 :op2 (l / look-01~e.6 
		 :arg0 (y / you~e.4) 
		 :arg1 (s / star~e.10) 
		 :direction (u / up~e.7) 
		 :time~e.8 (d / date-entity 
			 :dayperiod~e.2 (n / night~e.3))))

#
# ::snt where i live everything is so small that i can not show you where my star is to be found .
#
#
(p / possible-01~e.9 
	 :polarity~e.10 -~e.10 
	 :arg1 (s / show-01~e.11 
		 :arg0 (i / i~e.8) 
		 :arg1 (l / location~e.13 
			 :location-of~e.13 (f / find-01~e.19 
				 :arg1 (s2 / star~e.15 
					 :poss~e.14 coref))) 
		 :arg2 (y2 / you~e.12)) 
	 :arg1-of (c / cause-01 
		 :arg0 (e / everything~e.3 
			 :mod (s3 / small~e.6 
				 :degree (s4 / so~e.5)) 
			 :location~e.0 (l2 / live-01~e.2 
				 :arg0 coref))))

#
# ::snt it is better , like that .
#
#
(r / resemble-01~e.4 
	 :arg1 (i / it~e.0 
		 :arg1-of (g / good-02~e.2 
			 :degree (m / more~e.2))) 
	 :arg2 (t / that~e.5))

#
# ::snt my star will just be one of the stars , for you .
#
#
(s / star~e.1 
	 :quant 1~e.5 
	 :beneficiary~e.10 (y / you~e.11) 
	 :poss~e.0 (i / i~e.0) 
	 :arg1-of (i2 / include-91~e.6 
		 :arg2 (s2 / star~e.8) 
		 :mod (j / just~e.3)))

#
# ::snt and so you will love to watch all the stars in the heavens ... they will all be your friends .
#
#
(a / and~e.0 
	 :op2 (l / love-01~e.4 
		 :arg0 (y / you~e.2) 
		 :arg1 (w / watch-01~e.6 
			 :arg0 coref 
			 :arg1 (s / star~e.9 
				 :location~e.10 (h / heaven~e.12) 
				 :mod (a2 / all~e.16) 
				 :arg0-of (h2 / have-rel-role-91~e.15 
					 :arg1 coref 
					 :arg2 (f / friend~e.19))))))

#
# ::snt and , besides , i am going to make you a present ... "
#
#
(a / and~e.0 
	 :op1 (m / make-01~e.8 
		 :arg0 (i / i~e.4) 
		 :arg1 (p / present~e.11) 
		 :arg3~e.6 (y / you~e.9)))

#
# ::snt he laughed again .
#
#
(l / laugh-01~e.1 
	 :arg0 (h / he~e.0) 
	 :mod (a / again~e.2))

#
# ::snt " ah , little prince , dear little prince !
#
#
(a / and 
	 :mode~e.9 expressive~e.1 
	 :op2 (p2 / prince~e.8 
		 :mod (l2 / little~e.7) 
		 :mod (d / dear~e.6)))

#
# ::snt i love to hear that laughter ! "
#
#
(l / love-01~e.1 
	 :arg0 (i / i~e.0) 
	 :arg1 (h / hear-01~e.3 
		 :arg0 coref 
		 :arg1 (l2 / laugh-01~e.5 
			 :mod (t / that~e.4))))

#
# ::snt " that is my present .
#
#
(p / present-01~e.4 
	 :arg0 (i / i~e.3) 
	 :arg1 (t / that~e.1))

#
# ::snt just that .
#
#
(t / that~e.1 
	 :mod (j / just~e.0))

#
# ::snt it will be as it was when we drank the water ... "
#
#
(r / resemble-01~e.3 
	 :arg1 (i / it~e.0) 
	 :arg2 (t / time~e.4 
		 :time-of~e.6 (d / drink-01~e.8 
			 :arg0 (w / we~e.7) 
			 :arg1 (w2 / water~e.10))))

#
# ::snt " what are you trying to say ? "
#
#
(t / try-01~e.4 
	 :arg0 (y / you~e.3) 
	 :arg1 (s / say-01~e.6 
		 :arg0 coref 
		 :arg1 (a / amr-unknown~e.7)))

#
# ::snt " all men have the stars , " he answered , " but they are not the same things for different people .
#
#
(a / answer-01~e.9 
	 :arg0 (h / he~e.8) 
	 :arg2 (c / contrast-01~e.12 
		 :arg1 (h2 / have-03~e.3 
			 :arg0 (m / man~e.2 
				 :mod (a2 / all~e.1)) 
			 :arg1 (s / star~e.5)) 
		 :arg2 (t / thing~e.18 
			 :arg1-of~e.17 (s2 / same-01~e.17 
				 :polarity~e.15 -~e.15 
				 :arg2 coref 
				 :arg3~e.19 (p / person~e.21 
					 :arg1-of~e.20 (d2 / differ-02~e.20))))))

#
# ::snt for some , who are travelers , the stars are guides .
#
#
(g / guide-01~e.10 
	 :arg0 (s / star~e.8) 
	 :arg1 (s2 / some~e.1 
		 :arg0-of~e.0 (t / travel-01~e.5)))

#
# ::snt for others they are no more than little lights in the sky .
#
#
(o2 / opine-01~e.0 
	 :arg0 (p / person~e.4 
		 :mod (o / other~e.1)) 
	 :arg1 (l / light~e.8 
		 :mod (l2 / little~e.7) 
		 :location~e.9 (s / sky~e.11) 
		 :mod (o3 / only~e.5) 
		 :domain (t / they~e.2)))

#
# ::snt for others , who are scholars , they are problems .
#
#
(o / opine-01~e.0 
	 :arg0 (s / scholar~e.5) 
	 :arg1 (p / problem~e.9 
		 :domain (t / they~e.7)))

#
# ::snt for my businessman they were wealth .
#
#
(o / opine-01~e.0 
	 :arg0 (b / businessman~e.2 
		 :poss~e.1 (i / i~e.1)) 
	 :arg1 (w / wealth~e.5 
		 :domain (t / they~e.3)))

#
# ::snt but all these stars are silent .
#
#
(c / contrast-01~e.0 
	 :arg2 (s2 / silent~e.5 
		 :domain (s / star~e.3 
			 :mod (t / this~e.2 
				 :mod (a / all~e.1)))))

#
# ::snt you - - you alone - - will have the stars as no one else has them - - "
#
#
(h / have-03~e.8 
	 :arg0 (y / you~e.0 
		 :mod (a / alone~e.4)) 
	 :arg1 (s / star~e.10) 
	 :arg1-of (r / resemble-01~e.11 
		 :polarity~e.12 -~e.12 
		 :arg2 (h2 / have-03~e.15 
			 :arg0 (a2 / anyone~e.13 
				 :mod (e / else~e.14)) 
			 :arg1 coref)))

#
# ::snt " what are you trying to say ? "
#
#
(t / try-01~e.4 
	 :arg0 (y / you~e.3) 
	 :arg1 (s / say-01~e.6 
		 :arg0 coref 
		 :arg1 (a / amr-unknown~e.7)))

#
# ::snt " in one of the stars i shall be living .
#
#
(l / live-01~e.7 
	 :arg0 (i / i~e.6) 
	 :location~e.1 (s / star~e.5 
		 :quant 1~e.2 
		 :arg1-of (i2 / include-91~e.9 
			 :arg2 (s2 / star~e.5))))

#
# ::snt in one of them i shall be laughing .
#
#
(l / laugh-01~e.7 
	 :arg0 (i / i~e.4) 
	 :location~e.0 (s / star~e.2 
		 :quant 1~e.1 
		 :arg1-of (i2 / include-91~e.3 
			 :arg2 (t / they~e.3))))

#
# ::snt and so it will be as if all the stars were laughing , when you look at the sky at night ... you - - only you - - will have stars that can laugh ! "
#
#
(a / and~e.0 
	 :op2 (r / resemble-01~e.5 
		 :arg1 (i2 / it~e.2) 
		 :arg2 (l2 / laugh-01~e.11 
			 :arg0 (s / star~e.9 
				 :mod (a3 / all~e.7))) 
		 :time~e.13 (l3 / look-01~e.15 
			 :arg0 (y / you~e.14 
				 :mod (o2 / only~e.25)) 
			 :arg1 (s2 / sky~e.18) 
			 :time (d / date-entity 
				 :dayperiod~e.19 (n / night~e.20) 
				 :time-of~e.13 (h / have-03~e.30 
					 :arg0 coref 
					 :arg1 (s3 / star~e.31 
						 :arg0-of (l / laugh-01~e.34 
							 :arg1-of~e.32 (p / possible-01~e.33))))))))

#
# ::snt and he laughed again .
#
#
(a / and~e.0 
	 :op2 (l / laugh-01~e.2 
		 :arg0 (h / he~e.1) 
		 :mod (a2 / again~e.3)))

#
# ::snt " and when your sorrow is comforted ( time soothes all sorrows ) you will be content that you have known me .
#
#
(a / and~e.1 
	 :op2 (c / content-01~e.16 
		 :arg1 (y / you~e.13) 
		 :arg2 (k / know-02~e.20 
			 :arg0 coref 
			 :arg1 (i / i~e.21)) 
		 :time~e.2 (c2 / comfort-01~e.6 
			 :arg1 (s / sorrow-01~e.4 
				 :arg0 coref 
				 :arg1-of (s2 / soothe-01~e.9 
					 :arg0 (t / time~e.8)) 
				 :mod (a2 / all~e.10)))))

#
# ::snt you will always be my friend .
#
#
(h / have-rel-role-91~e.1 
	 :arg0 (y / you~e.0) 
	 :arg1 (i / i~e.4) 
	 :arg2 (f / friend~e.5) 
	 :time (a / always~e.2))

#
# ::snt you will want to laugh with me .
#
#
(w / want-01~e.2 
	 :arg0 (y / you~e.0) 
	 :arg1 (l / laugh-01~e.4 
		 :arg0 coref 
		 :accompanier~e.5 (i / i~e.6)))

#
# ::snt and you will sometimes open your window , so , for that pleasure ... and your friends will be properly astonished to see you laughing as you look up at the sky !
#
#
(a / and~e.0 
	 :op1 (o / open-01~e.4 
		 :arg0 (y / you~e.1) 
		 :arg1 (w / window~e.6 
			 :poss~e.5 coref) 
		 :time (s / sometimes~e.3) 
		 :purpose~e.10 (p / pleasure~e.12 
			 :mod (t / that~e.11))) 
	 :op2 (a2 / astonish-01~e.20 
		 :arg0 (s2 / see-01~e.22 
			 :arg0 (p3 / person~e.32 
				 :arg0-of~e.17 (h / have-rel-role-91~e.17 
					 :arg1 coref 
					 :arg2 (f / friend~e.16))) 
			 :arg1 (l / laugh-01~e.24 
				 :arg0 (y2 / you~e.23) 
				 :time~e.25 (l2 / look-01~e.27 
					 :arg1 (s3 / sky~e.31) 
					 :direction~e.29 (u / up~e.28)))) 
		 :arg1 (p3 / person~e.32 
			 :arg0-of~e.17 (h / have-rel-role-91~e.17 
				 :arg1 coref 
				 :arg2 (f / friend~e.16))) 
		 :manner (p2 / proper~e.19)))

#
# ::snt then you will say to them , ' yes , the stars always make me laugh ! ' and they will think you are crazy .
#
#
(a / and~e.18 
	 :op1 (s / say-01~e.3 
		 :arg0 (y / you~e.22) 
		 :arg1 (a3 / and~e.18 
			 :op1 (y2 / yes~e.8) 
			 :op2 (m / make-02~e.13 
				 :arg0 (s3 / star~e.11) 
				 :arg1 (l2 / laugh-01~e.15 
					 :arg0 (i / i~e.14)) 
				 :time (a2 / always~e.12))) 
		 :arg2 (t2 / they~e.5) 
		 :time (t / then~e.0)) 
	 :op2 (t3 / think-01~e.21 
		 :arg0 coref 
		 :arg1 (c / crazy-03~e.24 
			 :arg1 coref)))

#
# ::snt it will be a very shabby trick that i shall have played on you ... "
#
#
(t3 / trick-01~e.6 
	 :arg0 (i / i~e.8) 
	 :arg1 (y / you~e.13) 
	 :mod (s2 / shabby~e.5 
		 :degree~e.0 (v2 / very~e.4)))

#
# ::snt and he laughed again .
#
#
(a / and~e.0 
	 :op2 (l / laugh-01~e.2 
		 :arg0 (h / he~e.1) 
		 :mod (a2 / again~e.3)))

#
# ::snt " it will be as if , in place of the stars , i had given you a great number of little bells that knew how to laugh ... "
#
#
(r / resemble-01~e.4 
	 :arg1 (g / give-01~e.15 
		 :arg0 (i / i~e.13) 
		 :arg1 (b2 / bell~e.22 
			 :mod (l3 / little~e.21) 
			 :quant (g2 / great~e.18) 
			 :arg0-of~e.20 (k / know-01~e.24 
				 :arg1 (l2 / laugh-01~e.27))) 
		 :arg2 (y / you~e.16) 
		 :arg1-of (i2 / instead-of-91~e.19 
			 :arg2 (g3 / give-01~e.15 
				 :arg0 coref 
				 :arg1 (s2 / star~e.11) 
				 :arg2 coref))))

#
# ::snt and he laughed again .
#
#
(a / and~e.0 
	 :op2 (l / laugh-01~e.2 
		 :arg0 (h / he~e.1) 
		 :mod (a2 / again~e.3)))

#
# ::snt then he quickly became serious : " tonight - - you know ... do not come , " said the little prince .
#
#
(s / say-01~e.18 
	 :arg0 (p / prince~e.21 
		 :mod (l / little~e.20) 
		 :arg1-of (b / become-01~e.3 
			 :arg2 (s2 / serious-01~e.4 
				 :arg1 coref) 
			 :arg1-of (q / quick-02~e.2) 
			 :time (t / then~e.0))) 
	 :arg1 (c / come-01~e.15 
		 :polarity~e.14 -~e.14 
		 :arg1 (y / you~e.10) 
		 :time (d / date-entity 
			 :dayperiod~e.7 (n / night~e.11) 
			 :mod (t2 / today~e.7))))

#
# ::snt " i shall not leave you , "
#
#
(l / leave-15~e.4 
	 :polarity~e.3 -~e.3 
	 :arg0 (i / i~e.1) 
	 :arg1 (y / you~e.5))

#
# ::snt i said .
#
#
(s / say-01~e.1 
	 :arg0 (i / i~e.0))

#
# ::snt " i shall look as if i were suffering .
#
#
(l / look-02~e.3 
	 :arg0 (i / i~e.1) 
	 :arg1 (h / have-manner-91~e.5 
		 :arg2 (s2 / suffer-01~e.8)))

#
# ::snt i shall look a little as if i were dying .
#
#
(l / look-02~e.2 
	 :arg0 (i / i~e.0) 
	 :arg1 (h / have-manner-91~e.6 
		 :arg2 (d2 / die-01~e.9)) 
	 :degree (l3 / little~e.4))

#
# ::snt it is like that .
#
#
(r / resemble-01~e.2 
	 :arg1 (i / it~e.0) 
	 :arg2 (t / that~e.3))

#
# ::snt do not come to see that .
#
#
(c / come-01~e.2 
	 :polarity~e.1 -~e.1 
	 :mode~e.0 imperative~e.0 
	 :arg1 (y / you) 
	 :purpose~e.3 (s / see-01~e.4 
		 :arg0 coref 
		 :arg1 (t / that~e.5)))

#
# ::snt it is not worth the trouble ... "
#
#
(w / worth-02~e.3 
	 :polarity~e.2 -~e.2 
	 :arg1 (i / it~e.0) 
	 :arg2 (t / trouble-01~e.5))

#
# ::snt " i shall not leave you . "
#
#
(l / leave-15~e.4 
	 :polarity~e.3 -~e.3 
	 :arg0 (i / i~e.1) 
	 :arg1 (y / you~e.5))

#
# ::snt but he was worried .
#
#
(c / contrast-01~e.0 
	 :arg2 (w2 / worry-01~e.3 
		 :arg1 (h / he~e.1)))

#
# ::snt " i tell you - - it is also because of the snake .
#
#
(t / tell-01~e.2 
	 :arg0 (i / i~e.1) 
	 :arg1 (c / cause-01~e.9 
		 :arg0 (s / snake~e.12) 
		 :mod (a / also~e.8)) 
	 :arg2 (y / you~e.3))

#
# ::snt he must not bite you .
#
#
(o2 / obligate-01~e.1 
	 :arg1 (b2 / bite-01~e.3 
		 :polarity~e.2 -~e.2 
		 :arg0 (h2 / he~e.0) 
		 :arg1 (y2 / you~e.4)))

#
# ::snt snakes - - they are malicious creatures .
#
#
(s / snake~e.0 
	 :mod (c / creature~e.6 
		 :mod (m / malicious~e.5)))

#
# ::snt this one might bite you just for fun ... "
#
#
(p / possible-01~e.2 
	 :arg1 (b / bite-01~e.3 
		 :arg0 (o / one~e.1 
			 :mod (t / this~e.0)) 
		 :arg1 (y / you~e.4) 
		 :purpose~e.6 (f / fun-01~e.7 
			 :mod (j / just~e.5))))

#
# ::snt " i shall not leave you . "
#
#
(l / leave-15~e.4 
	 :polarity~e.3 -~e.3 
	 :arg0 (i / i~e.1) 
	 :arg1 (y / you~e.5))

#
# ::snt but a thought came to reassure him : " it is true that they have no more poison for a second bite . "
#
#
(c / contrast-01~e.0 
	 :arg2 (c2 / come-01~e.3 
		 :arg1 (t / think-01~e.2 
			 :arg1 (t3 / true-01~e.11 
				 :arg1 (h2 / have-03~e.14 
					 :polarity~e.15 -~e.15 
					 :arg0 (t2 / they~e.13) 
					 :arg1 (p / poison~e.17 
						 :purpose~e.18 (b / bite-01~e.21 
							 :ord~e.20 (o / ordinal-entity~e.19 
								 :value 2)) 
						 :quant (m / more~e.16))) 
				 :purpose~e.4 (r / reassure-01~e.5 
					 :arg1 (h / he~e.6))))))

#
# ::snt that night i did not see him set out on his way .
#
#
(s / see-01~e.5 
	 :polarity~e.4 -~e.3 
	 :arg0 (i / i~e.2) 
	 :arg1 (s2 / set-out-07~e.7 
		 :arg0 (h / he~e.6) 
		 :arg1 (w / way~e.11 
			 :poss~e.10 coref)) 
	 :time (d / date-entity 
		 :dayperiod~e.8 (n / night~e.1) 
		 :mod (t / that~e.0)))

#
# ::snt he got away from me without making a sound .
#
#
(g / get-away-08~e.1 
	 :arg0 (h / he~e.0) 
	 :source~e.3 (i / i~e.4) 
	 :manner~e.5 (s2 / sound-02~e.8 
		 :polarity -~e.6 
		 :arg1 coref))

#
# ::snt when i succeeded in catching up with him he was walking along with a quick and resolute step .
#
#
(s / succeed-01~e.2 
	 :arg0 (i / i~e.1) 
	 :arg1 (c / catch-up-04~e.4 
		 :arg1 coref 
		 :arg2 (h / he~e.7)) 
	 :time (w / walk-01~e.10 
		 :arg0 coref 
		 :arg1-of (q / quick-02~e.14) 
		 :manner~e.17 (r2 / resolute~e.16)))

#
# ::snt he said to me merely : " ah !
#
#
(s / say-01~e.1 
	 :arg0 (h / he~e.0) 
	 :arg1 (a / ah~e.7 
		 :mode~e.8 expressive~e.8) 
	 :arg2 (i / i~e.3) 
	 :manner (m / mere~e.4))

#
# ::snt you are there ... "
#
#
(y / you~e.0 
	 :location~e.2 (t / there~e.2))

#
# ::snt and he took me by the hand .
#
#
(a / and~e.0 
	 :op2 (t / take-01~e.2 
		 :arg0 (h / he~e.1) 
		 :arg1 (i / i~e.3) 
		 :manner~e.4 (h2 / hand~e.6)))

#
# ::snt but he was still worrying .
#
#
(c / contrast-01~e.0 
	 :arg2 (w / worry-01~e.4 
		 :arg1 (h / he~e.1) 
		 :time (s2 / still~e.3)))

#
# ::snt " it was wrong of you to come .
#
#
(c / come-01~e.7 
	 :arg1 (y / you~e.5) 
	 :arg1-of (w / wrong-02~e.3))

#
# ::snt you will suffer .
#
#
(s / suffer-01~e.2 
	 :arg0 (y / you~e.0))

#
# ::snt i shall look as if i were dead ; and that will not be true ... "
#
#
(a / and~e.9 
	 :op1 (r / resemble-01~e.3 
		 :arg1 (i / i~e.5) 
		 :arg2 (i2 / i~e.0 
			 :arg1-of (d2 / die-01~e.2))) 
	 :op2 (t / true-01~e.14 
		 :polarity~e.12 -~e.12 
		 :arg1 coref))

#
# ::snt i said nothing .
#
#
(s / say-01~e.1 
	 :arg0 (i / i~e.0) 
	 :arg1 (n / nothing~e.2))

#
# ::snt " you understand ... it is too far .
#
#
(u / understand-01~e.2 
	 :arg0 (y / you~e.1) 
	 :arg1 (f / far~e.7 
		 :degree (t / too~e.6)))

#
# ::snt i can not carry this body with me .
#
#
(p / possible-01~e.1 
	 :polarity~e.2 -~e.2 
	 :arg1 (c / carry-01~e.3 
		 :arg0 (i / i~e.0) 
		 :arg1 (b / body~e.5 
			 :mod (t / this~e.4)) 
		 :arg3~e.6 (i2 / i~e.7)))

#
# ::snt it is too heavy . "
#
#
(h2 / heavy~e.3 
	 :degree~e.0 (t2 / too~e.2))

#
# ::snt i said nothing .
#
#
(s / say-01~e.1 
	 :arg0 (i / i~e.0) 
	 :arg1 (n / nothing~e.2))

#
# ::snt " but it will be like an old abandoned shell .
#
#
(c / contrast-01~e.1 
	 :arg2 (r / resemble-01~e.5 
		 :arg1 (i / it~e.2) 
		 :arg2 (s / shell~e.9 
			 :arg1-of (a / abandon-01~e.8) 
			 :mod (o / old~e.7))))

#
# ::snt there is nothing sad about old shells ... "
#
#
(s / sad-02~e.3 
	 :polarity~e.2 -~e.4 
	 :arg0 (s2 / shell~e.6 
		 :mod (o / old~e.5)))

#
# ::snt i said nothing .
#
#
(s / say-01~e.1 
	 :arg0 (i / i~e.0) 
	 :arg1 (n / nothing~e.2))

#
# ::snt he was a little discouraged .
#
#
(d / discourage-01~e.4 
	 :arg1 (h / he~e.0) 
	 :degree (l / little~e.3))

#
# ::snt but he made one more effort : " you know , it will be very nice .
#
#
(c / contrast-01~e.0 
	 :arg2 (e / effort-01~e.5 
		 :arg0 (h / he~e.1) 
		 :arg1 (n / nice-01~e.15 
			 :arg1 (i / it~e.11) 
			 :degree (v / very~e.14)) 
		 :mod (m2 / more~e.4 
			 :quant 1~e.3)))

#
# ::snt i , too , shall look at the stars .
#
#
(l / look-01~e.5 
	 :arg0 (i / i~e.0 
		 :mod (t / too~e.2)) 
	 :arg1 (s / star~e.8))

#
# ::snt all the stars will be wells with a rusty pulley .
#
#
(s / star~e.2 
	 :domain~e.7 (w / well~e.5 
		 :arg0-of (h / have-03~e.3 
			 :arg1 (p / pulley~e.9 
				 :mod (r / rust~e.8)))) 
	 :mod (a / all~e.0))

#
# ::snt all the stars will pour out fresh water for me to drink ... "
#
#
(p / pour-01~e.4 
	 :arg0 (s / star~e.2 
		 :mod (a / all~e.0)) 
	 :arg1 (w / water~e.7 
		 :arg1-of (f / fresh-04~e.6)) 
	 :purpose~e.8 (d / drink-01~e.11 
		 :arg0 (i / i~e.9) 
		 :arg1 coref) 
	 :direction (o / out~e.5))

#
# ::snt i said nothing .
#
#
(s / say-01~e.1 
	 :arg0 (i / i~e.0) 
	 :arg1 (n / nothing~e.2))

#
# ::snt " that will be so amusing !
#
#
(a / amuse-01~e.5 
	 :arg0 (t / that~e.1) 
	 :degree (s / so~e.4))

#
# ::snt you will have five hundred million little bells , and i shall have five hundred million springs of fresh water ... "
#
#
(a / and~e.9 
	 :op1 (h / have-03~e.2 
		 :arg0 (y / you~e.0) 
		 :arg1 (b / bell~e.7 
			 :quant 500000000~e.3 
			 :mod (l / little~e.6))) 
	 :op2 (h2 / have-03~e.12 
		 :arg0 (i / i~e.10) 
		 :arg1 (s / spring~e.16 
			 :quant 500000000~e.13 
			 :source-of~e.11 (w / water~e.19 
				 :arg1-of (f / fresh-04~e.18)))))

#
# ::snt and he too said nothing more , because he was crying ...
#
#
(a / and~e.0 
	 :op2 (s / say-01~e.3 
		 :arg0 (h / he~e.1 
			 :degree (t / too~e.2)) 
		 :arg1 (n / nothing~e.4 
			 :mod (m / more~e.5)) 
		 :arg1-of (c / cause-01~e.7 
			 :arg0 (c2 / cry-02~e.10 
				 :arg0 coref))))

#
# ::snt " here it is .
#
#
(i / it~e.2 
	 :location~e.1 (h / here~e.1))

#
# ::snt let me go on by myself . "
#
#
(a / allow-01~e.0 
	 :arg0 (y / you) 
	 :arg1 (g / go-on-15~e.2 
		 :arg1 (i / i~e.1) 
		 :mod (b / by-oneself~e.5)))

#
# ::snt and he sat down , because he was afraid .
#
#
(a / and~e.0 
	 :op2 (s / sit-down-02~e.2 
		 :arg1 (h / he~e.1) 
		 :arg1-of~e.3 (c / cause-01~e.5 
			 :arg0 (f / fear-01~e.8 
				 :arg0 coref))))

#
# ::snt then he said , again : " you know - - my flower ...
#
#
(s / say-01~e.2 
	 :arg0 (h / he~e.1) 
	 :arg1 (f / flower~e.12 
		 :poss~e.11 coref) 
	 :time (t / then~e.0) 
	 :mod (a / again~e.4))

#
# ::snt i am responsible for her .
#
#
(r / responsible-03~e.2 
	 :arg0 (i / i~e.0) 
	 :arg2 (s / she~e.4))

#
# ::snt and she is so weak !
#
#
(a / and~e.0 
	 :op2 (w / weak-02~e.4 
		 :arg1 (s / she~e.1) 
		 :degree (s2 / so~e.3)))

#
# ::snt she is so na√Øve !
#
#
(n / naive~e.3 
	 :degree (s2 / so~e.2) 
	 :domain~e.4 (s / she~e.0))

#
# ::snt she has four thorns , of no use at all , to protect herself against all the world ... "
#
#
(h / have-03~e.1 
	 :arg0 (s / she~e.0) 
	 :arg1 (t / thorn~e.3 
		 :quant 4~e.2 
		 :arg1-of (u / use-01~e.7 
			 :polarity~e.6 -~e.6)) 
	 :purpose~e.11 (p / protect-01~e.12 
		 :arg0 coref 
		 :arg1 coref 
		 :arg2 (w / world~e.17 
			 :mod (a / all~e.15))))

#
# ::snt i too sat down , because i was not able to stand up any longer .
#
#
(s / sit-down-02~e.2 
	 :arg1 (i / i~e.0 
		 :degree (t / too~e.1)) 
	 :arg1-of~e.3 (c / cause-01~e.5 
		 :arg0 (p / possible-01~e.9 
			 :polarity~e.8 -~e.8 
			 :arg1 (s2 / stand-up-07~e.11 
				 :arg1 coref 
				 :arg1-of (l / long-03~e.14 
					 :mod (a / any~e.13))))))

#
# ::snt " there now - - that is all ... "
#
#
(t / that~e.5 
	 :mod (a / all~e.7) 
	 :time (n / now~e.2))

#
# ::snt he still hesitated a little ; then he got up .
#
#
(m / multi-sentence~e.1 
	 :snt1~e.0 (h / hesitate-01~e.2 
		 :arg0 (h2 / he~e.7) 
		 :mod (s / still~e.1) 
		 :degree (l / little~e.4)) 
	 :snt2~e.8 (g / get-05~e.9 
		 :arg1 coref 
		 :arg2 (u / up~e.9) 
		 :time (t / then~e.6)))

#
# ::snt he took one step .
#
#
(s / step-01~e.3 
	 :arg1 (h / he~e.0))

#
# ::snt i could not move .
#
#
(p / possible-01~e.1 
	 :arg1 (m / move-01~e.3 
		 :arg1 (i / i~e.0)) 
	 :polarity~e.2 -~e.2)

#
# ::snt there was nothing but a flash of yellow close to his ankle .
#
#
(c / contrast-01~e.3 
	 :arg1 (n / nothing~e.2) 
	 :arg2 (f / flash~e.5 
		 :arg1-of (y / yellow-02~e.7) 
		 :arg1-of (c2 / close-10~e.8 
			 :arg2 (a / ankle~e.11 
				 :part-of~e.10 (h / he~e.10)))))

#
# ::snt he remained motionless for an instant .
#
#
(r / remain-01~e.1 
	 :arg1 (h / he~e.0) 
	 :duration~e.3 (i / instant~e.5) 
	 :manner (m / move-01~e.2 
		 :polarity -))

#
# ::snt he did not cry out .
#
#
(c / cry-out-03~e.3 
	 :arg0 (h / he~e.0) 
	 :polarity~e.2 -~e.1)

#
# ::snt he fell as gently as a tree falls .
#
#
(f / fall-01~e.1 
	 :arg1 (h / he~e.0) 
	 :manner (g / gentle~e.3 
		 :degree (e / equal~e.2) 
		 :compared-to~e.4 (f2 / fall-01~e.7 
			 :arg1 (t / tree~e.6))))

#
# ::snt there was not even any sound , because of the sand .
#
#
(s / sound-02~e.5 
	 :polarity~e.2 -~e.2 
	 :mod (a / any~e.4 
		 :mod (e / even~e.3)) 
	 :arg1-of (c / cause-01~e.7 
		 :arg0 (s2 / sand~e.10)))

#
# ::snt chapter 27 .
#
#
(c / chapter~e.0 
	 :mod 27~e.1)

#
# ::snt and now six years have already gone by ...
#
#
(a / and~e.0 
	 :op2 (g / go-on-15~e.6 
		 :arg1 (t / temporal-quantity 
			 :quant 6~e.2 
			 :unit (y / year~e.3)) 
		 :time (a2 / already~e.5)) 
	 :time (n / now~e.1))

#
# ::snt i have never yet told this story .
#
#
(t / tell-01~e.4 
	 :polarity~e.2 -~e.2 
	 :arg0 (i / i~e.0) 
	 :arg1 (s / story~e.6 
		 :mod (t2 / this~e.5)) 
	 :time (e / ever~e.2) 
	 :time (y / yet~e.3))

#
# ::snt the companions who met me on my return were well content to see me alive .
#
#
(c / content-01~e.10 
	 :arg0 (s / see-01~e.12 
		 :arg0 (c2 / companion~e.1 
			 :arg0-of (m / meet-03~e.3 
				 :arg1 coref 
				 :time (r / return-01~e.7 
					 :arg1 coref))) 
		 :arg1 (l / live-01~e.14 
			 :arg0 (i / i~e.4))) 
	 :arg1 (c2 / companion~e.1 
		 :arg0-of (m / meet-03~e.3 
			 :arg1 coref 
			 :time (r / return-01~e.7 
				 :arg1 coref))) 
	 :mod (w / well~e.9))

#
# ::snt i was sad , but i told them : " i am tired . "
#
#
(c / contrast-01~e.4 
	 :arg1 (s / sad-02~e.2 
		 :arg1 (i / i~e.0)) 
	 :arg2 (t / tell-01~e.6 
		 :arg0 (i / i~e.0) 
		 :arg1 (t3 / tire-01~e.12 
			 :arg1 coref) 
		 :arg2 (t2 / they~e.7)))

#
# ::snt now my sorrow is comforted a little .
#
#
(c / comfort-01~e.4 
	 :arg1 (s / sorrow-01~e.2 
		 :arg0 (i / i~e.1)) 
	 :time (n / now~e.0) 
	 :degree (l / little~e.6))

#
# ::snt that is to say - - not entirely .
#
#
(s / say-01~e.3 
	 :arg1 (e / entire~e.7 
		 :polarity~e.6 -~e.6))

#
# ::snt but i know that he did go back to his planet , because i did not find his body at daybreak .
#
#
(c / contrast-01~e.0 
	 :arg2 (k / know-01~e.2 
		 :arg0 (i / i~e.1) 
		 :arg1 (g / go-back-19~e.5 
			 :arg1 (h / he~e.4) 
			 :arg2 (p / planet~e.10 
				 :poss~e.9 coref)) 
		 :arg1-of (c2 / cause-01~e.12 
			 :arg0 (f / find-01~e.16 
				 :arg0 coref 
				 :arg1 (b / body~e.18 
					 :poss~e.17 coref) 
				 :polarity~e.15 -~e.14 
				 :time~e.19 (d / daybreak~e.20)))))

#
# ::snt it was not such a heavy body ... and at night i love to listen to the stars .
#
#
(a / and~e.8 
	 :op1 (b / body~e.6 
		 :mod (h / heavy~e.5 
			 :polarity~e.2 -~e.2 
			 :mod (s / such~e.3))) 
	 :op2 (l / love-01~e.12 
		 :arg0 (i / i~e.11) 
		 :arg1 (l2 / listen-01~e.14 
			 :arg0 coref 
			 :arg1 (s2 / star~e.17) 
			 :time (d / date-entity 
				 :dayperiod~e.9 (n / night~e.10)))))

#
# ::snt it is like five hundred million little bells ...
#
#
(r / resemble-01~e.2 
	 :arg1 (i / it~e.0) 
	 :arg2 (b / bell~e.7 
		 :quant 500000000~e.3 
		 :mod (l / little~e.6)))

#
# ::snt but there is one extraordinary thing ... when i drew the muzzle for the little prince , i forgot to add the leather strap to it .
#
#
(c / contrast-01~e.0 
	 :arg2 (t / thing~e.5 
		 :quant 1~e.3 
		 :mod (e / extraordinary~e.4) 
		 :time~e.7 (d / draw-01~e.9 
			 :arg0 (i / i~e.8 
				 :arg0-of (f / forget-01~e.18 
					 :arg1 (a / add-on-05~e.20 
						 :arg0 coref 
						 :arg1 (s / strap~e.23 
							 :consist-of~e.25 (l2 / leather~e.22)) 
						 :arg2 (m / muzzle~e.11)))) 
			 :arg1 (m / muzzle~e.11) 
			 :arg2 (p / prince~e.15 
				 :mod (l / little~e.14)))))

#
# ::snt he will never have been able to fasten it on his sheep .
#
#
(p / possible-01~e.5 
	 :polarity~e.2 -~e.2 
	 :time (e / ever~e.2) 
	 :arg1 (f / fasten-01~e.7 
		 :arg0 (h / he~e.0) 
		 :arg1 (i / it~e.8) 
		 :arg2 (s / sheep~e.11 
			 :poss~e.10 coref)))

#
# ::snt so now i keep wondering : what is happening on his planet ?
#
#
(k / keep-02~e.3 
	 :arg1 (w / wonder-01~e.4 
		 :arg0 (i / i~e.2) 
		 :arg1 (e / event~e.8 
			 :mod (a / amr-unknown~e.12) 
			 :location~e.9 (p / planet~e.11 
				 :poss~e.10 (h / he~e.10)))) 
	 :time (n / now~e.1))

#
# ::snt perhaps the sheep has eaten the flower ...
#
#
(p2 / possible-01~e.0 
	 :arg1 (e / eat-01~e.4 
		 :arg0 (s / sheep~e.2) 
		 :arg1 (f / flower~e.6)))

#
# ::snt at one time i say to myself : " surely not !
#
#
(s / say-01~e.4 
	 :arg0 (i / i~e.3) 
	 :arg1 (h / have-polarity-91~e.11 
		 :arg2 -~e.10 
		 :arg1-of (s2 / sure-02~e.9)) 
	 :arg2 coref 
	 :time~e.0 (o / one~e.1))

#
# ::snt the little prince shuts his flower under her glass globe every night , and he watches over his sheep very carefully ... "
#
#
(a / and~e.13 
	 :op1 (s / shut-01~e.3 
		 :arg0 (p / prince~e.2 
			 :mod (l / little~e.1)) 
		 :arg1 (g / globe~e.9 
			 :consist-of (g2 / glass~e.8) 
			 :poss~e.7 (s2 / she~e.7) 
			 :op1-of~e.7 (u / under~e.6 
				 :location-of (f2 / flower~e.5 
					 :mod (l2 / little~e.1) 
					 :poss~e.4 coref))) 
		 :time (r / rate-entity-91~e.10 
			 :arg4~e.14 (n / night~e.11))) 
	 :op2 (w / watch-01~e.15 
		 :arg0 coref 
		 :arg1 (s3 / sheep~e.18) 
		 :manner (c / careful~e.20 
			 :degree (v / very~e.19))))

#
# ::snt then i am happy .
#
#
(h / happy-01~e.3 
	 :arg1 (i / i~e.1) 
	 :time (t / then~e.0))

#
# ::snt and there is sweetness in the laughter of all the stars .
#
#
(a / and~e.0 
	 :op2 (s / sweet-05~e.3 
		 :arg1 (l / laugh-01~e.6 
			 :arg0 (s2 / star~e.10 
				 :mod (a2 / all~e.8)))))

#
# ::snt but at another time i say to myself : " at some moment or other one is absent - minded , and that is enough !
#
#
(c / contrast-01~e.0 
	 :arg2 (s / say-01~e.5 
		 :arg0 (i / i~e.4) 
		 :arg1 (a2 / and~e.21 
			 :op1 (o / one~e.15 
				 :mod (a3 / absent-minded~e.17) 
				 :time (o2 / or~e.13 
					 :op1 (m / moment~e.12 
						 :mod (s2 / some~e.11)) 
					 :op2 (o3 / other~e.14))) 
			 :op2 (t2 / that~e.22 
				 :mod (e / enough~e.24))) 
		 :arg2 coref 
		 :time~e.1 (t / time~e.3 
			 :mod (a / another~e.2))))

#
# ::snt on some one evening he forgot the glass globe , or the sheep got out , without making any noise , in the night ... "
#
#
(o / or~e.10 
	 :op1 (f / forget-01~e.5 
		 :arg0 (h / he~e.4) 
		 :arg1 (g / globe~e.8 
			 :consist-of (g2 / glass~e.7))) 
	 :op2 (e / escape-01~e.13 
		 :arg0 (s / sheep~e.12) 
		 :time (d / date-entity 
			 :dayperiod~e.14 (n / night~e.23)) 
		 :manner~e.16 (s3 / sound-02~e.17 
			 :polarity - 
			 :arg1 coref 
			 :mod (a2 / any~e.18))) 
	 :time~e.21 (d2 / date-entity 
		 :dayperiod~e.0 (e2 / evening~e.3) 
		 :mod (s2 / some~e.1)))

#
# ::snt and then the little bells are changed to tears ...
#
#
(a / and~e.0 
	 :op2 (c / change-01~e.6 
		 :arg1 (b / bell~e.4 
			 :mod (l / little~e.3)) 
		 :arg2 (t2 / tear-03~e.8) 
		 :time (t / then~e.1)))

#
# ::snt here , then , is a great mystery .
#
#
(m / mystery~e.7 
	 :mod (g / great~e.6) 
	 :time (t / then~e.2) 
	 :location~e.0 (h / here~e.0))

#
# ::snt for you who also love the little prince , and for me , nothing in the universe can be the same if somewhere , we do not know where , a sheep that we never saw has - - yes or no ? -- eaten a rose ...
#
#
(p / possible-01~e.17 
	 :arg1 (s / same-01~e.20 
		 :arg1 (n / nothing~e.13 
			 :location~e.14 (u / universe~e.16)) 
		 :arg3~e.10 (a / and~e.9 
			 :op1 (y / you~e.1 
				 :arg0-of (l / love-01~e.4 
					 :arg1 (p2 / prince~e.7 
						 :mod (l2 / little~e.6))) 
				 :mod (a2 / also~e.3)) 
			 :op2 (i / i~e.11))) 
	 :condition~e.21 (e / eat-01~e.44 
		 :arg0 (s2 / sheep~e.31 
			 :arg1-of (s3 / see-01~e.35 
				 :polarity~e.34 -~e.34 
				 :arg0 (w2 / we~e.33) 
				 :time~e.36 (e2 / ever~e.34))) 
		 :arg1 (r / rose~e.46) 
		 :location~e.28 (s4 / somewhere~e.22 
			 :arg1-of (k / know-01~e.27 
				 :polarity~e.26 -~e.25 
				 :arg0 coref))))

#
# ::snt look up at the sky .
#
#
(l / look-01~e.0 
	 :arg0 (y / you) 
	 :arg1 (s / sky~e.4) 
	 :direction~e.2 (u / up~e.1))

#
# ::snt ask yourselves : is it yes or no ?
#
#
(a / ask-01~e.0 
	 :arg0 (y / you~e.1) 
	 :arg1 (o / or~e.6 
		 :op1 (y2 / yes~e.5) 
		 :op2 (n / no~e.7)) 
	 :arg2 coref)

#
# ::snt has the sheep eaten the flower ?
#
#
(e / eat-01~e.3 
	 :arg0 (s / sheep~e.2) 
	 :arg1 (f / flower~e.5))

#
# ::snt and you will see how everything changes ...
#
#
(a / and~e.0 
	 :op2 (s / see-01~e.3 
		 :arg0 (y / you~e.1) 
		 :arg1 (h / have-manner-91~e.4 
			 :arg2 (c / change-01~e.6 
				 :arg1 (e / everything~e.5)))))

#
# ::snt and no grown - up will ever understand that this is a matter of so much importance !
#
#
(a / and~e.0 
	 :op2 (u / understand-01~e.7 
		 :polarity~e.1 -~e.1 
		 :arg0 (g / grown-up~e.2) 
		 :arg1 (t / this~e.9 
			 :arg1-of~e.8 (m / matter-01~e.12 
				 :mod (i / important~e.16 
					 :mod (m2 / much~e.15 
						 :degree (s / so~e.14))))) 
		 :time (e2 / ever~e.6)))

#
# ::snt this is , to me , the loveliest and saddest landscape in the world .
#
#
(o / opine-01~e.3 
	 :arg0 (i / i~e.4) 
	 :arg1 (l / landscape~e.10 
		 :mod (l2 / lovely~e.7 
			 :degree (m / most~e.9) 
			 :compared-to~e.8 (w / world~e.13)) 
		 :arg0-of (s / sad-02~e.9 
			 :degree (m2 / most~e.9) 
			 :compared-to~e.8 coref) 
		 :domain (t / this~e.0)))

#
# ::snt it is the same as that on the preceding page , but i have drawn it again to impress it on your memory .
#
#
(c / contrast-01~e.11 
	 :arg1 (s / same-01~e.3 
		 :arg1 (i / it~e.0) 
		 :arg2 (t / that~e.5 
			 :location~e.6 (p / page~e.9 
				 :arg1-of (p2 / precede-01~e.8)))) 
	 :arg2 (d / draw-01~e.14 
		 :arg0 coref 
		 :arg1 coref 
		 :mod (a / again~e.16) 
		 :purpose~e.17 (i2 / impress-01~e.18 
			 :arg0 coref 
			 :arg1 (m / memory~e.22 
				 :poss~e.20 (y / you~e.21)))))

#
# ::snt it is here that the little prince appeared on earth , and disappeared .
#
#
(a / and~e.11 
	 :op1 (a2 / appear-01~e.7 
		 :arg1 (p / prince~e.6 
			 :mod (l / little~e.5)) 
		 :location~e.8 (e / earth~e.9)) 
	 :op2 (d / disappear-01~e.12 
		 :arg1 coref) 
	 :location~e.2 (h / here~e.2))

#
# ::snt look at it carefully so that you will be sure to recognise it in case you travel some day to the african desert .
#
#
(l / look-01~e.0 
	 :mode~e.5 imperative~e.1 
	 :arg0 (y2 / you~e.6) 
	 :arg1 (i / it~e.2) 
	 :manner (c / careful~e.3) 
	 :purpose~e.9 (r / recognize-02~e.11 
		 :arg0 (y / you~e.15) 
		 :arg1 coref 
		 :arg1-of (e / ensure-01~e.14) 
		 :condition~e.12 (t / travel-01~e.16 
			 :arg0 coref 
			 :arg4~e.19 (d / desert~e.22 
				 :location~e.13 (c2 / continent 
					 :name (n / name 
						 :op1 africa~e.21))) 
			 :time~e.13 (d2 / day~e.18 
				 :mod (s2 / some~e.17)))))

#
# ::snt and , if you should come upon this spot , please do not hurry on .
#
#
(a / and~e.0 
	 :op2 (h / hurry-01~e.13 
		 :polarity~e.12 -~e.12 
		 :polite~e.10 +~e.10 
		 :arg0 (y / you~e.3) 
		 :arg1 coref 
		 :condition~e.2 (c / come-upon-26~e.5 
			 :arg0 (y / you~e.3) 
			 :arg1 (s / spot~e.8 
				 :mod (t / this~e.7)))))

#
# ::snt wait for a time , exactly under the star .
#
#
(w / wait-01~e.0 
	 :arg1 (y / you) 
	 :duration~e.1 (t / time~e.3) 
	 :location (u / under~e.6 
		 :op1 (s / star~e.8) 
		 :manner (e / exact~e.5)))

#
# ::snt then , if a little man appears who laughs , who has golden hair and who refuses to answer questions , you will know who he is .
#
#
(k / know-01~e.23 
	 :arg0 (y / you~e.21) 
	 :arg1 (m / man~e.5 
		 :mod (l / little~e.4) 
		 :arg0-of (l2 / laugh-01~e.8) 
		 :arg0-of (h / have-03~e.11 
			 :arg1 (h2 / hair~e.13 
				 :mod (g / golden~e.12))) 
		 :arg0-of (r / refuse-01~e.16 
			 :arg1 (a2 / answer-01~e.18 
				 :arg1 (q / question-01~e.19)))) 
	 :condition~e.2 (a / appear-01~e.6 
		 :arg1 (m / man~e.5 
			 :mod (l / little~e.4) 
			 :arg0-of (l2 / laugh-01~e.8) 
			 :arg0-of (h / have-03~e.11 
				 :arg1 (h2 / hair~e.13 
					 :mod (g / golden~e.12))) 
			 :arg0-of (r / refuse-01~e.16 
				 :arg1 (a2 / answer-01~e.18 
					 :arg1 (q / question-01~e.19)))) 
		 :time (t / then~e.0)))

#
# ::snt if this should happen , please comfort me .
#
#
(c / comfort-01~e.6 
	 :polite~e.5 +~e.5 
	 :arg0 (y / you) 
	 :arg1 (i / i~e.7) 
	 :condition~e.0 (t / this~e.1))

#
# ::snt send me word that he has come back .
#
#
(s / send-01~e.0 
	 :mode~e.3 imperative~e.1 
	 :arg0 (y / you) 
	 :arg1 (w / word-01~e.2 
		 :arg1 (c / come-01~e.6 
			 :arg1 (h / he~e.4) 
			 :arg4~e.7 (b / back~e.7))) 
	 :arg2 (i / i~e.1))

